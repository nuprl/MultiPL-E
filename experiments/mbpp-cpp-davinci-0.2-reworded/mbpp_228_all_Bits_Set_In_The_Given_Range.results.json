{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong mask = (1 << l) - 1;\n\tmask = ~mask;\n\tmask = mask & ((1 << r) - 1);\n\treturn !(mask & n);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    long long int x = (1 << r) - 1;\n    long long int y = (1 << (l - 1)) - 1;\n    long long int z = x ^ y;\n    if ((n & z) == z) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpc37gq5mj: /tmp/tmpc37gq5mj.cpp:16: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(long i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpvpt85lpt: /tmp/tmpvpt85lpt.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpj45xjylm: /tmp/tmpj45xjylm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    long long int i = 0;\n    while(i < l) {\n        if((n & (1 << i)) == 0) {\n            return false;\n        }\n        i++;\n    }\n    while(i < r) {\n        if((n & (1 << i)) != 0) {\n            return false;\n        }\n        i++;\n    }\n    while(i < 32) {\n        if((n & (1 << i)) == 0) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp4a7i1r8_: /tmp/tmp4a7i1r8_.cpp:29: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    long long int y = (1 << (l - 1)) - 1;\n    long long int z = x ^ y;\n    if ((n & z) == z) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpggvd3nfu: /tmp/tmpggvd3nfu.cpp:15: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long int x = (1 << (r - l + 1)) - 1;\n\tx = x << (l - 1);\n\tif ((n & x) == x)\n\t\treturn true;\n\treturn false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpz2zkrqte: /tmp/tmpz2zkrqte.cpp:13: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long int mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\tif ((n & mask) == mask) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpk65c6n4n: /tmp/tmpk65c6n4n.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    if ((n & x) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp1erfp2uw: /tmp/tmp1erfp2uw.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong x = (1 << r) - 1;\n\tx = x ^ ((1 << (l - 1)) - 1);\n\treturn !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long int x = (1 << r) - 1;\n\tx = x ^ ((1 << (l - 1)) - 1);\n\treturn !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510495,
      "stdout": "",
      "stderr": "tmpep5tcx2j: /tmp/tmpep5tcx2j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpum_tzb2n: /tmp/tmpum_tzb2n.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(long i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpvpt85lpt: /tmp/tmpvpt85lpt.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    if(l == 0) {\n        return ((n & ((1 << r) - 1)) == ((1 << r) - 1));\n    }\n    return ((n & ((1 << r) - 1) & ~((1 << (l - 1)) - 1)) == ((1 << r) - 1) & ~((1 << (l - 1)) - 1));\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp1j2c0k61: /tmp/tmp1j2c0k61.cpp:12: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return ((n & x) == x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpdwckdm_2: /tmp/tmpdwckdm_2.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(long i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpvpt85lpt: /tmp/tmpvpt85lpt.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (int i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp57xtx6fv: /tmp/tmp57xtx6fv.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(long i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpvpt85lpt: /tmp/tmpvpt85lpt.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(int i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpdag7qwsf: /tmp/tmpdag7qwsf.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpx5t6eub0: /tmp/tmpx5t6eub0.cpp:12: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpvzj6yf0b: /tmp/tmpvzj6yf0b.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510495,
      "stdout": "",
      "stderr": "tmpep5tcx2j: /tmp/tmpep5tcx2j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << l) - 1;\n    long y = (1 << (r + 1)) - 1;\n    long z = x ^ y;\n    return (n & z) == 0;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpcz5q6zsu: /tmp/tmpcz5q6zsu.cpp:12: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpebp1nwtj: /tmp/tmpebp1nwtj.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1LL << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    if ((n & x) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpj_7wagsp: /tmp/tmpj_7wagsp.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(long i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpvpt85lpt: /tmp/tmpvpt85lpt.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int i;\n    for(i=l; i<=r; i++) {\n        if(!(n & (1<<i)))\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp2_p1krjs: /tmp/tmp2_p1krjs.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long i = 0;\n    while(i < l) {\n        if(n & (1 << i)) {\n            return false;\n        }\n        i++;\n    }\n    while(i <= r) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n        i++;\n    }\n    while(i < 32) {\n        if(n & (1 << i)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpboit7dy8: /tmp/tmpboit7dy8.cpp:28: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long int x = (1 << (r - l + 1)) - 1;\n\tx = x << (l - 1);\n\treturn ((n & x) == x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp1z448kqh: /tmp/tmp1z448kqh.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(long i=l; i<=r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpnz95bu6o: /tmp/tmpnz95bu6o.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    if ((n & mask) == mask) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp8u1tjoe7: /tmp/tmp8u1tjoe7.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(x & n);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp8eig4b8i: /tmp/tmp8eig4b8i.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp1kukapw0: /tmp/tmp1kukapw0.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpe7w1lf_6: /tmp/tmpe7w1lf_6.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpy8xg8bp3: /tmp/tmpy8xg8bp3.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n  for (long i = l; i <= r; i++) {\n    if ((n & (1 << i)) == 0) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp613vltoh: /tmp/tmp613vltoh.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    long long int i, j, k, l1, r1, m, n1;\n    n1 = n;\n    l1 = l;\n    r1 = r;\n    m = 0;\n    for (i = l1; i <= r1; i++) {\n        k = 1 << i;\n        if ((n1 & k) == 0) {\n            m = 1;\n            break;\n        }\n    }\n    if (m == 1) {\n        return false;\n    } else {\n        return true;\n    }\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpd6xu3p7f: /tmp/tmpd6xu3p7f.cpp:26: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long int x = (1 << r) - 1;\n\tx = x ^ ((1 << (l - 1)) - 1);\n\treturn ((x & n) == x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp_4_agfb7: /tmp/tmp_4_agfb7.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\treturn (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmptbe_0oy9: /tmp/tmptbe_0oy9.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpy8xg8bp3: /tmp/tmpy8xg8bp3.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    if ((n & x) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpd7s63ufy: /tmp/tmpd7s63ufy.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = 1;\n    for(long i = l; i <= r; i++) {\n        x = x << i;\n    }\n    if((x & n) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmp2ykrm3q_: /tmp/tmp2ykrm3q_.cpp:16: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong x = (1 << (r - l + 1)) - 1;\n\tx = x << (l - 1);\n\treturn ((n & x) == x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmp17itj0vo: /tmp/tmp17itj0vo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = pow(2, r - l + 1) - 1;\n    x = x << l - 1;\n    if ((n & x) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmphwvkoav8: /tmp/tmphwvkoav8.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpy8xg8bp3: /tmp/tmpy8xg8bp3.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return (n & x) == 0;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(int i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpdag7qwsf: /tmp/tmpdag7qwsf.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = ~(mask ^ ((1 << l) - 1));\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpl0qn8wgi: /tmp/tmpl0qn8wgi.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmp2vm0400w: /tmp/tmp2vm0400w.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp8eig4b8i: /tmp/tmp8eig4b8i.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long i = 0;\n    while (i < l) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n        i++;\n    }\n    while (i < r) {\n        if ((n & (1 << i)) != 0) {\n            return false;\n        }\n        i++;\n    }\n    while (i < 32) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpjwn6c_ql: /tmp/tmpjwn6c_ql.cpp:28: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    assert(l >= 0 && r >= 0 && l <= r);\n    for (long i = l; i <= r; i++) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmp8vymczu9: /tmp/tmp8vymczu9.cpp:15: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int i = 0;\n    long long int j = 0;\n    long long int k = 0;\n    long long int m = 0;\n    long long int x = 0;\n    long long int y = 0;\n    long long int z = 0;\n    long long int p = 0;\n    long long int q = 0;\n    long long int a = 0;\n    long long int b = 0;\n    long long int c = 0;\n    long long int d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int g = 0;\n    long long int h = 0;\n    long long int o = 0;\n    long long int u = 0;\n    long long int v = 0;\n    long long int w = 0;\n    long long int s = 0;\n    long long int t = 0;\n    long long int y1 = 0;\n    long long int y2 = 0;\n    long long int y3 = 0;\n    long long int y4 = 0;\n    long long int y5 = 0;\n    long long int y6 = 0;\n    long long int y7 = 0;\n    long long int y8 = 0;\n    long long int y9 = 0;\n    long long int y10 = 0;\n    long long int y11 = 0;\n    long long int y12 = 0;\n    long long int y13 = 0;\n    long long int y14 = 0;\n    long long int y15 = 0;\n    long long int y16 = 0;\n    long long int y17 = 0;\n    long long int y18 = 0;\n    long long int y19 = 0;\n    long long int y20 = 0;\n    long long int y21 = 0;\n    long long int y22 = 0;\n    long long int y23 = 0;\n    long long int y24 = 0;\n    long long int y25 = 0;\n    long long int y26 = 0;\n    long long int y27 = 0;\n    long long int y28 = 0;\n    long long int y29 = 0;\n    long long int y30 = 0;\n    long long int\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123377,
      "stdout": "",
      "stderr": "/tmp/tmph8art4a8.cpp: In function \u2018bool all_Bits_Set_In_The_Given_Range(long int, long int, long int)\u2019:\n/tmp/tmph8art4a8.cpp:59:1: error: expected unqualified-id before \u2018}\u2019 token\n   59 | }\n      | ^\n/tmp/tmph8art4a8.cpp:59:1: warning: no return statement in function returning non-void [-Wreturn-type]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpnm88g550: /tmp/tmpnm88g550.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    if ((n & mask) == mask) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmp5113ucn1: /tmp/tmp5113ucn1.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\treturn ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmp_34uv9of: /tmp/tmp_34uv9of.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << (r - l + 1)) - 1;\n    return ((n >> (l - 1)) & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmprbmy3jia: /tmp/tmprbmy3jia.cpp:10: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo9ibp_ve: /tmp/tmpo9ibp_ve.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpnm88g550: /tmp/tmpnm88g550.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpvnblnp_m: /tmp/tmpvnblnp_m.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return ((n & x) == x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmp7q73ukk6: /tmp/tmp7q73ukk6.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    if ((n & mask) == mask)\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpjn5ngro9: /tmp/tmpjn5ngro9.cpp:13: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpnjgr6qcz: /tmp/tmpnjgr6qcz.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = 1;\n    for (long long i = l; i <= r; i++) {\n        x = x | (1 << i);\n    }\n    if ((n & x) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmp9uf_xtsz: /tmp/tmp9uf_xtsz.cpp:16: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    return !(n & (mask << l));\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpxg5q58qh: /tmp/tmpxg5q58qh.cpp:10: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << l) - 1;\n    long y = (1 << r) - 1;\n    long z = x ^ y;\n    if ((n & z) == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    if ((n & x) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpd7s63ufy: /tmp/tmpd7s63ufy.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    if ((n & mask) == mask) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmp_7l_gv09: /tmp/tmp_7l_gv09.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpwv_56id1: /tmp/tmpwv_56id1.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << l) - 1;\n    mask = ~mask;\n    mask = mask & ((1 << r) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpwne0fwat: /tmp/tmpwne0fwat.cpp:12: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    if ((n & mask) == mask) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp8u1tjoe7: /tmp/tmp8u1tjoe7.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpb1sjyv31: /tmp/tmpb1sjyv31.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << (r - l + 1)) - 1;\n    x = x << l;\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmp3wb6cp70: /tmp/tmp3wb6cp70.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpv4u6cip2: /tmp/tmpv4u6cip2.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = 1;\n    while(l <= r) {\n        if(!(n & (x << l))) {\n            return false;\n        }\n        l++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmp04ax7ozj: /tmp/tmp04ax7ozj.cpp:16: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << l;\n\treturn (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpxm_y_1eh: /tmp/tmpxm_y_1eh.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo9ibp_ve: /tmp/tmpo9ibp_ve.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpebp1nwtj: /tmp/tmpebp1nwtj.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpy8xg8bp3: /tmp/tmpy8xg8bp3.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << l) - 1;\n    mask = ~mask;\n    mask = mask & ((1 << r) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpwtwu8mkg: /tmp/tmpwtwu8mkg.cpp:12: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpvzj6yf0b: /tmp/tmpvzj6yf0b.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for(long i = l; i <= r; i++) {\n        if(!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpvpt85lpt: /tmp/tmpvpt85lpt.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long int x = (1 << (r - l + 1)) - 1;\n\tx = x << l;\n\tif ((n & x) == x) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpdsgbm7lo: /tmp/tmpdsgbm7lo.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpt3vhd49b: /tmp/tmpt3vhd49b.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int i = 0;\n    for (i = l; i <= r; i++) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmp12cpp9a7: /tmp/tmp12cpp9a7.cpp:15: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpct2pow95: /tmp/tmpct2pow95.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long temp = n;\n    for(long i = l; i <= r; i++) {\n        if(!(temp & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmp5_1n0tk8: /tmp/tmp5_1n0tk8.cpp:15: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpvzj6yf0b: /tmp/tmpvzj6yf0b.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmpnjgr6qcz: /tmp/tmpnjgr6qcz.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpebp1nwtj: /tmp/tmpebp1nwtj.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << (r - l + 1)) - 1;\n    x = x << l;\n    if ((n & x) == x) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpco1hp37j: /tmp/tmpco1hp37j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong mask = (1 << (r - l + 1)) - 1;\n\tmask = mask << (l - 1);\n\treturn ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpvzj6yf0b: /tmp/tmpvzj6yf0b.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    if ((n & mask) == mask) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp8u1tjoe7: /tmp/tmp8u1tjoe7.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    if (l == r) {\n        return (n & (1 << l)) == 0;\n    }\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return (n & mask) == 0;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpg_990rp4: /tmp/tmpg_990rp4.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpnm88g550: /tmp/tmpnm88g550.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpebp1nwtj: /tmp/tmpebp1nwtj.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n\tlong long int x = (1 << r) - 1;\n\tlong long int y = (1 << (l - 1)) - 1;\n\tlong long int z = x ^ y;\n\tif ((n & z) == z) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmpjqq_s7y7: /tmp/tmpjqq_s7y7.cpp:15: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510495,
      "stdout": "",
      "stderr": "tmpep5tcx2j: /tmp/tmpep5tcx2j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpb1sjyv31: /tmp/tmpb1sjyv31.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return (!(n & x));\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo9ibp_ve: /tmp/tmpo9ibp_ve.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510495,
      "stdout": "",
      "stderr": "tmpep5tcx2j: /tmp/tmpep5tcx2j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << (r - l + 1)) - 1;\n    x = x << l;\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "tmp3wb6cp70: /tmp/tmp3wb6cp70.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << l) - 1;\n    mask = ~mask;\n    mask = mask & ((1 << r) - 1);\n    return !(mask & n);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    long long int x = n;\n    long long int y = n;\n    long long int z = n;\n    long long int a = n;\n    long long int b = n;\n    long long int c = n;\n    long long int d = n;\n    long long int e = n;\n    long long int f = n;\n    long long int g = n;\n    long long int h = n;\n    long long int i = n;\n    long long int j = n;\n    long long int k = n;\n    long long int l = n;\n    long long int m = n;\n    long long int o = n;\n    long long int p = n;\n    long long int q = n;\n    long long int r = n;\n    long long int s = n;\n    long long int t = n;\n    long long int u = n;\n    long long int v = n;\n    long long int w = n;\n    long long int x = n;\n    long long int y = n;\n    long long int z = n;\n    long long int a = n;\n    long long int b = n;\n    long long int c = n;\n    long long int d = n;\n    long long int e = n;\n    long long int f = n;\n    long long int g = n;\n    long long int h = n;\n    long long int i = n;\n    long long int j = n;\n    long long int k = n;\n    long long int l = n;\n    long long int m = n;\n    long long int o = n;\n    long long int p = n;\n    long long int q = n;\n    long long int r = n;\n    long long int s = n;\n    long long int t = n;\n    long long int u = n;\n    long long int v = n;\n    long long int w = n;\n    long long int x = n;\n    long long int y = n;\n    long long int z = n;\n    long long int a = n;\n    long long int b = n;\n    long long int c = n;\n\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "/tmp/tmp_4czspnd.cpp: In function \u2018bool all_Bits_Set_In_The_Given_Range(long int, long int, long int)\u2019:\n/tmp/tmp_4czspnd.cpp:20:19: error: declaration of \u2018long long int l\u2019 shadows a parameter\n   20 |     long long int l = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:25:19: error: declaration of \u2018long long int r\u2019 shadows a parameter\n   25 |     long long int r = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:31:19: error: redeclaration of \u2018long long int x\u2019\n   31 |     long long int x = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:6:19: note: \u2018long long int x\u2019 previously declared here\n    6 |     long long int x = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:32:19: error: redeclaration of \u2018long long int y\u2019\n   32 |     long long int y = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:7:19: note: \u2018long long int y\u2019 previously declared here\n    7 |     long long int y = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:33:19: error: redeclaration of \u2018long long int z\u2019\n   33 |     long long int z = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:8:19: note: \u2018long long int z\u2019 previously declared here\n    8 |     long long int z = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:34:19: error: redeclaration of \u2018long long int a\u2019\n   34 |     long long int a = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:9:19: note: \u2018long long int a\u2019 previously declared here\n    9 |     long long int a = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:35:19: error: redeclaration of \u2018long long int b\u2019\n   35 |     long long int b = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:10:19: note: \u2018long long int b\u2019 previously declared here\n   10 |     long long int b = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:36:19: error: redeclaration of \u2018long long int c\u2019\n   36 |     long long int c = n;\n      |                   ^\n/tmp/tmp_4czspnd.cpp:11:19: note: \u2018long long int c\u2019 previously declared here\n   11 |     long long int c = n;\n    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmppjoaiib8: /tmp/tmppjoaiib8.cpp:10: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    long m = 1;\n    for (long i = l; i <= r; i++) {\n        m = m << i;\n    }\n    return (n & m) == m;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmpycgk5utq: /tmp/tmpycgk5utq.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp1kukapw0: /tmp/tmp1kukapw0.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510495,
      "stdout": "",
      "stderr": "tmpep5tcx2j: /tmp/tmpep5tcx2j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = ~(mask << (l - 1));\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmpsqzitxds: /tmp/tmpsqzitxds.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    for (long i = l; i <= r; i++) {\n        if ((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmpod3scw4x: /tmp/tmpod3scw4x.cpp:15: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmp5185rv43: /tmp/tmp5185rv43.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpip1vmkdo: /tmp/tmpip1vmkdo.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpv4u6cip2: /tmp/tmpv4u6cip2.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510495,
      "stdout": "",
      "stderr": "tmpep5tcx2j: /tmp/tmpep5tcx2j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long i = 0;\n    while(i < l) {\n        n = n >> 1;\n        i++;\n    }\n    while(i <= r) {\n        if((n & 1) == 0) {\n            return false;\n        }\n        n = n >> 1;\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmp_x909d7b: /tmp/tmp_x909d7b.cpp:21: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123380,
      "stdout": "",
      "stderr": "tmpv4u6cip2: /tmp/tmpv4u6cip2.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << l;\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmp1kukapw0: /tmp/tmp1kukapw0.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return !(n & x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long x = (1 << (r - l + 1)) - 1;\n    x = x << (l - 1);\n    return (n & x) == x;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpvnblnp_m: /tmp/tmpvnblnp_m.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    // Write your code here\n    for(long i = l; i <= r; i++) {\n        if((n & (1 << i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmple_weo7e: /tmp/tmple_weo7e.cpp:15: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmppjoaiib8: /tmp/tmppjoaiib8.cpp:10: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int x = (1 << r) - 1;\n    x = x ^ ((1 << (l - 1)) - 1);\n    return ((n & x) == x);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123376,
      "stdout": "",
      "stderr": "tmpdwckdm_2: /tmp/tmpdwckdm_2.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmp0qivo0a8: /tmp/tmp0qivo0a8.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmp4p51jzlv: /tmp/tmp4p51jzlv.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmp_ulrbyqk: /tmp/tmp_ulrbyqk.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    for (long i = l; i <= r; i++) {\n        if (!(n & (1 << i))) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510495,
      "stdout": "",
      "stderr": "tmpep5tcx2j: /tmp/tmpep5tcx2j.cpp:14: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << r) - 1;\n    mask = mask ^ ((1 << (l - 1)) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "tmp4p51jzlv: /tmp/tmp4p51jzlv.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << r) - 1;\n    mask = mask ^ ((1 << l) - 1);\n    return (n & mask) == mask;\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmpj45xjylm: /tmp/tmpj45xjylm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1665510496,
      "stdout": "",
      "stderr": "tmphaqfmmcm: /tmp/tmphaqfmmcm.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long long int mask = (1 << (r - l + 1)) - 1;\n    mask = mask << (l - 1);\n    return ((n & mask) == mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "tmpo88uqlbx: /tmp/tmpo88uqlbx.cpp:11: int main(): Assertion `candidate((4), (1), (2)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether all the bits are unset in the given range or not.\nbool all_Bits_Set_In_The_Given_Range(long n, long l, long r) {\n    long a = (1 << r) - 1;\n    long b = (1 << (l - 1)) - 1;\n    long mask = a ^ b;\n    return !(n & mask);\n}\nint main() {\n    auto candidate = all_Bits_Set_In_The_Given_Range;\n    assert(candidate((4), (1), (2)) == (true));\n    assert(candidate((17), (2), (4)) == (true));\n    assert(candidate((39), (4), (6)) == (false));\n}\n",
      "timestamp": 1666123381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
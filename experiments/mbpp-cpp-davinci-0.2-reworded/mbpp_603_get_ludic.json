{
  "name": "mbpp_603_get_ludic",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to get all lucid numbers smaller than or equal to a given integer.\nstd::vector<long> get_ludic(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_603_get_ludic.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = get_ludic;\n    assert(candidate((10)) == (std::vector<long>({(long)1, (long)2, (long)3, (long)5, (long)7})));\n    assert(candidate((25)) == (std::vector<long>({(long)1, (long)2, (long)3, (long)5, (long)7, (long)11, (long)13, (long)17, (long)23, (long)25})));\n    assert(candidate((45)) == (std::vector<long>({(long)1, (long)2, (long)3, (long)5, (long)7, (long)11, (long)13, (long)17, (long)23, (long)25, (long)29, (long)37, (long)41, (long)43})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> result;\n    for (long i = 1; i <= n; i++) {\n        long sum = 0;\n        for (long j = 1; j <= i; j++) {\n            if (i % j == 0) {\n                sum += j;\n            }\n        }\n        if (sum == 2 * i) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> v;\n    for(long i = 1; i <= n; i++) {\n        long sum = 0;\n        long j = i;\n        while(j > 0) {\n            sum += j % 10;\n            j /= 10;\n        }\n        if(i % sum == 0) {\n            v.push_back(i);\n        }\n    }\n    return v;",
    "    std::vector<long> ludic;\n    for (long i = 1; i <= n; i++) {\n        long sum = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum += j;\n            }\n        }\n        if (sum == i) {\n            ludic.push_back(i);\n        }\n    }\n    return ludic;",
    "  std::vector<long> result;\n  for (long i = 1; i <= n; i++) {\n    if (i % 2 == 0) {\n      continue;\n    }\n    long sum = 0;\n    for (long j = 1; j <= i; j++) {\n      if (i % j == 0) {\n        sum += j;\n      }\n    }\n    if (sum == 2 * i) {\n      result.push_back(i);\n    }\n  }\n  return result;",
    "    std::vector<long> result;\n    for (long i = 1; i <= n; i++) {\n        long sum = 0;\n        for (long j = 1; j <= i; j++) {\n            if (i % j == 0) {\n                sum += j;\n            }\n        }\n        if (sum == 2 * i) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = 1; i <= n; ++i) {\n        if (i % 2 == 0) {\n            continue;\n        }\n        long sum = 0;\n        for (long j = 1; j < i; ++j) {\n            if (i % j == 0) {\n                sum += j;\n            }\n        }\n        if (sum == i) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = 1; i <= n; i++) {\n        long sum = 0;\n        for (long j = 1; j <= i; j++) {\n            if (i % j == 0) {\n                sum += j;\n            }\n        }\n        if (sum == 2 * i) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (long i = 1; i <= n; i++) {\n        long sum = 0;\n        for (long j = 1; j < i; j++) {\n            if (i % j == 0) {\n                sum += j;\n            }\n        }\n        if (sum == i) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> ludic_numbers;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            ludic_numbers.push_back(i);\n        } else {\n            long sum = 0;\n            for (long j = 1; j <= i; j++) {\n                if (i % j == 0) {\n                    sum += j;\n                }\n            }\n            if (sum % 2 == 0) {\n                ludic_numbers.push_back(i);\n            }\n        }\n    }\n    return ludic_numbers;",
    "  std::vector<long> result;\n  for (long i = 1; i <= n; i++) {\n    long sum = 0;\n    long j = i;\n    while (j > 0) {\n      sum += j % 10;\n      j /= 10;\n    }\n    if (i % sum == 0) {\n      result.push_back(i);\n    }\n  }\n  return result;",
    "    std::vector<long> ludic_numbers;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 == 0) {\n            continue;\n        }\n        long sum = 0;\n        for(long j = 1; j <= i; j++) {\n            if(i % j == 0) {\n                sum += j;\n            }\n        }\n        if(sum == 2 * i) {\n            ludic_numbers.push_back(i);\n        }\n    }\n    return ludic_numbers;",
    "    std::vector<long> ludic;\n    for (long i = 1; i <= n; i++) {\n        long sum = 0;\n        long num = i;\n        while (num > 0) {\n            long digit = num % 10;\n            sum += digit * digit;\n            num /= 10;\n        }\n        if (sum == i) {\n            ludic.push_back(i);\n        }\n    }\n    return ludic;",
    "    std::vector<long> result;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            continue;\n        }\n        long sum = 0;\n        for (long j = 1; j <= i; j++) {\n            if (i % j == 0) {\n                sum += j;\n            }\n        }\n        if (sum == 2 * i) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> ludic;\n    for(long i=1; i<=n; i++) {\n        if(i%2==0) {\n            continue;\n        }\n        long sum = 0;\n        for(long j=1; j<=i; j++) {\n            if(i%j==0) {\n                sum += j;\n            }\n        }\n        if(sum%2==0) {\n            ludic.push_back(i);\n        }\n    }\n    return ludic;",
    "    std::vector<long> v;\n    for(long i=1;i<=n;i++) {\n        long sum=0;\n        for(long j=1;j<=i/2;j++) {\n            if(i%j==0) {\n                sum+=j;\n            }\n        }\n        if(sum==i) {\n            v.push_back(i);\n        }\n    }\n    return v;",
    "    std::vector<long> res;\n    for (long i = 1; i <= n; ++i) {\n        long sum = 0;\n        long j = i;\n        while (j) {\n            sum += j % 10;\n            j /= 10;\n        }\n        if (i % sum == 0) {\n            res.push_back(i);\n        }\n    }\n    return res;",
    "    std::vector<long> result;\n    for (long i = 1; i <= n; i++) {\n        if (is_ludic(i)) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> ludic;\n    for(long i = 1; i <= n; i++) {\n        if(i % 2 == 0) {\n            ludic.push_back(i);\n        }\n        else {\n            long temp = i;\n            while(temp % 2 == 1) {\n                temp /= 2;\n            }\n            if(temp == 1) {\n                ludic.push_back(i);\n            }\n        }\n    }\n    return ludic;",
    "  std::vector<long> result;\n  for (long i = 1; i <= n; i++) {\n    if (i % 2 == 1) {\n      result.push_back(i);\n    } else {\n      long temp = i;\n      while (temp % 2 == 0) {\n        temp /= 2;\n      }\n      if (temp % 2 == 1) {\n        result.push_back(i);\n      }\n    }\n  }\n  return result;",
    "    std::vector<long> result;\n    for (long i = 1; i <= n; i++) {\n        if (is_ludic(i)) {\n            result.push_back(i);\n        }\n    }\n    return result;"
  ]
}
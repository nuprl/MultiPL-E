{
  "name": "mbpp_746_sector_area",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nstd::optional<float> sector_area(long r, long a) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = sector_area;\n    assert(candidate((4), (45)) == 6.283185307179586);\n    assert(candidate((9), (45)) == 31.808625617596654);\n    assert(candidate((9), (361)) == std::nullopt);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a * M_PI * r * r) / 360;",
    "    if (a > 360) {\n        return {};\n    }\n    return (a / 360.0) * 3.14 * r * r;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a/360.0)*3.14*r*r;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a/360.0)*3.14*r*r;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a * r * r) / 360;",
    "    if (a > 360) {\n        return {};\n    }\n    return (a / 360.0) * M_PI * r * r;",
    "    if (a > 360) {\n        return {};\n    }\n    return (a / 360.0) * 3.14 * r * r;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a/360.0)*M_PI*r*r;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a * r * r) / 2;",
    "    if (a > 360)\n        return std::nullopt;\n    return (a * r * r) / 360;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a * r * r) / 2;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a * r * r) / 2;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a/360.0)*M_PI*r*r;",
    "    if (a > 360) {\n        return {};\n    }\n    return (r * r * a) / 360.0;",
    "    if (a > 360) {\n        return {};\n    }\n    return (a * r * r) / 2;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a / 360.0) * M_PI * r * r;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a * r * r) / 2;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a / 360.0) * 3.14 * r * r;",
    "    if (a > 360) {\n        return std::nullopt;\n    }\n    return (a * r * r) / 360;",
    "    if (a > 360) {\n        return {};\n    }\n    return (a * r * r) / 2;"
  ]
}
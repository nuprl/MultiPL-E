{
  "name": "mbpp_426_filter_oddnumbers",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to filter odd numbers.\nstd::vector<long> filter_oddnumbers(std::vector<long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_426_filter_oddnumbers.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = filter_oddnumbers;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10}))) == (std::vector<long>({(long)1, (long)3, (long)5, (long)7, (long)9})));\n    assert(candidate((std::vector<long>({(long)10, (long)20, (long)45, (long)67, (long)84, (long)93}))) == (std::vector<long>({(long)45, (long)67, (long)93})));\n    assert(candidate((std::vector<long>({(long)5, (long)7, (long)9, (long)8, (long)6, (long)4, (long)3}))) == (std::vector<long>({(long)5, (long)7, (long)9, (long)3})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2!=0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> result;\n    for(auto i: nums) {\n        if(i%2 != 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (long num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 == 1) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_numbers.push_back(num);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (long num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> result;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            result.push_back(num);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2!=0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (long num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_numbers.push_back(num);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(long i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            result.push_back(nums[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(auto num : nums) {\n        if(num % 2 == 0) {\n            result.push_back(num);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(auto i:nums) {\n        if(i%2!=0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "\tstd::vector<long> odd_nums;\n\tfor(int i=0;i<nums.size();i++) {\n\t\tif(nums[i]%2!=0) {\n\t\t\todd_nums.push_back(nums[i]);\n\t\t}\n\t}\n\treturn odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(long i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i = nums.begin(); i != nums.end(); i++) {\n        if (*i % 2 != 0) {\n            odd_nums.push_back(*i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "  std::vector<long> odd_nums;\n  for(int i = 0; i < nums.size(); i++) {\n    if(nums[i] % 2 != 0) {\n      odd_nums.push_back(nums[i]);\n    }\n  }\n  return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num: nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "  std::vector<long> odd_numbers;\n  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] % 2 != 0) {\n      odd_numbers.push_back(nums[i]);\n    }\n  }\n  return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0; i<nums.size(); i++) {\n        if(nums[i]%2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "\tstd::vector<long> odd_nums;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] % 2 != 0) {\n\t\t\todd_nums.push_back(nums[i]);\n\t\t}\n\t}\n\treturn odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2==1) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_numbers.push_back(num);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num: nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> oddnumbers;\n    for (auto i = nums.begin(); i != nums.end(); i++) {\n        if (*i % 2 != 0) {\n            oddnumbers.push_back(*i);\n        }\n    }\n    return oddnumbers;",
    "  std::vector<long> odd_nums;\n  for(auto it = nums.begin(); it != nums.end(); it++) {\n    if(*it % 2 != 0) {\n      odd_nums.push_back(*it);\n    }\n  }\n  return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i = nums.begin(); i != nums.end(); ++i) {\n        if (*i % 2 != 0) {\n            odd_nums.push_back(*i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0; i<nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "  std::vector<long> odd_nums;\n  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] % 2 != 0) {\n      odd_nums.push_back(nums[i]);\n    }\n  }\n  return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> oddnumbers;\n    for(long i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            oddnumbers.push_back(nums[i]);\n        }\n    }\n    return oddnumbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0; i<nums.size(); i++) {\n        if(nums[i]%2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2!=0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums) {\n        if(i % 2 == 1) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums){\n        if(i%2!=0){\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i = nums.begin(); i != nums.end(); i++) {\n        if (*i % 2 != 0) {\n            odd_nums.push_back(*i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> oddnums;\n    for (long i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            oddnums.push_back(nums[i]);\n        }\n    }\n    return oddnums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 == 1) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n            result.push_back(nums[i]);\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for (long num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2!=0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num: nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(long num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "\tstd::vector<long> result;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] % 2 != 0) {\n\t\t\tresult.push_back(nums[i]);\n\t\t}\n\t}\n\treturn result;",
    "  std::vector<long> odd_nums;\n  for(int i=0;i<nums.size();i++){\n    if(nums[i]%2!=0){\n      odd_nums.push_back(nums[i]);\n    }\n  }\n  return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0; i<nums.size(); i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            result.push_back(nums[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            result.push_back(nums[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(long i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> oddnumbers;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            oddnumbers.push_back(nums[i]);\n        }\n    }\n    return oddnumbers;",
    "    std::vector<long> odd_nums;\n    for(auto num: nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "  std::vector<long> odd_nums;\n  for (int i = 0; i < nums.size(); i++) {\n    if (nums[i] % 2 != 0) {\n      odd_nums.push_back(nums[i]);\n    }\n  }\n  return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(auto i: nums) {\n        if(i % 2 != 0) {\n            odd_numbers.push_back(i);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(long num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            result.push_back(num);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> result;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            result.push_back(num);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(auto i:nums) {\n        if(i%2!=0) {\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            result.push_back(nums[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0; i<nums.size(); i++) {\n        if(nums[i]%2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto i : nums) {\n        if (i % 2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(long num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i: nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2!=0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "  std::vector<long> odd_nums;\n  for(int i=0;i<nums.size();i++){\n    if(nums[i]%2!=0){\n      odd_nums.push_back(nums[i]);\n    }\n  }\n  return odd_nums;",
    "  std::vector<long> odd_nums;\n  for(auto num: nums) {\n    if(num % 2 != 0) {\n      odd_nums.push_back(num);\n    }\n  }\n  return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(auto num: nums) {\n        if(num % 2 != 0) {\n            odd_numbers.push_back(num);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(auto i:nums){\n        if(i%2!=0){\n            result.push_back(i);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_numbers;\n    for(auto i : nums) {\n        if(i % 2 != 0) {\n            odd_numbers.push_back(i);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> result;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            result.push_back(nums[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> oddnums;\n    for(auto i : nums) {\n        if(i%2 != 0) {\n            oddnums.push_back(i);\n        }\n    }\n    return oddnums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(long i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_numbers.push_back(nums[i]);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            result.push_back(nums[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(long i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto i:nums) {\n        if(i%2 != 0) {\n            odd_nums.push_back(i);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "  std::vector<long> result;\n  for (auto num : nums) {\n    if (num % 2 != 0) {\n      result.push_back(num);\n    }\n  }\n  return result;",
    "    std::vector<long> result;\n    for(auto num:nums) {\n        if(num%2!=0) {\n            result.push_back(num);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_numbers;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_numbers.push_back(num);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> result;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            result.push_back(num);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(long i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "\tstd::vector<long> odd_numbers;\n\tfor (int i = 0; i < nums.size(); i++) {\n\t\tif (nums[i] % 2 != 0) {\n\t\t\todd_numbers.push_back(nums[i]);\n\t\t}\n\t}\n\treturn odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            result.push_back(num);\n        }\n    }\n    return result;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (int i = 0; i < nums.size(); i++) {\n        if (nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "  std::vector<long> odd_nums;\n  for(int i=0;i<nums.size();i++)\n  {\n    if(nums[i]%2!=0)\n    {\n      odd_nums.push_back(nums[i]);\n    }\n  }\n  return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num: nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num: nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i = 0; i < nums.size(); i++) {\n        if(nums[i] % 2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2 != 0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for (auto num : nums) {\n        if (num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_nums.push_back(num);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_numbers;\n    for(auto num : nums) {\n        if(num % 2 != 0) {\n            odd_numbers.push_back(num);\n        }\n    }\n    return odd_numbers;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++) {\n        if(nums[i]%2!=0) {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]%2!=0){\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> odd_nums;\n    for(int i=0;i<nums.size();i++)\n    {\n        if(nums[i]%2!=0)\n        {\n            odd_nums.push_back(nums[i]);\n        }\n    }\n    return odd_nums;",
    "    std::vector<long> result;\n    for (auto it = nums.begin(); it != nums.end(); ++it) {\n        if (*it % 2 != 0) {\n            result.push_back(*it);\n        }\n    }\n    return result;"
  ]
}
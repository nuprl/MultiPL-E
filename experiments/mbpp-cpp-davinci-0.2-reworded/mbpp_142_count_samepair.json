{
  "name": "mbpp_142_count_samepair",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to count number items that are identical in the same position of three given vectors.\nlong count_samepair(std::vector<long> list1, std::vector<long> list2, std::vector<long> list3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_142_count_samepair.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = count_samepair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9})), (std::vector<long>({(long)2, (long)1, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (3));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)1, (long)3, (long)1, (long)2, (long)6, (long)7, (long)8}))) == (4));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)2, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)1, (long)3, (long)1, (long)2, (long)6, (long)7, (long)8}))) == (5));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long count = 0;\n    for(long i = 0; i < list1.size(); i++) {\n        if(list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list1[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list1[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < list1.size(); i++)\n        if (list1[i] == list2[i] && list2[i] == list3[i])\n            count++;\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < list1.size(); i++){\n        if(list1[i] == list2[i] && list1[i] == list3[i]){\n            count++;\n        }\n    }\n    return count;",
    "  long count = 0;\n  for (int i = 0; i < list1.size(); i++) {\n    if (list1[i] == list2[i] && list2[i] == list3[i]) {\n      count++;\n    }\n  }\n  return count;",
    "  long count = 0;\n  for (long i = 0; i < list1.size(); i++) {\n    if (list1[i] == list2[i] && list2[i] == list3[i]) {\n      count++;\n    }\n  }\n  return count;",
    "    long count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (long i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(long i = 0; i < list1.size(); i++) {\n        if(list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    // Write your code here\n    long count = 0;\n    for(int i = 0; i < list1.size(); i++)\n    {\n        if(list1[i] == list2[i] && list2[i] == list3[i])\n            count++;\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "\tlong count = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i] == list2[i] && list2[i] == list3[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
    "    long count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i] == list2[i] && list2[i] == list3[i]) {\n            count++;\n        }\n    }\n    return count;"
  ]
}
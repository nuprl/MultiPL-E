{
  "name": "mbpp_392_get_max_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nlong get_max_sum(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = get_max_sum;\n    assert(candidate((60)) == (106));\n    assert(candidate((10)) == (12));\n    assert(candidate((2)) == (2));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n<=5)\n    return n;\n  long a = get_max_sum(n/2);\n  long b = get_max_sum(n/3);\n  long c = get_max_sum(n/4);\n  long d = get_max_sum(n/5);\n  long e = get_max_sum(n/6);\n  long f = get_max_sum(n/7);\n  long g = get_max_sum(n/8);\n  long h = get_max_sum(n/9);\n  long i = get_max_sum(n/10);\n  long j = get_max_sum(n/11);\n  long k = get_max_sum(n/12);\n  long l = get_max_sum(n/13);\n  long m = get_max_sum(n/14);\n  long o = get_max_sum(n/15);\n  long p = get_max_sum(n/16);\n  long q = get_max_sum(n/17);\n  long r = get_max_sum(n/18);\n  long s = get_max_sum(n/19);\n  long t = get_max_sum(n/20);\n  long u = get_max_sum(n/21);\n  long v = get_max_sum(n/22);\n  long w = get_max_sum(n/23);\n  long x = get_max_sum(n/24);\n  long y = get_max_sum(n/25);\n  long z = get_max_sum(n/26);\n  long a1 = get_max_sum(n/27);\n  long b1 = get_max_sum(n/28);\n  long c1 = get_max_sum(n/29);\n  long d1 = get_max_sum(n/30);\n  long e1 = get_max_sum(n/31);\n  long f1 = get_max_sum(n/32);\n  long g1 =",
    "    if(n<=0) return 0;\n    long max_sum = n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > max_sum) max_sum = sum;\n    return max_sum;",
    "    if(n==0)\n        return 0;\n    if(n<=5)\n        return n;\n    long a=get_max_sum(n/2);\n    long b=get_max_sum(n/3);\n    long c=get_max_sum(n/4);\n    long d=get_max_sum(n/5);\n    long e=get_max_sum(n/6);\n    long f=get_max_sum(n/7);\n    long g=get_max_sum(n/8);\n    long h=get_max_sum(n/9);\n    long i=get_max_sum(n/10);\n    long j=get_max_sum(n/11);\n    long k=get_max_sum(n/12);\n    long l=get_max_sum(n/13);\n    long m=get_max_sum(n/14);\n    long o=get_max_sum(n/15);\n    long p=get_max_sum(n/16);\n    long q=get_max_sum(n/17);\n    long r=get_max_sum(n/18);\n    long s=get_max_sum(n/19);\n    long t=get_max_sum(n/20);\n    long u=get_max_sum(n/21);\n    long v=get_max_sum(n/22);\n    long w=get_max_sum(n/23);\n    long x=get_max_sum(n/24);\n    long y=get_max_sum(n/25);\n    long z=get_max_sum(n/26);\n    long aa=get_max_sum(n/27);\n    long ab=get_max_sum(n/28);\n    long ac=get_max_sum(n/29);\n    long ad=get_max_sum(n/30);\n    long ae=get_max_sum(n/31);\n    long af=get_max_sum(n/32);\n    long ag=get_max_sum(n/33);\n    long",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    long max_sum = n;\n    long sum = 0;\n    if(n%2 == 0) {\n        sum = get_max_sum(n/2);\n        if(sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n    if(n%3 == 0) {\n        sum = get_max_sum(n/3);\n        if(sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n    if(n%4 == 0) {\n        sum = get_max_sum(n/4);\n        if(sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n    if(n%5 == 0) {\n        sum = get_max_sum(n/5);\n        if(sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n    return max_sum;",
    "  if (n == 0) return 0;\n  if (n == 1) return 1;\n  if (n == 2) return 2;\n  if (n == 3) return 3;\n  if (n == 4) return 4;\n  if (n == 5) return 5;\n  return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if(n < 0) return 0;\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "  //write your code here\n  if(n==0)\n    return 0;\n  if(n==1)\n    return 1;\n  if(n==2)\n    return 2;\n  if(n==3)\n    return 3;\n  if(n==4)\n    return 4;\n  if(n==5)\n    return 5;\n  long a=get_max_sum(n/2);\n  long b=get_max_sum(n/3);\n  long c=get_max_sum(n/4);\n  long d=get_max_sum(n/5);\n  long e=get_max_sum(n/6);\n  long f=get_max_sum(n/7);\n  long g=get_max_sum(n/8);\n  long h=get_max_sum(n/9);\n  long i=get_max_sum(n/10);\n  long j=get_max_sum(n/11);\n  long k=get_max_sum(n/12);\n  long l=get_max_sum(n/13);\n  long m=get_max_sum(n/14);\n  long o=get_max_sum(n/15);\n  long p=get_max_sum(n/16);\n  long q=get_max_sum(n/17);\n  long r=get_max_sum(n/18);\n  long s=get_max_sum(n/19);\n  long t=get_max_sum(n/20);\n  long u=get_max_sum(n/21);\n  long v=get_max_sum(n/22);\n  long w=get_max_sum(n/23);\n  long x=get_max_sum(n/24);\n  long y=get_max_sum(n/25);\n  long z=get_max_sum(n/26);\n  long aa=get_max_sum(n/27);\n  long ab=get_max_sum(n/28);\n  long ac=get_max_sum(n/29);\n  long ad=get",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n<=11)\n    return n;\n  long a=get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5);\n  if(a>n)\n    return a;\n  else\n    return n;",
    "    if (n < 0) {\n        return 0;\n    }\n    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if (sum > n) {\n        return sum;\n    }\n    return n;",
    "    if(n == 0)\n        return 0;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > n) return sum;\n    else return n;",
    "  if (n == 0) {\n    return 0;\n  }\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if (max_sum > n) {\n    return max_sum;\n  }\n  return n;",
    "    if (n <= 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return 4;\n    if (n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n <= 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  if (n < 0) {\n    return 0;\n  }\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, max_sum);",
    "    if (n == 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n        return 2;\n    if (n == 3)\n        return 3;\n    if (n == 4)\n        return 4;\n    if (n == 5)\n        return 5;\n    return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "    if(n==0)\n        return 0;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    long f = get_max_sum(n/7);\n    long g = get_max_sum(n/8);\n    long h = get_max_sum(n/9);\n    long i = get_max_sum(n/10);\n    long j = get_max_sum(n/11);\n    long k = get_max_sum(n/12);\n    long l = get_max_sum(n/13);\n    long m = get_max_sum(n/14);\n    long o = get_max_sum(n/15);\n    long p = get_max_sum(n/16);\n    long q = get_max_sum(n/17);\n    long r = get_max_sum(n/18);\n    long s = get_max_sum(n/19);\n    long t = get_max_sum(n/20);\n    long u = get_max_sum(n/21);\n    long v = get_max_sum(n/22);\n    long w = get_max_sum(n/23);\n    long x = get_max_sum(n/24);\n    long y = get_max_sum(n/25);\n    long z = get_max_sum(n/26);\n    long aa = get_max_sum(n/27);\n    long bb = get_max_sum(n/28);\n    long cc = get_max_sum(n/29);\n    long dd = get_max_sum(n/30);\n    long ee = get_max_sum(n/31);\n    long ff = get_max_sum(n/32);\n    long gg = get_max_sum(n/33);\n    long hh = get_max_sum(n/34",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n==1)\n    return 1;\n  if(n==2)\n    return 2;\n  if(n==3)\n    return 3;\n  if(n==4)\n    return 4;\n  if(n==5)\n    return 5;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if(sum>n)\n    return sum;\n  else\n    return n;",
    "    if (n < 0)\n        return 0;\n    if (n == 0)\n        return 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n        return 2;\n    if (n == 3)\n        return 3;\n    if (n == 4)\n        return 4;\n    if (n == 5)\n        return 5;\n    return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "    if(n <= 0)\n        return 0;\n    if(n <= 5)\n        return n;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    return std::max(n, a+b+c+d+e);",
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n == 0) {\n        return 0;\n    }\n    long res = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(res, n);",
    "    if(n<=0)\n        return 0;\n    long a=get_max_sum(n/2);\n    long b=get_max_sum(n/3);\n    long c=get_max_sum(n/4);\n    long d=get_max_sum(n/5);\n    long e=get_max_sum(n/6);\n    long f=get_max_sum(n/7);\n    return std::max(n,a+b+c+d+e+f);",
    "  //write your code here\n  if (n <= 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 2;\n  }\n  if (n == 3) {\n    return 3;\n  }\n  if (n == 4) {\n    return 4;\n  }\n  if (n == 5) {\n    return 5;\n  }\n  return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(max_sum > n) {\n        return max_sum;\n    }\n    return n;",
    "    if(n == 0)\n        return 0;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    if(n <= 5) {\n        return n;\n    }\n    long max_sum = 0;\n    max_sum = std::max(max_sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    max_sum = std::max(max_sum, n);\n    return max_sum;",
    "    if(n<=0)\n        return 0;\n    long sum = 0;\n    sum = std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    return sum;",
    "    if(n <= 0)\n        return 0;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    return std::max(n, a+b+c+d);",
    "    if (n <= 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    long sum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n    return std::max(sum, n);",
    "    if (n < 0) {\n        return 0;\n    }\n    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if (sum > n) {\n        return sum;\n    }\n    return n;",
    "  if(n <= 0) {\n    return 0;\n  }\n  if(n == 1) {\n    return 1;\n  }\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, sum);",
    "    if(n<=0)\n        return 0;\n    long ans = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(ans, n);",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 2;\n    }\n    if (n == 3) {\n        return 3;\n    }\n    if (n == 4) {\n        return 4;\n    }\n    if (n == 5) {\n        return 5;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if (max_sum > n) {\n        return max_sum;\n    }\n    return n;",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  if(n <= 0) {\n    return 0;\n  }\n  if(n == 1) {\n    return 1;\n  }\n  if(n == 2) {\n    return 2;\n  }\n  if(n == 3) {\n    return 3;\n  }\n  if(n == 4) {\n    return 4;\n  }\n  if(n == 5) {\n    return 5;\n  }\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if(max_sum < n) {\n    return n;\n  }\n  return max_sum;",
    "    if(n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n == 0) {\n        return 0;\n    }\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    long f = get_max_sum(n/7);\n    return std::max(n, a+b+c+d+e+f);",
    "    if(n <= 0) {\n        return 0;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    if(n == 2) {\n        return 2;\n    }\n    if(n == 3) {\n        return 3;\n    }\n    if(n == 4) {\n        return 4;\n    }\n    if(n == 5) {\n        return 5;\n    }\n    long max_sum = std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n    return max_sum;",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "  if (n == 0) return 0;\n  if (n == 1) return 1;\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if (max_sum > n) return max_sum;\n  return n;",
    "    //write your code here\n    if(n<=0) return 0;\n    if(n<=5) return n;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    return std::max(n,a+b+c+d+e);",
    "    if (n <= 0) {\n        return 0;\n    }\n    long sum = 0;\n    if (n > 0) {\n        sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    }\n    return std::max(sum, n);",
    "  if (n <= 0) return 0;\n  if (n == 1) return 1;\n  if (n == 2) return 2;\n  if (n == 3) return 3;\n  if (n == 4) return 4;\n  if (n == 5) return 5;\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if (max_sum < n) return n;\n  return max_sum;",
    "    if(n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(max_sum > n)\n        return max_sum;\n    else\n        return n;",
    "  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 2;\n  }\n  if (n == 3) {\n    return 3;\n  }\n  if (n == 4) {\n    return 4;\n  }\n  if (n == 5) {\n    return 5;\n  }\n  long sum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n  if (sum > n) {\n    return sum;\n  }\n  return n;",
    "    if (n <= 0) {\n        return 0;\n    }\n    long max_sum = std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n    return max_sum;",
    "    if(n<=0)\n        return 0;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, sum);",
    "    if (n <= 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return 4;\n    if (n == 5) return 5;\n    if (n == 6) return 6;\n    if (n == 7) return 7;\n    if (n == 8) return 8;\n    if (n == 9) return 9;\n    if (n == 10) return 10;\n    if (n == 11) return 11;\n    if (n == 12) return 12;\n    if (n == 13) return 13;\n    if (n == 14) return 14;\n    if (n == 15) return 15;\n    if (n == 16) return 16;\n    if (n == 17) return 17;\n    if (n == 18) return 18;\n    if (n == 19) return 19;\n    if (n == 20) return 20;\n    if (n == 21) return 21;\n    if (n == 22) return 22;\n    if (n == 23) return 23;\n    if (n == 24) return 24;\n    if (n == 25) return 25;\n    if (n == 26) return 26;\n    if (n == 27) return 27;\n    if (n == 28) return 28;\n    if (n == 29) return 29;\n    if (n == 30) return 30;\n    if (n == 31) return 31;\n    if (n == 32) return 32;\n    if (n == 33) return 33;\n    if (n == 34) return 34;\n    if (n == 35) return 35;\n    if (n == 36) return 36;\n    if (n == 37) return 37;\n    if (n == 38) return 38;\n    if (n == 39) return 39;\n    if (n == 40) return 40;\n    if (n == 41) return 41;\n    if (n == 42) return 42;\n    if (n == 43) return 43;\n    if (n == 44) return 44;\n    if (n == 45) return 45;\n    if (n ==",
    "    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return 4;\n    if (n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, sum);",
    "    if(n <= 0) {\n        return 0;\n    }\n    if(n <= 5) {\n        return n;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return 4;\n    if (n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  if (n == 0) return 0;\n  if (n == 1) return 1;\n  if (n == 2) return 2;\n  if (n == 3) return 3;\n  if (n == 4) return 4;\n  if (n == 5) return 5;\n  return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "  if(n<=0) return 0;\n  if(n<=5) return n;\n  long a = get_max_sum(n/2);\n  long b = get_max_sum(n/3);\n  long c = get_max_sum(n/4);\n  long d = get_max_sum(n/5);\n  return std::max(n, a+b+c+d);",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 2;\n    }\n    if (n == 3) {\n        return 3;\n    }\n    if (n == 4) {\n        return 4;\n    }\n    if (n == 5) {\n        return 5;\n    }\n    return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "  if(n <= 0) return 0;\n  if(n <= 5) return n;\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(max_sum, n);",
    "    if(n<=0)\n        return 0;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    return std::max(n, a+b+c+d+e);",
    "    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    if(n <= 5) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n<=0)\n        return 0;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, sum);",
    "    if (n <= 0) {\n        return 0;\n    }\n    long sum = 0;\n    if (n >= 5) {\n        sum += get_max_sum(n/5);\n    }\n    if (n >= 4) {\n        sum += get_max_sum(n/4);\n    }\n    if (n >= 3) {\n        sum += get_max_sum(n/3);\n    }\n    if (n >= 2) {\n        sum += get_max_sum(n/2);\n    }\n    return std::max(sum, n);",
    "    if(n==0)\n        return 0;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    long f = get_max_sum(n/7);\n    long g = get_max_sum(n/8);\n    long h = get_max_sum(n/9);\n    long i = get_max_sum(n/10);\n    long j = get_max_sum(n/11);\n    long k = get_max_sum(n/12);\n    long l = get_max_sum(n/13);\n    long m = get_max_sum(n/14);\n    long o = get_max_sum(n/15);\n    long p = get_max_sum(n/16);\n    long q = get_max_sum(n/17);\n    long r = get_max_sum(n/18);\n    long s = get_max_sum(n/19);\n    long t = get_max_sum(n/20);\n    long u = get_max_sum(n/21);\n    long v = get_max_sum(n/22);\n    long w = get_max_sum(n/23);\n    long x = get_max_sum(n/24);\n    long y = get_max_sum(n/25);\n    long z = get_max_sum(n/26);\n    long aa = get_max_sum(n/27);\n    long bb = get_max_sum(n/28);\n    long cc = get_max_sum(n/29);\n    long dd = get_max_sum(n/30);\n    long ee = get_max_sum(n/31);\n    long ff = get_max_sum(n/32);\n    long gg = get_max_sum(n/33);\n    long hh = get_max_sum(n/34",
    "  if (n == 0) {\n    return 0;\n  }\n  long sum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n  return std::max(sum, n);",
    "    if (n < 12) {\n        return n;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n < 12) {\n        return n;\n    }\n    long a = get_max_sum(n / 2);\n    long b = get_max_sum(n / 3);\n    long c = get_max_sum(n / 4);\n    long d = get_max_sum(n / 5);\n    return std::max(a + b + c + d, n);",
    "  if(n<=0) return 0;\n  if(n<=5) return n;\n  long a = get_max_sum(n/2);\n  long b = get_max_sum(n/3);\n  long c = get_max_sum(n/4);\n  long d = get_max_sum(n/5);\n  long e = n;\n  return std::max(a+b+c+d,e);",
    "    if(n==0)\n        return 0;\n    if(n<=5)\n        return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum,n);",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n==1)\n    return 1;\n  if(n==2)\n    return 2;\n  if(n==3)\n    return 3;\n  if(n==4)\n    return 4;\n  if(n==5)\n    return 5;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if(sum>n)\n    return sum;\n  else\n    return n;",
    "  if (n <= 0)\n    return 0;\n  if (n == 1)\n    return 1;\n  if (n == 2)\n    return 2;\n  if (n == 3)\n    return 3;\n  if (n == 4)\n    return 4;\n  if (n == 5)\n    return 5;\n  return std::max(get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5), n);",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = n;\n    return std::max(a+b+c+d, e);",
    "    if(n == 0) {\n        return 0;\n    }\n    long sum = 0;\n    sum = std::max(sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    sum = std::max(sum, n);\n    return sum;",
    "    if(n < 12)\n        return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4);\n    return std::max(max_sum, n);",
    "  if(n == 0)\n    return 0;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n<=5)\n    return n;\n  long a=get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5);\n  if(a>n)\n    return a;\n  else\n    return n;",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  if(n<=0)\n    return 0;\n  if(n<=5)\n    return n;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "  if(n <= 0) {\n    return 0;\n  }\n  if(n <= 5) {\n    return n;\n  }\n  long max_sum = 0;\n  for(int i = 2; i <= 5; i++) {\n    max_sum = std::max(max_sum, get_max_sum(n/i));\n  }\n  return max_sum + n;",
    "    if(n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if (n <= 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n <= 0)\n        return 0;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = n;\n    return std::max(a+b+c+d, e);",
    "    if(n == 0) {\n        return 0;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    long sum = 0;\n    sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n == 0) {\n        return 0;\n    }\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    long f = get_max_sum(n/7);\n    long g = get_max_sum(n/8);\n    long h = get_max_sum(n/9);\n    long i = get_max_sum(n/10);\n    long j = get_max_sum(n/11);\n    long k = get_max_sum(n/12);\n    long l = get_max_sum(n/13);\n    long m = get_max_sum(n/14);\n    long o = get_max_sum(n/15);\n    long p = get_max_sum(n/16);\n    long q = get_max_sum(n/17);\n    long r = get_max_sum(n/18);\n    long s = get_max_sum(n/19);\n    long t = get_max_sum(n/20);\n    long u = get_max_sum(n/21);\n    long v = get_max_sum(n/22);\n    long w = get_max_sum(n/23);\n    long x = get_max_sum(n/24);\n    long y = get_max_sum(n/25);\n    long z = get_max_sum(n/26);\n    long aa = get_max_sum(n/27);\n    long ab = get_max_sum(n/28);\n    long ac = get_max_sum(n/29);\n    long ad = get_max_sum(n/30);\n    long ae = get_max_sum(n/31);\n    long af = get_max_sum(n/32);\n    long ag = get_max_sum(n/33);\n    long ah = get_max_sum(n/",
    "  if(n <= 0) return 0;\n  if(n == 1) return 1;\n  if(n == 2) return 2;\n  if(n == 3) return 3;\n  if(n == 4) return 4;\n  if(n == 5) return 5;\n  return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "  if (n < 0) {\n    return 0;\n  }\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  long sum = 0;\n  sum = std::max(sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n  sum = std::max(sum, n);\n  return sum;",
    "    if(n <= 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, sum);",
    "    if(n==0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum>n) return sum;\n    else return n;",
    "  if(n == 0) {\n    return 0;\n  }\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(max_sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n <= 0) {\n        return 0;\n    }\n    long max_sum = n;\n    long sum = 0;\n    if (n % 2 == 0) {\n        sum += get_max_sum(n/2);\n    }\n    if (n % 3 == 0) {\n        sum += get_max_sum(n/3);\n    }\n    if (n % 4 == 0) {\n        sum += get_max_sum(n/4);\n    }\n    if (n % 5 == 0) {\n        sum += get_max_sum(n/5);\n    }\n    if (sum > max_sum) {\n        max_sum = sum;\n    }\n    return max_sum;",
    "  if(n <= 0)\n    return 0;\n  if(n == 1)\n    return 1;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "    if(n <= 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > n)\n        return sum;\n    else\n        return n;",
    "    if(n==0)\n        return 0;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    return std::max(n,a+b+c+d+e);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(max_sum > n)\n        return max_sum;\n    else\n        return n;",
    "    if (n < 0)\n        return 0;\n    if (n == 0)\n        return 0;\n    long sum = 0;\n    sum = std::max(sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    sum = std::max(sum, n);\n    return sum;",
    "    if(n < 0) {\n        return 0;\n    }\n    if(n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n == 0)\n        return 0;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(max_sum > n)\n        return max_sum;\n    else\n        return n;",
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n    return std::max(sum, n);",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long max_sum = n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum>max_sum) max_sum = sum;\n    return max_sum;",
    "    if(n == 0) {\n        return 0;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    long sum = 0;\n    sum = std::max(sum, get_max_sum(n/2));\n    sum = std::max(sum, get_max_sum(n/3));\n    sum = std::max(sum, get_max_sum(n/4));\n    sum = std::max(sum, get_max_sum(n/5));\n    return sum + n;",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    long sum = 0;\n    sum = std::max(sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    sum = std::max(sum, n);\n    return sum;",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n == 0) {\n        return 0;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    if(n == 2) {\n        return 2;\n    }\n    if(n == 3) {\n        return 3;\n    }\n    if(n == 4) {\n        return 4;\n    }\n    if(n == 5) {\n        return 5;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > n) {\n        return sum;\n    }\n    return n;",
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = 0;\n    sum = std::max(sum, get_max_sum(n/2));\n    sum = std::max(sum, get_max_sum(n/3));\n    sum = std::max(sum, get_max_sum(n/4));\n    sum = std::max(sum, get_max_sum(n/5));\n    return std::max(sum, n);",
    "    if (n <= 0) {\n        return 0;\n    }\n    if (n <= 5) {\n        return n;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  if(n==0)\n    return 0;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n <= 0) {\n        return 0;\n    }\n    if (n <= 5) {\n        return n;\n    }\n    long sum = 0;\n    sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long a=get_max_sum(n/2);\n    long b=get_max_sum(n/3);\n    long c=get_max_sum(n/4);\n    long d=get_max_sum(n/5);\n    return std::max(a+b+c+d,n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return (max_sum > n) ? max_sum : n;",
    "  if(n <= 0) {\n    return 0;\n  }\n  if(n <= 5) {\n    return n;\n  }\n  long max_sum = std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);\n  return max_sum;",
    "    if(n<=0)\n        return 0;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    long f = get_max_sum(n/7);\n    return std::max(n, a+b+c+d+e+f);",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    long f = get_max_sum(n/7);\n    long g = get_max_sum(n/8);\n    long h = get_max_sum(n/9);\n    long i = get_max_sum(n/10);\n    long j = get_max_sum(n/11);\n    long k = get_max_sum(n/12);\n    long l = get_max_sum(n/13);\n    long m = get_max_sum(n/14);\n    long o = get_max_sum(n/15);\n    long p = get_max_sum(n/16);\n    long q = get_max_sum(n/17);\n    long r = get_max_sum(n/18);\n    long s = get_max_sum(n/19);\n    long t = get_max_sum(n/20);\n    long u = get_max_sum(n/21);\n    long v = get_max_sum(n/22);\n    long w = get_max_sum(n/23);\n    long x = get_max_sum(n/24);\n    long y = get_max_sum(n/25);\n    long z = get_max_sum(n/26);\n    long aa = get_max_sum(n/27);\n    long bb = get_max_sum(n/28);\n    long cc = get_max_sum(n/29);\n    long dd = get_max_sum(n/30);\n    long ee = get_max_sum(n/31);\n    long ff = get_max_sum(n/32);\n    long gg = get_max_sum(n/33);\n    long hh = get_max_sum",
    "    if(n <= 0) {\n        return 0;\n    }\n    if(n <= 5) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long sum = 0;\n    sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n < 2) {\n        return n;\n    }\n    long max_sum = n;\n    long sum = 0;\n    for (int i = 2; i <= 5; i++) {\n        sum = get_max_sum(n/i);\n        if (max_sum < sum) {\n            max_sum = sum;\n        }\n    }\n    return max_sum;",
    "  if(n == 0) return 0;\n  if(n == 1) return 1;\n  if(n == 2) return 2;\n  if(n == 3) return 3;\n  if(n == 4) return 4;\n  if(n == 5) return 5;\n  return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if(n <= 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > n)\n        return sum;\n    else\n        return n;",
    "    if(n==0)\n        return 0;\n    if(n==1)\n        return 1;\n    if(n==2)\n        return 2;\n    if(n==3)\n        return 3;\n    if(n==4)\n        return 4;\n    if(n==5)\n        return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum>n)\n        return sum;\n    else\n        return n;",
    "  if (n <= 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  long sum = 0;\n  sum = std::max(sum, get_max_sum(n/2));\n  sum = std::max(sum, get_max_sum(n/3));\n  sum = std::max(sum, get_max_sum(n/4));\n  sum = std::max(sum, get_max_sum(n/5));\n  return sum + n;",
    "  if (n <= 0) {\n    return 0;\n  }\n  if (n <= 5) {\n    return n;\n  }\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if (sum > n) {\n    return sum;\n  }\n  return n;",
    "  if (n < 0) {\n    return 0;\n  }\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  if (n == 2) {\n    return 2;\n  }\n  if (n == 3) {\n    return 3;\n  }\n  if (n == 4) {\n    return 4;\n  }\n  if (n == 5) {\n    return 5;\n  }\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if (max_sum > n) {\n    return max_sum;\n  }\n  return n;",
    "  if (n < 12) {\n    return n;\n  }\n  long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(max_sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n==0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return (sum>n)?sum:n;",
    "    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return 4;\n    if (n == 5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n == 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n == 2)\n        return 2;\n    if(n == 3)\n        return 3;\n    if(n == 4)\n        return 4;\n    if(n == 5)\n        return 5;\n    return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = get_max_sum(n/6);\n    return std::max(n, a+b+c+d+e);",
    "  if(n <= 0) {\n    return 0;\n  }\n  if(n == 1) {\n    return 1;\n  }\n  long sum = 0;\n  sum = std::max(sum, get_max_sum(n/2));\n  sum = std::max(sum, get_max_sum(n/3));\n  sum = std::max(sum, get_max_sum(n/4));\n  sum = std::max(sum, get_max_sum(n/5));\n  return sum + n;",
    "    if(n<=0)\n        return 0;\n    if(n==1)\n        return 1;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n <= 0) {\n        return 0;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n<=0)\n        return 0;\n    if(n==1)\n        return 1;\n    long sum1 = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    long sum2 = n;\n    return std::max(sum1, sum2);",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n<=5)\n    return n;\n  long a = get_max_sum(n/2);\n  long b = get_max_sum(n/3);\n  long c = get_max_sum(n/4);\n  long d = get_max_sum(n/5);\n  long e = get_max_sum(n/6);\n  long f = get_max_sum(n/7);\n  long g = get_max_sum(n/8);\n  long h = get_max_sum(n/9);\n  long i = get_max_sum(n/10);\n  long j = get_max_sum(n/11);\n  long k = get_max_sum(n/12);\n  long l = get_max_sum(n/13);\n  long m = get_max_sum(n/14);\n  long o = get_max_sum(n/15);\n  long p = get_max_sum(n/16);\n  long q = get_max_sum(n/17);\n  long r = get_max_sum(n/18);\n  long s = get_max_sum(n/19);\n  long t = get_max_sum(n/20);\n  long u = get_max_sum(n/21);\n  long v = get_max_sum(n/22);\n  long w = get_max_sum(n/23);\n  long x = get_max_sum(n/24);\n  long y = get_max_sum(n/25);\n  long z = get_max_sum(n/26);\n  long aa = get_max_sum(n/27);\n  long ab = get_max_sum(n/28);\n  long ac = get_max_sum(n/29);\n  long ad = get_max_sum(n/30);\n  long ae = get_max_sum(n/31);\n  long af = get_max_sum(n/32);\n  long ag = get_max_sum",
    "    //write your code here\n    if(n<=0)\n        return 0;\n    if(n<=5)\n        return n;\n    long a=get_max_sum(n/2)+get_max_sum(n/3)+get_max_sum(n/4)+get_max_sum(n/5);\n    return std::max(n,a);",
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, sum);",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n==1)\n    return 1;\n  if(n==2)\n    return 2;\n  if(n==3)\n    return 3;\n  if(n==4)\n    return 4;\n  if(n==5)\n    return 5;\n  long a = get_max_sum(n/2);\n  long b = get_max_sum(n/3);\n  long c = get_max_sum(n/4);\n  long d = get_max_sum(n/5);\n  long e = get_max_sum(n/6);\n  long f = get_max_sum(n/7);\n  long g = get_max_sum(n/8);\n  long h = get_max_sum(n/9);\n  long i = get_max_sum(n/10);\n  long j = get_max_sum(n/11);\n  long k = get_max_sum(n/12);\n  long l = get_max_sum(n/13);\n  long m = get_max_sum(n/14);\n  long o = get_max_sum(n/15);\n  long p = get_max_sum(n/16);\n  long q = get_max_sum(n/17);\n  long r = get_max_sum(n/18);\n  long s = get_max_sum(n/19);\n  long t = get_max_sum(n/20);\n  long u = get_max_sum(n/21);\n  long v = get_max_sum(n/22);\n  long w = get_max_sum(n/23);\n  long x = get_max_sum(n/24);\n  long y = get_max_sum(n/25);\n  long z = get_max_sum(n/26);\n  long aa = get_max_sum(n/27);\n  long bb = get_max_sum(n/28);\n  long cc = get_max_sum(n/29);\n  long dd",
    "  if(n == 0) return 0;\n  long sum = 0;\n  sum = std::max(sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n  sum = std::max(sum, n);\n  return sum;",
    "    if (n < 12)\n        return n;\n    else\n        return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "  if (n < 0) {\n    return 0;\n  }\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if (sum > n) {\n        return sum;\n    } else {\n        return n;\n    }",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n <= 0) {\n        return 0;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n==0)\n        return 0;\n    if(n==1)\n        return 1;\n    if(n==2)\n        return 2;\n    if(n==3)\n        return 3;\n    if(n==4)\n        return 4;\n    if(n==5)\n        return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum>n)\n        return sum;\n    else\n        return n;",
    "    if(n < 12)\n        return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return max_sum > n ? max_sum : n;",
    "    if(n<=0)\n        return 0;\n    long sum = 0;\n    sum = std::max(sum, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    sum = std::max(sum, n);\n    return sum;",
    "    if(n<=0)\n        return 0;\n    long max_sum = n;\n    long sum = 0;\n    sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > max_sum)\n        max_sum = sum;\n    return max_sum;",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if (max_sum > n) {\n        return max_sum;\n    }\n    return n;",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n<=5)\n    return n;\n  long a=get_max_sum(n/2);\n  long b=get_max_sum(n/3);\n  long c=get_max_sum(n/4);\n  long d=get_max_sum(n/5);\n  long e=a+b+c+d;\n  if(n>e)\n    return n;\n  else\n    return e;",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    long temp = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(temp, n);",
    "    if(n<=0)\n        return 0;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long a = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(a, n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if (max_sum > n) {\n        return max_sum;\n    } else {\n        return n;\n    }",
    "    if (n <= 0) {\n        return 0;\n    }\n    if (n <= 5) {\n        return n;\n    }\n    long max_sum = n;\n    long sum = 0;\n    for (int i = 2; i <= 5; i++) {\n        sum = get_max_sum(n/i);\n        if (sum > max_sum) {\n            max_sum = sum;\n        }\n    }\n    return max_sum;",
    "    if(n<=0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    if(n==6) return 6;\n    if(n==7) return 7;\n    if(n==8) return 8;\n    if(n==9) return 9;\n    if(n==10) return 10;\n    if(n==11) return 11;\n    if(n==12) return 12;\n    if(n==13) return 13;\n    if(n==14) return 14;\n    if(n==15) return 15;\n    if(n==16) return 16;\n    if(n==17) return 17;\n    if(n==18) return 18;\n    if(n==19) return 19;\n    if(n==20) return 20;\n    if(n==21) return 21;\n    if(n==22) return 22;\n    if(n==23) return 23;\n    if(n==24) return 24;\n    if(n==25) return 25;\n    if(n==26) return 26;\n    if(n==27) return 27;\n    if(n==28) return 28;\n    if(n==29) return 29;\n    if(n==30) return 30;\n    if(n==31) return 31;\n    if(n==32) return 32;\n    if(n==33) return 33;\n    if(n==34) return 34;\n    if(n==35) return 35;\n    if(n==36) return 36;\n    if(n==37) return 37;\n    if(n==38) return 38;\n    if(n==39) return 39;\n    if(n==40) return 40;\n    if(n==41) return 41;\n    if(n==42) return 42;\n    if(n==43) return 43;\n    if(n==44) return 44;\n    if(n==45) return 45;\n    if(n",
    "    if(n <= 0) {\n        return 0;\n    }\n    if(n <= 5) {\n        return n;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  if(n == 0)\n    return 0;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(n, sum);",
    "    if(n<=0) return 0;\n    if(n<=5) return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return (max_sum > n) ? max_sum : n;",
    "    if (n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n <= 0) {\n        return 0;\n    }\n    if(n <= 5) {\n        return n;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if(n == 0) {\n        return 0;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "  if(n <= 0)\n    return 0;\n  if(n <= 5)\n    return n;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  return std::max(sum, n);",
    "    if (n < 0) return 0;\n    if (n == 0) return 0;\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return 4;\n    if (n == 5) return 5;\n    return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if (n <= 5) {\n        return n;\n    }\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(sum, n);",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 2;\n    }\n    if (n == 3) {\n        return 3;\n    }\n    if (n == 4) {\n        return 4;\n    }\n    if (n == 5) {\n        return 5;\n    }\n    return std::max(get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n);",
    "    if (n < 12) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  if(n<=5)\n    return n;\n  long a = get_max_sum(n/2);\n  long b = get_max_sum(n/3);\n  long c = get_max_sum(n/4);\n  long d = get_max_sum(n/5);\n  long e = n;\n  return std::max(a+b+c+d,e);",
    "    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(n == 2) return 2;\n    if(n == 3) return 3;\n    if(n == 4) return 4;\n    if(n == 5) return 5;\n    if(n == 6) return 6;\n    if(n == 7) return 7;\n    if(n == 8) return 8;\n    if(n == 9) return 9;\n    if(n == 10) return 10;\n    if(n == 11) return 11;\n    if(n == 12) return 12;\n    if(n == 13) return 13;\n    if(n == 14) return 14;\n    if(n == 15) return 15;\n    if(n == 16) return 16;\n    if(n == 17) return 17;\n    if(n == 18) return 18;\n    if(n == 19) return 19;\n    if(n == 20) return 20;\n    if(n == 21) return 21;\n    if(n == 22) return 22;\n    if(n == 23) return 23;\n    if(n == 24) return 24;\n    if(n == 25) return 25;\n    if(n == 26) return 26;\n    if(n == 27) return 27;\n    if(n == 28) return 28;\n    if(n == 29) return 29;\n    if(n == 30) return 30;\n    if(n == 31) return 31;\n    if(n == 32) return 32;\n    if(n == 33) return 33;\n    if(n == 34) return 34;\n    if(n == 35) return 35;\n    if(n == 36) return 36;\n    if(n == 37) return 37;\n    if(n == 38) return 38;\n    if(n == 39) return 39;\n    if(n == 40) return 40;\n    if(n == 41) return 41;\n    if(n == 42) return 42;\n    if(n == 43) return 43;\n    if(n == 44) return 44;\n    if(n == 45) return 45;\n    if(n ==",
    "  if(n<=0) return 0;\n  if(n<=5) return n;\n  long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n  if(sum > n) return sum;\n  else return n;",
    "    if(n <= 0) {\n        return 0;\n    }\n    long max_sum = 0;\n    if(n > 0) {\n        max_sum = std::max(n, get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5));\n    }\n    return max_sum;",
    "    if (n <= 0) return 0;\n    if (n <= 5) return n;\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(n, max_sum);",
    "    if(n<=0) {\n        return 0;\n    }\n    if(n<=5) {\n        return n;\n    }\n    long max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    return std::max(max_sum, n);",
    "  //write your code here\n  if(n<=0)\n    return 0;\n  else if(n<=5)\n    return n;\n  else\n  {\n    long a = get_max_sum(n/2);\n    long b = get_max_sum(n/3);\n    long c = get_max_sum(n/4);\n    long d = get_max_sum(n/5);\n    long e = a+b+c+d;\n    if(e>n)\n      return e;\n    else\n      return n;\n  }",
    "    if(n==0) return 0;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    if(n==3) return 3;\n    if(n==4) return 4;\n    if(n==5) return 5;\n    long sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5);\n    if(sum > n) return sum;\n    else return n;"
  ]
}
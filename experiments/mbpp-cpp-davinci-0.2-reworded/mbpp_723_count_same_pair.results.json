{
  "name": "mbpp_723_count_same_pair",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_723_count_same_pair.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++)\n    {\n        if(nums1[i] == nums2[i])\n        {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "tmpwt3v4ciu: /tmp/tmpwt3v4ciu.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i=0; i<nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n\tlong count = 0;\n\tfor (int i = 0; i < nums1.size(); i++) {\n\t\tif (nums1[i] == nums2[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i=0; i<nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    std::unordered_map<long, long> map;\n    for (long i = 0; i < nums1.size(); i++) {\n        map[nums1[i]]++;\n    }\n    long count = 0;\n    for (long i = 0; i < nums2.size(); i++) {\n        if (map.find(nums2[i]) != map.end()) {\n            count++;\n            map[nums2[i]]--;\n            if (map[nums2[i]] == 0) {\n                map.erase(nums2[i]);\n            }\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmpq16_1ymz: /tmp/tmpq16_1ymz.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i=0;i<nums1.size();i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "tmpwt3v4ciu: /tmp/tmpwt3v4ciu.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here.\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    int count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n  // Write your code here\n  long count = 0;\n  for(int i = 0; i < nums1.size(); i++)\n  {\n    if(nums1[i] == nums2[i])\n    {\n      count++;\n    }\n  }\n  return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i=0;i<nums1.size();i++){\n        if(nums1[i]==nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n\tlong count = 0;\n\tfor (int i = 0; i < nums1.size(); i++) {\n\t\tif (nums1[i] == nums2[i]) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    assert(nums1.size() == nums2.size());\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "tmp079tzycb: /tmp/tmp079tzycb.cpp:5: long int count_same_pair(std::vector<long int>, std::vector<long int>): Assertion `nums1.size() == nums2.size()' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++)\n    {\n        if(nums1[i] == nums2[i])\n        {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++)\n    {\n        if(nums1[i] == nums2[i])\n        {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i=0; i<nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    // Write your code here\n    long count = 0;\n    for(int i=0; i<nums1.size(); i++){\n        if(nums1[i] == nums2[i]){\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1666124197,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (long i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(long i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for (int i = 0; i < nums1.size(); i++) {\n        if (nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// The input is defined as two vectors of the same length. Write a function to count indices where the vectors have the same values.\nlong count_same_pair(std::vector<long> nums1, std::vector<long> nums2) {\n    long count = 0;\n    for(int i = 0; i < nums1.size(); i++) {\n        if(nums1[i] == nums2[i]) {\n            count++;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_same_pair;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6, (long)7, (long)8})), (std::vector<long>({(long)2, (long)2, (long)3, (long)1, (long)2, (long)6, (long)7, (long)9}))) == (4));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)0, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (11));\n    assert(candidate((std::vector<long>({(long)2, (long)4, (long)-6, (long)-9, (long)11, (long)-12, (long)14, (long)-5, (long)17})), (std::vector<long>({(long)2, (long)1, (long)2, (long)-1, (long)-5, (long)6, (long)4, (long)-3, (long)-2, (long)3, (long)4, (long)6, (long)8}))) == (1));\n    assert(candidate((std::vector<long>({(long)0, (long)1, (long)1, (long)2})), (std::vector<long>({(long)0, (long)1, (long)2, (long)2}))) == (3));\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_759_is_decimal",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check whether a given string is a decimal number with a precision of 2.\nbool is_decimal(std::string num) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = is_decimal;\n    assert(candidate((\"123.11\")) == (true));\n    assert(candidate((\"e666.86\")) == (false));\n    assert(candidate((\"3.124587\")) == (false));\n    assert(candidate((\"1.11\")) == (true));\n    assert(candidate((\"1.1.11\")) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    int i = 0;\n    if (num[i] == '-') {\n        i++;\n    }\n    int count = 0;\n    for (; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n        if (count > 1) {\n            return false;\n        }\n        if (num[i] == '.') {\n            continue;\n        }\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    // Check for sign\n    if (num[i] == '-' || num[i] == '+') {\n        i++;\n    }\n    // Check for digits before decimal point\n    if (num[i] == '.') {\n        return false;\n    }\n    while (num[i] != '.' && num[i] != '\\0') {\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n        i++;\n    }\n    // Check for digits after decimal point\n    if (num[i] == '.') {\n        i++;\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n        i++;\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n        i++;\n    }\n    // Check for trailing characters\n    if (num[i] != '\\0') {\n        return false;\n    }\n    return true;",
    "    int count = 0;\n    for (int i = 0; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n    }\n    if (count > 1) {\n        return false;\n    }\n    int index = num.find('.');\n    if (index == -1) {\n        return true;\n    }\n    if (num.size() - index - 1 > 2) {\n        return false;\n    }\n    return true;",
    "    int i = 0;\n    if (num[i] == '-') {\n        i++;\n    }\n    int count = 0;\n    for (; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n        if (count > 1) {\n            return false;\n        }\n        if (num[i] == '.') {\n            continue;\n        }\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int count = 0;\n    for (int i = 0; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n    }\n    if (count > 1) {\n        return false;\n    }\n    int i = 0;\n    if (num[i] == '-') {\n        i++;\n    }\n    for (; i < num.size(); i++) {\n        if (num[i] == '.') {\n            i++;\n            break;\n        }\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    if (i == num.size()) {\n        return true;\n    }\n    for (; i < num.size(); i++) {\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int count = 0;\n    for(int i = 0; i < num.length(); i++) {\n        if(num[i] == '.') {\n            count++;\n        }\n    }\n    if(count > 1) {\n        return false;\n    }\n    int dot_index = num.find('.');\n    if(dot_index == std::string::npos) {\n        return false;\n    }\n    if(dot_index == num.length() - 1) {\n        return false;\n    }\n    if(dot_index == 0) {\n        return false;\n    }\n    if(num.length() - dot_index > 3) {\n        return false;\n    }\n    for(int i = 0; i < num.length(); i++) {\n        if(num[i] == '.') {\n            continue;\n        }\n        if(num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int count = 0;\n    for(int i = 0; i < num.size(); i++) {\n        if(num[i] == '.') {\n            count++;\n        }\n    }\n    if(count > 1) {\n        return false;\n    }\n    for(int i = 0; i < num.size(); i++) {\n        if(num[i] == '.') {\n            if(num.size() - i > 3) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    int count = 0;\n    for (int i = 0; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n    }\n    if (count > 1) {\n        return false;\n    }\n    int dot_pos = -1;\n    for (int i = 0; i < num.size(); i++) {\n        if (num[i] == '.') {\n            dot_pos = i;\n            break;\n        }\n    }\n    if (dot_pos == -1) {\n        return true;\n    }\n    if (num.size() - dot_pos - 1 > 2) {\n        return false;\n    }\n    return true;",
    "    int count = 0;\n    for (int i = 0; i < num.length(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n    }\n    if (count > 1) {\n        return false;\n    }\n    int dot_pos = num.find('.');\n    if (dot_pos == -1) {\n        return true;\n    }\n    if (dot_pos == num.length() - 3) {\n        return true;\n    }\n    return false;",
    "    int count = 0;\n    for(int i = 0; i < num.size(); i++) {\n        if(num[i] == '.') {\n            count++;\n        }\n    }\n    if(count > 1) {\n        return false;\n    }\n    int index = num.find('.');\n    if(index == std::string::npos) {\n        return true;\n    }\n    if(num.size() - index - 1 > 2) {\n        return false;\n    }\n    return true;",
    "    int i = 0;\n    if (num[i] == '-') {\n        i++;\n    }\n    int count = 0;\n    for (; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n        if (count > 1) {\n            return false;\n        }\n        if (num[i] == '.') {\n            continue;\n        }\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int count = 0;\n    for (int i = 0; i < num.length(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n    }\n    if (count > 1) {\n        return false;\n    }\n    if (count == 1) {\n        int index = num.find('.');\n        if (num.length() - index > 3) {\n            return false;\n        }\n    }\n    return true;",
    "    int count = 0;\n    for(int i = 0; i < num.size(); i++) {\n        if(num[i] == '.') {\n            count++;\n        }\n    }\n    if(count > 1) {\n        return false;\n    }\n    int count_after_decimal = 0;\n    for(int i = num.size() - 1; i >= 0; i--) {\n        if(num[i] == '.') {\n            break;\n        }\n        count_after_decimal++;\n    }\n    if(count_after_decimal > 2) {\n        return false;\n    }\n    return true;",
    "    int i = 0;\n    if (num[i] == '-') {\n        i++;\n    }\n    int count = 0;\n    for (; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n        if (count > 1) {\n            return false;\n        }\n        if (num[i] == '.') {\n            continue;\n        }\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int count = 0;\n    for(int i = 0; i < num.length(); i++) {\n        if(num[i] == '.') {\n            count++;\n        }\n    }\n    if(count > 1) {\n        return false;\n    }\n    if(count == 1) {\n        int index = num.find('.');\n        if(index == num.length() - 1) {\n            return false;\n        }\n        if(index == num.length() - 3) {\n            return true;\n        }\n        return false;\n    }\n    return true;",
    "    int count = 0;\n    for(int i = 0; i < num.length(); i++) {\n        if(num[i] == '.') {\n            count++;\n        }\n    }\n    if(count > 1) {\n        return false;\n    }\n    if(count == 1) {\n        int index = num.find('.');\n        if(index + 3 < num.length()) {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    if(num[0] == '-') {\n        i++;\n    }\n    int count = 0;\n    for(; i < num.size(); i++) {\n        if(num[i] == '.') {\n            count++;\n        }\n        if(count > 1) {\n            return false;\n        }\n        if(!isdigit(num[i]) && num[i] != '.') {\n            return false;\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    int dot_pos = num.find('.');\n    if(dot_pos + 3 < num.size()) {\n        return false;\n    }\n    return true;",
    "    int i = 0;\n    if (num[0] == '-') {\n        i++;\n    }\n    int count = 0;\n    for (; i < num.size(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n        if (count > 1) {\n            return false;\n        }\n        if (num[i] == '.') {\n            continue;\n        }\n        if (num[i] < '0' || num[i] > '9') {\n            return false;\n        }\n    }\n    return true;",
    "    int count = 0;\n    if (num.length() == 0) {\n        return false;\n    }\n    for (int i = 0; i < num.length(); i++) {\n        if (num[i] == '.') {\n            count++;\n        }\n    }\n    if (count > 1) {\n        return false;\n    }\n    for (int i = 0; i < num.length(); i++) {\n        if (num[i] == '.') {\n            if (num.length() - i > 3) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    int i = 0;\n    if (num[0] == '-') {\n        i++;\n    }\n    int count = 0;\n    while (i < num.size()) {\n        if (num[i] == '.') {\n            count++;\n        }\n        i++;\n    }\n    if (count > 1) {\n        return false;\n    }\n    int dot_index = num.find('.');\n    if (dot_index == std::string::npos) {\n        return true;\n    }\n    if (dot_index + 3 < num.size()) {\n        return false;\n    }\n    return true;"
  ]
}
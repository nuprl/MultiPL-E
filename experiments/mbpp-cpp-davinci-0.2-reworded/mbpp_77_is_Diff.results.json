{
  "name": "mbpp_77_is_Diff",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n) {\n        if (n & 1)\n            odd++;\n        else\n            even++;\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmp2wiv16oh: /tmp/tmp2wiv16oh.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while(n) {\n        if(i%2 == 0) {\n            even_sum += n%10;\n        }\n        else {\n            odd_sum += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1)\n            odd += 1;\n        else\n            even += 1;\n        n = n >> 1;\n    }\n    return (abs(odd - even) % 3 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpul9uvjjr: /tmp/tmpul9uvjjr.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n & 1) {\n            odd_digits += n % 10;\n        } else {\n            even_digits += n % 10;\n        }\n        n = n / 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517261,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n&1) {\n            odd += n%10;\n        } else {\n            even += n%10;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpofe9mw4n: /tmp/tmpofe9mw4n.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n<0)\n        n=-n;\n    if(n==0 || n==11)\n        return true;\n    if(n<10)\n        return false;\n    return is_Diff((n/10)-(n%10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int i = 0;\n    while(n != 0) {\n        if(i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpa9j3hxw2: /tmp/tmpa9j3hxw2.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n\tint even = 0, odd = 0;\n\twhile (n) {\n\t\tif (n % 2 == 0) {\n\t\t\teven += n % 10;\n\t\t}\n\t\telse {\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpb5822w7d: /tmp/tmpb5822w7d.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while(n) {\n        if(i%2 == 0) {\n            sum_even += n%10;\n        } else {\n            sum_odd += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(sum_even - sum_odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        if(n) {\n            odd_sum += n%10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while(n) {\n        if(n & 1) {\n            odd += n % 10;\n        } else {\n            even += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmpj38vk5v4: /tmp/tmpj38vk5v4.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n/=10;\n        if(n) {\n            odd_sum += n%10;\n            n/=10;\n        }\n    }\n    return (abs(even_sum - odd_sum)%11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpa9j3hxw2: /tmp/tmpa9j3hxw2.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0) {\n        n = -n;\n    }\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while(n) {\n        if(n & 1) {\n            odd_digits += (n % 10);\n        }\n        else {\n            even_digits += (n % 10);\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while(n != 0) {\n        if(count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        count++;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) n = -n;\n    if (n == 0 || n == 11) return true;\n    if (n < 10) return false;\n    return is_Diff((n / 10) - (2 * (n % 10)));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmphlchle38: /tmp/tmphlchle38.cpp:13: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0)\n        n = -n;\n    if(n == 0 || n == 11)\n        return true;\n    if(n < 10)\n        return false;\n    return is_Diff((n/10 - n%10) / 9);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmpasdtusr9: /tmp/tmpasdtusr9.cpp:15: int main(): Assertion `candidate((12345)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(odd - even) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmpr6myy2f8: /tmp/tmpr6myy2f8.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0, even_digits = 0;\n    while (n) {\n        if (n & 1)\n            odd_digits += n % 10;\n        else\n            even_digits += n % 10;\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmpsnsm3eun: /tmp/tmpsnsm3eun.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0, even_digits = 0;\n    while (n) {\n        if (n % 2 == 0)\n            even_digits += n % 10;\n        else\n            odd_digits += n % 10;\n        n /= 10;\n    }\n    return (abs(odd_digits - even_digits) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmpcpw612xm: /tmp/tmpcpw612xm.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n > 0) {\n        odd_digits += n % 10;\n        n /= 10;\n        even_digits += n % 10;\n        n /= 10;\n    }\n    return (odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0, sum_odd = 0;\n    while (n) {\n        sum_even += n % 10;\n        n /= 10;\n        sum_odd += n % 10;\n        n /= 10;\n    }\n    return abs(sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1)\n            odd += 1;\n        else\n            even += 1;\n        n >>= 1;\n    }\n    return abs(even - odd) % 3 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmp2awpk1fp: /tmp/tmp2awpk1fp.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while(n) {\n        if(n&1) {\n            odd_digits += n%10;\n        } else {\n            even_digits += n%10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmprzpdtn3m: /tmp/tmprzpdtn3m.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum_even = 0, sum_odd = 0;\n    while (n) {\n        sum_even += n % 10;\n        n /= 10;\n        sum_odd += n % 10;\n        n /= 10;\n    }\n    return abs(sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (2 * (n % 10)));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmpnjorkb5w: /tmp/tmpnjorkb5w.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n/=10;\n        odd_sum += n%10;\n        n/=10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n<0)\n        n=-n;\n    if(n==0)\n        return true;\n    if(n==1)\n        return false;\n    int even=0,odd=0;\n    while(n) {\n        if(n&1)\n            odd++;\n        n=n>>1;\n        if(n&1)\n            even++;\n        n=n>>1;\n    }\n    return is_Diff(abs(odd-even));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmpifdt6x39: /tmp/tmpifdt6x39.cpp:24: int main(): Assertion `candidate((12345)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1)\n            odd += n % 10;\n        else\n            even += n % 10;\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmphf7h9efi: /tmp/tmphf7h9efi.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    long odd_digits_sum = 0;\n    long even_digits_sum = 0;\n    while (n) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_digits_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits_sum - even_digits_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n != 0) {\n        int digit = n % 10;\n        if (digit % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmpdvutowec: /tmp/tmpdvutowec.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        if(n) {\n            odd_sum += n%10;\n            n /= 10;\n        }\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    int i = 0;\n    while (n > 0) {\n        if (i % 2 == 0) {\n            even_digit_sum += n % 10;\n        } else {\n            odd_digit_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n<0)\n        n=-n;\n    if(n==0 || n==11)\n        return true;\n    if(n<10)\n        return false;\n    return is_Diff((n/10)-(n%10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n) {\n        if (n & 1) {\n            odd++;\n        }\n        else {\n            even++;\n        }\n        n = n >> 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmpmf2co_m0: /tmp/tmpmf2co_m0.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while(n) {\n        if(n & 1)\n            odd += n % 10;\n        else\n            even += n % 10;\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmp3yuq2rfi: /tmp/tmp3yuq2rfi.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n) {\n        if (n & 1) {\n            odd += 1;\n        } else {\n            even += 1;\n        }\n        n = n >> 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmpoovfxwjh: /tmp/tmpoovfxwjh.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n != 0) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while(n) {\n        if(n & 1) {\n            odd++;\n        }\n        else {\n            even++;\n        }\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmp4eq7jcbb: /tmp/tmp4eq7jcbb.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpa9j3hxw2: /tmp/tmpa9j3hxw2.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0, odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        int rem = n % 10;\n        if (rem % 2 == 0) {\n            even += rem;\n        } else {\n            odd += rem;\n        }\n        n /= 10;\n    }\n    if (abs(even - odd) % 11 == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmpp_snugue: /tmp/tmpp_snugue.cpp:25: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n&1) {\n            odd += n%10;\n        } else {\n            even += n%10;\n        }\n        n /= 10;\n    }\n    return abs(even-odd)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmpa851hm1r: /tmp/tmpa851hm1r.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        int rem = n % 10;\n        if (rem % 2 == 0) {\n            even_sum += rem;\n        } else {\n            odd_sum += rem;\n        }\n        n = n / 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "tmpzn6bt6_e: /tmp/tmpzn6bt6_e.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpa9j3hxw2: /tmp/tmpa9j3hxw2.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1) odd += 1;\n        else even += 1;\n        n >>= 1;\n    }\n    return (abs(odd - even) % 3 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmps6p408zm: /tmp/tmps6p408zm.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n != 0) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n = n / 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0) n = -n;\n    if(n == 0 || n == 11) return true;\n    if(n < 10) return false;\n    return is_Diff((n/10 - n%10*2)%11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmp3m7n_9pj: /tmp/tmp3m7n_9pj.cpp:13: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n & 1) {\n            odd += n % 10;\n        } else {\n            even += n % 10;\n        }\n        n /= 10;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmp7kk_98k0: /tmp/tmp7kk_98k0.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while(n) {\n        if(n%2 == 0) {\n            even += n%10;\n        } else {\n            odd += n%10;\n        }\n        n /= 10;\n    }\n    return abs(odd-even)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmpiz9zlwxu: /tmp/tmpiz9zlwxu.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n) {\n        if (n & 1) {\n            odd++;\n        } else {\n            even++;\n        }\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmp_gaso56y: /tmp/tmp_gaso56y.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while(n) {\n        if(n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmpdhzmimmp: /tmp/tmpdhzmimmp.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n != 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmpb1b_htoz: /tmp/tmpb1b_htoz.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (2 * (n % 10)));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmpcvn6f26q: /tmp/tmpcvn6f26q.cpp:19: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        int rem = n%10;\n        if(rem%2 == 0) {\n            even_sum += rem;\n        }\n        else {\n            odd_sum += rem;\n        }\n        n /= 10;\n    }\n    if(abs(odd_sum-even_sum)%11 == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "tmplg4oqbp5: /tmp/tmplg4oqbp5.cpp:25: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0;\n    long even_sum = 0;\n    while (n != 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum=0;\n    int odd_sum=0;\n    while(n!=0) {\n        even_sum+=n%10;\n        n/=10;\n        odd_sum+=n%10;\n        n/=10;\n    }\n    return abs(even_sum-odd_sum)%11==0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        count++;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        if(n) {\n            even_sum += n%10;\n            n /= 10;\n        }\n    }\n    return (odd_sum - even_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmp45c6_jsc: /tmp/tmp45c6_jsc.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n > 0) {\n        if (n % 2 == 0)\n            even += n % 10;\n        else\n            odd += n % 10;\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmptxrdn4vg: /tmp/tmptxrdn4vg.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n<0) n=-n;\n    if(n==0) return true;\n    if(n==1) return false;\n    long odd_digits=0,even_digits=0;\n    while(n>0) {\n        if(n%2==0) even_digits+=n%10;\n        else odd_digits+=n%10;\n        n/=10;\n    }\n    return is_Diff(abs(odd_digits-even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122717,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        int r = n % 10;\n        if (r % 2 == 0) {\n            even_sum += r;\n        } else {\n            odd_sum += r;\n        }\n        n = n / 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmp86ggxcqc: /tmp/tmp86ggxcqc.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1)\n            odd += 1;\n        else\n            even += 1;\n        n >>= 1;\n    }\n    return abs(odd - even) % 3 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmppwgsxz1q: /tmp/tmppwgsxz1q.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while(n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n\n    long odd_digits_sum = 0;\n    long even_digits_sum = 0;\n\n    while (n) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n\n        if (n) {\n            even_digits_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return is_Diff(abs(odd_digits_sum - even_digits_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while(n) {\n        if(n & 1) {\n            odd++;\n        }\n        else {\n            even++;\n        }\n        n = n >> 1;\n    }\n    return (odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmp2_ah5l0z: /tmp/tmp2_ah5l0z.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmpaylbi8aj: /tmp/tmpaylbi8aj.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        even += n % 10;\n        n /= 10;\n        odd += n % 10;\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n = n/10;\n        odd_sum += n%10;\n        n = n/10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while (n > 0) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while(n) {\n        if(count%2 == 0) {\n            even_sum += n%10;\n        } else {\n            odd_sum += n%10;\n        }\n        count++;\n        n /= 10;\n    }\n    return (even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum)%11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(odd_digits - even_digits) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmp8xl5t55a: /tmp/tmp8xl5t55a.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0, odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "tmpa9j3hxw2: /tmp/tmpa9j3hxw2.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmpaylbi8aj: /tmp/tmpaylbi8aj.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while (n) {\n        if (i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0, even = 0;\n    while (n) {\n        if (n % 2) {\n            odd += n % 10;\n            n /= 10;\n        } else {\n            even += n % 10;\n            n /= 10;\n        }\n    }\n    return (abs(odd - even) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "tmpkn7assz9: /tmp/tmpkn7assz9.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n) {\n        if (n & 1) {\n            odd += n % 10;\n        } else {\n            even += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "tmp0xp_nqnd: /tmp/tmp0xp_nqnd.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while(n > 0) {\n        if(n % 2 == 0) {\n            even += n % 10;\n        }\n        else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "tmp4btvnxpm: /tmp/tmp4btvnxpm.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    while (n) {\n        odd_digit_sum += n % 10;\n        n /= 10;\n        if (n == 0) {\n            break;\n        }\n        even_digit_sum += n % 10;\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n\tint sum_even = 0;\n\tint sum_odd = 0;\n\tint i = 0;\n\twhile (n > 0) {\n\t\tif (i % 2 == 0) {\n\t\t\tsum_even += n % 10;\n\t\t}\n\t\telse {\n\t\t\tsum_odd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t\ti++;\n\t}\n\treturn (sum_even - sum_odd) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while(n > 0) {\n        if(n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "tmpszhgq1pj: /tmp/tmpszhgq1pj.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n) {\n        if (n & 1) {\n            odd += 1;\n        }\n        n = n >> 1;\n        if (n & 1) {\n            even += 1;\n        }\n        n = n >> 1;\n    }\n    return abs(even - odd) % 3 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "tmpz6iz5g7b: /tmp/tmpz6iz5g7b.cpp:21: int main(): Assertion `candidate((12345)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1)\n            odd += 1;\n        else\n            even += 1;\n        n >>= 1;\n    }\n    return abs(even - odd) % 3 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmp2awpk1fp: /tmp/tmp2awpk1fp.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n & 1) {\n            odd_digits += n % 10;\n        } else {\n            even_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n\tint odd_sum = 0, even_sum = 0;\n\twhile (n) {\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits_sum = 0;\n    int even_digits_sum = 0;\n    while (n > 0) {\n        odd_digits_sum += n % 10;\n        n /= 10;\n        even_digits_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_digits_sum - even_digits_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        if(n) {\n            odd_sum += n%10;\n            n /= 10;\n        }\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) n = -n;\n    if (n == 0 || n == 11) return true;\n    if (n < 10) return false;\n    return is_Diff((n/10 - n%10*2)%11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "tmpcshi97bo: /tmp/tmpcshi97bo.cpp:13: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0) {\n        n = -n;\n    }\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while(n) {\n        if(n & 1) {\n            odd_digits += n % 10;\n        }\n        else {\n            even_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122719,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        if(n) {\n            odd_sum += n%10;\n            n /= 10;\n        }\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits_sum = 0;\n    int even_digits_sum = 0;\n    while (n) {\n        even_digits_sum += n % 10;\n        n /= 10;\n        odd_digits_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_digits_sum - even_digits_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0, sum2 = 0;\n    while (n) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return abs(sum1 - sum2) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (2 * (n % 10)));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "tmpnjorkb5w: /tmp/tmpnjorkb5w.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_digits_sum = 0;\n    long even_digits_sum = 0;\n    while(n) {\n        odd_digits_sum += n%10;\n        n /= 10;\n        even_digits_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_digits_sum - even_digits_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (2 * (n - (n / 10 * 10))));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "tmpovcahp8n: /tmp/tmpovcahp8n.cpp:16: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    while(n) {\n        odd_sum += n%10;\n        n /= 10;\n        even_sum += n%10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        int digit = n % 10;\n        if (digit % 2 == 0) {\n            even_sum += digit;\n        } else {\n            odd_sum += digit;\n        }\n        n = n / 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122704,
      "stdout": "",
      "stderr": "tmp7h48nhja: /tmp/tmp7h48nhja.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long odd_digits = 0, even_digits = 0;\n    while(n) {\n        odd_digits += n % 10;\n        n /= 10;\n        even_digits += n % 10;\n        n /= 10;\n    }\n    return (odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0, odd = 0;\n    while(n) {\n        if(n&1)\n            odd++;\n        else\n            even++;\n        n >>= 1;\n    }\n    return abs(odd - even) % 3 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "tmpzhigumcq: /tmp/tmpzhigumcq.cpp:18: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0, odd_sum = 0;\n    while(n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0, sum2 = 0;\n    while (n) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return (sum1 - sum2) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while(n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n < 0) {\n        n = -n;\n    }\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long odd_digit_sum = 0;\n    long even_digit_sum = 0;\n    long i = 1;\n    while(n) {\n        if(i % 2 == 1) {\n            odd_digit_sum += n % 10;\n        }\n        else {\n            even_digit_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return is_Diff(abs(odd_digit_sum - even_digit_sum));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122721,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if(n<10) {\n        return false;\n    }\n    long odd=0;\n    long even=0;\n    while(n>0) {\n        odd+=n%10;\n        n/=10;\n        even+=n%10;\n        n/=10;\n    }\n    return is_Diff(abs(odd-even));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "tmpo1l3q6nw: /tmp/tmpo1l3q6nw.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while(n) {\n        if(n&1) {\n            odd++;\n        }\n        else {\n            even++;\n        }\n        n >>= 1;\n    }\n    return (odd - even)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "tmp9nfl7qpq: /tmp/tmp9nfl7qpq.cpp:21: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd = 0;\n    int even = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd - even) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "tmpaakvuc5m: /tmp/tmpaakvuc5m.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) n = -n;\n    if (n == 0 || n == 11) return true;\n    if (n < 10) return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "tmp9hxm5w1_: /tmp/tmp9hxm5w1_.cpp:13: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0;\n    int even_sum = 0;\n    int count = 0;\n    while(n) {\n        if(count % 2 == 0) {\n            even_sum += n % 10;\n        }\n        else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_sum = 0, even_sum = 0;\n    while (n) {\n        odd_sum += n % 10;\n        n /= 10;\n        even_sum += n % 10;\n        n /= 10;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n != 0) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even_digits += n % 10;\n        } else {\n            odd_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmpaylbi8aj: /tmp/tmpaylbi8aj.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while(n) {\n        if(i%2 == 0) {\n            even_sum += n%10;\n        }\n        else {\n            odd_sum += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return (even_sum - odd_sum)%11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while(n) {\n        if(n & 1) {\n            odd_digits += n % 10;\n        } else {\n            even_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return abs(odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "tmpxrp5sznm: /tmp/tmpxrp5sznm.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n\tlong even_sum = 0;\n\tlong odd_sum = 0;\n\twhile (n) {\n\t\todd_sum += n % 10;\n\t\tn /= 10;\n\t\teven_sum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    bool is_even = true;\n    while (n) {\n        if (is_even) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        is_even = !is_even;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int odd_digits = 0;\n    int even_digits = 0;\n    while (n != 0) {\n        if (n & 1) {\n            odd_digits += n % 10;\n        } else {\n            even_digits += n % 10;\n        }\n        n /= 10;\n    }\n    return (odd_digits - even_digits) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "tmpdu6yyqvu: /tmp/tmpdu6yyqvu.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even = 0;\n    int odd = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            even += n % 10;\n        } else {\n            odd += n % 10;\n        }\n        n /= 10;\n    }\n    return (abs(even - odd) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "tmp45c6_jsc: /tmp/tmp45c6_jsc.cpp:20: int main(): Assertion `candidate((1212112)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1665517246,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int sum1 = 0, sum2 = 0;\n    while (n) {\n        sum1 += n % 10;\n        n /= 10;\n        sum2 += n % 10;\n        n /= 10;\n    }\n    return (abs(sum1 - sum2) % 11 == 0);\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122708,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    long even_sum = 0;\n    long odd_sum = 0;\n    while (n != 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n    int even_sum = 0;\n    int odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;\n}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
      "timestamp": 1666122697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to sort a given vector of strings of numbers numerically. https://www.geeksforgeeks.org/cppthon-sort-numeric-strings-in-a-vector/\nstd::vector<long> sort_numeric_strings(std::vector<std::string> nums_str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = sort_numeric_strings;\n    assert(candidate((std::vector<std::string>({(std::string)\"4\", (std::string)\"12\", (std::string)\"45\", (std::string)\"7\", (std::string)\"0\", (std::string)\"100\", (std::string)\"200\", (std::string)\"-12\", (std::string)\"-500\"}))) == (std::vector<long>({(long)-500, (long)-12, (long)0, (long)4, (long)7, (long)12, (long)45, (long)100, (long)200})));\n    assert(candidate((std::vector<std::string>({(std::string)\"2\", (std::string)\"3\", (std::string)\"8\", (std::string)\"4\", (std::string)\"7\", (std::string)\"9\", (std::string)\"8\", (std::string)\"2\", (std::string)\"6\", (std::string)\"5\", (std::string)\"1\", (std::string)\"6\", (std::string)\"1\", (std::string)\"2\", (std::string)\"3\", (std::string)\"4\", (std::string)\"6\", (std::string)\"9\", (std::string)\"1\", (std::string)\"2\"}))) == (std::vector<long>({(long)1, (long)1, (long)1, (long)2, (long)2, (long)2, (long)2, (long)3, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)8, (long)9, (long)9})));\n    assert(candidate((std::vector<std::string>({(std::string)\"1\", (std::string)\"3\", (std::string)\"5\", (std::string)\"7\", (std::string)\"1\", (std::string)\"3\", (std::string)\"13\", (std::string)\"15\", (std::string)\"17\", (std::string)\"5\", (std::string)\"7 \", (std::string)\"9\", (std::string)\"1\", (std::string)\"11\"}))) == (std::vector<long>({(long)1, (long)1, (long)1, (long)3, (long)3, (long)5, (long)5, (long)7, (long)7, (long)9, (long)11, (long)13, (long)15, (long)17})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num: nums_str) {\n        nums.push_back(std::stol(num));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto s: nums_str) {\n        nums.push_back(std::stol(s));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto s: nums_str) {\n        nums.push_back(std::stol(s));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto s : nums_str) {\n        nums.push_back(std::stol(s));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto str : nums_str) {\n        nums.push_back(std::stol(str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(int i=0;i<nums_str.size();i++) {\n        nums.push_back(std::stol(nums_str[i]));\n    }\n    std::sort(nums.begin(),nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num : nums_str) {\n        nums.push_back(std::stol(num));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num : nums_str) {\n        nums.push_back(std::stol(num));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto str : nums_str) {\n        nums.push_back(std::stol(str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto i: nums_str) {\n        nums.push_back(std::stol(i));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "  std::vector<long> nums;\n  for (auto num_str : nums_str) {\n    nums.push_back(std::stol(num_str));\n  }\n  std::sort(nums.begin(), nums.end());\n  return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto &num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "\tstd::vector<long> nums;\n\tfor (auto num : nums_str) {\n\t\tnums.push_back(std::stol(num));\n\t}\n\tstd::sort(nums.begin(), nums.end());\n\treturn nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto &num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums_long;\n    for (auto num_str : nums_str) {\n        nums_long.push_back(std::stol(num_str));\n    }\n    std::sort(nums_long.begin(), nums_long.end());\n    return nums_long;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num: nums_str) {\n        nums.push_back(std::stol(num));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto &num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto &num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto s : nums_str) {\n        nums.push_back(std::stol(s));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto &num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums_int;\n    for (auto num : nums_str) {\n        nums_int.push_back(std::stol(num));\n    }\n    std::sort(nums_int.begin(), nums_int.end());\n    return nums_int;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num : nums_str) {\n        nums.push_back(stol(num));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto str : nums_str) {\n        nums.push_back(std::stol(str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto str : nums_str) {\n        nums.push_back(std::stol(str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums_int;\n    for (auto num : nums_str) {\n        nums_int.push_back(std::stol(num));\n    }\n    std::sort(nums_int.begin(), nums_int.end());\n    return nums_int;",
    "    std::vector<long> nums;\n    for(int i = 0; i < nums_str.size(); i++) {\n        nums.push_back(std::stol(nums_str[i]));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (std::string num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num : nums_str) {\n        nums.push_back(std::stol(num));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(int i = 0; i < nums_str.size(); i++) {\n        nums.push_back(std::stol(nums_str[i]));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto i : nums_str) {\n        nums.push_back(std::stol(i));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str: nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for(auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto str : nums_str) {\n        nums.push_back(std::stol(str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (std::string str : nums_str) {\n        nums.push_back(std::stol(str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;",
    "    std::vector<long> nums;\n    for (auto num_str : nums_str) {\n        nums.push_back(std::stol(num_str));\n    }\n    std::sort(nums.begin(), nums.end());\n    return nums;"
  ]
}
{
  "name": "mbpp_734_sum_Of_Subarray_Prod",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find sum of products of all possible subvectors of a given vector. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subvectors/\nlong sum_Of_Subarray_Prod(std::vector<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_734_sum_Of_Subarray_Prod.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = sum_Of_Subarray_Prod;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == (20));\n    assert(candidate((std::vector<long>({(long)1, (long)2}))) == (5));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4}))) == (84));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0;\n    long n = arr.size();\n    for (long i = 0; i < n; i++) {\n        for (long j = i; j < n; j++) {\n            long prod = 1;\n            for (long k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for (int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long n = arr.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = i; j < n; j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for (int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i=0; i<arr.size(); i++) {\n        for(int j=i; j<arr.size(); j++) {\n            long prod = 1;\n            for(int k=i; k<=j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "\tlong sum = 0;\n\tfor(int i = 0; i < arr.size(); i++) {\n\t\tfor(int j = i; j < arr.size(); j++) {\n\t\t\tlong prod = 1;\n\t\t\tfor(int k = i; k <= j; k++) {\n\t\t\t\tprod *= arr[k];\n\t\t\t}\n\t\t\tsum += prod;\n\t\t}\n\t}\n\treturn sum;",
    "    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for (int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long n = arr.size();\n    for(long i = 0; i < n; i++) {\n        long prod = 1;\n        for(long j = i; j < n; j++) {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        long prod = 1;\n        for(int j = i; j < arr.size(); j++) {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for (int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for (int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for(int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        long prod = 1;\n        for(int j = i; j < arr.size(); j++) {\n            prod *= arr[j];\n            sum += prod;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i; j < arr.size(); j++) {\n            long prod = 1;\n            for (int k = i; k <= j; k++) {\n                prod *= arr[k];\n            }\n            sum += prod;\n        }\n    }\n    return sum;"
  ]
}
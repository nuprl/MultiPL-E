{
  "name": "mbpp_557_toggle_string",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += (char)(string[i] + 32);\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            result += (char)(string[i] - 32);\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i=0;i<string.size();i++) {\n        if(string[i]>='a' && string[i]<='z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i]>='A' && string[i]<='Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else {\n      string[i] = string[i] + 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result;\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i=0; i<string.length(); i++) {\n        if(string[i]>=65 && string[i]<=90) {\n            string[i] = string[i] + 32;\n        } else if(string[i]>=97 && string[i]<=122) {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i] + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] += 32;\n        } else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] -= 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i=0;i<string.length();i++) {\n        if(string[i]>='a' && string[i]<='z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i]>='A' && string[i]<='Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += (char)(string[i] + 32);\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            result += (char)(string[i] - 32);\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    int i = 0;\n    while(string[i] != '\\0') {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n        i++;\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += (char)(string[i] + 32);\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            result += (char)(string[i] - 32);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] -= 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] += 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n\tfor(int i = 0; i < string.length(); i++) {\n\t\tif(string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i] + 32;\n\t\t}\n\t\telse if(string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for(int i = 0; i < string.length(); i++) {\n    if(string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else if(string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i=0;i<string.length();i++) {\n        if(string[i]>='a' && string[i]<='z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i]>='A' && string[i]<='Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else {\n      string[i] = string[i] + 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i] + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n\tfor(int i = 0; i < string.length(); i++) {\n\t\tif(string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 'a' + 'A';\n\t\t} else if(string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i] - 'A' + 'a';\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for(int i = 0; i < string.length(); i++) {\n    if(string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 'a' + 'A';\n    } else if(string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] - 'A' + 'a';\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i] >= 'a' && string[i] <= 'z') {\n\t\t\tstring[i] = string[i] - 32;\n\t\t}\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tstring[i] = string[i] + 32;\n\t\t}\n\t}\n\treturn string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i=0;i<string.length();i++) {\n        if(string[i]>='a' && string[i]<='z') {\n            string[i] = string[i] - 32;\n        } else if(string[i]>='A' && string[i]<='Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  std::string result = \"\";\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      result += string[i] - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      result += string[i] + 32;\n    } else {\n      result += string[i];\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    } else if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 'a' + 'A';\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] - 'A' + 'a';\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] >= 'a' && string[i] <= 'z') {\n      string[i] = string[i] - 32;\n    } else if (string[i] >= 'A' && string[i] <= 'Z') {\n      string[i] = string[i] + 32;\n    }\n  }\n  return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.size(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i=0;i<string.size();i++) {\n        if(string[i]>='a' && string[i]<='z') {\n            string[i] = string[i] - 32;\n        } else if(string[i]>='A' && string[i]<='Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        } else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            result += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            result += string[i] + 32;\n        } else {\n            result += string[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string result;\n    for (char c : string) {\n        if (isupper(c)) {\n            result += tolower(c);\n        } else {\n            result += toupper(c);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    std::string toggled_string = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            toggled_string += string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            toggled_string += string[i] + 32;\n        } else {\n            toggled_string += string[i];\n        }\n    }\n    return toggled_string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123839,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        } else if (string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1665509738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i = 0; i < string.length(); i++) {\n        if(string[i] >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z') {\n            string[i] = string[i] - 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to toggle the case of all characters in a string.\nstd::string toggle_string(std::string string) {\n    for(int i=0;i<string.length();i++) {\n        if(string[i]>='a' && string[i]<='z') {\n            string[i] = string[i] - 32;\n        }\n        else if(string[i]>='A' && string[i]<='Z') {\n            string[i] = string[i] + 32;\n        }\n    }\n    return string;\n}\nint main() {\n    auto candidate = toggle_string;\n    assert(candidate((\"Python\")) == (\"pYTHON\"));\n    assert(candidate((\"Pangram\")) == (\"pANGRAM\"));\n    assert(candidate((\"LIttLE\")) == (\"liTTle\"));\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
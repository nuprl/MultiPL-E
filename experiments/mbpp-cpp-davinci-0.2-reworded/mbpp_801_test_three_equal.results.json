{
  "name": "mbpp_801_test_three_equal",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  long count = 0;\n  if (x == y) {\n    count++;\n  }\n  if (y == z) {\n    count++;\n  }\n  if (z == x) {\n    count++;\n  }\n  return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmp5emu0n4y: /tmp/tmp5emu0n4y.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    long count = 0;\n    if (x == y) {\n        count++;\n    }\n    if (y == z) {\n        count++;\n    }\n    if (z == x) {\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmplrl51rrw: /tmp/tmplrl51rrw.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || x == z || y == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    long count = 0;\n    if (x == y) {\n        count++;\n    }\n    if (y == z) {\n        count++;\n    }\n    if (z == x) {\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmplrl51rrw: /tmp/tmplrl51rrw.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n\tif (x == y && y == z) {\n\t\treturn 3;\n\t}\n\telse if (x == y || y == z || x == z) {\n\t\treturn 2;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) return 3;\n    if (x == y || y == z || x == z) return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z)\n    return 3;\n  else if (x == y || y == z || z == x)\n    return 2;\n  else\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  } else if (x == y || y == z || x == z) {\n    return 2;\n  } else {\n    return 0;\n  }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    long count = 0;\n    if (x == y) {\n        count++;\n    }\n    if (y == z) {\n        count++;\n    }\n    if (z == x) {\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmplrl51rrw: /tmp/tmplrl51rrw.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z)\n    return 3;\n  else if (x == y || y == z || x == z)\n    return 2;\n  else\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z)\n    return 3;\n  else if (x == y || y == z || z == x)\n    return 2;\n  else\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  long count = 0;\n  if (x == y) {\n    count++;\n  }\n  if (y == z) {\n    count++;\n  }\n  if (z == x) {\n    count++;\n  }\n  return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmp5emu0n4y: /tmp/tmp5emu0n4y.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  } else if (x == y || y == z || x == z) {\n    return 2;\n  } else {\n    return 0;\n  }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  long count = 0;\n  if (x == y) {\n    count++;\n  }\n  if (y == z) {\n    count++;\n  }\n  if (z == x) {\n    count++;\n  }\n  return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmp5emu0n4y: /tmp/tmp5emu0n4y.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || x == z)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z)\n    return 3;\n  if (x == y || y == z || z == x)\n    return 2;\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || x == z) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  else if (x == y || y == z || x == z) {\n    return 2;\n  }\n  else {\n    return 0;\n  }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123405,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    } else if (x == y || y == z || x == z) {\n        return 2;\n    } else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  long count = 0;\n  if (x == y) {\n    count = count + 1;\n  }\n  if (y == z) {\n    count = count + 1;\n  }\n  if (z == x) {\n    count = count + 1;\n  }\n  return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "tmp8_vpgoi4: /tmp/tmp8_vpgoi4.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && x == z) {\n        return 3;\n    }\n    if (x == y || x == z || y == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || x == z)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    long count = 0;\n    if (x == y) {\n        count++;\n    }\n    if (y == z) {\n        count++;\n    }\n    if (z == x) {\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmplrl51rrw: /tmp/tmplrl51rrw.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z)\n    return 3;\n  if (x == y || y == z || z == x)\n    return 2;\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    else if (x == y || y == z || z == x) {\n        return 2;\n    }\n    else {\n        return 0;\n    }\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    long count = 0;\n    if (x == y) {\n        count++;\n    }\n    if (y == z) {\n        count++;\n    }\n    if (z == x) {\n        count++;\n    }\n    return count;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "tmplrl51rrw: /tmp/tmplrl51rrw.cpp:21: int main(): Assertion `candidate((1), (2), (2)) == (2)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || z == x)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z)\n    return 3;\n  if (x == y || y == z || z == x)\n    return 2;\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z)\n    return 3;\n  if (x == y || y == z || z == x)\n    return 2;\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x==y && y==z)\n    return 3;\n  if (x==y || y==z || x==z)\n    return 2;\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1666123404,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || z == x) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    if (x == y || y == z || z == x)\n        return 2;\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || z == x) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z)\n        return 3;\n    else if (x == y || y == z || x == z)\n        return 2;\n    else\n        return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n    if (x == y && y == z) {\n        return 3;\n    }\n    if (x == y || y == z || x == z) {\n        return 2;\n    }\n    return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of equal numbers from three given integers.\nlong test_three_equal(long x, long y, long z) {\n  if (x == y && y == z) {\n    return 3;\n  }\n  if (x == y || y == z || x == z) {\n    return 2;\n  }\n  return 0;\n}\nint main() {\n    auto candidate = test_three_equal;\n    assert(candidate((1), (1), (1)) == (3));\n    assert(candidate((-1), (-2), (-3)) == (0));\n    assert(candidate((1), (2), (2)) == (2));\n}\n",
      "timestamp": 1665510253,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_756_text_match_zero_one",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;",
    "    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;",
    "    std::regex b(\"a?b\");\n    return std::regex_match(text, b);",
    "    std::regex b(\"a+b\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;",
    "    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;",
    "\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b))\n\t\tmatch = true;\n\treturn match;",
    "    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;",
    "    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;",
    "    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;",
    "\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;",
    "\tbool match = false;\n\tstd::regex self_regex(\"ab?\");\n\tif (std::regex_match(text, self_regex)) {\n\t\tmatch = true;\n\t}\n\treturn match;",
    "    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;",
    "    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;",
    "    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;",
    "    std::regex b(\"ab?\");\n    return std::regex_match(text, b);",
    "    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;",
    "    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;",
    "    std::regex b(\"ab?\");\n    return std::regex_match(text, b);",
    "\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;",
    "    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;"
  ]
}
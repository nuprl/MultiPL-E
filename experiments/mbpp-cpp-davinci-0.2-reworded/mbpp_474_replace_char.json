{
  "name": "mbpp_474_replace_char",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace characters in a string.\nstd::string replace_char(std::string str1, std::string ch, std::string newch) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = replace_char;\n    assert(candidate((\"polygon\"), (\"y\"), (\"l\")) == (\"pollgon\"));\n    assert(candidate((\"character\"), (\"c\"), (\"a\")) == (\"aharaater\"));\n    assert(candidate((\"python\"), (\"l\"), (\"a\")) == (\"python\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string newstr;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            newstr += newch;\n        } else {\n            newstr += str1[i];\n        }\n    }\n    return newstr;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 = str2 + newch;\n        }\n        else {\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string str2 = \"\";\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            j++;\n            if(j == len1) {\n                str2 += newch;\n                j = 0;\n            }\n        } else {\n            str2 += str1[i];\n        }\n        i++;\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "  for (int i = 0; i < str1.size(); i++) {\n    if (str1[i] == ch[0]) {\n      str1[i] = newch[0];\n    }\n  }\n  return str1;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;"
  ]
}
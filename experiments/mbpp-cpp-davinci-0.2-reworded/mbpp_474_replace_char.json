{
  "name": "mbpp_474_replace_char",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace characters in a string.\nstd::string replace_char(std::string str1, std::string ch, std::string newch) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = replace_char;\n    assert(candidate((\"polygon\"), (\"y\"), (\"l\")) == (\"pollgon\"));\n    assert(candidate((\"character\"), (\"c\"), (\"a\")) == (\"aharaater\"));\n    assert(candidate((\"python\"), (\"l\"), (\"a\")) == (\"python\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string newstr;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            newstr += newch;\n        } else {\n            newstr += str1[i];\n        }\n    }\n    return newstr;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 = str2 + newch;\n        }\n        else {\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string str2 = \"\";\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            j++;\n            if(j == len1) {\n                str2 += newch;\n                j = 0;\n            }\n        } else {\n            str2 += str1[i];\n        }\n        i++;\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "  for (int i = 0; i < str1.size(); i++) {\n    if (str1[i] == ch[0]) {\n      str1[i] = newch[0];\n    }\n  }\n  return str1;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string newstr = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            newstr += newch;\n        } else {\n            newstr += str1[i];\n        }\n    }\n    return newstr;",
    "    std::string::size_type pos = 0;\n    while((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i, j, k;\n    for(i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            for(j = i, k = 0; j < i + len1 && k < len1; j++, k++) {\n                if(str1[j] != ch[k]) {\n                    break;\n                }\n            }\n            if(k == len1) {\n                str1.replace(i, len1, newch);\n            }\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.size(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string str2 = \"\";\n    while(i < len) {\n        j = 0;\n        k = 0;\n        while(j < len1 && k < len2) {\n            if(str1[i] == ch[j]) {\n                str2 += newch[k];\n                i++;\n                j++;\n                k++;\n            }\n            else {\n                str2 += str1[i];\n                i++;\n                j++;\n            }\n        }\n        while(j < len1) {\n            str2 += str1[i];\n            i++;\n            j++;\n        }\n        while(k < len2) {\n            str2 += newch[k];\n            k++;\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tint i = 0;\n\twhile (i < str1.length()) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;",
    "  std::string result;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] == ch[0]) {\n      result += newch;\n    }\n    else {\n      result += str1[i];\n    }\n  }\n  return result;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 = str2 + newch;\n        }\n        else {\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;",
    "\tint len = str1.length();\n\tint len1 = ch.length();\n\tint len2 = newch.length();\n\tint i = 0;\n\twhile (i < len) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr1.replace(i, len1, newch);\n\t\t\ti += len2;\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str1;",
    "    int len = str1.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string str2 = \"\";\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "\tstd::string str2;\n\tint i = 0;\n\twhile (i < str1.length()) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t\ti++;\n\t}\n\treturn str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while ((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = 0;\n    int count = 0;\n    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            i++;\n            j++;\n            if(j == len1) {\n                count++;\n                j = 0;\n            }\n        }\n        else {\n            j = 0;\n            i++;\n        }\n    }\n    std::string str2 = str1;\n    int newlen = len + count*(len2 - len1);\n    str2.resize(newlen);\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    while(k < len) {\n        if(str1[k] == ch[l]) {\n            k++;\n            l++;\n            if(l == len1) {\n                for(int i = 0; i < len2; i++) {\n                    str2[m] = newch[i];\n                    m++;\n                }\n                l = 0;\n            }\n        }\n        else {\n            str2[m] = str1[k];\n            m++;\n            k++;\n            l = 0;\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    std::string str2;\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            count++;\n            j++;\n        }\n        else {\n            count = 0;\n            j = 0;\n        }\n        if(count == len1) {\n            for(k = 0; k < len2; k++) {\n                str2 += newch[k];\n            }\n            count = 0;\n            j = 0;\n        }\n        else {\n            str2 += str1[i];\n        }\n        i++;\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    int count1 = 0;\n    int count2 = 0;\n    int count3 = 0;\n    int count4 = 0;\n    int count5 = 0;\n    int count6 = 0;\n    int count7 = 0;\n    int count8 = 0;\n    int count9 = 0;\n    int count10 = 0;\n    int count11 = 0;\n    int count12 = 0;\n    int count13 = 0;\n    int count14 = 0;\n    int count15 = 0;\n    int count16 = 0;\n    int count17 = 0;\n    int count18 = 0;\n    int count19 = 0;\n    int count20 = 0;\n    int count21 = 0;\n    int count22 = 0;\n    int count23 = 0;\n    int count24 = 0;\n    int count25 = 0;\n    int count26 = 0;\n    int count27 = 0;\n    int count28 = 0;\n    int count29 = 0;\n    int count30 = 0;\n    int count31 = 0;\n    int count32 = 0;\n    int count33 = 0;\n    int count34 = 0;\n    int count35 = 0;\n    int count36 = 0;\n    int count37 = 0;\n    int count38 = 0;\n    int count39 = 0;\n    int count40 = 0;\n    int count41 = 0;\n    int count42 = 0;\n    int count43 = 0;\n    int count44 = 0;\n    int count45 = 0;\n    int count46 = 0;\n    int count47 = 0;\n    int count48 = 0;\n    int count49 = 0;\n    int count50 = 0;\n    int count51 = 0;\n    int count52 = 0;\n    int count53 = 0;\n    int count54 = 0;\n    int count55 = 0;\n    int count56 = 0;\n    int count57",
    "    int len = str1.length();\n    std::string str2 = \"\";\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1.replace(i, len1, newch);\n            i += len2 - 1;\n            len = str1.length();\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1.replace(i, 1, newch);\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2.push_back(newch[0]);\n        }\n        else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tint i = 0;\n\twhile (i < str1.length()) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr1[i] = newch[0];\n\t\t}\n\t\ti++;\n\t}\n\treturn str1;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len1 = ch.length();\n    int len2 = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int count = 0;\n    for (i = 0; i < len; i++) {\n        if (str1[i] == ch[j]) {\n            j++;\n            count++;\n        }\n        else {\n            j = 0;\n            count = 0;\n        }\n        if (count == len1) {\n            for (k = 0; k < len2; k++) {\n                str1[i - len1 + 1 + k] = newch[k];\n            }\n            i = i - len1 + len2;\n            j = 0;\n            count = 0;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    int len_ch = ch.length();\n    int len_newch = newch.length();\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    std::string str2 = \"\";\n    while(i < len) {\n        if(str1[i] == ch[j]) {\n            j++;\n            if(j == len_ch) {\n                str2 += newch;\n                j = 0;\n                i = i - len_ch + 1;\n            }\n        } else {\n            str2 += str1[i];\n        }\n        i++;\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    int len = str1.length();\n    for(int i = 0; i < len; i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.size(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string::size_type pos = 0;\n    while ((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.length(), newch);\n        pos += newch.length();\n    }\n    return str1;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  int i = 0;\n  while (i < str1.length()) {\n    if (str1[i] == ch[0]) {\n      str1[i] = newch[0];\n    }\n    i++;\n  }\n  return str1;",
    "    int i = 0;\n    while (i < str1.length()) {\n        if (str1[i] == ch[0]) {\n            str1.replace(i, 1, newch);\n            i += newch.length();\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.size(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str += newch;\n        }\n        else {\n            str += str1[i];\n        }\n    }\n    return str;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string result = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            result += newch;\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n        i++;\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(str1[i] != '\\0') {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    while(i < str1.length()) {\n        if(str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n        i++;\n    }\n    return str1;",
    "    std::string::size_type pos = 0;\n    while((pos = str1.find(ch, pos)) != std::string::npos) {\n        str1.replace(pos, ch.size(), newch);\n        pos += newch.size();\n    }\n    return str1;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2 = \"\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.size();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string result = \"\";\n    for (int i = 0; i < str1.size(); i++) {\n        if (str1[i] == ch[0]) {\n            result += newch;\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 = str2 + newch;\n        }\n        else {\n            str2 = str2 + str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string result = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            result += newch;\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string::size_type i = 0;\n  while ( (i = str1.find(ch, i)) != std::string::npos) {\n    str1.replace(i, ch.length(), newch);\n    i += newch.length();\n  }\n  return str1;",
    "    std::string str2;\n    for(int i=0; i<str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "  std::string str2;\n  for (int i = 0; i < str1.length(); i++) {\n    if (str1[i] == ch[0]) {\n      str2 += newch;\n    } else {\n      str2 += str1[i];\n    }\n  }\n  return str2;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]==ch[0]) {\n            str2+=newch;\n        }\n        else {\n            str2+=str1[i];\n        }\n    }\n    return str2;",
    "\tstd::string str2;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == ch[0]) {\n\t\t\tstr2 += newch;\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    std::string str2;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int len = str1.length();\n    for (int i = 0; i < len; i++) {\n        if (str1[i] == ch[0]) {\n            str1[i] = newch[0];\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == ch[0]) {\n            str2 += newch;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;"
  ]
}
{
  "name": "mbpp_284_check_element",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes in a vector and element and checks whether all items in the vector are equal to the given element.\nbool check_element(std::any list, std::any element) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = check_element;\n    assert(candidate((std::any({(std::string)\"green\", (std::string)\"orange\", (std::string)\"black\", (std::string)\"white\"})), (std::any(\"blue\"))) == (false));\n    assert(candidate((std::any({(long)1, (long)2, (long)3, (long)4})), (std::any(7))) == (false));\n    assert(candidate((std::any({(std::string)\"green\", (std::string)\"green\", (std::string)\"green\", (std::string)\"green\"})), (std::any(\"green\"))) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i: list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i: list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i = 0; i < list.size(); i++) {\n        if(list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (auto i : list) {\n        if (i != element) {\n            return false;\n        }\n    }\n    return true;",
    "    for (int i = 0; i < list.size(); i++) {\n        if (list[i] != element) {\n            return false;\n        }\n    }\n    return true;"
  ]
}
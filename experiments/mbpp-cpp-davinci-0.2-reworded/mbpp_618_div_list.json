{
  "name": "mbpp_618_div_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to divide two vectors element wise.\nstd::vector<float> div_list(std::vector<long> nums1, std::vector<long> nums2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_618_div_list.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = div_list;\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6})), (std::vector<long>({(long)1, (long)2, (long)3}))) == (std::vector<float>({(float)4.0, (float)2.5, (float)2.0})));\n    assert(candidate((std::vector<long>({(long)3, (long)2})), (std::vector<long>({(long)1, (long)4}))) == (std::vector<float>({(float)3.0, (float)0.5})));\n    assert(candidate((std::vector<long>({(long)90, (long)120})), (std::vector<long>({(long)50, (long)70}))) == (std::vector<float>({(float)1.8, (float)1.7142857142857142})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    if(nums1.size() != nums2.size()) {\n        return result;\n    }\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "  std::vector<float> result;\n  for (int i = 0; i < nums1.size(); i++) {\n    result.push_back(nums1[i] / nums2[i]);\n  }\n  return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0;i<nums1.size();i++){\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "\tstd::vector<float> result;\n\tfor (int i = 0; i < nums1.size(); i++) {\n\t\tresult.push_back((float)nums1[i] / nums2[i]);\n\t}\n\treturn result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    assert(nums1.size() == nums2.size());\n    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "  std::vector<float> result;\n  for (int i = 0; i < nums1.size(); i++) {\n    result.push_back((float)nums1[i] / nums2[i]);\n  }\n  return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    assert(nums1.size() == nums2.size());\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    assert(nums1.size() == nums2.size());\n    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(float(nums1[i]) / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> res;\n    for (int i = 0; i < nums1.size(); i++) {\n        res.push_back(nums1[i] / nums2[i]);\n    }\n    return res;",
    "  std::vector<float> result;\n  for (int i = 0; i < nums1.size(); i++) {\n    result.push_back(nums1[i] / nums2[i]);\n  }\n  return result;",
    "    std::vector<float> res;\n    for (int i = 0; i < nums1.size(); i++) {\n        res.push_back(nums1[i] / nums2[i]);\n    }\n    return res;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back((float)nums1[i]/(float)nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / (float)nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "  std::vector<float> result;\n  for(int i=0;i<nums1.size();i++){\n    result.push_back(nums1[i]/nums2[i]);\n  }\n  return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "  std::vector<float> result;\n  for (int i = 0; i < nums1.size(); i++) {\n    result.push_back(nums1[i] / nums2[i]);\n  }\n  return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "\tstd::vector<float> result;\n\tfor (int i = 0; i < nums1.size(); i++) {\n\t\tresult.push_back((float)nums1[i] / nums2[i]);\n\t}\n\treturn result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "  std::vector<float> result;\n  for (int i = 0; i < nums1.size(); i++) {\n    result.push_back(nums1[i] / nums2[i]);\n  }\n  return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / (float)nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "  std::vector<float> result;\n  for (int i = 0; i < nums1.size(); i++) {\n    result.push_back((float)nums1[i] / nums2[i]);\n  }\n  return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> res;\n    for (int i = 0; i < nums1.size(); i++) {\n        res.push_back(nums1[i] / nums2[i]);\n    }\n    return res;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / (float)nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back((float)nums1[i]/(float)nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> res;\n    for (int i = 0; i < nums1.size(); i++) {\n        res.push_back(nums1[i] / nums2[i]);\n    }\n    return res;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "\tstd::vector<float> result;\n\tfor (int i = 0; i < nums1.size(); i++) {\n\t\tresult.push_back(nums1[i] / nums2[i]);\n\t}\n\treturn result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i=0; i<nums1.size(); i++) {\n        result.push_back(nums1[i]/nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> res;\n    for(int i = 0; i < nums1.size(); i++) {\n        res.push_back(nums1[i] / nums2[i]);\n    }\n    return res;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back((float)nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for (int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;",
    "    std::vector<float> result;\n    for(int i = 0; i < nums1.size(); i++) {\n        result.push_back(nums1[i] / nums2[i]);\n    }\n    return result;"
  ]
}
{
  "name": "mbpp_772_remove_length",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to remove all the words with k length in the given string.\nstd::string remove_length(std::string test_str, long K) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = remove_length;\n    assert(candidate((\"The person is most value tet\"), (3)) == (\"person is most value\"));\n    assert(candidate((\"If you told me about this ok\"), (4)) == (\"If you me about ok\"));\n    assert(candidate((\"Forces of darkeness is come into the play\"), (4)) == (\"Forces of darkeness is the\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    std::istringstream iss(test_str);\n    while(iss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result_str = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result_str += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result_str += word;\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "  std::string result = \"\";\n  std::string temp = \"\";\n  for (long i = 0; i < test_str.length(); i++) {\n    if (test_str[i] == ' ') {\n      if (temp.length() != K) {\n        result += temp + \" \";\n      }\n      temp = \"\";\n    } else {\n      temp += test_str[i];\n    }\n  }\n  if (temp.length() != K) {\n    result += temp;\n  }\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while (ss >> word) {\n        if (word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "\tstd::string result = \"\";\n\tstd::string temp = \"\";\n\tfor (long i = 0; i < test_str.length(); i++) {\n\t\tif (test_str[i] == ' ') {\n\t\t\tif (temp.length() == K) {\n\t\t\t\ttemp = \"\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult += temp + \" \";\n\t\t\ttemp = \"\";\n\t\t}\n\t\telse {\n\t\t\ttemp += test_str[i];\n\t\t}\n\t}\n\tif (temp.length() != K) {\n\t\tresult += temp;\n\t}\n\treturn result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            temp += test_str[i];\n        } else {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word;\n            result += \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < test_str.size(); i++) {\n    if (test_str[i] == ' ') {\n      if (word.size() != K) {\n        result += word;\n        result += ' ';\n      }\n      word = \"\";\n    } else {\n      word += test_str[i];\n    }\n  }\n  if (word.size() != K) {\n    result += word;\n  }\n  return result;",
    "\tstd::string result = \"\";\n\tstd::string temp = \"\";\n\tfor (long i = 0; i < test_str.length(); i++) {\n\t\tif (test_str[i] != ' ') {\n\t\t\ttemp += test_str[i];\n\t\t}\n\t\telse {\n\t\t\tif (temp.length() != K) {\n\t\t\t\tresult += temp + \" \";\n\t\t\t}\n\t\t\ttemp = \"\";\n\t\t}\n\t}\n\tif (temp.length() != K) {\n\t\tresult += temp;\n\t}\n\treturn result;",
    "  std::string result;\n  std::stringstream ss(test_str);\n  std::string word;\n  while(ss >> word) {\n    if(word.length() != K) {\n      result += word + \" \";\n    }\n  }\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word;\n            result += \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::string temp;\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        }\n        else {\n            temp += test_str[i];\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K)\n            result += word + \" \";\n    }\n    return result;",
    "\tstd::string result = \"\";\n\tstd::string word = \"\";\n\tfor (int i = 0; i < test_str.size(); i++) {\n\t\tif (test_str[i] != ' ') {\n\t\t\tword += test_str[i];\n\t\t}\n\t\telse {\n\t\t\tif (word.size() != K) {\n\t\t\t\tresult += word + \" \";\n\t\t\t}\n\t\t\tword = \"\";\n\t\t}\n\t}\n\tif (word.size() != K) {\n\t\tresult += word;\n\t}\n\treturn result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while (ss >> word) {\n        if (word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::stringstream ss(test_str);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        if(word.size() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    // Write your code here\n    std::string result = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "\tstd::string result = \"\";\n\tstd::string temp = \"\";\n\tfor (int i = 0; i < test_str.length(); i++) {\n\t\tif (test_str[i] == ' ') {\n\t\t\tif (temp.length() != K) {\n\t\t\t\tresult += temp;\n\t\t\t\tresult += ' ';\n\t\t\t}\n\t\t\ttemp = \"\";\n\t\t}\n\t\telse {\n\t\t\ttemp += test_str[i];\n\t\t}\n\t}\n\tif (temp.length() != K) {\n\t\tresult += temp;\n\t}\n\treturn result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            temp += test_str[i];\n        } else {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    // Write your code here\n    std::string result = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] != ' ') {\n            temp += test_str[i];\n        } else {\n            if(temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(long i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result = result + word + \" \";\n            }\n            word = \"\";\n        }\n        else {\n            word = word + test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result = result + word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word = word + test_str[i];\n        } else {\n            if (word.length() != K) {\n                result = result + word + ' ';\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result = result + word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            temp += test_str[i];\n        } else {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::stringstream ss(test_str);\n    std::string word;\n    std::string result;\n    while (ss >> word) {\n        if (word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while (ss >> word) {\n        if (word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while (ss >> word) {\n        if (word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.size() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "  std::string result = \"\";\n  std::stringstream ss(test_str);\n  std::string word;\n  while(ss >> word) {\n    if(word.length() != K) {\n      result += word + \" \";\n    }\n  }\n  return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(long i = 0; i < test_str.length(); i++) {\n        if(test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(temp.length() == K) {\n                temp = \"\";\n                continue;\n            }\n            result += temp + \" \";\n            temp = \"\";\n        }\n        else {\n            temp += test_str[i];\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        }\n        else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word = word + test_str[i];\n        }\n        else {\n            if (word.length() != K) {\n                result = result + word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result = result + word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            temp += test_str[i];\n        } else {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(test_str);\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(test_str);\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result_str;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.size() != K) {\n            result_str += word + \" \";\n        }\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (auto ch : test_str) {\n        if (ch == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += ch;\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.size() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if(word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while (ss >> word) {\n        if (word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "\tstd::string result;\n\tstd::stringstream ss(test_str);\n\tstd::string word;\n\twhile(ss >> word) {\n\t\tif(word.length() != K) {\n\t\t\tresult += word + \" \";\n\t\t}\n\t}\n\treturn result;",
    "    std::string result_str = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result_str += word + \" \";\n        }\n    }\n    return result_str;",
    "\tstd::string temp;\n\tstd::string result;\n\tfor (int i = 0; i < test_str.size(); i++) {\n\t\tif (test_str[i] == ' ') {\n\t\t\tif (temp.size() != K) {\n\t\t\t\tresult += temp;\n\t\t\t\tresult += ' ';\n\t\t\t}\n\t\t\ttemp.clear();\n\t\t}\n\t\telse {\n\t\t\ttemp += test_str[i];\n\t\t}\n\t}\n\tif (temp.size() != K) {\n\t\tresult += temp;\n\t}\n\treturn result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (long i = 0; i < test_str.length(); i++) {\n    if (test_str[i] == ' ') {\n      if (word.length() != K) {\n        result += word + \" \";\n      }\n      word = \"\";\n    } else {\n      word += test_str[i];\n    }\n  }\n  if (word.length() != K) {\n    result += word;\n  }\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.size(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if(word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.size() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.size() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(test_str);\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result_str;\n    std::string word;\n    std::stringstream ss(test_str);\n    while (ss >> word) {\n        if (word.length() != K) {\n            result_str += word + \" \";\n        }\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::stringstream ss(test_str);\n    std::string word;\n    std::string result;\n    while (ss >> word) {\n        if (word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result_str;\n    std::stringstream ss(test_str);\n    std::string temp;\n    while(ss >> temp) {\n        if(temp.length() != K) {\n            result_str += temp + \" \";\n        }\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "\tstd::stringstream ss(test_str);\n\tstd::string word;\n\tstd::string result;\n\twhile (ss >> word) {\n\t\tif (word.length() != K) {\n\t\t\tresult += word + \" \";\n\t\t}\n\t}\n\treturn result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        }\n        else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(long i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < test_str.length(); i++) {\n    if (test_str[i] == ' ') {\n      if (word.length() != K) {\n        result += word + \" \";\n      }\n      word = \"\";\n    } else {\n      word += test_str[i];\n    }\n  }\n  if (word.length() != K) {\n    result += word;\n  }\n  return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for(long i = 0; i < test_str.length(); i++) {\n        if(test_str[i] != ' ') {\n            temp += test_str[i];\n        } else {\n            if(temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result_str;\n    std::stringstream ss(test_str);\n    std::string temp;\n    while(ss >> temp) {\n        if(temp.length() != K) {\n            result_str += temp + \" \";\n        }\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if (word.size() != K) {\n                result += word + ' ';\n            }\n            word = \"\";\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word;\n            result += \" \";\n        }\n    }\n    return result;",
    "    std::string result_str = \"\";\n    std::string temp_str = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            temp_str += test_str[i];\n        }\n        else {\n            if (temp_str.length() != K) {\n                result_str += temp_str;\n                result_str += \" \";\n            }\n            temp_str = \"\";\n        }\n    }\n    if (temp_str.length() != K) {\n        result_str += temp_str;\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result_str;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result_str += word + \" \";\n        }\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if(word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            temp += test_str[i];\n        } else {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result_str;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result_str += word + \" \";\n        }\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::stringstream ss(test_str);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (auto ch : test_str) {\n        if (ch == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += ch;\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp + ' ';\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word;\n                result += ' ';\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.size(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.size() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.size() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result_str;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result_str += word + \" \";\n        }\n    }\n    return result_str;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        }\n        else {\n            temp += test_str[i];\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (temp.length() != K) {\n                result += temp + \" \";\n            }\n            temp = \"\";\n        } else {\n            temp += test_str[i];\n        }\n    }\n    if (temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        }\n        else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(test_str);\n    std::string word;\n    while(ss >> word) {\n        if(word.length() != K) {\n            result += word + \" \";\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < test_str.length(); i++) {\n        if (test_str[i] == ' ') {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        } else {\n            word += test_str[i];\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string temp = \"\";\n    for(int i = 0; i < test_str.length(); i++) {\n        if(test_str[i] == ' ') {\n            if(temp.length() != K) {\n                result += temp;\n                result += ' ';\n            }\n            temp = \"\";\n        }\n        else {\n            temp += test_str[i];\n        }\n    }\n    if(temp.length() != K) {\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (long i = 0; i < test_str.length(); i++) {\n        if (test_str[i] != ' ') {\n            word += test_str[i];\n        } else {\n            if (word.length() != K) {\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n    }\n    if (word.length() != K) {\n        result += word;\n    }\n    return result;"
  ]
}
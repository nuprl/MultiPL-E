{
  "name": "mbpp_610_remove_kth_element",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function which takes a vector and returns a vector with the same elements, but the k'th element removed.\nstd::vector<long> remove_kth_element(std::vector<long> list1, long L) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_610_remove_kth_element.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = remove_kth_element;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)1})), (3)) == (std::vector<long>({(long)1, (long)1, (long)3, (long)4, (long)4, (long)5, (long)1})));\n    assert(candidate((std::vector<long>({(long)0, (long)0, (long)1, (long)2, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4})), (4)) == (std::vector<long>({(long)0, (long)0, (long)1, (long)3, (long)4, (long)4, (long)5, (long)6, (long)6, (long)6, (long)7, (long)8, (long)9, (long)4, (long)4})));\n    assert(candidate((std::vector<long>({(long)10, (long)10, (long)15, (long)19, (long)18, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10})), (5)) == (std::vector<long>({(long)10, (long)10, (long)15, (long)19, (long)18, (long)17, (long)26, (long)26, (long)17, (long)18, (long)10})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> list2;\n    for(long i = 0; i < list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0;i<list1.size();i++) {\n        if(i!=L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L; i < list1.size(); i++) {\n        list2.push_back(list1[i+1]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for(long i = L+1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0; i<list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i = 0; i < list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0; i<list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i = 0; i < list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L-1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0;i<list1.size();i++) {\n        if(i!=L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L; i < list1.size(); i++) {\n        list2.push_back(list1[i+1]);\n    }\n    return list2;",
    "  std::vector<long> list2;\n  for (long i = 0; i < list1.size(); i++) {\n    if (i != L) {\n      list2.push_back(list1[i]);\n    }\n  }\n  return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    assert(L < list1.size());\n    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L+1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    long i = 0;\n    while(i < L) {\n        list2.push_back(list1[i]);\n        i++;\n    }\n    i++;\n    while(i < list1.size()) {\n        list2.push_back(list1[i]);\n        i++;\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0; i<list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    for (long i = L; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i = 0; i < list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0;i<list1.size();i++) {\n        if(i!=L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0;i<L;i++) {\n        list2.push_back(list1[i]);\n    }\n    for(long i=L+1;i<list1.size();i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0;i<list1.size();i++) {\n        if(i!=L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0; i<list1.size(); i++) {\n        if(i!=L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L; i < list1.size(); i++) {\n        list2.push_back(list1[i+1]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L-1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "  std::vector<long> list2;\n  for (long i=0; i<list1.size(); i++) {\n    if (i != L) {\n      list2.push_back(list1[i]);\n    }\n  }\n  return list2;",
    "    std::vector<long> list2;\n    for(long i=0; i<list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0;i<list1.size();i++){\n        if(i!=L){\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i == L) {\n            continue;\n        }\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "  std::vector<long> list2;\n  for (long i = 0; i < list1.size(); i++) {\n    if (i != L) {\n      list2.push_back(list1[i]);\n    }\n  }\n  return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i = 0; i < list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i == L) {\n            continue;\n        }\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for(long i = L+1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L; i < list1.size() - 1; i++) {\n        list2.push_back(list1[i + 1]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "\tstd::vector<long> list2;\n\tfor (long i = 0; i < list1.size(); i++) {\n\t\tif (i != L) {\n\t\t\tlist2.push_back(list1[i]);\n\t\t}\n\t}\n\treturn list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L+1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    for (long i = L; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i=0; i<list1.size(); i++) {\n        if(i!=L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(long i = 0; i < list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (list1[i] != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for(int i=0; i<list1.size(); i++) {\n        if(i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L; i < list1.size(); i++) {\n        list2.push_back(list1[i+1]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L + 1; i < list1.size(); i++) {\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "  std::vector<long> list2;\n  for (long i = 0; i < list1.size(); i++) {\n    if (i != L) {\n      list2.push_back(list1[i]);\n    }\n  }\n  return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (int i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L - 1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i == L - 1) {\n            continue;\n        }\n        list2.push_back(list1[i]);\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        if (i != L-1) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < list1.size(); i++) {\n        if (i != L) {\n            list2.push_back(list1[i]);\n        }\n    }\n    return list2;",
    "    std::vector<long> list2;\n    for (long i = 0; i < L; i++) {\n        list2.push_back(list1[i]);\n    }\n    for (long i = L; i < list1.size() - 1; i++) {\n        list2.push_back(list1[i + 1]);\n    }\n    return list2;"
  ]
}
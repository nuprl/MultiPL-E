{
  "name": "mbpp_763_find_min_diff",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the minimum difference between any two elements in a given vector. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nlong find_min_diff(long arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_763_find_min_diff.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = find_min_diff;\n    assert(candidate(std::make_tuple(1, 5, 3, 19, 18, 25), (6)) == (1));\n    assert(candidate(std::make_tuple(4, 3, 2, 6), (4)) == (1));\n    assert(candidate(std::make_tuple(30, 5, 20, 9), (4)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    }\n    return diff;",
    "    long min_diff = LONG_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1]-arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    long min_diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = INT_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        diff = min(diff, arr[i + 1] - arr[i]);\n    }\n    return diff;",
    "    long min_diff = LONG_MAX;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff)\n                min_diff = abs(arr[i] - arr[j]);\n        }\n    }\n    return min_diff;",
    "    long min_diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        for(long j=i+1; j<n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    long min_diff = INT_MAX;\n    long i, j;\n    for (i = 0; i < n - 1; i++)\n        for (j = i + 1; j < n; j++)\n            if (abs(arr[i] - arr[j]) < min_diff)\n                min_diff = abs(arr[i] - arr[j]);\n    return min_diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long min_diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++)\n        for (long j = i + 1; j < n; j++)\n            if (abs(arr[i] - arr[j]) < diff)\n                diff = abs(arr[i] - arr[j]);\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    std::sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    std::sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    long min_diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    long min_diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for(int i = 0; i < n - 1; i++) {\n        if(arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(int i=0; i<n-1; i++) {\n        if(arr[i+1]-arr[i] < diff) {\n            diff = arr[i+1]-arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++)\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    long min_diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    // Sort array in non-decreasing order\n    std::sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = INT_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        for(long j=i+1; j<n; j++) {\n            if(abs(arr[i]-arr[j]) < diff) {\n                diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n-1; i++) {\n        for (long j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    long min_diff = INT_MAX;\n    sort(arr, arr+n);\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < min_diff) {\n            min_diff = arr[i+1] - arr[i];\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    std::sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1]-arr[i] < diff)\n            diff = arr[i+1]-arr[i];\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        diff = min(diff, arr[i+1]-arr[i]);\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++)\n        diff = min(diff, arr[i + 1] - arr[i]);\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++)\n        for (long j = i + 1; j < n; j++)\n            if (abs(arr[i] - arr[j]) < diff)\n                diff = abs(arr[i] - arr[j]);\n    return diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (min_diff > abs(arr[i] - arr[j])) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    }\n    return diff;",
    "    // sort the array\n    std::sort(arr, arr + n);\n\n    // find the min diff by comparing adjacent\n    // pairs in sorted array\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++)\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n\n    // return min diff\n    return diff;",
    "    std::sort(arr, arr+n);\n    long diff = arr[1] - arr[0];\n    for (long i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(int i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(int i=0; i<n-1; i++) {\n        if(arr[i+1]-arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(int i=0; i<n-1; i++) {\n        diff = min(diff, arr[i+1] - arr[i]);\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++)\n        for (long j = i + 1; j < n; j++)\n            if (abs(arr[i] - arr[j]) < diff)\n                diff = abs(arr[i] - arr[j]);\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = INT_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    std::sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = INT_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(int i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long min_diff = LONG_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++)\n        diff = min(diff, arr[i+1]-arr[i]);\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++)\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n    // Initialize difference as infinite\n    long diff = INT_MAX;\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for(int i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    std::sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = INT_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = INT_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++)\n        diff = min(diff, arr[i+1]-arr[i]);\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "\tstd::sort(arr, arr+n);\n\tlong diff = INT_MAX;\n\tfor (long i=0; i<n-1; i++) {\n\t\tif (arr[i+1] - arr[i] < diff)\n\t\t\tdiff = arr[i+1] - arr[i];\n\t}\n\treturn diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    long diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    long min_diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    // find the min diff by comparing adjacent pairs in sorted array\n    long diff = arr[1] - arr[0];\n    for (long i=2; i<n; i++)\n        if (arr[i] - arr[i-1] < diff)\n            diff = arr[i] - arr[i-1];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for(int i=0; i<n; i++) {\n        for(int j=i+1; j<n; j++) {\n            if(abs(arr[i]-arr[j]) < diff) {\n                diff = abs(arr[i]-arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for(long i = 0; i < n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    // sort the array\n    sort(arr, arr + n);\n    // initialize difference as infinite\n    long diff = LONG_MAX;\n    // find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (long i = 0; i < n - 1; i++)\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    // return min diff\n    return diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    // initialize difference as infinite\n    long diff = INT_MAX;\n    // find the min diff by comparing adjacent pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    // return min diff\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    if (n < 2) {\n        return -1;\n    }\n    sort(arr, arr + n);\n    long min_diff = arr[1] - arr[0];\n    for (long i = 2; i < n; i++) {\n        if (arr[i] - arr[i - 1] < min_diff) {\n            min_diff = arr[i] - arr[i - 1];\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++)\n        diff = min(diff, arr[i + 1] - arr[i]);\n    return diff;",
    "    long diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    // initialize difference as infinite\n    long diff = LONG_MAX;\n    // find the min diff by comparing adjacent pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    // return min diff\n    return diff;",
    "    long min_diff = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    // Sort array in non-decreasing order\n    std::sort(arr, arr + n);\n\n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n\n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i = 0; i < n - 1; i++)\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n\n    // Return min diff\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    sort(arr, arr+n);\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = LONG_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    // find the min diff by comparing adjacent pairs\n    long diff = arr[1] - arr[0];\n    for (long i=2; i<n; i++)\n        if (arr[i] - arr[i-1] < diff)\n            diff = arr[i] - arr[i-1];\n    return diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        for(long j=i+1; j<n; j++) {\n            if(abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n-1; i++) {\n        if (arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    // initialize difference as infinite\n    long diff = INT_MAX;\n    // find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    // return min diff\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    if(n == 1) {\n        return 0;\n    }\n    long min_diff = INT_MAX;\n    for(long i = 0; i < n-1; i++) {\n        for(long j = i+1; j < n; j++) {\n            if(abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    // Sort array in non-decreasing order\n    sort(arr, arr+n);\n \n    // Initialize difference as infinite\n    long diff = LONG_MAX;\n \n    // Find the min diff by comparing adjacent\n    // pairs in sorted array\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n \n    // Return min diff\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = LONG_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (long i=0; i<n-1; i++) {\n        if (arr[i+1] - arr[i] < diff) {\n            diff = arr[i+1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    // initialize difference as infinite\n    long diff = LONG_MAX;\n    // find the min diff by comparing adjacent pairs in sorted array\n    for (long i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    // return min diff\n    return diff;",
    "    long min_diff = INT_MAX;\n    for (long i = 0; i < n-1; i++) {\n        for (long j = i+1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < min_diff) {\n                min_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return min_diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        diff = min(diff, arr[i + 1] - arr[i]);\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        for (long j = i + 1; j < n; j++) {\n            if (abs(arr[i] - arr[j]) < diff) {\n                diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return diff;",
    "    // sort the array\n    sort(arr, arr+n);\n    // find the min diff by comparing adjacent pairs\n    long diff = INT_MAX;\n    for (int i=0; i<n-1; i++)\n        if (arr[i+1] - arr[i] < diff)\n            diff = arr[i+1] - arr[i];\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff) {\n            diff = arr[i + 1] - arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr+n);\n    long diff = INT_MAX;\n    for(long i=0; i<n-1; i++) {\n        if(arr[i+1]-arr[i] < diff) {\n            diff = arr[i+1]-arr[i];\n        }\n    }\n    return diff;",
    "    sort(arr, arr + n);\n    long diff = INT_MAX;\n    for (long i = 0; i < n - 1; i++) {\n        if (arr[i + 1] - arr[i] < diff)\n            diff = arr[i + 1] - arr[i];\n    }\n    return diff;"
  ]
}
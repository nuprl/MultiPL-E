{
  "name": "mbpp_171_perimeter_pentagon",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the perimeter of a regular pentagon from the length of its sides.\nlong perimeter_pentagon(long a) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_171_perimeter_pentagon.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = perimeter_pentagon;\n    assert(candidate((5)) == (25));\n    assert(candidate((10)) == (50));\n    assert(candidate((15)) == (75));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5 * a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return a*5;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5 * a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return a*5;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5 * a;",
    "    return 5*a;",
    "    return a*5;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return a*5;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5 * a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "  return a*5;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return a*5;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return a*5;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "  return 5*a;",
    "    return 5*a;",
    "    return 5*a;",
    "    return 5*a;"
  ]
}
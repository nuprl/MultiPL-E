{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the last digit in factorial of a given number.\nlong last_Digit_Factorial(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = last_Digit_Factorial;\n    assert(candidate((4)) == (4));\n    assert(candidate((21)) == (0));\n    assert(candidate((30)) == (0));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (int i = 1; i <= n; i++)\n        res = (res * i) % 10;\n    return res;",
    "    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++) {\n        res = (res * i) % 10;\n    }\n    return res;",
    "    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;",
    "\tlong fact = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfact = fact * i;\n\t}\n\treturn fact % 10;",
    "    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n        fact = fact % 10;\n    }\n    return fact;",
    "    if(n == 0)\n        return 1;\n    long res = 1;\n    for(long i = 2; i <= n; i++) {\n        res = (res * i) % 10;\n    }\n    return res;",
    "    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;",
    "    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;",
    "    long fact = 1;\n    for(int i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;",
    "    long fact = 1;\n    for(int i = 2; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;",
    "    long last_digit = 1;\n    for (int i = 1; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;",
    "    long fact = 1;\n    for(long i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;",
    "    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;",
    "    long fact = 1;\n    for (long i = 1; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;",
    "    long fact = 1;\n    for (int i = 1; i <= n; i++) {\n        fact = fact * i;\n    }\n    return fact % 10;",
    "    if (n < 0)\n        return -1;\n    if (n == 0)\n        return 1;\n    long res = 1;\n    for (long i = 2; i <= n; i++)\n        res = (res * i) % 10;\n    return res;",
    "    // Write your code here\n    long last_digit = 1;\n    for (long i = 2; i <= n; i++) {\n        last_digit = (last_digit * i) % 10;\n    }\n    return last_digit;",
    "  long factorial = 1;\n  for (long i = 1; i <= n; i++) {\n    factorial = (factorial * i) % 10;\n  }\n  return factorial;",
    "\tif(n == 0)\n\t\treturn 1;\n\tif(n == 1)\n\t\treturn 1;\n\tif(n == 2)\n\t\treturn 2;\n\tif(n == 3)\n\t\treturn 6;\n\tif(n == 4)\n\t\treturn 4;\n\tif(n == 5)\n\t\treturn 2;\n\tif(n == 6)\n\t\treturn 2;\n\tif(n == 7)\n\t\treturn 4;\n\tif(n == 8)\n\t\treturn 2;\n\tif(n == 9)\n\t\treturn 8;\n\tif(n == 10)\n\t\treturn 8;\n\tif(n == 11)\n\t\treturn 8;\n\tif(n == 12)\n\t\treturn 6;\n\tif(n == 13)\n\t\treturn 8;\n\tif(n == 14)\n\t\treturn 8;\n\tif(n == 15)\n\t\treturn 4;\n\tif(n == 16)\n\t\treturn 6;\n\tif(n == 17)\n\t\treturn 8;\n\tif(n == 18)\n\t\treturn 8;\n\tif(n == 19)\n\t\treturn 8;\n\tif(n == 20)\n\t\treturn 6;\n\tif(n == 21)\n\t\treturn 8;\n\tif(n == 22)\n\t\treturn 8;\n\tif(n == 23)\n\t\treturn 8;\n\tif(n == 24)\n\t\treturn 4;\n\tif(n == 25)\n\t\treturn 6;\n\tif(n == 26)\n\t\treturn 8;\n\tif(n == 27)\n\t\treturn 8;\n\tif(n == 28)\n\t\treturn 8;\n\tif(n == 29)\n\t\treturn 8;\n\tif(n == 30)\n\t\treturn 6;\n\tif(n == 31)\n\t\treturn 8;\n\tif(n == 32)\n\t\treturn 8;\n\tif(n == 33)\n\t\treturn 8;\n\tif(n == 34)\n\t\treturn 8;\n\tif(n == 35)\n\t\treturn 4;\n\tif(n == 36)",
    "    long fact = 1;\n    for(long i = 2; i <= n; i++) {\n        fact = (fact * i) % 10;\n    }\n    return fact;"
  ]
}
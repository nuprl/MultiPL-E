{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to reverse a vector upto a given position.\nstd::vector<long> reverse_Array_Upto_K(std::vector<long> input, long k) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = reverse_Array_Upto_K;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5, (long)6})), (4)) == (std::vector<long>({(long)4, (long)3, (long)2, (long)1, (long)5, (long)6})));\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7})), (2)) == (std::vector<long>({(long)5, (long)4, (long)6, (long)7})));\n    assert(candidate((std::vector<long>({(long)9, (long)8, (long)7, (long)6, (long)5})), (3)) == (std::vector<long>({(long)7, (long)8, (long)9, (long)6, (long)5})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    if (k > input.size()) {\n        return input;\n    }\n    for (long i = k - 1; i >= 0; i--) {\n        output.push_back(input[i]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(int i=0; i<k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(int i=k; i<input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - 1 - i]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "  std::vector<long> output;\n  for(long i = 0; i < k; i++) {\n    output.push_back(input[k - i - 1]);\n  }\n  for(long i = k; i < input.size(); i++) {\n    output.push_back(input[i]);\n  }\n  return output;",
    "    // Write your code here\n    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    long i = 0;\n    while(i < k) {\n        output.push_back(input[k-i-1]);\n        i++;\n    }\n    while(i < input.size()) {\n        output.push_back(input[i]);\n        i++;\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    std::vector<long> output;\n    for(long i=0;i<k;i++){\n        output.push_back(input[k-i-1]);\n    }\n    for(long i=k;i<input.size();i++){\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (int i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for (int i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < input.size(); i++) {\n        if (i < k) {\n            output.insert(output.begin(), input[i]);\n        } else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = k; i >= 0; i--) {\n        output.push_back(input[i]);\n    }\n    for (long i = k + 1; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < input.size(); i++) {\n        if (i < k) {\n            output.push_back(input[k - i - 1]);\n        } else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "\tstd::vector<long> output;\n\tfor (long i = 0; i < k; i++) {\n\t\toutput.push_back(input[i]);\n\t}\n\tstd::reverse(output.begin(), output.end());\n\tfor (long i = k; i < input.size(); i++) {\n\t\toutput.push_back(input[i]);\n\t}\n\treturn output;",
    "    std::vector<long> output;\n    for (long i = 0; i < input.size(); i++) {\n        if (i < k) {\n            output.insert(output.begin(), input[i]);\n        } else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    // Write your code here\n    long n = input.size();\n    for(long i = 0; i < k/2; i++) {\n        long temp = input[i];\n        input[i] = input[k-i-1];\n        input[k-i-1] = temp;\n    }\n    return input;",
    "    assert(k <= input.size());\n    std::reverse(input.begin(), input.begin() + k);\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    assert(k <= input.size());\n    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < input.size(); i++) {\n        if (i < k) {\n            output.push_back(input[k - i - 1]);\n        } else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i=0; i<k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for(long i=k; i<input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i=0; i<k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i=k; i<input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < input.size(); i++) {\n        if (i < k) {\n            output.insert(output.begin(), input[i]);\n        } else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    long size = input.size();\n    for (long i = 0; i < size; i++) {\n        if (i < k) {\n            output.push_back(input[k - i - 1]);\n        } else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long i = 0;\n    long j = k - 1;\n    while (i < j) {\n        std::swap(input[i], input[j]);\n        i++;\n        j--;\n    }\n    return input;",
    "    std::vector<long> output;\n    for(long i = 0; i < input.size(); i++) {\n        if(i < k) {\n            output.insert(output.begin(), input[i]);\n        }\n        else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (int i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (int i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long n = input.size();\n    for (long i = 0; i < k / 2; i++) {\n        long temp = input[i];\n        input[i] = input[k - i - 1];\n        input[k - i - 1] = temp;\n    }\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    long size = input.size();\n    if(k>size) {\n        return input;\n    }\n    for(long i=0; i<k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i=k; i<size; i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    long size = input.size();\n    for (long i = 0; i < size; i++) {\n        if (i < k) {\n            output.push_back(input[k - i - 1]);\n        } else {\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    if (k >= input.size()) {\n        return input;\n    }\n    std::vector<long> output;\n    for (long i = k - 1; i >= 0; i--) {\n        output.push_back(input[i]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long size = input.size();\n    if(k>size) {\n        std::cout<<\"K is greater than size of array\"<<std::endl;\n        return input;\n    }\n    long i = 0;\n    long j = k-1;\n    while(i<j) {\n        long temp = input[i];\n        input[i] = input[j];\n        input[j] = temp;\n        i++;\n        j--;\n    }\n    return input;",
    "    // Write your code here\n    long n = input.size();\n    for(long i = 0; i < k/2; i++) {\n        long temp = input[i];\n        input[i] = input[k-i-1];\n        input[k-i-1] = temp;\n    }\n    return input;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "  // Write your code here\n  std::vector<long> output;\n  for(long i=0;i<k;i++)\n  {\n    output.push_back(input[k-i-1]);\n  }\n  for(long i=k;i<input.size();i++)\n  {\n    output.push_back(input[i]);\n  }\n  return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long size = input.size();\n    if (k > size) {\n        k = size;\n    }\n    for (long i = 0; i < k / 2; i++) {\n        long temp = input[i];\n        input[i] = input[k - i - 1];\n        input[k - i - 1] = temp;\n    }\n    return input;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    long i = 0;\n    while(i < k) {\n        output.push_back(input[k-i-1]);\n        i++;\n    }\n    while(i < input.size()) {\n        output.push_back(input[i]);\n        i++;\n    }\n    return output;",
    "    long n = input.size();\n    if (k > n) {\n        k = n;\n    }\n    for (long i = 0; i < k/2; i++) {\n        long temp = input[i];\n        input[i] = input[k-i-1];\n        input[k-i-1] = temp;\n    }\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i=0;i<k;i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i=k;i<input.size();i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long n = input.size();\n    if (k > n) {\n        return input;\n    }\n    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < n; i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long size = input.size();\n    if(k>size) {\n        k = size;\n    }\n    std::vector<long> output;\n    for(long i=k-1;i>=0;i--) {\n        output.push_back(input[i]);\n    }\n    for(long i=k;i<size;i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(int i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(int i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = k - 1; i >= 0; i--) {\n        output.push_back(input[i]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long n = input.size();\n    long i = 0;\n    while (i < k) {\n        long temp = input[i];\n        input[i] = input[k];\n        input[k] = temp;\n        i++;\n        k--;\n    }\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long i = 0;\n    long j = k;\n    while (i < j) {\n        std::swap(input[i], input[j]);\n        i++;\n        j--;\n    }\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = k; i >= 0; i--) {\n        output.push_back(input[i]);\n    }\n    for (long i = k + 1; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long n = input.size();\n    long i = 0;\n    long j = k;\n    while(i < j) {\n        std::swap(input[i], input[j]);\n        i++;\n        j--;\n    }\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "  std::vector<long> output;\n  for (long i = 0; i < k; i++) {\n    output.push_back(input[k - i - 1]);\n  }\n  for (long i = k; i < input.size(); i++) {\n    output.push_back(input[i]);\n  }\n  return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    long n = input.size();\n    for(long i = 0; i < k/2; i++) {\n        long temp = input[i];\n        input[i] = input[k-i-1];\n        input[k-i-1] = temp;\n    }\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    std::vector<long> output;\n    for(long i=0;i<k;i++)\n    {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i=k;i<input.size();i++)\n    {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long n = input.size();\n    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < n; i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long size = input.size();\n    if (k > size) {\n        return input;\n    }\n    long i = 0;\n    long j = k - 1;\n    while (i < j) {\n        std::swap(input[i], input[j]);\n        i++;\n        j--;\n    }\n    return input;",
    "    std::vector<long> output;\n    long i = 0;\n    while (i < k) {\n        output.push_back(input[k - i - 1]);\n        i++;\n    }\n    while (i < input.size()) {\n        output.push_back(input[i]);\n        i++;\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    std::vector<long>::iterator it;\n    for (it = input.begin(); it != input.end(); it++) {\n        if (it - input.begin() < k) {\n            output.insert(output.begin(), *it);\n        } else {\n            output.push_back(*it);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "  long n = input.size();\n  if (k > n) {\n    k = n;\n  }\n  std::vector<long> output;\n  for (long i = 0; i < k; i++) {\n    output.push_back(input[k - i - 1]);\n  }\n  for (long i = k; i < n; i++) {\n    output.push_back(input[i]);\n  }\n  return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    long n = input.size();\n    std::vector<long> output;\n    for(long i=0;i<n;i++){\n        if(i<k){\n            output.push_back(input[k-i-1]);\n        }\n        else{\n            output.push_back(input[i]);\n        }\n    }\n    return output;",
    "    std::vector<long> output;\n    long i = 0;\n    for (i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long n = input.size();\n    if (k > n) {\n        return input;\n    }\n    std::vector<long> output;\n    for (long i = k - 1; i >= 0; i--) {\n        output.push_back(input[i]);\n    }\n    for (long i = k; i < n; i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "  std::vector<long> output;\n  for (long i = 0; i < k; i++) {\n    output.push_back(input[k - i - 1]);\n  }\n  for (long i = k; i < input.size(); i++) {\n    output.push_back(input[i]);\n  }\n  return output;",
    "\tstd::vector<long> output;\n\tfor (long i = 0; i < k; i++) {\n\t\toutput.push_back(input[k - i - 1]);\n\t}\n\tfor (long i = k; i < input.size(); i++) {\n\t\toutput.push_back(input[i]);\n\t}\n\treturn output;",
    "    std::vector<long> output;\n    long i = 0;\n    while(i < k) {\n        output.push_back(input[k-i-1]);\n        i++;\n    }\n    while(i < input.size()) {\n        output.push_back(input[i]);\n        i++;\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    if(k > input.size()) {\n        k = input.size();\n    }\n    for(long i = k-1; i >= 0; i--) {\n        output.push_back(input[i]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[i]);\n    }\n    std::reverse(output.begin(), output.end());\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    int n = input.size();\n    for (int i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (int i = k; i < n; i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    long size = input.size();\n    if (k > size) {\n        return input;\n    }\n    long i = 0;\n    long j = k - 1;\n    while (i < j) {\n        std::swap(input[i], input[j]);\n        i++;\n        j--;\n    }\n    return input;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    // Write your code here\n    long n = input.size();\n    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < n; i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> result;\n    for (long i = 0; i < k; i++) {\n        result.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        result.push_back(input[i]);\n    }\n    return result;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "\tstd::vector<long> output;\n\tfor (long i = 0; i < k; i++) {\n\t\toutput.push_back(input[k - i - 1]);\n\t}\n\tfor (long i = k; i < input.size(); i++) {\n\t\toutput.push_back(input[i]);\n\t}\n\treturn output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for(long i = 0; i < k; i++) {\n        output.push_back(input[k-i-1]);\n    }\n    for(long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;",
    "    std::vector<long> output;\n    for (long i = 0; i < k; i++) {\n        output.push_back(input[k - i - 1]);\n    }\n    for (long i = k; i < input.size(); i++) {\n        output.push_back(input[i]);\n    }\n    return output;"
  ]
}
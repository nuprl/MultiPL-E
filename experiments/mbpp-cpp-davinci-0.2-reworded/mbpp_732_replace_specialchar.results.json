{
  "name": "mbpp_732_replace_specialchar",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n\tstd::string result = \"\";\n\tfor (int i = 0; i < text.length(); i++) {\n\t\tif (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n\t\t\tresult += ':';\n\t\t}\n\t\telse {\n\t\t\tresult += text[i];\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]==' ' || text[i]==',' || text[i]=='.') {\n            result+=';';\n        }\n        else {\n            result+=text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "tmp8n4xv_uh: /tmp/tmp8n4xv_uh.cpp:18: int main(): Assertion `candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\")' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        }\n        else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += \":\";\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string new_text;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            new_text += ':';\n        } else {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        }\n        else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        }\n        else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for(int i=0;i<text.length();i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        }\n        else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto x : text) {\n        if (x == ' ' || x == ',' || x == '.') {\n            result += ':';\n        } else {\n            result += x;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n  std::string result;\n  for (int i = 0; i < text.size(); i++) {\n    if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n      result += ':';\n    } else {\n      result += text[i];\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n  std::string result;\n  for (int i = 0; i < text.size(); i++) {\n    if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n      result += ':';\n    } else {\n      result += text[i];\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        }\n        else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        }\n        else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(auto c : text) {\n        if(c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n\tstd::string result;\n\tfor (auto c : text) {\n\t\tif (c == ' ' || c == ',' || c == '.') {\n\t\t\tresult.push_back(':');\n\t\t}\n\t\telse {\n\t\t\tresult.push_back(c);\n\t\t}\n\t}\n\treturn result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += \":\";\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += \":\";\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124287,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        }\n        else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string new_text;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            new_text += ':';\n        }\n        else {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(auto c: text) {\n        if(c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            text[i] = ':';\n        }\n    }\n    return text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            result += ':';\n        } else {\n            result += text[i];\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (auto c: text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124288,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string result;\n    for (char c : text) {\n        if (c == ' ' || c == ',' || c == '.') {\n            result += ':';\n        } else {\n            result += c;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1665509723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nstd::string replace_specialchar(std::string text) {\n    std::string new_text;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n            new_text += ':';\n        } else {\n            new_text += text[i];\n        }\n    }\n    return new_text;\n}\nint main() {\n    auto candidate = replace_specialchar;\n    assert(candidate((\"Python language, Programming language.\")) == (\"Python:language::Programming:language:\"));\n    assert(candidate((\"a b c,d e f\")) == (\"a:b:c:d:e:f\"));\n    assert(candidate((\"ram reshma,ram rahim\")) == (\"ram:reshma:ram:rahim\"));\n}\n",
      "timestamp": 1666124289,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
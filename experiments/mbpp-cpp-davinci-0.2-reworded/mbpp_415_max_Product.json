{
  "name": "mbpp_415_max_Product",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find a pair with highest product from a given vector of integers.\nlong max_Product(std::vector<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = max_Product;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)7, (long)0, (long)8, (long)4}))) == std::make_tuple(7, 8));\n    assert(candidate((std::vector<long>({(long)0, (long)-1, (long)-2, (long)-4, (long)5, (long)0, (long)-6}))) == std::make_tuple(-4, -6));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3}))) == std::make_tuple(2, 3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max1 = INT_MIN;\n    long max2 = INT_MIN;\n    long max3 = INT_MIN;\n    long min1 = INT_MAX;\n    long min2 = INT_MAX;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max1) {\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2) {\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i] > max3) {\n            max3 = arr[i];\n        }\n        if(arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i] < min2) {\n            min2 = arr[i];\n        }\n    }\n    return std::max(max1*max2*max3, max1*min1*min2);",
    "    long max_product = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(arr[i]*arr[j] > max_product) {\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    long max_1 = 0;\n    long max_2 = 0;\n    long max_3 = 0;\n    long min_1 = 0;\n    long min_2 = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_1) {\n            max_3 = max_2;\n            max_2 = max_1;\n            max_1 = arr[i];\n        }\n        else if(arr[i] > max_2) {\n            max_3 = max_2;\n            max_2 = arr[i];\n        }\n        else if(arr[i] > max_3) {\n            max_3 = arr[i];\n        }\n        if(arr[i] < min_1) {\n            min_2 = min_1;\n            min_1 = arr[i];\n        }\n        else if(arr[i] < min_2) {\n            min_2 = arr[i];\n        }\n    }\n    max_product = std::max(max_1 * max_2 * max_3, max_1 * min_1 * min_2);\n    return max_product;",
    "    long max_product = 0;\n    long max_num = 0;\n    long second_max_num = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_num) {\n            second_max_num = max_num;\n            max_num = arr[i];\n        }\n        else if(arr[i] > second_max_num) {\n            second_max_num = arr[i];\n        }\n    }\n    max_product = max_num * second_max_num;\n    return max_product;",
    "    long max_product = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=i+1;j<arr.size();j++) {\n            if(arr[i]*arr[j] > max_product) {\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    long max_1 = INT_MIN;\n    long max_2 = INT_MIN;\n    long max_3 = INT_MIN;\n    long min_1 = INT_MAX;\n    long min_2 = INT_MAX;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_1) {\n            max_3 = max_2;\n            max_2 = max_1;\n            max_1 = arr[i];\n        }\n        else if(arr[i] > max_2) {\n            max_3 = max_2;\n            max_2 = arr[i];\n        }\n        else if(arr[i] > max_3) {\n            max_3 = arr[i];\n        }\n        if(arr[i] < min_1) {\n            min_2 = min_1;\n            min_1 = arr[i];\n        }\n        else if(arr[i] < min_2) {\n            min_2 = arr[i];\n        }\n    }\n    max_product = std::max(max_1 * max_2 * max_3, max_1 * min_1 * min_2);\n    return max_product;",
    "    long max_product = 0;\n    long max_1 = 0;\n    long max_2 = 0;\n    long min_1 = 0;\n    long min_2 = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_1) {\n            max_2 = max_1;\n            max_1 = arr[i];\n        }\n        else if(arr[i] > max_2) {\n            max_2 = arr[i];\n        }\n        if(arr[i] < min_1) {\n            min_2 = min_1;\n            min_1 = arr[i];\n        }\n        else if(arr[i] < min_2) {\n            min_2 = arr[i];\n        }\n    }\n    max_product = std::max(max_1 * max_2, min_1 * min_2);\n    return max_product;",
    "    long max1 = INT_MIN;\n    long max2 = INT_MIN;\n    long max3 = INT_MIN;\n    long min1 = INT_MAX;\n    long min2 = INT_MAX;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max1) {\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2) {\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i] > max3) {\n            max3 = arr[i];\n        }\n        if(arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i] < min2) {\n            min2 = arr[i];\n        }\n    }\n    return std::max(max1 * max2 * max3, max1 * min1 * min2);",
    "    long max_product = 0;\n    long max_1 = INT_MIN;\n    long max_2 = INT_MIN;\n    long max_3 = INT_MIN;\n    long min_1 = INT_MAX;\n    long min_2 = INT_MAX;\n    for(int i=0;i<arr.size();i++) {\n        if(arr[i] > max_1) {\n            max_3 = max_2;\n            max_2 = max_1;\n            max_1 = arr[i];\n        }\n        else if(arr[i] > max_2) {\n            max_3 = max_2;\n            max_2 = arr[i];\n        }\n        else if(arr[i] > max_3) {\n            max_3 = arr[i];\n        }\n        if(arr[i] < min_1) {\n            min_2 = min_1;\n            min_1 = arr[i];\n        }\n        else if(arr[i] < min_2) {\n            min_2 = arr[i];\n        }\n    }\n    max_product = std::max(max_1*max_2*max_3, max_1*min_1*min_2);\n    return max_product;",
    "    long max_product = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=i+1;j<arr.size();j++) {\n            if(arr[i]*arr[j] > max_product) {\n                max_product = arr[i]*arr[j];\n            }\n        }\n    }\n    return max_product;",
    "    long max_product = 0;\n    long max_1 = 0;\n    long max_2 = 0;\n    long min_1 = 0;\n    long min_2 = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_1) {\n            max_2 = max_1;\n            max_1 = arr[i];\n        }\n        else if(arr[i] > max_2) {\n            max_2 = arr[i];\n        }\n        if(arr[i] < min_1) {\n            min_2 = min_1;\n            min_1 = arr[i];\n        }\n        else if(arr[i] < min_2) {\n            min_2 = arr[i];\n        }\n    }\n    max_product = std::max(max_1 * max_2, min_1 * min_2);\n    return max_product;",
    "    long max = 0;\n    for(int i=0;i<arr.size();i++) {\n        for(int j=i+1;j<arr.size();j++) {\n            if(arr[i]*arr[j] > max) {\n                max = arr[i]*arr[j];\n            }\n        }\n    }\n    return max;",
    "    long max_product = 0;\n    long max_1 = 0;\n    long max_2 = 0;\n    long min_1 = 0;\n    long min_2 = 0;\n    for(long i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_1) {\n            max_2 = max_1;\n            max_1 = arr[i];\n        }\n        else if(arr[i] > max_2) {\n            max_2 = arr[i];\n        }\n        if(arr[i] < min_1) {\n            min_2 = min_1;\n            min_1 = arr[i];\n        }\n        else if(arr[i] < min_2) {\n            min_2 = arr[i];\n        }\n    }\n    max_product = std::max(max_1 * max_2, min_1 * min_2);\n    return max_product;",
    "    long max1 = INT_MIN;\n    long max2 = INT_MIN;\n    long max3 = INT_MIN;\n    long min1 = INT_MAX;\n    long min2 = INT_MAX;\n    for(int i=0;i<arr.size();i++) {\n        if(arr[i] > max1) {\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2) {\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i] > max3) {\n            max3 = arr[i];\n        }\n        if(arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i] < min2) {\n            min2 = arr[i];\n        }\n    }\n    return std::max(max1*max2*max3, max1*min1*min2);",
    "    long max_product = 0;\n    long max_1 = INT_MIN;\n    long max_2 = INT_MIN;\n    long max_3 = INT_MIN;\n    long min_1 = INT_MAX;\n    long min_2 = INT_MAX;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max_1) {\n            max_3 = max_2;\n            max_2 = max_1;\n            max_1 = arr[i];\n        }\n        else if(arr[i] > max_2) {\n            max_3 = max_2;\n            max_2 = arr[i];\n        }\n        else if(arr[i] > max_3) {\n            max_3 = arr[i];\n        }\n        if(arr[i] < min_1) {\n            min_2 = min_1;\n            min_1 = arr[i];\n        }\n        else if(arr[i] < min_2) {\n            min_2 = arr[i];\n        }\n    }\n    max_product = std::max(max_1 * max_2 * max_3, max_1 * min_1 * min_2);\n    return max_product;",
    "    long max1 = arr[0];\n    long max2 = arr[1];\n    long min1 = arr[0];\n    long min2 = arr[1];\n    long max_product = max1*max2;\n    for(int i = 2; i < arr.size(); i++) {\n        if(arr[i] > max1) {\n            max2 = max1;\n            max1 = arr[i];\n        } else if(arr[i] > max2) {\n            max2 = arr[i];\n        }\n        if(arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        } else if(arr[i] < min2) {\n            min2 = arr[i];\n        }\n        max_product = std::max(max_product, std::max(max1*max2, min1*min2));\n    }\n    return max_product;",
    "    long max1 = INT_MIN;\n    long max2 = INT_MIN;\n    long max3 = INT_MIN;\n    long min1 = INT_MAX;\n    long min2 = INT_MAX;\n    for(int i=0;i<arr.size();i++) {\n        if(arr[i] > max1) {\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if(arr[i] > max2) {\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if(arr[i] > max3) {\n            max3 = arr[i];\n        }\n        if(arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if(arr[i] < min2) {\n            min2 = arr[i];\n        }\n    }\n    return std::max(max1*max2*max3, max1*min1*min2);",
    "    long max1 = INT_MIN, max2 = INT_MIN, max3 = INT_MIN;\n    long min1 = INT_MAX, min2 = INT_MAX;\n    for (int i = 0; i < arr.size(); i++) {\n        if (arr[i] > max1) {\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        }\n        else if (arr[i] > max2) {\n            max3 = max2;\n            max2 = arr[i];\n        }\n        else if (arr[i] > max3) {\n            max3 = arr[i];\n        }\n        if (arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        }\n        else if (arr[i] < min2) {\n            min2 = arr[i];\n        }\n    }\n    return std::max(max1 * max2 * max3, max1 * min1 * min2);",
    "\tlong max_product = 0;\n\tlong first_max = 0;\n\tlong second_max = 0;\n\tfor(int i = 0; i < arr.size(); i++) {\n\t\tif(arr[i] > first_max) {\n\t\t\tsecond_max = first_max;\n\t\t\tfirst_max = arr[i];\n\t\t}\n\t\telse if(arr[i] > second_max) {\n\t\t\tsecond_max = arr[i];\n\t\t}\n\t}\n\tmax_product = first_max * second_max;\n\treturn max_product;",
    "    long max1 = INT_MIN, max2 = INT_MIN, max3 = INT_MIN;\n    long min1 = INT_MAX, min2 = INT_MAX;\n    for(int i = 0; i < arr.size(); i++) {\n        if(arr[i] > max1) {\n            max3 = max2;\n            max2 = max1;\n            max1 = arr[i];\n        } else if(arr[i] > max2) {\n            max3 = max2;\n            max2 = arr[i];\n        } else if(arr[i] > max3) {\n            max3 = arr[i];\n        }\n        if(arr[i] < min1) {\n            min2 = min1;\n            min1 = arr[i];\n        } else if(arr[i] < min2) {\n            min2 = arr[i];\n        }\n    }\n    return std::max(max1 * max2 * max3, max1 * min1 * min2);"
  ]
}
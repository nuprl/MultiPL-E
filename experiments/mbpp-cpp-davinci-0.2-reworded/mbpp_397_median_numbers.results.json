{
  "name": "mbpp_397_median_numbers",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_397_median_numbers.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a > b) {\n        if(b > c) {\n            return b;\n        } else if(a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a > c) {\n            return a;\n        } else if(b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b) {\n        if(a>c) {\n            if(b>c) {\n                return b;\n            }\n            else {\n                return c;\n            }\n        }\n        else {\n            return a;\n        }\n    }\n    else {\n        if(b>c) {\n            if(a>c) {\n                return a;\n            }\n            else {\n                return c;\n            }\n        }\n        else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b && a>c) {\n        if(b>c) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    }\n    else if(b>a && b>c) {\n        if(a>c) {\n            return a;\n        }\n        else {\n            return c;\n        }\n    }\n    else if(c>a && c>b) {\n        if(a>b) {\n            return a;\n        }\n        else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if((a>b && a<c) || (a>c && a<b))\n        return a;\n    else if((b>a && b<c) || (b>c && b<a))\n        return b;\n    else\n        return c;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    float median = 0;\n    if (a > b) {\n        if (b > c) {\n            median = b;\n        } else if (a > c) {\n            median = c;\n        } else {\n            median = a;\n        }\n    } else {\n        if (a > c) {\n            median = a;\n        } else if (b > c) {\n            median = c;\n        } else {\n            median = b;\n        }\n    }\n    return median;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (a < c) {\n      return a;\n    } else if (b > c) {\n      return b;\n    } else {\n      return c;\n    }\n  } else if (a < c) {\n    return a;\n  } else if (b < c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp_9gty0v0: /tmp/tmp_9gty0v0.cpp:23: int main(): Assertion `candidate((25), (55), (65)) == (55.0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a > c) {\n    return a;\n  } else if (b > c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a > c) {\n    return a;\n  } else if (b > c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a > c) {\n            if (b > c) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return a;\n        }\n    } else {\n        if (b > c) {\n            if (a > c) {\n                return a;\n            } else {\n                return c;\n            }\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a < b) {\n    if (b < c) {\n      return b;\n    } else if (a < c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a < c) {\n    return a;\n  } else if (b < c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    float median = 0;\n    if(a > b) {\n        if(b > c) {\n            median = b;\n        } else if(a > c) {\n            median = c;\n        } else {\n            median = a;\n        }\n    } else {\n        if(a > c) {\n            median = a;\n        } else if(b > c) {\n            median = c;\n        } else {\n            median = b;\n        }\n    }\n    return median;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b && a>c) {\n        if(b>c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else if(b>a && b>c) {\n        if(a>c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        if(a>b) {\n            return a;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if ((a - b)*(c - a) >= 0)\n        return a;\n    if ((b - a)*(c - b) >= 0)\n        return b;\n    return c;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b && a>c) {\n        if(b>c) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    }\n    else if(b>a && b>c) {\n        if(a>c) {\n            return a;\n        }\n        else {\n            return c;\n        }\n    }\n    else {\n        if(a>b) {\n            return a;\n        }\n        else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a > c) {\n    return a;\n  } else if (b > c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b) {\n        if(b>c) {\n            return b;\n        } else if(a>c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a>c) {\n            return a;\n        } else if(b>c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a > b) {\n        if(b > c) {\n            return b;\n        } else if(a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a > c) {\n            return a;\n        } else if(b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b && a<c || a<b && a>c)\n        return a;\n    if(b>a && b<c || b<a && b>c)\n        return b;\n    if(c>a && c<b || c<a && c>b)\n        return c;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c)\n            return b;\n        else if (a > c)\n            return c;\n        else\n            return a;\n    } else {\n        if (a > c)\n            return a;\n        else if (b > c)\n            return c;\n        else\n            return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (a < c) {\n      return a;\n    } else if (b > c) {\n      return b;\n    } else {\n      return c;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b < c) {\n      return b;\n    } else {\n      return c;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b < c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (c > a) {\n      return a;\n    } else if (c > b) {\n      return c;\n    } else {\n      return b;\n    }\n  } else if (b > c) {\n    return b;\n  } else if (a > c) {\n    return a;\n  } else {\n    return c;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "tmp3kg9z6jf: /tmp/tmp3kg9z6jf.cpp:23: int main(): Assertion `candidate((25), (55), (65)) == (55.0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if(a > b) {\n    if(c > a) {\n      return a;\n    } else if(c > b) {\n      return c;\n    } else {\n      return b;\n    }\n  } else {\n    if(c > b) {\n      return b;\n    } else if(c > a) {\n      return c;\n    } else {\n      return a;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a > b) {\n        if(b > c) {\n            return b;\n        } else if(a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a > c) {\n            return a;\n        } else if(b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (b > c) {\n    if (a > c) {\n      return a;\n    } else {\n      return c;\n    }\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b) {\n        if(b>c) {\n            return b;\n        } else if(a>c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a>c) {\n            return a;\n        } else if(b>c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (c > a) {\n      return a;\n    } else if (c > b) {\n      return c;\n    } else {\n      return b;\n    }\n  } else if (b > c) {\n    return b;\n  } else if (a > c) {\n    return a;\n  } else {\n    return c;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "tmp3kg9z6jf: /tmp/tmp3kg9z6jf.cpp:23: int main(): Assertion `candidate((25), (55), (65)) == (55.0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a > c) {\n            if (b > c) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return a;\n        }\n    } else {\n        if (b > c) {\n            if (a > c) {\n                return a;\n            } else {\n                return c;\n            }\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b < c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if ((a >= b && a <= c) || (a >= c && a <= b))\n        return a;\n    else if ((b >= a && b <= c) || (b >= c && b <= a))\n        return b;\n    else\n        return c;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a > c) {\n    return a;\n  } else if (b > c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n\tif (a > b) {\n\t\tif (b > c) {\n\t\t\treturn b;\n\t\t}\n\t\telse if (a > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn a;\n\t\t}\n\t}\n\telse {\n\t\tif (a > c) {\n\t\t\treturn a;\n\t\t}\n\t\telse if (b > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn b;\n\t\t}\n\t}\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    float median;\n    if (a > b) {\n        if (b > c) {\n            median = b;\n        } else if (a > c) {\n            median = c;\n        } else {\n            median = a;\n        }\n    } else {\n        if (a > c) {\n            median = a;\n        } else if (b > c) {\n            median = c;\n        } else {\n            median = b;\n        }\n    }\n    return median;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b < c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a > c) {\n            if (b > c) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return a;\n        }\n    } else {\n        if (b > c) {\n            if (a > c) {\n                return a;\n            } else {\n                return c;\n            }\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a > c) {\n            if (b > c) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return a;\n        }\n    } else {\n        if (b > c) {\n            if (a > c) {\n                return a;\n            } else {\n                return c;\n            }\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (a < c) {\n      return a;\n    } else if (b > c) {\n      return b;\n    } else {\n      return c;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b < c) {\n      return b;\n    } else {\n      return c;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a > b) {\n        if(a > c) {\n            if(b > c) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return a;\n        }\n    } else {\n        if(b > c) {\n            if(a > c) {\n                return a;\n            } else {\n                return c;\n            }\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a > c) {\n    return a;\n  } else if (b > c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (b > c) {\n    if (a > c) {\n      return a;\n    } else {\n      return c;\n    }\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    float median;\n    if (a < b) {\n        if (b < c) {\n            median = b;\n        } else if (a < c) {\n            median = c;\n        } else {\n            median = a;\n        }\n    } else if (a < c) {\n        median = a;\n    } else if (b < c) {\n        median = c;\n    } else {\n        median = b;\n    }\n    return median;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b) {\n        if(b>c) {\n            return b;\n        } else if(a>c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a>c) {\n            return a;\n        } else if(b>c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a < b) {\n    if (b < c) {\n      return b;\n    } else if (a < c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a < c) {\n    return a;\n  } else if (b < c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n\tif (a > b) {\n\t\tif (b > c) {\n\t\t\treturn b;\n\t\t}\n\t\telse if (a > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn a;\n\t\t}\n\t}\n\telse {\n\t\tif (a > c) {\n\t\t\treturn a;\n\t\t}\n\t\telse if (b > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn b;\n\t\t}\n\t}\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b < c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        }\n        else if (a > c) {\n            return c;\n        }\n        else {\n            return a;\n        }\n    }\n    else {\n        if (a > c) {\n            return a;\n        }\n        else if (b > c) {\n            return c;\n        }\n        else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b && a < c) {\n        return a;\n    } else if (b > a && b < c) {\n        return b;\n    } else if (c > a && c < b) {\n        return c;\n    } else if (a > c && a < b) {\n        return a;\n    } else if (b > c && b < a) {\n        return b;\n    } else if (c > b && c < a) {\n        return c;\n    } else if (a == b && b == c) {\n        return a;\n    } else if (a == b) {\n        return a;\n    } else if (b == c) {\n        return b;\n    } else if (a == c) {\n        return a;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n\tif (a > b) {\n\t\tif (b > c) {\n\t\t\treturn b;\n\t\t}\n\t\telse if (a > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn a;\n\t\t}\n\t}\n\telse {\n\t\tif (a > c) {\n\t\t\treturn a;\n\t\t}\n\t\telse if (b > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn b;\n\t\t}\n\t}\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a < c) {\n            return a;\n        } else if (b < c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (a > c) {\n      return (b > c) ? b : c;\n    } else {\n      return a;\n    }\n  } else {\n    if (b > c) {\n      return (a > c) ? a : c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b) {\n        if(b>c) {\n            return b;\n        }\n        else if(a>c) {\n            return c;\n        }\n        else {\n            return a;\n        }\n    }\n    else {\n        if(a>c) {\n            return a;\n        }\n        else if(b>c) {\n            return c;\n        }\n        else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a < b) {\n    if (b < c) {\n      return b;\n    } else if (a < c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a < c) {\n    return a;\n  } else if (b < c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        }\n        else if (a > c) {\n            return c;\n        }\n        else {\n            return a;\n        }\n    }\n    else {\n        if (a > c) {\n            return a;\n        }\n        else if (b > c) {\n            return c;\n        }\n        else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a > c) {\n            if (b > c) {\n                return b;\n            } else {\n                return c;\n            }\n        } else {\n            return a;\n        }\n    } else {\n        if (b > c) {\n            if (a > c) {\n                return a;\n            } else {\n                return c;\n            }\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else if (a > c) {\n    return a;\n  } else if (b > c) {\n    return c;\n  } else {\n    return b;\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b && a>c) {\n        if(b>c) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    }\n    else if(b>a && b>c) {\n        if(a>c) {\n            return a;\n        }\n        else {\n            return c;\n        }\n    }\n    else {\n        if(a>b) {\n            return a;\n        }\n        else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b < c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "tmp12tezp0s: /tmp/tmp12tezp0s.cpp:23: int main(): Assertion `candidate((25), (55), (65)) == (55.0)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b < c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a>b) {\n        if(b>c) {\n            return b;\n        } else if(a>c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a>c) {\n            return a;\n        } else if(b>c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n\tif (a > b) {\n\t\tif (b > c) {\n\t\t\treturn b;\n\t\t}\n\t\telse if (a > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn a;\n\t\t}\n\t}\n\telse {\n\t\tif (a > c) {\n\t\t\treturn a;\n\t\t}\n\t\telse if (b > c) {\n\t\t\treturn c;\n\t\t}\n\t\telse {\n\t\t\treturn b;\n\t\t}\n\t}\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (b > c) {\n        if (a > c) {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if ((a>b && a<c) || (a<b && a>c)) return a;\n    if ((b>a && b<c) || (b<a && b>c)) return b;\n    if ((c>a && c<b) || (c<a && c>b)) return c;\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123918,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (a < c) {\n            return a;\n        } else if (b > c) {\n            return b;\n        } else {\n            return c;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b < c) {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1666123917,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n  if (a > b) {\n    if (b > c) {\n      return b;\n    } else if (a > c) {\n      return c;\n    } else {\n      return a;\n    }\n  } else {\n    if (a > c) {\n      return a;\n    } else if (b > c) {\n      return c;\n    } else {\n      return b;\n    }\n  }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if(a > b) {\n        if(b > c) {\n            return b;\n        } else if(a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if(a > c) {\n            return a;\n        } else if(b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a < b) {\n        if (b < c) {\n            return b;\n        } else if (a < c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a < c) {\n        return a;\n    } else if (b < c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else {\n        if (a > c) {\n            return a;\n        } else if (b > c) {\n            return c;\n        } else {\n            return b;\n        }\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the median of three numbers.\nfloat median_numbers(long a, long b, long c) {\n    if (a > b) {\n        if (b > c) {\n            return b;\n        } else if (a > c) {\n            return c;\n        } else {\n            return a;\n        }\n    } else if (a > c) {\n        return a;\n    } else if (b > c) {\n        return c;\n    } else {\n        return b;\n    }\n}\nint main() {\n    auto candidate = median_numbers;\n    assert(candidate((25), (55), (65)) == (55.0));\n    assert(candidate((20), (10), (30)) == (20.0));\n    assert(candidate((15), (45), (75)) == (45.0));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
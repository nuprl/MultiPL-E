{
  "name": "mbpp_604_reverse_words",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to reverse words seperated by spaces in a given string.\nstd::string reverse_words(std::string s) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = reverse_words;\n    assert(candidate((\"python program\")) == (\"program python\"));\n    assert(candidate((\"java language\")) == (\"language java\"));\n    assert(candidate((\"indian man\")) == (\"man indian\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string result = \"\";\n    int i = 0;\n    while(i < s.length()) {\n        std::string temp = \"\";\n        while(i < s.length() && s[i] != ' ') {\n            temp += s[i];\n            i++;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result += temp;\n        if(i < s.length()) {\n            result += \" \";\n            i++;\n        }\n    }\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while (i < s.size()) {\n        int j = i;\n        while (j < s.size() && s[j] != ' ') {\n            j++;\n        }\n        for (int k = j - 1; k >= i; k--) {\n            result += s[k];\n        }\n        if (j < s.size()) {\n            result += ' ';\n        }\n        i = j + 1;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    int i = 0;\n    int j = 0;\n    int n = s.size();\n    while(j < n) {\n        while(j < n && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        i = j + 1;\n        j = i;\n    }\n    return s;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            if (word.size() > 0) {\n                result = word + \" \" + result;\n                word = \"\";\n            }\n        } else {\n            word += s[i];\n        }\n    }\n    if (word.size() > 0) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = \" \" + word + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' ') {\n            if (word.size() > 0) {\n                result = word + \" \" + result;\n                word.clear();\n            }\n        } else {\n            word += c;\n        }\n    }\n    if (word.size() > 0) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    int i = 0;\n    int j = 0;\n    int n = s.size();\n    while (i < n) {\n        while (i < n && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while (j < n && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        i = j;\n    }\n    return s;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string> words;\n    while(ss >> word) {\n        words.push_back(word);\n    }\n    std::string result = \"\";\n    for(int i = words.size() - 1; i >= 0; i--) {\n        result += words[i];\n        if(i != 0) {\n            result += \" \";\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result = \"\";\n    int i = s.length() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (result.length() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.size();i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    int i = s.size() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (!result.empty()) {\n            result.push_back(' ');\n        }\n        std::string temp;\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result;\n    std::string temp;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] != ' ') {\n            temp.push_back(s[i]);\n        } else {\n            result = \" \" + temp + result;\n            temp.clear();\n        }\n    }\n    result = temp + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0; i<s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "  std::string result;\n  std::string word;\n  std::stringstream ss(s);\n  while (ss >> word) {\n    result = word + \" \" + result;\n  }\n  return result;",
    "    std::string result;\n    int i = 0;\n    while(i < s.size()) {\n        int j = i;\n        while(j < s.size() && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        i = j + 1;\n    }\n    return s;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word.push_back(s[i]);\n        } else {\n            result.insert(0, word);\n            result.insert(0, \" \");\n            word.clear();\n        }\n    }\n    result.insert(0, word);\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  std::stringstream ss(s);\n  std::string word;\n  while(ss >> word) {\n    std::reverse(word.begin(), word.end());\n    result += word + \" \";\n  }\n  result.pop_back();\n  return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string res;\n    std::string word;\n    for(int i=0; i<s.size(); i++) {\n        if(s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while (i < s.length()) {\n        int j = i;\n        while (j < s.length() && s[j] != ' ') {\n            j++;\n        }\n        std::string word = s.substr(i, j-i);\n        std::reverse(word.begin(), word.end());\n        result += word;\n        if (j < s.length()) {\n            result += \" \";\n        }\n        i = j+1;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += c;\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] != ' ') {\n            word.push_back(s[i]);\n        } else {\n            result = word + \" \" + result;\n            word.clear();\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        res = word + \" \" + res;\n    }\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result.substr(0, result.length() - 1);",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.size();i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    int i = 0;\n    int j = 0;\n    int n = s.size();\n    std::string result = \"\";\n    while(i < n) {\n        while(i < n && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while(j < n && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        result += s.substr(i, j - i) + \" \";\n        i = j;\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  std::string temp;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ') {\n      result = temp + \" \" + result;\n      temp.clear();\n    } else {\n      temp += s[i];\n    }\n  }\n  result = temp + \" \" + result;\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  std::string word;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string> words;\n    while(ss >> word) {\n        words.push_back(word);\n    }\n    std::string result;\n    for(int i = words.size() - 1; i >= 0; i--) {\n        result += words[i];\n        if(i != 0) {\n            result += \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    int i = s.size() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (!result.empty()) {\n            result.push_back(' ');\n        }\n        std::string temp;\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            if (word.size() > 0) {\n                result = word + \" \" + result;\n                word.clear();\n            }\n        } else {\n            word += s[i];\n        }\n    }\n    if (word.size() > 0) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string temp;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = temp + \" \" + result;\n            temp = \"\";\n        }\n        else {\n            temp += s[i];\n        }\n    }\n    result = temp + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (auto c : s) {\n        if (c == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += c;\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = \" \" + word + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    int start = 0;\n    int end = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            end = i - 1;\n            while (start <= end) {\n                result += s[end];\n                end--;\n            }\n            result += ' ';\n            start = i + 1;\n        }\n    }\n    end = s.length() - 1;\n    while (start <= end) {\n        result += s[end];\n        end--;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    int i = 0;\n    int j = 0;\n    int n = s.length();\n    while(i < n) {\n        while(i < n && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while(j < n && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        i = j;\n    }\n    return s;",
    "    std::string result = \"\";\n    int i = s.length() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (result.length() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string res;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        res += word + \" \";\n    }\n    res.pop_back();\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string temp;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = temp + \" \" + result;\n            temp = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n    result = temp + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word.clear();\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res;\n    std::string word;\n    for(int i=0;i<s.size();i++) {\n        if(s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "  std::string result;\n  std::string word;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result;\n    std::string temp;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = temp + \" \" + result;\n            temp = \"\";\n        } else {\n            temp += s[i];\n        }\n    }\n    result = temp + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.length();i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result = \"\";\n    int start = 0;\n    int end = 0;\n    while(end < s.length()) {\n        while(s[end] != ' ' && end < s.length()) {\n            end++;\n        }\n        for(int i = end - 1; i >= start; i--) {\n            result += s[i];\n        }\n        result += ' ';\n        end++;\n        start = end;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.size();i++) {\n        if(s[i]==' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string reversed_string = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            reversed_string = word + \" \" + reversed_string;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    reversed_string = word + \" \" + reversed_string;\n    return reversed_string;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::stack<std::string> st;\n    while(ss >> word) {\n        st.push(word);\n    }\n    std::string res;\n    while(!st.empty()) {\n        res += st.top();\n        st.pop();\n        if(!st.empty()) {\n            res += \" \";\n        }\n    }\n    return res;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = \" \" + word + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    int i = 0;\n    int j = 0;\n    int len = s.length();\n    while(i < len) {\n        while(i < len && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while(i < len && s[i] != ' ') {\n            i++;\n        }\n        std::reverse(s.begin() + j, s.begin() + i);\n    }\n    return s;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    int i = 0;\n    int j = 0;\n    while(i < s.size()) {\n        while(i < s.size() && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while(j < s.size() && s[j] != ' ') {\n            j++;\n        }\n        std::reverse(s.begin() + i, s.begin() + j);\n        i = j;\n    }\n    return s;",
    "    std::string result = \"\";\n    int i = s.size() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (result.size() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  int i = 0;\n  int j = 0;\n  int n = s.size();\n  std::string result;\n  while (i < n) {\n    while (i < n && s[i] == ' ') {\n      i++;\n    }\n    j = i;\n    while (j < n && s[j] != ' ') {\n      j++;\n    }\n    if (i < n) {\n      std::string word = s.substr(i, j - i);\n      if (result.size() > 0) {\n        result = word + \" \" + result;\n      } else {\n        result = word;\n      }\n    }\n    i = j;\n  }\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length() > 0) {\n                result = word + \" \" + result;\n                word = \"\";\n            }\n        } else {\n            word += s[i];\n        }\n    }\n    if (word.length() > 0) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    int j = 0;\n    while (i < s.length()) {\n        while (i < s.length() && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while (j < s.length() && s[j] != ' ') {\n            j++;\n        }\n        if (i < s.length()) {\n            std::string word = s.substr(i, j - i);\n            std::reverse(word.begin(), word.end());\n            result += word;\n            result += ' ';\n        }\n        i = j;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::reverse(s.begin(), s.end());\n    int start = 0;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            std::reverse(s.begin() + start, s.begin() + i);\n            start = i + 1;\n        }\n    }\n    std::reverse(s.begin() + start, s.end());\n    return s;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string> words;\n    while(ss >> word) {\n        words.push_back(word);\n    }\n    std::string result;\n    for(int i = words.size() - 1; i >= 0; i--) {\n        result += words[i];\n        if(i != 0) {\n            result += \" \";\n        }\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result;\n  int i = s.length() - 1;\n  while (i >= 0) {\n    while (i >= 0 && s[i] == ' ') {\n      i--;\n    }\n    if (i < 0) {\n      break;\n    }\n    if (!result.empty()) {\n      result.push_back(' ');\n    }\n    std::string temp;\n    while (i >= 0 && s[i] != ' ') {\n      temp.push_back(s[i]);\n      i--;\n    }\n    std::reverse(temp.begin(), temp.end());\n    result.append(temp);\n  }\n  return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::string result = \"\";\n    int i = s.size() - 1;\n    while(i >= 0) {\n        while(i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if(i < 0) {\n            break;\n        }\n        if(result.size() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while(i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result += temp;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            if (word.length() > 0) {\n                result = word + \" \" + result;\n                word = \"\";\n            }\n        } else {\n            word += s[i];\n        }\n    }\n    if (word.length() > 0) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    int i = s.size() - 1;\n    while(i >= 0) {\n        while(i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if(i < 0) {\n            break;\n        }\n        if(result.size() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while(i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result += temp;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(i < s.length()) {\n        int j = i;\n        while(j < s.length() && s[j] != ' ') {\n            j++;\n        }\n        std::string word = s.substr(i, j - i);\n        std::reverse(word.begin(), word.end());\n        res += word;\n        if(j < s.length()) {\n            res += \" \";\n        }\n        i = j + 1;\n    }\n    return res;",
    "    std::string result;\n    std::string word;\n    for(int i=0;i<s.length();i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    int i = s.length() - 1;\n    while (i >= 0) {\n        while (i >= 0 && s[i] == ' ') {\n            i--;\n        }\n        if (i < 0) {\n            break;\n        }\n        if (result.length() != 0) {\n            result.push_back(' ');\n        }\n        std::string temp = \"\";\n        while (i >= 0 && s[i] != ' ') {\n            temp.push_back(s[i]);\n            i--;\n        }\n        std::reverse(temp.begin(), temp.end());\n        result.append(temp);\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    int j = 0;\n    while (i < s.size()) {\n        while (i < s.size() && s[i] == ' ') {\n            i++;\n        }\n        j = i;\n        while (j < s.size() && s[j] != ' ') {\n            j++;\n        }\n        if (i < s.size()) {\n            std::string word = s.substr(i, j - i);\n            std::reverse(word.begin(), word.end());\n            result += word;\n            result += \" \";\n        }\n        i = j;\n    }\n    return result;",
    "  std::string result = \"\";\n  std::string word = \"\";\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == ' ') {\n      result = word + \" \" + result;\n      word = \"\";\n    } else {\n      word += s[i];\n    }\n  }\n  result = word + \" \" + result;\n  return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while (i < s.length()) {\n        int j = i;\n        while (j < s.length() && s[j] != ' ') {\n            j++;\n        }\n        for (int k = j-1; k >= i; k--) {\n            result += s[k];\n        }\n        i = j+1;\n        if (i < s.length()) {\n            result += ' ';\n        }\n    }\n    return result;",
    "    std::string res;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            res = word + \" \" + res;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    res = word + \" \" + res;\n    return res;",
    "    int n = s.size();\n    int i = 0;\n    int j = 0;\n    while(i < n) {\n        while(i < n && s[i] == ' ') {\n            i++;\n        }\n        if(i >= n) {\n            break;\n        }\n        if(j > 0) {\n            s[j++] = ' ';\n        }\n        int start = j;\n        while(i < n && s[i] != ' ') {\n            s[j++] = s[i++];\n        }\n        std::reverse(s.begin() + start, s.begin() + j);\n    }\n    s.erase(s.begin() + j, s.end());\n    std::reverse(s.begin(), s.end());\n    return s;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n        else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "  std::stringstream ss(s);\n  std::string word;\n  std::string result;\n  while(ss >> word) {\n    std::reverse(word.begin(), word.end());\n    result += word + \" \";\n  }\n  result.pop_back();\n  return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); ++i) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word.clear();\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i=0; i<s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for(int i = 0; i < s.size(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != ' ') {\n            word += s[i];\n        } else {\n            result = word + \" \" + result;\n            word = \"\";\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while (ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    std::istringstream iss(s);\n    while(iss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result;\n    std::string word;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::stringstream ss(s);\n    std::string word;\n    std::string result;\n    while(ss >> word) {\n        std::reverse(word.begin(), word.end());\n        result += word + \" \";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    std::string word;\n    std::stringstream ss(s);\n    while(ss >> word) {\n        result = word + \" \" + result;\n    }\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            result = word + \" \" + result;\n            word = \"\";\n        } else {\n            word += s[i];\n        }\n    }\n    result = word + \" \" + result;\n    return result;",
    "    std::string result = \"\";\n    std::string word = \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(s[i] == ' ') {\n            if(word.length() > 0) {\n                result = word + \" \" + result;\n                word = \"\";\n            }\n        } else {\n            word += s[i];\n        }\n    }\n    if(word.length() > 0) {\n        result = word + \" \" + result;\n    }\n    return result;"
  ]
}
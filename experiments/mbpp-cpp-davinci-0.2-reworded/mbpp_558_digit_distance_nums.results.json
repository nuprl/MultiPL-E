{
  "name": "mbpp_558_digit_distance_nums",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs(n1 % 10 - n2 % 10);\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 != 0 || n2 != 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    // Write your code here\n    long sum = 0;\n    while(n1 != 0 || n2 != 0) {\n        sum += abs(n1%10 - n2%10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 != 0 || n2 != 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  long diff = 0;\n  while (n1 > 0 || n2 > 0) {\n    if (n1 > 0) {\n      sum += n1 % 10;\n      n1 /= 10;\n    }\n    if (n2 > 0) {\n      sum -= n2 % 10;\n      n2 /= 10;\n    }\n  }\n  return abs(sum);\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    int sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += std::abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs(n1%10 - n2%10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    long diff = 0;\n    while (n1 > 0 || n2 > 0) {\n        if (n1 > 0) {\n            sum += n1 % 10;\n            n1 /= 10;\n        }\n        if (n2 > 0) {\n            sum -= n2 % 10;\n            n2 /= 10;\n        }\n    }\n    return abs(sum);\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    // Write your code here\n    long sum=0;\n    while(n1>0 || n2>0)\n    {\n        long a=n1%10;\n        long b=n2%10;\n        sum+=abs(a-b);\n        n1/=10;\n        n2/=10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        if(n1 > 0) {\n            sum += n1 % 10;\n            n1 /= 10;\n        }\n        if(n2 > 0) {\n            sum += n2 % 10;\n            n2 /= 10;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "tmpyi3uyhyd: /tmp/tmpyi3uyhyd.cpp:20: int main(): Assertion `candidate((1), (2)) == (1)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 != 0 || n2 != 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs(n1 % 10 - n2 % 10);\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 && n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    while (n1 > 0) {\n        sum += n1 % 10;\n        n1 /= 10;\n    }\n    while (n2 > 0) {\n        sum += n2 % 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    int sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    // your code here\n    long sum = 0;\n    while(n1 != 0 || n2 != 0){\n        long a = n1 % 10;\n        long b = n2 % 10;\n        sum += abs(a - b);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs(n1%10 - n2%10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        if (n1 > 0) {\n            sum += n1 % 10;\n            n1 /= 10;\n        }\n        if (n2 > 0) {\n            sum -= n2 % 10;\n            n2 /= 10;\n        }\n    }\n    return abs(sum);\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        if(n1 > 0) {\n            sum += n1 % 10;\n            n1 /= 10;\n        }\n        if(n2 > 0) {\n            sum += n2 % 10;\n            n2 /= 10;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "tmpyi3uyhyd: /tmp/tmpyi3uyhyd.cpp:20: int main(): Assertion `candidate((1), (2)) == (1)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        if (n1 > 0) {\n            sum += n1 % 10;\n            n1 /= 10;\n        }\n        if (n2 > 0) {\n            sum -= n2 % 10;\n            n2 /= 10;\n        }\n    }\n    return abs(sum);\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  int sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  // your code here\n  long sum=0;\n  while(n1>0 || n2>0){\n    if(n1>0){\n      sum+=n1%10;\n      n1/=10;\n    }\n    if(n2>0){\n      sum-=n2%10;\n      n2/=10;\n    }\n  }\n  return abs(sum);\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    int sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        if (n1 > 0) {\n            sum += n1 % 10;\n            n1 /= 10;\n        }\n        if (n2 > 0) {\n            sum += n2 % 10;\n            n2 /= 10;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "tmp7iw_u4j0: /tmp/tmp7iw_u4j0.cpp:20: int main(): Assertion `candidate((1), (2)) == (1)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    int sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 != 0 || n2 != 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        if (n1 > 0) {\n            sum += n1 % 10;\n            n1 /= 10;\n        }\n        if (n2 > 0) {\n            sum += n2 % 10;\n            n2 /= 10;\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "tmp7iw_u4j0: /tmp/tmp7iw_u4j0.cpp:20: int main(): Assertion `candidate((1), (2)) == (1)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    if (n1 > 0) {\n      sum += n1 % 10;\n      n1 /= 10;\n    }\n    if (n2 > 0) {\n      sum -= n2 % 10;\n      n2 /= 10;\n    }\n  }\n  return abs(sum);\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while(n1 > 0 || n2 > 0) {\n    sum += abs(n1 % 10 - n2 % 10);\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    if(n1==n2)\n        return 0;\n    long sum=0;\n    while(n1!=0 || n2!=0){\n        sum+=abs(n1%10-n2%10);\n        n1/=10;\n        n2/=10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 && n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    while (n1 > 0) {\n        sum += n1 % 10;\n        n1 /= 10;\n    }\n    while (n2 > 0) {\n        sum += n2 % 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs(n1 % 10 - n2 % 10);\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 != 0 || n2 != 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
      "timestamp": 1665510312,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
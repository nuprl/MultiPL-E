{
  "name": "mbpp_77_is_Diff",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find whether a number is divisible by 11.\nbool is_Diff(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = is_Diff;\n    assert(candidate((12345)) == (false));\n    assert(candidate((1212112)) == (true));\n    assert(candidate((1212)) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    int odd = 0, even = 0;\n    while (n) {\n        if (n & 1)\n            odd++;\n        else\n            even++;\n        n >>= 1;\n    }\n    return (odd - even) % 11 == 0;",
    "    int even_sum = 0;\n    int odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum) % 11 == 0;",
    "    int even_sum = 0;\n    int odd_sum = 0;\n    int i = 0;\n    while(n) {\n        if(i%2 == 0) {\n            even_sum += n%10;\n        }\n        else {\n            odd_sum += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;",
    "    int even = 0, odd = 0;\n    while (n) {\n        if (n & 1)\n            odd += 1;\n        else\n            even += 1;\n        n = n >> 1;\n    }\n    return (abs(odd - even) % 3 == 0);",
    "    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long odd_digits = 0;\n    long even_digits = 0;\n    while (n) {\n        if (n & 1) {\n            odd_digits += n % 10;\n        } else {\n            even_digits += n % 10;\n        }\n        n = n / 10;\n    }\n    return is_Diff(abs(odd_digits - even_digits));",
    "    int even = 0;\n    int odd = 0;\n    while(n) {\n        if(n&1) {\n            odd += n%10;\n        } else {\n            even += n%10;\n        }\n        n /= 10;\n    }\n    return abs(even - odd) % 11 == 0;",
    "    if(n<0)\n        n=-n;\n    if(n==0 || n==11)\n        return true;\n    if(n<10)\n        return false;\n    return is_Diff((n/10)-(n%10));",
    "    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;",
    "    int odd_sum = 0;\n    int even_sum = 0;\n    int i = 0;\n    while(n != 0) {\n        if(i % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(odd_sum - even_sum) % 11 == 0;",
    "    if (n < 0) {\n        n = -n;\n    }\n    if (n == 0 || n == 11) {\n        return true;\n    }\n    if (n < 10) {\n        return false;\n    }\n    return is_Diff((n / 10) - (n % 10));",
    "    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum)%11 == 0;",
    "    int even_sum = 0;\n    int odd_sum = 0;\n    int count = 0;\n    while (n != 0) {\n        if (count % 2 == 0) {\n            even_sum += n % 10;\n        } else {\n            odd_sum += n % 10;\n        }\n        n /= 10;\n        count++;\n    }\n    return (abs(even_sum - odd_sum) % 11 == 0);",
    "    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 11)\n        return true;\n    if (n < 10)\n        return false;\n    return is_Diff((n / 10 - n % 10 * 2) % 11);",
    "    long even_sum = 0;\n    long odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        if (n) {\n            odd_sum += n % 10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum) % 11 == 0;",
    "    long even_sum = 0;\n    long odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        odd_sum += n%10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;",
    "    long even_sum = 0;\n    long odd_sum = 0;\n    while (n > 0) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return abs(even_sum - odd_sum) % 11 == 0;",
    "\tint even = 0, odd = 0;\n\twhile (n) {\n\t\tif (n % 2 == 0) {\n\t\t\teven += n % 10;\n\t\t}\n\t\telse {\n\t\t\todd += n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn (abs(even - odd) % 11 == 0);",
    "    int even_sum = 0, odd_sum = 0;\n    while (n) {\n        even_sum += n % 10;\n        n /= 10;\n        odd_sum += n % 10;\n        n /= 10;\n    }\n    return (even_sum - odd_sum) % 11 == 0;",
    "    int sum_even = 0;\n    int sum_odd = 0;\n    int i = 0;\n    while(n) {\n        if(i%2 == 0) {\n            sum_even += n%10;\n        } else {\n            sum_odd += n%10;\n        }\n        n /= 10;\n        i++;\n    }\n    return abs(sum_even - sum_odd)%11 == 0;",
    "    int even_sum = 0;\n    int odd_sum = 0;\n    while(n) {\n        even_sum += n%10;\n        n /= 10;\n        if(n) {\n            odd_sum += n%10;\n            n /= 10;\n        }\n    }\n    return (even_sum - odd_sum)%11 == 0;"
  ]
}
{
  "name": "mbpp_756_text_match_zero_one",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a+b\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp6yjrfon1: /tmp/tmp6yjrfon1.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b))\n\t\tmatch = true;\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp06v54v98: /tmp/tmp06v54v98.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex self_regex(\"ab?\");\n\tif (std::regex_match(text, self_regex)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpr42oeewj: /tmp/tmpr42oeewj.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = regex_match(text, regex(\"a[b]+\"));\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123739,
      "stdout": "",
      "stderr": "/tmp/tmpm1zlofc4.cpp: In function \u2018bool text_match_zero_one(std::string)\u2019:\n/tmp/tmpm1zlofc4.cpp:5:33: error: \u2018regex\u2019 was not declared in this scope; did you mean \u2018std::__cxx11::regex\u2019?\n    5 |  bool match = regex_match(text, regex(\"a[b]+\"));\n      |                                 ^~~~~\n      |                                 std::__cxx11::regex\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpm1zlofc4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:828:32: note: \u2018std::__cxx11::regex\u2019 declared here\n  828 |   typedef basic_regex<char>    regex;\n      |                                ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a[b]+\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpkkdfnagr: /tmp/tmpkkdfnagr.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp3s13x79v: /tmp/tmp3s13x79v.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n  bool match = false;\n  std::regex self_regex(\"ab?\");\n  if (std::regex_match(text, self_regex)) {\n    match = true;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp04ftk0q5: /tmp/tmp04ftk0q5.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a+b\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp6yjrfon1: /tmp/tmp6yjrfon1.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a?b\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp1b4_0xin: /tmp/tmp1b4_0xin.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpj9tcjr6x: /tmp/tmpj9tcjr6x.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a(b?)\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpnmvu9m0o: /tmp/tmpnmvu9m0o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a+b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpw6yuc8kb: /tmp/tmpw6yuc8kb.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n  bool match = false;\n  std::regex self_regex(\"ab?\");\n  if (std::regex_match(text, self_regex)) {\n    match = true;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp04ftk0q5: /tmp/tmp04ftk0q5.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = regex_match(text, std::regex(\"a?b\"));\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp2t5j0891: /tmp/tmp2t5j0891.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a?b\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp1b4_0xin: /tmp/tmp1b4_0xin.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpj9tcjr6x: /tmp/tmpj9tcjr6x.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = regex_match(text, std::regex(\"a?b\"));\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp2t5j0891: /tmp/tmp2t5j0891.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex self_regex(\"a?b\");\n    if (std::regex_match(text, self_regex)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpkbj4a59w: /tmp/tmpkbj4a59w.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a?b\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp1b4_0xin: /tmp/tmp1b4_0xin.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b))\n\t\tmatch = true;\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp06v54v98: /tmp/tmp06v54v98.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex self_regex(\"ab?\");\n    if (std::regex_match(text, self_regex)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpia84o80t: /tmp/tmpia84o80t.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex self_regex(\"ab?\");\n    if (std::regex_match(text, self_regex))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmphfbfyjz2: /tmp/tmphfbfyjz2.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"a+b\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp_7mkisun: /tmp/tmp_7mkisun.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex self_regex(\"a?b\");\n    if (std::regex_match(text, self_regex))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpdmzmpnbd: /tmp/tmpdmzmpnbd.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a+b*\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpsuxeve0u: /tmp/tmpsuxeve0u.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex self_regex(\"ab?\");\n    if (std::regex_match(text, self_regex))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmphfbfyjz2: /tmp/tmphfbfyjz2.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"a+b\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpmrtg8o5z: /tmp/tmpmrtg8o5z.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b))\n\t\tmatch = true;\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp06v54v98: /tmp/tmp06v54v98.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b)?\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp814p4oy5: /tmp/tmp814p4oy5.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex self_regex(\"ab?\");\n    if (std::regex_match(text, self_regex)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpia84o80t: /tmp/tmpia84o80t.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpj9tcjr6x: /tmp/tmpj9tcjr6x.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a[b]+\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpkkdfnagr: /tmp/tmpkkdfnagr.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex self_regex(\"ab?\");\n\tif (std::regex_match(text, self_regex)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpr42oeewj: /tmp/tmpr42oeewj.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a[b]+\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpkkdfnagr: /tmp/tmpkkdfnagr.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a?b\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp1b4_0xin: /tmp/tmp1b4_0xin.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n  bool match = false;\n  std::regex self_regex(\"ab?\");\n  if (std::regex_match(text, self_regex)) {\n    match = true;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp04ftk0q5: /tmp/tmp04ftk0q5.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"[a]+[b]+\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp8squ3g2e: /tmp/tmp8squ3g2e.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a?b\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp1b4_0xin: /tmp/tmp1b4_0xin.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex self_regex(\"ab?\");\n\tif (std::regex_match(text, self_regex)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpr42oeewj: /tmp/tmpr42oeewj.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"[a]{1}[b]{1,}\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp_eruc0z1: /tmp/tmp_eruc0z1.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"a(b*)\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpnqgtcpor: /tmp/tmpnqgtcpor.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a(b?)\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpnmvu9m0o: /tmp/tmpnmvu9m0o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpj9tcjr6x: /tmp/tmpj9tcjr6x.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a+b\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpy18p2bn5: /tmp/tmpy18p2bn5.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a(b*)\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp9hv0j500: /tmp/tmp9hv0j500.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b?)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp619hmrc_: /tmp/tmp619hmrc_.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a(b*)\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123743,
      "stdout": "",
      "stderr": "tmpzef75p8g: /tmp/tmpzef75p8g.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a?b\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp1b4_0xin: /tmp/tmp1b4_0xin.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a+b\");\n    if (std::regex_match(text, b)) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmpr_rdmyxu: /tmp/tmpr_rdmyxu.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a(b)?\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmp1dzsi2i4: /tmp/tmp1dzsi2i4.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    match = std::regex_match(text, b);\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmpueu72kfb: /tmp/tmpueu72kfb.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = regex_match(text, std::regex(\"a(b+)\"));\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmpjtigue64: /tmp/tmpjtigue64.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a?b\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcr64yt9: /tmp/tmpqcr64yt9.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"a?b\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmpq36tt667: /tmp/tmpq36tt667.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match (text,b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmph9e819qx: /tmp/tmph9e819qx.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a?b\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp1b4_0xin: /tmp/tmp1b4_0xin.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b?)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmp619hmrc_: /tmp/tmp619hmrc_.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123742,
      "stdout": "",
      "stderr": "tmpj9tcjr6x: /tmp/tmpj9tcjr6x.cpp:14: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    return std::regex_match(text, b);\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp9gvole5o: /tmp/tmp9gvole5o.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = regex_match(text, std::regex(\"a(b*)\"));\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmpzysm1ku1: /tmp/tmpzysm1ku1.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = regex_match(text, std::regex(\"a[b]+\"));\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "tmpslzwf009: /tmp/tmpslzwf009.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"a?b\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmphs21bsag: /tmp/tmphs21bsag.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = regex_match(text, std::regex(\"a(b+)\"));\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpgolpuaa2: /tmp/tmpgolpuaa2.cpp:12: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpli3s4cmm: /tmp/tmpli3s4cmm.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"a[b]+\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "tmp1tuvb2w2: /tmp/tmp1tuvb2w2.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n\tbool match = false;\n\tstd::regex b(\"ab?\");\n\tif (std::regex_match(text, b)) {\n\t\tmatch = true;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmptql5_s3d: /tmp/tmptql5_s3d.cpp:16: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmppqlii4sv: /tmp/tmppqlii4sv.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/cppthon-exercises/re/cppthon-re-exercise-3.php\nbool text_match_zero_one(std::string text) {\n    bool match = false;\n    std::regex b(\"ab?\");\n    if (std::regex_match(text, b))\n        match = true;\n    return match;\n}\nint main() {\n    auto candidate = text_match_zero_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abbbba\")) == (true));\n    assert(candidate((\"dsabbbba\")) == (true));\n    assert(candidate((\"asbbbba\")) == (false));\n    assert(candidate((\"abaaa\")) == (true));\n}\n",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqcucsug9: /tmp/tmpqcucsug9.cpp:15: int main(): Assertion `candidate((\"abbbba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    }
  ]
}
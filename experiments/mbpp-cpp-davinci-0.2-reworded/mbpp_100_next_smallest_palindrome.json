{
  "name": "mbpp_100_next_smallest_palindrome",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the next smallest palindrome of a specified integer, returned as an integer.\nlong next_smallest_palindrome(long num) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_100_next_smallest_palindrome.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = next_smallest_palindrome;\n    assert(candidate((99)) == (101));\n    assert(candidate((1221)) == (1331));\n    assert(candidate((120)) == (121));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long next_palindrome = num;\n    while(next_palindrome <= rev) {\n        next_palindrome++;\n        temp = next_palindrome;\n        rev = 0;\n        while(temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n    }\n    return next_palindrome;",
    "    int n = num;\n    int digits = 0;\n    while(n) {\n        digits++;\n        n /= 10;\n    }\n    int mid = digits/2;\n    int left = mid-1;\n    int right = digits%2 == 0 ? mid : mid+1;\n    while(left >= 0 && num/pow(10, left) == num%10) {\n        left--;\n        right++;\n    }\n    if(left < 0) {\n        return num;\n    }\n    long left_half = num/pow(10, right);\n    long right_half = num%(long)pow(10, mid);\n    if(num/pow(10, left) < num%10) {\n        left_half = left_half-1;\n    }\n    long palindrome = left_half*pow(10, right) + right_half;\n    return palindrome;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(num==rev){\n        num++;\n    }\n    while(num!=rev){\n        num++;\n        temp=num;\n        rev=0;\n        while(temp!=0){\n            rev=rev*10+temp%10;\n            temp/=10;\n        }\n    }\n    return num;",
    "    long temp = num;\n    long rev = 0;\n    while (temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if (num == rev) {\n        return num;\n    }\n    long next_palindrome = num;\n    while (next_palindrome <= rev) {\n        next_palindrome++;\n        temp = next_palindrome;\n        rev = 0;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n    }\n    return next_palindrome;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(num == rev) {\n        return num;\n    }\n    if(num < rev) {\n        return rev;\n    }\n    long temp1 = num;\n    int i = 0;\n    while(temp1 > 0) {\n        temp1 /= 10;\n        i++;\n    }\n    long temp2 = num;\n    long temp3 = num;\n    long temp4 = num;\n    long temp5 = num;\n    long temp6 = num;\n    long temp7 = num;\n    long temp8 = num;\n    long temp9 = num;\n    long temp10 = num;\n    long temp11 = num;\n    long temp12 = num;\n    long temp13 = num;\n    long temp14 = num;\n    long temp15 = num;\n    long temp16 = num;\n    long temp17 = num;\n    long temp18 = num;\n    long temp19 = num;\n    long temp20 = num;\n    long temp21 = num;\n    long temp22 = num;\n    long temp23 = num;\n    long temp24 = num;\n    long temp25 = num;\n    long temp26 = num;\n    long temp27 = num;\n    long temp28 = num;\n    long temp29 = num;\n    long temp30 = num;\n    long temp31 = num;\n    long temp32 = num;\n    long temp33 = num;\n    long temp34 = num;\n    long temp35 = num;\n    long temp36 = num;\n    long temp37 = num;\n    long temp38 = num;\n    long temp39 = num;\n    long temp40 = num;\n    long temp41 = num;\n    long temp42 = num;\n    long temp43 = num;\n    long temp44 = num;\n    long temp45 = num;\n    long temp46 = num;\n    long temp47 = num;\n    long temp48 = num;\n    long temp49 = num;\n   ",
    "    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len/2;\n    int left = mid - 1;\n    int right = (len % 2) ? mid + 1 : mid;\n    bool left_smaller = false;\n    while(left >= 0 && str[left] == str[right]) {\n        left--;\n        right++;\n    }\n    if(left < 0 || str[left] < str[right]) {\n        left_smaller = true;\n    }\n    while(left >= 0) {\n        str[right++] = str[left--];\n    }\n    if(left_smaller) {\n        int carry = 1;\n        left = mid - 1;\n        if(len % 2 == 1) {\n            int num = str[mid] - '0';\n            num += carry;\n            carry = num / 10;\n            num %= 10;\n            str[mid] = num + '0';\n            right = mid + 1;\n        } else {\n            right = mid;\n        }\n        while(left >= 0) {\n            int num = str[left] - '0';\n            num += carry;\n            carry = num / 10;\n            num %= 10;\n            str[left] = num + '0';\n            str[right] = str[left];\n            left--;\n            right++;\n        }\n    }\n    return std::stol(str);",
    "    std::string str = std::to_string(num);\n    int n = str.size();\n    int mid = n/2;\n    int left = mid - 1;\n    int right = (n%2)? mid + 1 : mid;\n    bool left_smaller = false;\n    while(left >= 0 && str[left] == str[right]) {\n        left--;\n        right++;\n    }\n    if(left < 0 || str[left] < str[right]) {\n        left_smaller = true;\n    }\n    while(left >= 0) {\n        str[right++] = str[left--];\n    }\n    if(left_smaller) {\n        int carry = 1;\n        left = mid - 1;\n        if(n%2 == 1) {\n            int num = str[mid] - '0';\n            num += carry;\n            carry = num/10;\n            num = num%10;\n            str[mid] = num + '0';\n            right = mid + 1;\n        } else {\n            right = mid;\n        }\n        while(left >= 0) {\n            int num = str[left] - '0';\n            num += carry;\n            carry = num/10;\n            num = num%10;\n            str[left] = num + '0';\n            str[right] = str[left];\n            left--;\n            right++;\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long temp = num;\n    int len = 0;\n    while(temp) {\n        len++;\n        temp /= 10;\n    }\n    int mid = len/2;\n    long left = num;\n    long right = num;\n    for(int i = 0; i < mid; i++) {\n        left /= 10;\n        right %= (long)pow(10, len - i - 1);\n    }\n    if(left == right) {\n        return num;\n    }\n    else if(left < right) {\n        left++;\n        right = left;\n        for(int i = 0; i < mid; i++) {\n            right *= 10;\n        }\n        return left + right;\n    }\n    else {\n        left--;\n        right = left;\n        for(int i = 0; i < mid; i++) {\n            right *= 10;\n        }\n        return left + right;\n    }",
    "    if (num < 0) {\n        return -1;\n    }\n    if (num < 10) {\n        return num;\n    }\n    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len / 2;\n    int left_mid = (len % 2) ? mid : mid - 1;\n    int i = left_mid;\n    int j = (len % 2) ? mid + 1 : mid;\n    bool left_smaller = false;\n    while (i >= 0 && num_str[i] == num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str[j] = num_str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = left_mid;\n        if (len % 2 == 1) {\n            int num = num_str[mid] - '0' + carry;\n            carry = num / 10;\n            num_str[mid] = (num % 10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int num = num_str[i] - '0' + carry;\n            carry = num / 10;\n            num_str[i] = (num % 10) + '0';\n            num_str[j++] = num_str[i--];\n        }\n    }\n    return std::stol(num_str);",
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long next_palindrome = num;\n    while(next_palindrome <= rev) {\n        next_palindrome++;\n        temp = next_palindrome;\n        rev = 0;\n        while(temp != 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n    }\n    return next_palindrome;",
    "    // Write your code here\n    long n=num;\n    long rev=0;\n    long temp=n;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(rev==n)\n    {\n        return n;\n    }\n    else\n    {\n        long temp1=n+1;\n        long rev1=0;\n        while(temp1!=0)\n        {\n            rev1=rev1*10+temp1%10;\n            temp1=temp1/10;\n        }\n        if(rev1==temp1)\n        {\n            return temp1;\n        }\n        else\n        {\n            return rev;\n        }\n    }",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return rev;\n    }\n    if(rev > num) {\n        return rev;\n    }\n    long pal = num;\n    while(pal < rev) {\n        pal++;\n        temp = pal;\n        rev = 0;\n        while(temp > 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        if(rev == pal) {\n            return rev;\n        }\n    }\n    return -1;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(rev==num)\n    {\n        return num;\n    }\n    else\n    {\n        return rev;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num){\n        return num;\n    }\n    else{\n        return next_smallest_palindrome(num+1);\n    }",
    "    if (num < 0) {\n        return -1;\n    }\n    if (num < 10) {\n        return num;\n    }\n    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len / 2;\n    int left = mid - 1;\n    int right = (len % 2) ? mid + 1 : mid;\n    bool left_smaller = false;\n    while (left >= 0 && str[left] == str[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || str[left] < str[right]) {\n        left_smaller = true;\n    }\n    while (left >= 0) {\n        str[right++] = str[left--];\n    }\n    if (left_smaller) {\n        int carry = 1;\n        left = mid - 1;\n        if (len % 2 == 1) {\n            int num = str[mid] - '0' + carry;\n            carry = num / 10;\n            str[mid] = (num % 10) + '0';\n            right = mid + 1;\n        } else {\n            right = mid;\n        }\n        while (left >= 0) {\n            int num = str[left] - '0' + carry;\n            carry = num / 10;\n            str[left] = (num % 10) + '0';\n            str[right++] = str[left--];\n        }\n    }\n    return std::stol(str);",
    "    long n = num;\n    int digits = 0;\n    while (n > 0) {\n        n /= 10;\n        digits++;\n    }\n    int half_digits = digits / 2;\n    int i = 0;\n    long left = 0;\n    long right = 0;\n    while (i < half_digits) {\n        left = left * 10 + (num % 10);\n        right = right + (num % 10) * pow(10, i);\n        num /= 10;\n        i++;\n    }\n    if (digits % 2 == 1) {\n        left = left * 10 + (num % 10);\n        right = right + (num % 10) * pow(10, i);\n        num /= 10;\n    }\n    if (left < right) {\n        left = left + 1;\n    }\n    long result = left;\n    i = 0;\n    while (i < half_digits) {\n        result = result * 10 + (left % 10);\n        left /= 10;\n        i++;\n    }\n    return result;",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(num == rev) {\n        return num;\n    }\n    if(num > rev) {\n        return rev;\n    }\n    long palindrome = num;\n    while(palindrome <= rev) {\n        palindrome++;\n        temp = palindrome;\n        rev = 0;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        if(palindrome == rev) {\n            return palindrome;\n        }\n    }\n    return -1;",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long next_palindrome = num + 1;\n    while(true) {\n        temp = next_palindrome;\n        rev = 0;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        if(rev == next_palindrome) {\n            return next_palindrome;\n        }\n        next_palindrome++;\n    }",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(num>0)\n    {\n        rev=rev*10+num%10;\n        num=num/10;\n    }\n    if(temp==rev)\n    {\n        return temp;\n    }\n    else\n    {\n        return rev;\n    }",
    "    // Write your code here\n    long i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z;\n    long a[100],b[100];\n    i=0;\n    while(num!=0)\n    {\n        a[i]=num%10;\n        num=num/10;\n        i++;\n    }\n    j=i-1;\n    for(k=0;k<i;k++)\n    {\n        b[k]=a[j];\n        j--;\n    }\n    l=0;\n    for(m=0;m<i;m++)\n    {\n        if(a[m]!=b[m])\n        {\n            l=1;\n            break;\n        }\n    }\n    if(l==0)\n    {\n        for(n=0;n<i;n++)\n        {\n            if(a[n]!=9)\n            {\n                a[n]++;\n                break;\n            }\n            else\n            {\n                a[n]=0;\n            }\n        }\n        if(n==i)\n        {\n            a[i]=1;\n            i++;\n        }\n    }\n    o=0;\n    for(p=i-1;p>=0;p--)\n    {\n        o=o*10+a[p];\n    }\n    return o;",
    "    // Write your code here\n    long temp=num;\n    int n=0;\n    while(temp!=0){\n        temp=temp/10;\n        n++;\n    }\n    if(n==1){\n        return num;\n    }\n    long num1=num;\n    long num2=num;\n    long temp1=num;\n    long temp2=num;\n    long temp3=num;\n    long temp4=num;\n    long temp5=num;\n    long temp6=num;\n    long temp7=num;\n    long temp8=num;\n    long temp9=num;\n    long temp10=num;\n    long temp11=num;\n    long temp12=num;\n    long temp13=num;\n    long temp14=num;\n    long temp15=num;\n    long temp16=num;\n    long temp17=num;\n    long temp18=num;\n    long temp19=num;\n    long temp20=num;\n    long temp21=num;\n    long temp22=num;\n    long temp23=num;\n    long temp24=num;\n    long temp25=num;\n    long temp26=num;\n    long temp27=num;\n    long temp28=num;\n    long temp29=num;\n    long temp30=num;\n    long temp31=num;\n    long temp32=num;\n    long temp33=num;\n    long temp34=num;\n    long temp35=num;\n    long temp36=num;\n    long temp37=num;\n    long temp38=num;\n    long temp39=num;\n    long temp40=num;\n    long temp41=num;\n    long temp42=num;\n    long temp43=num;\n    long temp44=num;\n    long temp45=num;\n    long temp46=num;\n    long temp47=num;\n    long temp48=num;\n    long temp49=num;\n    long temp50=num;\n    long temp51=num;\n    long temp52=num;\n    long temp53=num;\n    long temp54=num;\n    long",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num)\n        return num;\n    else {\n        if(rev > num)\n            return rev;\n        else {\n            temp = num;\n            long count = 0;\n            while(temp != 0) {\n                temp /= 10;\n                count++;\n            }\n            long div = pow(10, count/2);\n            long left = num/div;\n            long right = num%div;\n            if(left == right) {\n                left++;\n                right++;\n                return left*div + right;\n            }\n            else if(left > right) {\n                right = left;\n                return left*div + right;\n            }\n            else {\n                left++;\n                right = left;\n                return left*div + right;\n            }\n        }\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return rev;\n    }\n    if(rev < num) {\n        num++;\n    }\n    while(true) {\n        temp = num;\n        rev = 0;\n        while(temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        if(rev == num) {\n            return num;\n        }\n        num++;\n    }",
    "    std::string s = std::to_string(num);\n    int n = s.size();\n    int mid = n/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n%2)? mid + 1 : mid;\n    while(i >= 0 && s[i] == s[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || s[i] < s[j]) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        s[j] = s[i];\n        i--;\n        j++;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(n%2 == 1) {\n            int x = s[mid] - '0';\n            x += carry;\n            carry = x/10;\n            s[mid] = (x%10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            int x = s[i] - '0';\n            x += carry;\n            carry = x/10;\n            s[i] = (x%10) + '0';\n            s[j++] = s[i--];\n        }\n    }\n    return std::stol(s);",
    "    std::string s = std::to_string(num);\n    int n = s.length();\n    int mid = n/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n % 2) ? mid + 1 : mid;\n    while (i >= 0 && s[i] == s[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || s[i] < s[j]) {\n        leftsmaller = true;\n    }\n    while (i >= 0) {\n        s[j] = s[i];\n        j++;\n        i--;\n    }\n    if (leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (n % 2 == 1) {\n            int x = s[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            s[mid] = (x % 10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = s[i] - '0';\n            x += carry;\n            carry = x / 10;\n            s[i] = (x % 10) + '0';\n            s[j++] = s[i--];\n        }\n    }\n    return std::stol(s);",
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    if(rev < num) {\n        return rev;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2 != 0) {\n        rev2 = rev2 * 10 + temp2 % 10;\n        temp2 /= 10;\n    }\n    if(rev2 > num) {\n        return rev2;\n    }\n    return -1;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev > num){\n        return rev;\n    }\n    else{\n        temp = num;\n        long inc = 1;\n        while(temp > 0){\n            if(temp%10 == 9){\n                temp = temp/10;\n                inc = inc*10;\n            }\n            else{\n                break;\n            }\n        }\n        temp = temp + inc;\n        rev = 0;\n        while(temp > 0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n        return rev;\n    }",
    "    // Write your code here\n    long temp=num;\n    int n=0;\n    while(temp!=0)\n    {\n        n++;\n        temp=temp/10;\n    }\n    long a[n];\n    temp=num;\n    for(int i=0;i<n;i++)\n    {\n        a[i]=temp%10;\n        temp=temp/10;\n    }\n    int mid=n/2;\n    int i=mid-1;\n    int j=(n%2)?mid+1:mid;\n    while(i>=0&&a[i]==a[j])\n    {\n        i--;\n        j++;\n    }\n    if(i<0||a[i]<a[j])\n    {\n        bool left_smaller=false;\n        if(i<0)\n        {\n            left_smaller=true;\n        }\n        while(i>=0)\n        {\n            a[j++]=a[i--];\n        }\n        if(left_smaller==true)\n        {\n            int carry=1;\n            i=mid-1;\n            if(n%2==1)\n            {\n                a[mid]+=carry;\n                carry=a[mid]/10;\n                a[mid]%=10;\n                j=mid+1;\n            }\n            else\n            {\n                j=mid;\n            }\n            while(i>=0)\n            {\n                a[i]+=carry;\n                carry=a[i]/10;\n                a[i]%=10;\n                a[j++]=a[i--];\n            }\n        }\n    }\n    long ans=0;\n    for(int i=0;i<n;i++)\n    {\n        ans=ans*10+a[i];\n    }\n    return ans;",
    "    int length = 0;\n    long temp = num;\n    while(temp != 0) {\n        length++;\n        temp /= 10;\n    }\n    if(length == 1) {\n        return num;\n    }\n    long *arr = new long[length];\n    temp = num;\n    int i = 0;\n    while(temp != 0) {\n        arr[i] = temp % 10;\n        temp /= 10;\n        i++;\n    }\n    int mid = length / 2;\n    bool left_smaller = false;\n    i = mid - 1;\n    if(length % 2 == 0) {\n        while(i >= 0 && arr[i] == arr[length - i - 1]) {\n            i--;\n        }\n        if(i < 0 || arr[i] < arr[length - i - 1]) {\n            left_smaller = true;\n        }\n        while(i >= 0) {\n            arr[length - i - 1] = arr[i];\n            i--;\n        }\n    } else {\n        while(i >= 0 && arr[i] == arr[length - i - 1]) {\n            i--;\n        }\n        if(i < 0 || arr[i] < arr[length - i - 1]) {\n            left_smaller = true;\n        }\n        while(i >= 0) {\n            arr[length - i - 1] = arr[i];\n            i--;\n        }\n    }\n    if(left_smaller == true) {\n        int carry = 1;\n        i = mid - 1;\n        if(length % 2 == 1) {\n            arr[mid] += carry;\n            carry = arr[mid] / 10;\n            arr[mid] %= 10;\n            i = mid - 1;\n        }\n        while(i >= 0) {\n            arr[i] += carry;\n            carry = arr[i] / 10;\n            arr[i] %= 10;\n            arr[length - i - 1] = arr[i];\n            i--;\n        }\n    }\n    long result = 0;\n    for(int i = 0; i <",
    "    // Write your code here\n    long temp = num;\n    int n = 0;\n    while(temp) {\n        temp /= 10;\n        n++;\n    }\n    int mid = n/2;\n    long left = num / pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long left_rev = 0;\n    while(left) {\n        left_rev = left_rev * 10 + left % 10;\n        left /= 10;\n    }\n    if(left_rev > right) {\n        return num - right + left_rev;\n    }\n    else {\n        long ans = num + pow(10, mid);\n        ans -= ans % (long)pow(10, mid);\n        ans += left_rev;\n        return ans;\n    }",
    "    // Write your code here\n    long temp=num;\n    long rev=0,rem;\n    while(temp!=0)\n    {\n        rem=temp%10;\n        rev=rev*10+rem;\n        temp=temp/10;\n    }\n    if(num==rev)\n    {\n        return num;\n    }\n    else\n    {\n        return rev;\n    }",
    "    // TODO: Write - Your - Code\n    long temp = num;\n    long reverse = 0;\n    while(temp > 0){\n        reverse = reverse*10 + temp%10;\n        temp = temp/10;\n    }\n    if(reverse == num){\n        return num;\n    }\n    else{\n        return next_smallest_palindrome(num+1);\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num)\n        return num;\n    if(rev < num){\n        num++;\n        temp = num;\n        rev = 0;\n        while(temp != 0){\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n    }\n    return rev;",
    "    std::string str = std::to_string(num);\n    int n = str.length();\n    int mid = n/2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (n%2)? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (n%2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    if (num == 0) {\n        return 1;\n    }\n    if (num < 0) {\n        return -1;\n    }\n    long temp = num;\n    long digits = 0;\n    while (temp > 0) {\n        temp /= 10;\n        digits++;\n    }\n    if (digits == 1) {\n        return num;\n    }\n    long left = digits / 2;\n    long right = digits - left;\n    long left_num = num / pow(10, right);\n    long right_num = num % (long)pow(10, right);\n    long left_num_copy = left_num;\n    long right_num_copy = right_num;\n    long left_num_rev = 0;\n    long right_num_rev = 0;\n    while (left_num_copy > 0) {\n        left_num_rev = left_num_rev * 10 + left_num_copy % 10;\n        left_num_copy /= 10;\n    }\n    while (right_num_copy > 0) {\n        right_num_rev = right_num_rev * 10 + right_num_copy % 10;\n        right_num_copy /= 10;\n    }\n    if (left_num_rev == right_num_rev) {\n        return num;\n    }\n    if (left_num_rev > right_num_rev) {\n        right_num = left_num_rev;\n    } else {\n        left_num += 1;\n        left_num_rev = 0;\n        left_num_copy = left_num;\n        while (left_num_copy > 0) {\n            left_num_rev = left_num_rev * 10 + left_num_copy % 10;\n            left_num_copy /= 10;\n        }\n        right_num = left_num_rev;\n    }\n    return left_num * pow(10, right) + right_num;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp>0)\n    {\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(rev==num)\n    {\n        return num;\n    }\n    else\n    {\n        return rev;\n    }",
    "    long temp = num;\n    int n = 0;\n    while(temp) {\n        temp /= 10;\n        n++;\n    }\n    if(n == 1) {\n        if(num == 9)\n            return 11;\n        else\n            return num + 1;\n    }\n    int mid = n / 2;\n    long left = num / pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long left_rev = 0;\n    while(left) {\n        left_rev = left_rev * 10 + left % 10;\n        left /= 10;\n    }\n    if(left_rev > right) {\n        return num + pow(10, mid);\n    }\n    else {\n        long new_num = num + pow(10, mid - 1);\n        return next_smallest_palindrome(new_num);\n    }",
    "    // Write your code here\n    string s = to_string(num);\n    int n = s.size();\n    int mid = (n-1)/2;\n    int left = mid;\n    int right = mid;\n    if(n%2==0)\n        right++;\n    while(left>=0 && s[left]==s[right])\n    {\n        left--;\n        right++;\n    }\n    if(left<0)\n        return num;\n    bool left_smaller = false;\n    if(s[left]<s[right])\n        left_smaller = true;\n    while(left>=0)\n    {\n        s[right] = s[left];\n        left--;\n        right++;\n    }\n    if(left_smaller)\n    {\n        int carry = 1;\n        left = mid;\n        if(n%2==1)\n        {\n            int num = s[mid]-'0';\n            num = num+carry;\n            carry = num/10;\n            num = num%10;\n            s[mid] = '0'+num;\n            left--;\n        }\n        right = mid+1;\n        while(left>=0)\n        {\n            int num = s[left]-'0';\n            num = num+carry;\n            carry = num/10;\n            num = num%10;\n            s[left] = '0'+num;\n            s[right] = s[left];\n            left--;\n            right++;\n        }\n    }\n    return stol(s);",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num)\n        return num;\n    if(rev < num) {\n        num++;\n        return next_smallest_palindrome(num);\n    }\n    return rev;",
    "    // Write your code here\n    long num_copy = num;\n    int num_digits = 0;\n    while (num_copy > 0) {\n        num_copy /= 10;\n        num_digits++;\n    }\n    long *digits = new long[num_digits];\n    for (int i = 0; i < num_digits; i++) {\n        digits[i] = num % 10;\n        num /= 10;\n    }\n    int mid = num_digits / 2;\n    int left = mid - 1;\n    int right = (num_digits % 2) ? mid + 1 : mid;\n    bool left_smaller = false;\n    while (left >= 0 && digits[left] == digits[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || digits[left] < digits[right]) {\n        left_smaller = true;\n    }\n    while (left >= 0) {\n        digits[right++] = digits[left--];\n    }\n    if (left_smaller) {\n        int carry = 1;\n        if (num_digits % 2) {\n            digits[mid] += carry;\n            carry = digits[mid] / 10;\n            digits[mid] %= 10;\n            right = mid + 1;\n        } else {\n            right = mid;\n        }\n        left = mid - 1;\n        while (left >= 0) {\n            digits[left] += carry;\n            carry = digits[left] / 10;\n            digits[left] %= 10;\n            digits[right++] = digits[left--];\n        }\n    }\n    long result = 0;\n    for (int i = 0; i < num_digits; i++) {\n        result = result * 10 + digits[i];\n    }\n    return result;",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    if(rev > num) {\n        return rev;\n    }\n    long num1 = num;\n    long num2 = rev;\n    while(num1 != num2) {\n        num1++;\n        temp = num1;\n        rev = 0;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        num2 = rev;\n    }\n    return num1;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long rev1 = 0;\n    while(temp1 > 0) {\n        rev1 = rev1 * 10 + temp1 % 10;\n        temp1 /= 10;\n    }\n    if(rev1 == num) {\n        return num;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2 > 0) {\n        rev2 = rev2 * 10 + temp2 % 10;\n        temp2 /= 10;\n    }\n    if(rev2 == num) {\n        return num;\n    }\n    long temp3 = num;\n    long rev3 = 0;\n    while(temp3 > 0) {\n        rev3 = rev3 * 10 + temp3 % 10;\n        temp3 /= 10;\n    }\n    if(rev3 == num) {\n        return num;\n    }\n    long temp4 = num;\n    long rev4 = 0;\n    while(temp4 > 0) {\n        rev4 = rev4 * 10 + temp4 % 10;\n        temp4 /= 10;\n    }\n    if(rev4 == num) {\n        return num;\n    }\n    long temp5 = num;\n    long rev5 = 0;\n    while(temp5 > 0) {\n        rev5 = rev5 * 10 + temp5 % 10;\n        temp5 /= 10;\n    }\n    if(rev5 == num) {\n        return num;\n    }\n    long temp6 = num;\n    long rev6 = 0;\n    while(temp6 > 0) {\n        rev6 = rev6 * 10 + temp6 % 10;\n        temp6 /= 10;\n    }\n    if(rev6 == num) {\n        return num;\n    }\n    long temp7 = num;\n    long rev7 = 0;\n    while(temp7 >",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp>0){\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(rev==num)\n        return num;\n    else{\n        long temp=num+1;\n        while(true){\n            long rev=0;\n            long temp1=temp;\n            while(temp1>0){\n                rev=rev*10+temp1%10;\n                temp1/=10;\n            }\n            if(rev==temp)\n                return temp;\n            temp++;\n        }\n    }",
    "    int n = num;\n    int i = 0;\n    while(n > 0) {\n        i++;\n        n = n/10;\n    }\n    int j = i;\n    int k = i/2;\n    int l = i - k;\n    int *a = new int[k];\n    int *b = new int[l];\n    int *c = new int[l];\n    n = num;\n    for(int i = 0; i < k; i++) {\n        a[i] = n%10;\n        n = n/10;\n    }\n    for(int i = 0; i < l; i++) {\n        b[i] = n%10;\n        n = n/10;\n    }\n    for(int i = 0; i < l; i++) {\n        c[i] = b[l-i-1];\n    }\n    int flag = 0;\n    for(int i = 0; i < l; i++) {\n        if(c[i] < b[i]) {\n            flag = 1;\n            break;\n        }\n        else if(c[i] > b[i]) {\n            flag = 2;\n            break;\n        }\n    }\n    if(flag == 1) {\n        int carry = 1;\n        for(int i = l-1; i >= 0; i--) {\n            int sum = c[i] + carry;\n            c[i] = sum%10;\n            carry = sum/10;\n        }\n    }\n    else if(flag == 2) {\n        int carry = 1;\n        for(int i = l-1; i >= 0; i--) {\n            int sum = b[i] + carry;\n            b[i] = sum%10;\n            carry = sum/10;\n        }\n    }\n    long ans = 0;\n    for(int i = 0; i < l; i++) {\n        ans = ans*10 + b[i];\n    }\n    for(int i = 0; i < k; i++) {\n        ans = ans*10 + a[k-i-1];\n    }\n",
    "    // Write your code here\n    long n = num;\n    long rev = 0;\n    while(n!=0){\n        rev = rev*10 + n%10;\n        n = n/10;\n    }\n    if(rev>num){\n        return rev;\n    }\n    else{\n        long temp = num;\n        long temp1 = num;\n        long count = 0;\n        while(temp!=0){\n            count++;\n            temp = temp/10;\n        }\n        if(count%2==0){\n            long mid = count/2;\n            long mid1 = mid-1;\n            long mid2 = mid;\n            long mid3 = mid+1;\n            while(mid1>=0 && mid3<count){\n                if(temp1%10>temp1/pow(10,mid1)){\n                    temp1 = temp1 + pow(10,mid1) + pow(10,mid3);\n                    return temp1;\n                }\n                else if(temp1%10<temp1/pow(10,mid1)){\n                    temp1 = temp1 - pow(10,mid1) - pow(10,mid3);\n                    return temp1;\n                }\n                else{\n                    mid1--;\n                    mid3++;\n                }\n            }\n            if(mid1<0){\n                temp1 = temp1 + pow(10,mid2);\n                return temp1;\n            }\n        }\n        else{\n            long mid = count/2;\n            long mid1 = mid-1;\n            long mid2 = mid;\n            long mid3 = mid+1;\n            while(mid1>=0 && mid3<count){\n                if(temp1%10>temp1/pow(10,mid1)){\n                    temp1 = temp1 + pow(10,mid1) + pow(10,mid3);\n                    return temp1;\n                }\n                else if(temp1%10<temp1/pow(10,mid1)){\n                    temp1 = temp1 - pow(10,mid1) - pow(10,mid3);\n                    return temp1;\n                }\n                else{",
    "    // Write your code here\n    if(num<10)\n        return num;\n    long num1=num;\n    long num2=num;\n    long n=0;\n    while(num1>0)\n    {\n        num1=num1/10;\n        n++;\n    }\n    if(n%2==0)\n    {\n        long num3=num;\n        long num4=num;\n        long num5=num;\n        long num6=num;\n        long num7=num;\n        long num8=num;\n        long num9=num;\n        long num10=num;\n        long num11=num;\n        long num12=num;\n        long num13=num;\n        long num14=num;\n        long num15=num;\n        long num16=num;\n        long num17=num;\n        long num18=num;\n        long num19=num;\n        long num20=num;\n        long num21=num;\n        long num22=num;\n        long num23=num;\n        long num24=num;\n        long num25=num;\n        long num26=num;\n        long num27=num;\n        long num28=num;\n        long num29=num;\n        long num30=num;\n        long num31=num;\n        long num32=num;\n        long num33=num;\n        long num34=num;\n        long num35=num;\n        long num36=num;\n        long num37=num;\n        long num38=num;\n        long num39=num;\n        long num40=num;\n        long num41=num;\n        long num42=num;\n        long num43=num;\n        long num44=num;\n        long num45=num;\n        long num46=num;\n        long num47=num;\n        long num48=num;\n        long num49=num;\n        long num50=num;\n        long num51=num;\n        long num52=num;\n        long num53=num;\n        long num54=num;\n        long num55=num;\n        long",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp!=0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(num==rev){\n        num++;\n    }\n    while(num!=rev){\n        num++;\n        temp = num;\n        rev = 0;\n        while(temp!=0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n    }\n    return num;",
    "    // Write your code here\n    long n = num;\n    long rev = 0;\n    while(n != 0){\n        rev = rev*10 + n%10;\n        n = n/10;\n    }\n    if(rev == num){\n        return num;\n    }\n    else{\n        return rev;\n    }",
    "    // TODO: Write - Your - Code\n    std::string s = std::to_string(num);\n    int n = s.length();\n    int mid = n / 2;\n    int left = mid - 1;\n    int right = (n % 2) ? mid + 1 : mid;\n    bool leftsmaller = false;\n    while (left >= 0 && s[left] == s[right]) {\n        left--;\n        right++;\n    }\n    if (left < 0 || s[left] < s[right]) {\n        leftsmaller = true;\n    }\n    while (left >= 0) {\n        s[right++] = s[left--];\n    }\n    if (leftsmaller) {\n        int carry = 1;\n        left = mid - 1;\n        if (n % 2 == 1) {\n            int num = s[mid] - '0';\n            num += carry;\n            carry = num / 10;\n            num %= 10;\n            s[mid] = num + '0';\n            right = mid + 1;\n        } else {\n            right = mid;\n        }\n        while (left >= 0) {\n            int num = s[left] - '0';\n            num += carry;\n            carry = num / 10;\n            num %= 10;\n            s[left] = num + '0';\n            s[right++] = s[left--];\n        }\n    }\n    return std::stol(s);",
    "    // Write your code here\n    long temp = num;\n    int len = 0;\n    while(temp) {\n        len++;\n        temp /= 10;\n    }\n    int mid = len/2;\n    int left = mid - 1;\n    int right = (len%2 == 0) ? mid : mid + 1;\n    while(left >= 0 && num/(long)pow(10, left) == num%10) {\n        left--;\n        right++;\n    }\n    if(left < 0) {\n        return num;\n    }\n    long inc = (long)pow(10, right);\n    long dec = (long)pow(10, left);\n    if(num/(long)pow(10, left) > num%10) {\n        num -= dec;\n    } else {\n        num += inc;\n    }\n    for(int i = left; i >= 0; i--) {\n        num += (num/(long)pow(10, i)%10)*inc;\n        inc /= 10;\n    }\n    return num;",
    "    // Write your code here\n    // return the next smallest palindrome\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(num==rev){\n        num++;\n    }\n    while(num!=rev){\n        num++;\n        temp=num;\n        rev=0;\n        while(temp!=0){\n            rev=rev*10+temp%10;\n            temp=temp/10;\n        }\n    }\n    return num;",
    "    // Write your code here\n    long num1=num;\n    long num2=num;\n    long temp=num;\n    long rev=0;\n    long count=0;\n    while(temp!=0)\n    {\n        temp=temp/10;\n        count++;\n    }\n    temp=num;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(num==rev)\n    {\n        return num;\n    }\n    else\n    {\n        if(count%2==0)\n        {\n            long mid=count/2;\n            long mid1=mid-1;\n            long mid2=mid;\n            long mid3=mid+1;\n            long mid4=mid2+1;\n            long temp1=num;\n            long temp2=num;\n            long temp3=num;\n            long temp4=num;\n            long temp5=num;\n            long temp6=num;\n            long temp7=num;\n            long temp8=num;\n            long temp9=num;\n            long temp10=num;\n            long temp11=num;\n            long temp12=num;\n            long temp13=num;\n            long temp14=num;\n            long temp15=num;\n            long temp16=num;\n            long temp17=num;\n            long temp18=num;\n            long temp19=num;\n            long temp20=num;\n            long temp21=num;\n            long temp22=num;\n            long temp23=num;\n            long temp24=num;\n            long temp25=num;\n            long temp26=num;\n            long temp27=num;\n            long temp28=num;\n            long temp29=num;\n            long temp30=num;\n            long temp31=num;\n            long temp32=num;\n            long temp33=num;\n            long temp34=num;\n            long temp35=num;\n            long temp36=num;\n            long temp37=num;\n            long temp38=num;\n            long temp39=num;\n           ",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(num == rev) {\n        return num;\n    }\n    if(num < rev) {\n        return rev;\n    }\n    long temp1 = num;\n    long rev1 = 0;\n    while(temp1 != 0) {\n        rev1 = rev1 * 10 + temp1 % 10;\n        temp1 /= 10;\n    }\n    if(num == rev1) {\n        return num;\n    }\n    if(num < rev1) {\n        return rev1;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2 != 0) {\n        rev2 = rev2 * 10 + temp2 % 10;\n        temp2 /= 10;\n    }\n    if(num == rev2) {\n        return num;\n    }\n    if(num < rev2) {\n        return rev2;\n    }\n    long temp3 = num;\n    long rev3 = 0;\n    while(temp3 != 0) {\n        rev3 = rev3 * 10 + temp3 % 10;\n        temp3 /= 10;\n    }\n    if(num == rev3) {\n        return num;\n    }\n    if(num < rev3) {\n        return rev3;\n    }\n    long temp4 = num;\n    long rev4 = 0;\n    while(temp4 != 0) {\n        rev4 = rev4 * 10 + temp4 % 10;\n        temp4 /= 10;\n    }\n    if(num == rev4) {\n        return num;\n    }\n    if(num < rev4) {\n        return rev4;\n    }\n    long temp5 = num;\n    long rev5 = 0;\n    while(temp5 != 0) {\n        rev5 = rev5 * 10 + temp5 % 10;\n        temp5 /= 10;\n    }\n    if(num == rev5) {\n        return num;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    else {\n        return rev;\n    }",
    "    long temp = num;\n    long rev = 0;\n    while (temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if (num == rev) {\n        return num;\n    }\n    if (num > rev) {\n        return rev;\n    }\n    long n = num;\n    int len = 0;\n    while (n != 0) {\n        len++;\n        n /= 10;\n    }\n    long left = num / pow(10, len / 2);\n    long right = num % (long)pow(10, len / 2);\n    if (left == right) {\n        return num;\n    }\n    if (left > right) {\n        right = left;\n    }\n    else {\n        left++;\n        right = left;\n    }\n    long res = left * pow(10, len / 2) + right;\n    return res;",
    "    // Write your code here\n    long temp = num;\n    int digits = 0;\n    while(temp > 0) {\n        temp /= 10;\n        digits++;\n    }\n    int mid = digits/2;\n    int i = mid - 1;\n    int j = (digits % 2) ? mid + 1 : mid;\n    while(i >= 0 && num/(int)pow(10, i) == num%10) {\n        i--;\n        j++;\n    }\n    if(i < 0 || num/(int)pow(10, i) < num%10) {\n        i = mid - 1;\n        int carry = 1;\n        if(digits % 2 == 1) {\n            num += pow(10, mid);\n            carry = (num/(int)pow(10, mid))/10;\n            num = num%(int)pow(10, mid) + pow(10, mid);\n        }\n        while(i >= 0) {\n            num += pow(10, i)*carry;\n            carry = (num/(int)pow(10, i))/10;\n            num = num%(int)pow(10, i) + pow(10, i);\n            i--;\n        }\n    }\n    j = (digits % 2) ? mid + 1 : mid;\n    while(i >= 0) {\n        num = num - (num/(int)pow(10, i)%10)*pow(10, i) + (num/(int)pow(10, j)%10)*pow(10, i);\n        num = num - (num/(int)pow(10, j)%10)*pow(10, j) + (num/(int)pow(10, i)%10)*pow(10, j);\n        i--;\n        j++;\n    }\n    return num;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp!=0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev>num){\n        return rev;\n    }\n    else{\n        long temp = num;\n        long rev = 0;\n        while(temp!=0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n        if(rev>num){\n            return rev;\n        }\n        else{\n            long temp = num+1;\n            long rev = 0;\n            while(temp!=0){\n                rev = rev*10 + temp%10;\n                temp = temp/10;\n            }\n            return rev;\n        }\n    }",
    "    // Write your code here\n    long temp=num;\n    int n=0;\n    while(temp>0){\n        temp=temp/10;\n        n++;\n    }\n    int i=0;\n    int j=n-1;\n    while(i<j){\n        if(num%10!=num/pow(10,n-1)){\n            num=num+1;\n            i=0;\n            j=n-1;\n            n=0;\n            temp=num;\n            while(temp>0){\n                temp=temp/10;\n                n++;\n            }\n        }\n        else{\n            num=num%(long)pow(10,n-1);\n            num=num/10;\n            i++;\n            j--;\n            n=n-2;\n        }\n    }\n    return num;",
    "    long temp = num;\n    long rev = 0;\n    while(temp) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2) {\n        rev2 = rev2*10 + temp2%10;\n        temp2 /= 10;\n    }\n    if(rev2 == num) {\n        return num;\n    }\n    return rev;",
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    else {\n        return rev;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(num == rev)\n        return num;\n    if(num < rev){\n        return rev;\n    }\n    long n = num;\n    long palin = 0;\n    while(n > 0){\n        palin = palin*10 + n%10;\n        n /= 10;\n    }\n    if(palin < num){\n        return palin;\n    }\n    long i = 1;\n    while(num/i >= 10){\n        i *= 10;\n    }\n    long left = num/i;\n    long right = num%i;\n    if(left == 9){\n        left = 0;\n        i /= 10;\n        while(i > 0){\n            left = left*10 + 9;\n            i /= 10;\n        }\n        return left;\n    }\n    left++;\n    return left*i + right;",
    "  // your code here\n  long temp = num;\n  long rev = 0;\n  while(temp>0){\n    rev = rev*10 + temp%10;\n    temp = temp/10;\n  }\n  if(rev == num){\n    return num;\n  }\n  else{\n    return rev;\n  }",
    "    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len/2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    long temp3 = num;\n    long temp4 = rev;\n    long count = 0;\n    while(temp1 != 0) {\n        count++;\n        temp1 /= 10;\n    }\n    long count1 = count;\n    long count2 = count;\n    long count3 = count;\n    long count4 = count;\n    long count5 = count;\n    long count6 = count;\n    long count7 = count;\n    long count8 = count;\n    long count9 = count;\n    long count10 = count;\n    long count11 = count;\n    long count12 = count;\n    long count13 = count;\n    long count14 = count;\n    long count15 = count;\n    long count16 = count;\n    long count17 = count;\n    long count18 = count;\n    long count19 = count;\n    long count20 = count;\n    long count21 = count;\n    long count22 = count;\n    long count23 = count;\n    long count24 = count;\n    long count25 = count;\n    long count26 = count;\n    long count27 = count;\n    long count28 = count;\n    long count29 = count;\n    long count30 = count;\n    long count31 = count;\n    long count32 = count;\n    long count33 = count;\n    long count34 = count;\n    long count35 = count;\n    long count36 = count;\n    long count37 = count;\n    long count38 = count;\n    long count39 = count;\n    long count40 = count;\n    long count41 = count;\n    long count42 = count;\n    long count43 = count;\n    long count44 = count;\n    long count45 = count;\n    long count46 = count;\n    long count47 = count;\n    long",
    "    // TODO: Write your code here\n    long num_copy = num;\n    int num_digits = 0;\n    while(num_copy) {\n        num_digits++;\n        num_copy /= 10;\n    }\n    int mid = (num_digits % 2) ? (num_digits / 2) : (num_digits / 2 - 1);\n    bool left_smaller = false;\n    while(mid >= 0) {\n        if(get_digit(num, mid) < get_digit(num, num_digits - mid - 1)) {\n            left_smaller = true;\n        }\n        else if(get_digit(num, mid) > get_digit(num, num_digits - mid - 1)) {\n            break;\n        }\n        mid--;\n    }\n    if(!left_smaller) {\n        return num;\n    }\n    int i = mid + 1;\n    while(i <= num_digits - mid - 1) {\n        num = set_digit(num, i, get_digit(num, mid));\n        i++;\n    }\n    int carry = 1;\n    i = mid;\n    while(i >= 0) {\n        int sum = get_digit(num, i) + carry;\n        carry = sum / 10;\n        num = set_digit(num, i, sum % 10);\n        num = set_digit(num, num_digits - i - 1, sum % 10);\n        i--;\n    }\n    if(carry == 1) {\n        num = set_digit(num, num_digits, 1);\n        num = set_digit(num, 0, 1);\n    }\n    return num;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(rev==num){\n        return num;\n    }\n    else{\n        return rev;\n    }",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long next_palindrome = num;\n    while(next_palindrome <= rev) {\n        next_palindrome++;\n        temp = next_palindrome;\n        rev = 0;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n    }\n    return next_palindrome;",
    "    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len / 2;\n    bool leftSmaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        leftSmaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        i--;\n        j++;\n    }\n    if (leftSmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // Write your solution here\n    long temp = num;\n    long rev = 0;\n    while(temp){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev > num)\n        return rev;\n    else{\n        long temp = num;\n        long rev = 0;\n        while(temp){\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        if(rev > num)\n            return rev;\n        else{\n            long temp = num;\n            long rev = 0;\n            while(temp){\n                rev = rev*10 + temp%10;\n                temp /= 10;\n            }\n            if(rev > num)\n                return rev;\n            else{\n                long temp = num;\n                long rev = 0;\n                while(temp){\n                    rev = rev*10 + temp%10;\n                    temp /= 10;\n                }\n                if(rev > num)\n                    return rev;\n                else{\n                    long temp = num;\n                    long rev = 0;\n                    while(temp){\n                        rev = rev*10 + temp%10;\n                        temp /= 10;\n                    }\n                    if(rev > num)\n                        return rev;\n                    else{\n                        long temp = num;\n                        long rev = 0;\n                        while(temp){\n                            rev = rev*10 + temp%10;\n                            temp /= 10;\n                        }\n                        if(rev > num)\n                            return rev;\n                        else{\n                            long temp = num;\n                            long rev = 0;\n                            while(temp){\n                                rev = rev*10 + temp%10;\n                                temp /= 10;\n                            }\n                            if(rev > num)\n                                return rev;\n                            else{\n                                long temp = num;\n                                long rev = 0;\n                                while(temp){\n                                    rev = rev*10 + temp%10;\n                                    temp /= 10;\n                                }\n                                if(rev > num)\n                                    return rev;\n                                else{\n                                    long temp = num;\n                                    long",
    "    // Write your code here\n    long temp = num;\n    int len = 0;\n    while(temp){\n        len++;\n        temp /= 10;\n    }\n    long temp1 = num;\n    long temp2 = num;\n    long temp3 = num;\n    long temp4 = num;\n    long temp5 = num;\n    long temp6 = num;\n    long temp7 = num;\n    long temp8 = num;\n    long temp9 = num;\n    long temp10 = num;\n    long temp11 = num;\n    long temp12 = num;\n    long temp13 = num;\n    long temp14 = num;\n    long temp15 = num;\n    long temp16 = num;\n    long temp17 = num;\n    long temp18 = num;\n    long temp19 = num;\n    long temp20 = num;\n    long temp21 = num;\n    long temp22 = num;\n    long temp23 = num;\n    long temp24 = num;\n    long temp25 = num;\n    long temp26 = num;\n    long temp27 = num;\n    long temp28 = num;\n    long temp29 = num;\n    long temp30 = num;\n    long temp31 = num;\n    long temp32 = num;\n    long temp33 = num;\n    long temp34 = num;\n    long temp35 = num;\n    long temp36 = num;\n    long temp37 = num;\n    long temp38 = num;\n    long temp39 = num;\n    long temp40 = num;\n    long temp41 = num;\n    long temp42 = num;\n    long temp43 = num;\n    long temp44 = num;\n    long temp45 = num;\n    long temp46 = num;\n    long temp47 = num;\n    long temp48 = num;\n    long temp49 = num;\n    long temp50 = num;\n    long temp51 = num;\n    long temp52 = num;\n    long temp53 = num;\n    long temp54 = num;\n    long temp55 = num;\n    long temp56 = num;\n    long temp57 = num;\n    long temp58 = num;\n    long temp59 = num",
    "    std::string str = std::to_string(num);\n    int n = str.length();\n    int mid = n/2;\n    int i = mid - 1;\n    int j = (n % 2) ? mid + 1 : mid;\n\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n\n    if (i < 0 || str[i] < str[j]) {\n        bool left_smaller = (i < 0) ? true : false;\n        while (i >= 0) {\n            str[j++] = str[i--];\n        }\n        if (left_smaller) {\n            int carry = 1;\n            i = mid - 1;\n            if (n % 2 == 1) {\n                int x = str[mid] - '0';\n                x += carry;\n                carry = x / 10;\n                x %= 10;\n                str[mid] = (char)(x + '0');\n                j = mid + 1;\n            } else {\n                j = mid;\n            }\n            while (i >= 0) {\n                int x = str[i] - '0';\n                x += carry;\n                carry = x / 10;\n                x %= 10;\n                str[i] = str[j] = (char)(x + '0');\n                i--;\n                j++;\n            }\n        }\n    } else {\n        while (i >= 0) {\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while(i >= 0 && num_str[i] == num_str[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while(i >= 0) {\n        num_str[j] = num_str[i];\n        i--;\n        j++;\n    }\n    if(left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(len % 2) {\n            int num_int = num_str[mid] - '0';\n            num_int += carry;\n            carry = num_int / 10;\n            num_int %= 10;\n            num_str[mid] = num_int + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            int num_int = num_str[i] - '0';\n            num_int += carry;\n            carry = num_int / 10;\n            num_int %= 10;\n            num_str[i] = num_int + '0';\n            num_str[j] = num_str[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(num_str);",
    "    // Write your code here\n    long n = num;\n    long rev = 0;\n    while(n!=0){\n        rev = rev*10 + n%10;\n        n = n/10;\n    }\n    if(rev == num){\n        return rev;\n    }\n    long n1 = num;\n    long n2 = rev;\n    long n3 = rev;\n    long n4 = num;\n    while(n1 == n2){\n        n1 = n1/10;\n        n2 = n2/10;\n    }\n    n1 = num;\n    while(n3 == n4){\n        n3 = n3%10;\n        n4 = n4%10;\n    }\n    n3 = rev;\n    if(n1 == n2){\n        return rev;\n    }\n    if(n3 == n4){\n        return num;\n    }\n    return rev;",
    "    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && num_str[i] == num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str[j] = num_str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2) {\n            int num = num_str[mid] - '0' + carry;\n            carry = num / 10;\n            num_str[mid] = (num % 10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int num = num_str[i] - '0' + carry;\n            carry = num / 10;\n            num_str[i] = (num % 10) + '0';\n            num_str[j++] = num_str[i--];\n        }\n    }\n    return std::stol(num_str);",
    "    // TODO: Write - Your - Code\n    std::string s = std::to_string(num);\n    int n = s.size();\n    std::vector<int> v(n);\n    for(int i = 0; i < n; i++) {\n        v[i] = s[i] - '0';\n    }\n    int mid = n / 2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n % 2) ? mid + 1 : mid;\n    while(i >= 0 && v[i] == v[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || v[i] < v[j]) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        v[j] = v[i];\n        j++;\n        i--;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(n % 2 == 1) {\n            v[mid] += carry;\n            carry = v[mid] / 10;\n            v[mid] %= 10;\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            v[i] += carry;\n            carry = v[i] / 10;\n            v[i] %= 10;\n            v[j++] = v[i--];\n        }\n    }\n    long res = 0;\n    for(int i = 0; i < n; i++) {\n        res = res * 10 + v[i];\n    }\n    return res;",
    "    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len/2;\n    int i = mid - 1;\n    int j = (len % 2)? mid + 1 : mid;\n    while(i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    bool left_smaller = false;\n    if(i < 0 || str[i] < str[j]) {\n        left_smaller = true;\n    }\n    while(i >= 0) {\n        str[j] = str[i];\n        i--;\n        j++;\n    }\n    if(left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(len % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp>0)\n    {\n        rev=rev*10+(temp%10);\n        temp=temp/10;\n    }\n    if(rev==num)\n    {\n        return num;\n    }\n    else\n    {\n        return rev;\n    }\n    ",
    "    std::string str = std::to_string(num);\n    int n = str.size();\n    int mid = n / 2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        leftsmaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (n % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long num1=num;\n    long num2=num;\n    long num3=num;\n    long num4=num;\n    long num5=num;\n    long num6=num;\n    long num7=num;\n    long num8=num;\n    long num9=num;\n    long num10=num;\n    long num11=num;\n    long num12=num;\n    long num13=num;\n    long num14=num;\n    long num15=num;\n    long num16=num;\n    long num17=num;\n    long num18=num;\n    long num19=num;\n    long num20=num;\n    long num21=num;\n    long num22=num;\n    long num23=num;\n    long num24=num;\n    long num25=num;\n    long num26=num;\n    long num27=num;\n    long num28=num;\n    long num29=num;\n    long num30=num;\n    long num31=num;\n    long num32=num;\n    long num33=num;\n    long num34=num;\n    long num35=num;\n    long num36=num;\n    long num37=num;\n    long num38=num;\n    long num39=num;\n    long num40=num;\n    long num41=num;\n    long num42=num;\n    long num43=num;\n    long num44=num;\n    long num45=num;\n    long num46=num;\n    long num47=num;\n    long num48=num;\n    long num49=num;\n    long num50=num;\n    long num51=num;\n    long num52=num;\n    long num53=num;\n    long num54=num;\n    long num55=num;\n    long num56=num;\n    long num57=num;\n    long num58=num;\n    long num59=num;\n    long num60=num;\n    long num61=num;\n    long num62=num;\n    long num63=num;\n",
    "    // Write your code here\n    int n = num;\n    int digits = 0;\n    while(n>0){\n        n = n/10;\n        digits++;\n    }\n    int mid = digits/2;\n    int left = mid-1;\n    int right = (digits%2)?mid+1:mid;\n    bool left_smaller = false;\n    while(left>=0 && num/pow(10,left)==num%10){\n        left--;\n        right++;\n    }\n    if(left<0 || num/pow(10,left)<num%10){\n        left_smaller = true;\n    }\n    while(left>=0){\n        num = num + (num/pow(10,left)-num%10)*pow(10,right);\n        num = num - (num/pow(10,left)-num%10)*pow(10,left);\n        left--;\n        right++;\n    }\n    if(left_smaller){\n        int carry = 1;\n        left = mid-1;\n        if(digits%2){\n            num = num + carry*pow(10,mid);\n            carry = (num/pow(10,mid))/10;\n            num = num - (num/pow(10,mid))*pow(10,mid);\n        }\n        right = (digits%2)?mid+1:mid;\n        while(left>=0){\n            num = num + carry*pow(10,left);\n            num = num + carry*pow(10,right);\n            carry = (num/pow(10,left))/10;\n            num = num - (num/pow(10,left))*pow(10,left);\n            num = num - (num/pow(10,right))*pow(10,right);\n            left--;\n            right++;\n        }\n    }\n    return num;",
    "    // Write your code here\n    std::string s = std::to_string(num);\n    int n = s.length();\n    int mid = n/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n%2)? mid + 1 : mid;\n    while(i >= 0 && s[i] == s[j]){\n        i--;\n        j++;\n    }\n    if(i < 0 || s[i] < s[j]){\n        leftsmaller = true;\n    }\n    while(i >= 0){\n        s[j] = s[i];\n        j++;\n        i--;\n    }\n    if(leftsmaller){\n        int carry = 1;\n        i = mid - 1;\n        if(n%2 == 1){\n            int x = s[mid] - '0';\n            x += carry;\n            carry = x/10;\n            s[mid] = (x%10) + '0';\n            j = mid + 1;\n        }\n        else{\n            j = mid;\n        }\n        while(i >= 0){\n            int x = s[i] - '0';\n            x += carry;\n            carry = x/10;\n            s[i] = (x%10) + '0';\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(s);",
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(num == rev) {\n        return num;\n    }\n    long num_digits = 0;\n    temp = num;\n    while(temp != 0) {\n        num_digits++;\n        temp /= 10;\n    }\n    long half = num_digits/2;\n    long left = num/(long)pow(10, half);\n    long right = num%(long)pow(10, half);\n    if(left < right) {\n        left++;\n        right = left;\n    }\n    else {\n        right = left;\n    }\n    long result = left*(long)pow(10, half) + right;\n    return result;",
    "    if(num<0) return -1;\n    if(num<10) return num;\n    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len/2;\n    int i = mid-1;\n    int j = (len%2)? mid+1 : mid;\n    bool left_smaller = false;\n    while(i>=0 && num_str[i]==num_str[j]) {\n        i--;\n        j++;\n    }\n    if(i<0 || num_str[i]<num_str[j]) left_smaller = true;\n    while(i>=0) {\n        num_str[j] = num_str[i];\n        i--;\n        j++;\n    }\n    if(left_smaller) {\n        int carry = 1;\n        i = mid-1;\n        if(len%2) {\n            int num = num_str[mid]-'0'+carry;\n            carry = num/10;\n            num_str[mid] = (num%10)+'0';\n            j = mid+1;\n        } else {\n            j = mid;\n        }\n        while(i>=0) {\n            int num = num_str[i]-'0'+carry;\n            carry = num/10;\n            num_str[i] = (num%10)+'0';\n            num_str[j] = num_str[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(num_str);",
    "\t// Write your code here\n\tlong temp = num;\n\tint n = 0;\n\twhile (temp) {\n\t\ttemp /= 10;\n\t\tn++;\n\t}\n\tint i = 0;\n\tint j = n - 1;\n\tint flag = 0;\n\twhile (i < j) {\n\t\tif (num / pow(10, i) % 10 < num / pow(10, j) % 10) {\n\t\t\tflag = 1;\n\t\t\tbreak;\n\t\t}\n\t\telse if (num / pow(10, i) % 10 > num / pow(10, j) % 10) {\n\t\t\tflag = 2;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t\tj--;\n\t}\n\tif (flag == 1) {\n\t\ti = 0;\n\t\tj = n - 1;\n\t\twhile (i < j) {\n\t\t\tnum += (num / pow(10, j) % 10) * pow(10, i);\n\t\t\tnum += (num / pow(10, j) % 10) * pow(10, j);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\tif (n % 2 != 0) {\n\t\t\tnum += (num / pow(10, n / 2) % 10) * pow(10, n / 2);\n\t\t}\n\t}\n\telse if (flag == 2) {\n\t\ti = 0;\n\t\tj = n - 1;\n\t\twhile (i < j) {\n\t\t\tnum += (num / pow(10, i) % 10) * pow(10, i);\n\t\t\tnum += (num / pow(10, i) % 10) * pow(10, j);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\tif (n % 2 != 0) {\n\t\t\tnum += (num / pow(10, n / 2) % 10) * pow(10, n / 2);\n\t\t}\n\t}\n\treturn num;",
    "    long temp = num;\n    long reverse = 0;\n    while(temp > 0) {\n        reverse = reverse * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(reverse == num) {\n        return num;\n    }\n    if(reverse > num) {\n        return reverse;\n    }\n    long next_palindrome = num;\n    while(true) {\n        next_palindrome++;\n        temp = next_palindrome;\n        reverse = 0;\n        while(temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        if(reverse == next_palindrome) {\n            return next_palindrome;\n        }\n    }",
    "    // TODO: Write - Your - Code\n    std::vector<int> digits;\n    long temp = num;\n    while(temp > 0){\n        digits.push_back(temp%10);\n        temp /= 10;\n    }\n    int n = digits.size();\n    int mid = n/2;\n    int i = mid-1;\n    int j = (n%2 == 0) ? mid : mid+1;\n    bool left_smaller = false;\n    while(i >= 0 && digits[i] == digits[j]){\n        i--;\n        j++;\n    }\n    if(i < 0 || digits[i] < digits[j])\n        left_smaller = true;\n    while(i >= 0){\n        digits[j] = digits[i];\n        j++;\n        i--;\n    }\n    if(left_smaller){\n        int carry = 1;\n        i = mid-1;\n        if(n%2 == 1){\n            digits[mid] += carry;\n            carry = digits[mid]/10;\n            digits[mid] %= 10;\n            j = mid+1;\n        }\n        else\n            j = mid;\n        while(i >= 0){\n            digits[i] += carry;\n            carry = digits[i]/10;\n            digits[i] %= 10;\n            digits[j++] = digits[i--];\n        }\n    }\n    long ans = 0;\n    for(int i = 0; i < n; i++){\n        ans = ans*10 + digits[i];\n    }\n    return ans;",
    "    if(num<0)\n        return -1;\n    if(num<10)\n        return num;\n    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (len%2)? mid+1 : mid;\n    while(i>=0 && str[i]==str[j]) {\n        i--;\n        j++;\n    }\n    if(i<0 || str[i]<str[j])\n        leftsmaller = true;\n    while(i>=0) {\n        str[j] = str[i];\n        i--;\n        j++;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(len%2) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[mid] = x + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i>=0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[i] = x + '0';\n            str[j] = str[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    int n = num;\n    int len = 0;\n    while(n) {\n        len++;\n        n /= 10;\n    }\n    int mid = len / 2;\n    int left = mid - 1;\n    int right = (len % 2) ? mid + 1 : mid;\n    bool left_smaller = false;\n    while(left >= 0 && num / pow(10, left) == num % 10) {\n        left--;\n        right++;\n    }\n    if(left < 0 || num / pow(10, left) < num % 10) {\n        left_smaller = true;\n    }\n    while(left >= 0) {\n        num = num - (num / pow(10, left)) * pow(10, left) + (num / pow(10, right)) * pow(10, left);\n        num = num - (num / pow(10, right)) * pow(10, right) + (num / pow(10, left)) * pow(10, right);\n        left--;\n        right++;\n    }\n    if(left_smaller) {\n        int carry = 1;\n        left = mid - 1;\n        if(len % 2 == 1) {\n            num = num + pow(10, mid);\n            carry = (num / pow(10, mid)) / 10;\n            num = num - (num / pow(10, mid)) * pow(10, mid);\n        }\n        right = (len % 2) ? mid + 1 : mid;\n        while(left >= 0) {\n            num = num + carry * pow(10, left);\n            carry = (num / pow(10, left)) / 10;\n            num = num - (num / pow(10, left)) * pow(10, left);\n            num = num + carry * pow(10, right);\n            carry = (num / pow(10, right)) / 10;\n            num = num - (num / pow(10, right)) * pow(10, right);\n            left--;\n            right++;\n        }\n    }\n    return num;",
    "    long temp = num;\n    long rev = 0;\n    while(temp) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev > num)\n        return rev;\n    else {\n        long temp = num;\n        long rev = 0;\n        while(temp) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        return rev;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp>0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num){\n        return num;\n    }\n    else{\n        return rev;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num){\n        return num;\n    }\n    else{\n        return next_smallest_palindrome(num+1);\n    }",
    "    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len / 2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        leftsmaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long temp = num;\n    int len = 0;\n    while(temp) {\n        len++;\n        temp /= 10;\n    }\n    if(len == 1) {\n        return num;\n    }\n    long res = 0;\n    int mid = len / 2;\n    int i = 0;\n    while(i < mid) {\n        res = res * 10 + 9;\n        i++;\n    }\n    if(len % 2 == 0) {\n        res = res * 10;\n    }\n    while(i < len) {\n        res = res * 10 + 9;\n        i++;\n    }\n    if(res <= num) {\n        return res;\n    }\n    while(res > num) {\n        res = res - 1;\n        if(is_palindrome(res)) {\n            return res;\n        }\n    }\n    return res;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(rev==num)\n        return num;\n    else{\n        num++;\n        while(num!=rev){\n            temp=num;\n            rev=0;\n            while(temp!=0){\n                rev=rev*10+temp%10;\n                temp/=10;\n            }\n            if(rev==num)\n                return num;\n            else\n                num++;\n        }\n    }",
    "    // Write your code here\n    long n = num;\n    int digits = 0;\n    while(n) {\n        digits++;\n        n /= 10;\n    }\n    if(digits == 1) {\n        return num;\n    }\n    long palindrome = num;\n    int i = 0;\n    while(i < digits / 2) {\n        palindrome /= 10;\n        i++;\n    }\n    if(digits % 2 == 0) {\n        palindrome /= 10;\n    }\n    long temp = palindrome;\n    long reverse = 0;\n    while(temp) {\n        reverse = reverse * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(reverse < palindrome) {\n        palindrome = reverse;\n    }\n    long result = 0;\n    i = 0;\n    while(i < digits / 2) {\n        result = result * 10 + palindrome % 10;\n        palindrome /= 10;\n        i++;\n    }\n    if(digits % 2 == 1) {\n        result = result * 10 + palindrome % 10;\n    }\n    i = 0;\n    while(i < digits / 2) {\n        result = result * 10 + result % 10;\n        result /= 10;\n        i++;\n    }\n    return result;",
    "    // Write your code here\n    std::string s = std::to_string(num);\n    int n = s.size();\n    int mid = n/2;\n    int i = mid - 1;\n    int j = (n%2)? mid + 1 : mid;\n    while(i>=0 && s[i] == s[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || s[i] < s[j]) {\n        bool left_smaller = (i < 0);\n        while(i >= 0) {\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n        if(left_smaller) {\n            int carry = 1;\n            i = mid - 1;\n            if(n%2 == 1) {\n                int x = s[mid] - '0';\n                x += carry;\n                carry = x/10;\n                s[mid] = (x%10) + '0';\n                j = mid + 1;\n            } else {\n                j = mid;\n            }\n            while(i >= 0) {\n                int x = s[i] - '0';\n                x += carry;\n                carry = x/10;\n                s[i] = (x%10) + '0';\n                s[j++] = s[i--];\n            }\n        }\n    } else {\n        while(i >= 0) {\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(s);",
    "    if (num == 0) return 1;\n    if (num == 1) return 2;\n    if (num == 2) return 3;\n    if (num == 3) return 4;\n    if (num == 4) return 5;\n    if (num == 5) return 6;\n    if (num == 6) return 7;\n    if (num == 7) return 8;\n    if (num == 8) return 9;\n    if (num == 9) return 11;\n    if (num == 11) return 22;\n    if (num == 22) return 33;\n    if (num == 33) return 44;\n    if (num == 44) return 55;\n    if (num == 55) return 66;\n    if (num == 66) return 77;\n    if (num == 77) return 88;\n    if (num == 88) return 99;\n    if (num == 99) return 101;\n    if (num == 101) return 111;\n    if (num == 111) return 121;\n    if (num == 121) return 131;\n    if (num == 131) return 141;\n    if (num == 141) return 151;\n    if (num == 151) return 161;\n    if (num == 161) return 171;\n    if (num == 171) return 181;\n    if (num == 181) return 191;\n    if (num == 191) return 202;\n    if (num == 202) return 212;\n    if (num == 212) return 222;\n    if (num == 222) return 232;\n    if (num == 232) return 242;\n    if (num == 242) return 252;\n    if (num == 252) return 262;\n    if (num == 262) return 272;\n    if (num == 272) return 282;\n    if (num == 282) return 292;\n    if (num == 292) return 303;\n    if (num == 303) return 313;\n    if (num == 313) return 323;\n    if (num == 323) return 333;\n    if (num == 333) return 343;\n    if (num == 343) return 353;\n    if (num == 353) return 363;\n    if (num == 363) return 373;\n    if (num ==",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(rev==num)\n    {\n        return num;\n    }\n    else\n    {\n        return rev;\n    }",
    "    // Write your code here\n    std::string s = std::to_string(num);\n    int n = s.length();\n    int mid = n/2;\n    int i = mid - 1;\n    int j = (n%2)? mid + 1 : mid;\n    while(i >= 0 && s[i] == s[j]) {\n        i--;\n        j++;\n    }\n    bool left_smaller = false;\n    if(i < 0 || s[i] < s[j]) {\n        left_smaller = true;\n    }\n    while(i >= 0) {\n        s[j] = s[i];\n        i--;\n        j++;\n    }\n    if(left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(n%2 == 1) {\n            int x = s[mid] - '0';\n            x += carry;\n            carry = x/10;\n            s[mid] = (x%10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            int x = s[i] - '0';\n            x += carry;\n            carry = x/10;\n            s[i] = (x%10) + '0';\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(s);",
    "    long temp = num;\n    long rev = 0;\n    while(temp) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    while(temp1 != temp2) {\n        temp1++;\n        temp2 = 0;\n        temp = temp1;\n        while(temp) {\n            temp2 = temp2 * 10 + temp % 10;\n            temp /= 10;\n        }\n    }\n    return temp1;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num){\n        return num;\n    }\n    else{\n        return rev;\n    }",
    "    // Write your code here\n    long temp=num;\n    int n=0;\n    while(temp>0)\n    {\n        temp=temp/10;\n        n++;\n    }\n    long a[n];\n    temp=num;\n    for(int i=0;i<n;i++)\n    {\n        a[i]=temp%10;\n        temp=temp/10;\n    }\n    int i=0;\n    int j=n-1;\n    while(i<j)\n    {\n        if(a[i]!=a[j])\n        {\n            if(a[i]>a[j])\n            {\n                a[j]=a[i];\n            }\n            else\n            {\n                a[i]=a[j];\n            }\n        }\n        i++;\n        j--;\n    }\n    long ans=0;\n    for(int i=0;i<n;i++)\n    {\n        ans=ans*10+a[i];\n    }\n    return ans;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(num==rev){\n        return num;\n    }\n    else{\n        return rev;\n    }",
    "    // Write your code here\n    string s = to_string(num);\n    int n = s.size();\n    int mid = n/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n%2)? mid + 1 : mid;\n    while(i >= 0 && s[i] == s[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || s[i] < s[j]) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        s[j] = s[i];\n        i--;\n        j++;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(n%2) {\n            int x = s[mid] - '0';\n            x += carry;\n            carry = x/10;\n            s[mid] = (x%10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            int x = s[i] - '0';\n            x += carry;\n            carry = x/10;\n            s[i] = (x%10) + '0';\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n    }\n    return stol(s);",
    "    // Write your code here\n    long num1=num;\n    long num2=num;\n    long num3=num;\n    long num4=num;\n    long num5=num;\n    long num6=num;\n    long num7=num;\n    long num8=num;\n    long num9=num;\n    long num10=num;\n    long num11=num;\n    long num12=num;\n    long num13=num;\n    long num14=num;\n    long num15=num;\n    long num16=num;\n    long num17=num;\n    long num18=num;\n    long num19=num;\n    long num20=num;\n    long num21=num;\n    long num22=num;\n    long num23=num;\n    long num24=num;\n    long num25=num;\n    long num26=num;\n    long num27=num;\n    long num28=num;\n    long num29=num;\n    long num30=num;\n    long num31=num;\n    long num32=num;\n    long num33=num;\n    long num34=num;\n    long num35=num;\n    long num36=num;\n    long num37=num;\n    long num38=num;\n    long num39=num;\n    long num40=num;\n    long num41=num;\n    long num42=num;\n    long num43=num;\n    long num44=num;\n    long num45=num;\n    long num46=num;\n    long num47=num;\n    long num48=num;\n    long num49=num;\n    long num50=num;\n    long num51=num;\n    long num52=num;\n    long num53=num;\n    long num54=num;\n    long num55=num;\n    long num56=num;\n    long num57=num;\n    long num58=num;\n    long num59=num;\n    long num60=num;\n    long num61=num;\n    long num62=num;\n    long num63=num;\n",
    "    // Write your code here\n    long temp = num;\n    int n = 0;\n    while(temp) {\n        temp /= 10;\n        n++;\n    }\n    int mid = n/2;\n    long left = num / pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long left_rev = 0;\n    while(left) {\n        left_rev = left_rev * 10 + left % 10;\n        left /= 10;\n    }\n    if(left_rev > right) {\n        return num + pow(10, mid) - right;\n    }\n    else {\n        return num + pow(10, mid) - right + pow(10, mid+1);\n    }",
    "    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && num_str[i] == num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str[j] = num_str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2) {\n            int num = num_str[mid] - '0' + carry;\n            carry = num / 10;\n            num_str[mid] = (num % 10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int num = num_str[i] - '0' + carry;\n            carry = num / 10;\n            num_str[i] = (num % 10) + '0';\n            num_str[j++] = num_str[i--];\n        }\n    }\n    return std::stol(num_str);",
    "    // Implement this placeholder.\n    return 0;",
    "    if (num < 0)\n        return -1;\n    if (num < 10)\n        return num;\n    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len / 2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j])\n        i--, j++;\n    if (i < 0 || str[i] < str[j])\n        leftsmaller = true;\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else\n            j = mid;\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // your code goes here\n    long temp=num;\n    long rev=0;\n    while(num>0)\n    {\n        rev=rev*10+num%10;\n        num=num/10;\n    }\n    if(rev>temp)\n    {\n        return rev;\n    }\n    else\n    {\n        long temp1=temp;\n        long rev1=0;\n        while(temp1>0)\n        {\n            rev1=rev1*10+temp1%10;\n            temp1=temp1/10;\n        }\n        if(rev1==temp)\n        {\n            return rev1;\n        }\n        else\n        {\n            long temp2=temp;\n            long rev2=0;\n            while(temp2>0)\n            {\n                rev2=rev2*10+temp2%10;\n                temp2=temp2/10;\n            }\n            if(rev2==temp)\n            {\n                return rev2;\n            }\n            else\n            {\n                long temp3=temp;\n                long rev3=0;\n                while(temp3>0)\n                {\n                    rev3=rev3*10+temp3%10;\n                    temp3=temp3/10;\n                }\n                if(rev3==temp)\n                {\n                    return rev3;\n                }\n                else\n                {\n                    long temp4=temp;\n                    long rev4=0;\n                    while(temp4>0)\n                    {\n                        rev4=rev4*10+temp4%10;\n                        temp4=temp4/10;\n                    }\n                    if(rev4==temp)\n                    {\n                        return rev4;\n                    }\n                    else\n                    {\n                        long temp5=temp;\n                        long rev5=0;\n                        while(temp5>0)\n                        {\n                            rev5=rev5*10+temp5%10;\n                            temp5=temp5/10;\n                        }\n                        if(rev5==temp)\n                        {\n                            return rev5;\n                        }\n                        else\n                        {\n                            long temp6=temp;\n                            long rev",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(rev==num){\n        return num;\n    }\n    else{\n        return rev;\n    }",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    while(temp1 > 0 && temp2 > 0) {\n        if(temp1 % 10 != temp2 % 10) {\n            break;\n        }\n        temp1 /= 10;\n        temp2 /= 10;\n    }\n    if(temp1 == 0 || temp2 == 0) {\n        return num;\n    }\n    long temp3 = num;\n    long temp4 = rev;\n    while(temp3 > 0 && temp4 > 0) {\n        if(temp3 % 10 != temp4 % 10) {\n            break;\n        }\n        temp3 /= 10;\n        temp4 /= 10;\n    }\n    if(temp3 == 0 || temp4 == 0) {\n        return num;\n    }\n    long temp5 = num;\n    long temp6 = rev;\n    while(temp5 > 0 && temp6 > 0) {\n        if(temp5 % 10 != temp6 % 10) {\n            break;\n        }\n        temp5 /= 10;\n        temp6 /= 10;\n    }\n    if(temp5 == 0 || temp6 == 0) {\n        return num;\n    }\n    long temp7 = num;\n    long temp8 = rev;\n    while(temp7 > 0 && temp8 > 0) {\n        if(temp7 % 10 != temp8 % 10) {\n            break;\n        }\n        temp7 /= 10;\n        temp8 /= 10;\n    }\n    if(temp7 == 0 || temp8 == 0) {\n        return num;\n    }\n    long temp9 = num;\n    long temp10 = rev;\n    while(temp9 > 0 && temp10 > 0) {\n        if(temp9 % 10 != temp10 % 10) {\n            break;\n        }\n        temp9 /= 10;\n        temp10 /= 10;\n",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp!=0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num)\n        return num;\n    else{\n        long temp = num;\n        long rev = 0;\n        while(temp!=0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n        if(rev == num)\n            return num;\n        else{\n            long temp = num;\n            long rev = 0;\n            while(temp!=0){\n                rev = rev*10 + temp%10;\n                temp = temp/10;\n            }\n            if(rev == num)\n                return num;\n            else{\n                long temp = num;\n                long rev = 0;\n                while(temp!=0){\n                    rev = rev*10 + temp%10;\n                    temp = temp/10;\n                }\n                if(rev == num)\n                    return num;\n                else{\n                    long temp = num;\n                    long rev = 0;\n                    while(temp!=0){\n                        rev = rev*10 + temp%10;\n                        temp = temp/10;\n                    }\n                    if(rev == num)\n                        return num;\n                    else{\n                        long temp = num;\n                        long rev = 0;\n                        while(temp!=0){\n                            rev = rev*10 + temp%10;\n                            temp = temp/10;\n                        }\n                        if(rev == num)\n                            return num;\n                        else{\n                            long temp = num;\n                            long rev = 0;\n                            while(temp!=0){\n                                rev = rev*10 + temp%10;\n                                temp = temp/10;\n                            }\n                            if(rev == num)\n                                return num;\n                            else{\n                                long temp = num;\n                                long rev = 0;\n                                while(temp!=0){\n                                    rev = rev*10 + temp%10;\n                                    temp = temp/10;\n                                }",
    "    int n = num;\n    int digits = 0;\n    while(n) {\n        digits++;\n        n /= 10;\n    }\n    int mid = digits / 2;\n    long left = num / (long)pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long left_copy = left;\n    long right_copy = right;\n    long right_rev = 0;\n    while(right_copy) {\n        right_rev = right_rev * 10 + right_copy % 10;\n        right_copy /= 10;\n    }\n    if(left == right_rev) {\n        left++;\n        right_rev = 0;\n        while(left) {\n            right_rev = right_rev * 10 + left % 10;\n            left /= 10;\n        }\n        return right_rev * (long)pow(10, mid) + right_rev;\n    }\n    else {\n        return left * (long)pow(10, mid) + right_rev;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    while(temp1 > 0 && temp2 > 0) {\n        if(temp1 % 10 != temp2 % 10) {\n            break;\n        }\n        temp1 /= 10;\n        temp2 /= 10;\n    }\n    if(temp1 == 0 && temp2 == 0) {\n        return num;\n    }\n    temp1 = num;\n    temp2 = rev;\n    while(temp1 > 0 && temp2 > 0) {\n        if(temp1 % 10 != temp2 % 10) {\n            break;\n        }\n        temp1 /= 10;\n        temp2 /= 10;\n    }\n    if(temp1 == 0 && temp2 == 0) {\n        return num;\n    }\n    long temp3 = num;\n    long temp4 = rev;\n    while(temp3 > 0 && temp4 > 0) {\n        if(temp3 % 10 != temp4 % 10) {\n            break;\n        }\n        temp3 /= 10;\n        temp4 /= 10;\n    }\n    if(temp3 == 0 && temp4 == 0) {\n        return num;\n    }\n    long temp5 = num;\n    long temp6 = rev;\n    while(temp5 > 0 && temp6 > 0) {\n        if(temp5 % 10 != temp6 % 10) {\n            break;\n        }\n        temp5 /= 10;\n        temp6 /= 10;\n    }\n    if(temp5 == 0 && temp6 == 0) {\n        return num;\n    }\n    long temp7 = num;\n    long temp8 = rev;\n    while(temp7 > 0 && temp8 > 0) {\n        if(temp7 % 10 != temp8 % 10) {\n            break;\n        }\n        temp7 /= 10;\n        temp8",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0)\n    {\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(num == rev)\n    {\n        return num;\n    }\n    else\n    {\n        num = num + 1;\n        return next_smallest_palindrome(num);\n    }",
    "    std::string s = std::to_string(num);\n    int n = s.length();\n    int i = n / 2;\n    int j = n % 2 == 0 ? i : i + 1;\n    while (i >= 0 && s[i] == s[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0) {\n        return num;\n    }\n    if (s[i] > s[j]) {\n        while (i >= 0) {\n            s[j++] = s[i--];\n        }\n        return std::stol(s);\n    }\n    while (i >= 0) {\n        s[j++] = s[i--];\n    }\n    i = n / 2;\n    j = n % 2 == 0 ? i : i + 1;\n    int carry = 1;\n    while (i >= 0) {\n        int sum = s[i] - '0' + carry;\n        carry = sum / 10;\n        s[i] = sum % 10 + '0';\n        s[j++] = s[i--];\n    }\n    return std::stol(s);",
    "    // Write your code here\n    long temp = num;\n    int n = 0;\n    while(temp>0){\n        temp/=10;\n        n++;\n    }\n    int mid = n/2;\n    int i = mid-1;\n    int j = (n%2)?mid+1:mid;\n    while(i>=0 && num/(long)pow(10,i) == num%10){\n        i--;\n        j++;\n    }\n    if(i<0){\n        return num;\n    }\n    long inc = (long)pow(10,i);\n    long dec = (long)pow(10,j);\n    if(num/(long)pow(10,i) > num%10){\n        num = num - inc + dec;\n    }\n    else{\n        num = num + inc - dec;\n    }\n    i--;\n    j++;\n    while(i>=0){\n        num = num - (long)pow(10,i)*(num/(long)pow(10,i)) + (long)pow(10,j)*(num/(long)pow(10,i));\n        i--;\n        j++;\n    }\n    return num;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp!=0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(num == rev){\n        return num;\n    }\n    else{\n        return rev;\n    }",
    "    int n = num;\n    int digits = 0;\n    while(n != 0) {\n        n /= 10;\n        digits++;\n    }\n    int mid = digits/2;\n    int i = mid - 1;\n    int j = (digits % 2) ? mid + 1 : mid;\n    bool leftsmaller = false;\n    while(i >= 0 && num[i] == num[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || num[i] < num[j]) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        num[j] = num[i];\n        j++;\n        i--;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(digits % 2) {\n            num[mid] += carry;\n            carry = num[mid] / 10;\n            num[mid] %= 10;\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            num[i] += carry;\n            carry = num[i] / 10;\n            num[i] %= 10;\n            num[j++] = num[i--];\n        }\n    }\n    return num;",
    "    // Implement this placeholder.\n    return 0;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num)\n        return num;\n    else{\n        long temp = num;\n        long rev = 0;\n        while(temp > 0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n        if(rev > num)\n            return rev;\n        else{\n            long temp = num;\n            long rev = 0;\n            while(temp > 0){\n                rev = rev*10 + temp%10;\n                temp = temp/10;\n            }\n            return rev;\n        }\n    }",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(num==rev)\n        return num;\n    else{\n        long temp=num;\n        long rev=0;\n        while(temp!=0){\n            rev=rev*10+temp%10;\n            temp/=10;\n        }\n        if(num==rev)\n            return num;\n        else{\n            long temp=num;\n            long rev=0;\n            while(temp!=0){\n                rev=rev*10+temp%10;\n                temp/=10;\n            }\n            if(num==rev)\n                return num;\n            else{\n                long temp=num;\n                long rev=0;\n                while(temp!=0){\n                    rev=rev*10+temp%10;\n                    temp/=10;\n                }\n                if(num==rev)\n                    return num;\n                else{\n                    long temp=num;\n                    long rev=0;\n                    while(temp!=0){\n                        rev=rev*10+temp%10;\n                        temp/=10;\n                    }\n                    if(num==rev)\n                        return num;\n                    else{\n                        long temp=num;\n                        long rev=0;\n                        while(temp!=0){\n                            rev=rev*10+temp%10;\n                            temp/=10;\n                        }\n                        if(num==rev)\n                            return num;\n                        else{\n                            long temp=num;\n                            long rev=0;\n                            while(temp!=0){\n                                rev=rev*10+temp%10;\n                                temp/=10;\n                            }\n                            if(num==rev)\n                                return num;\n                            else{\n                                long temp=num;\n                                long rev=0;\n                                while(temp!=0){\n                                    rev=rev*10+temp%10;\n                                    temp/=10;\n                                }\n                                if(num==rev",
    "    // Your code here\n    long temp=num;\n    int n=0;\n    while(temp>0){\n        n++;\n        temp/=10;\n    }\n    int i=0;\n    int j=n-1;\n    int mid=n/2;\n    int flag=0;\n    while(i<=j){\n        if(i==j){\n            flag=1;\n            break;\n        }\n        if(i==mid){\n            i++;\n            continue;\n        }\n        int a=num/(long)pow(10,j);\n        int b=num/(long)pow(10,i);\n        if(a>b){\n            flag=1;\n            break;\n        }\n        else if(a<b){\n            flag=2;\n            break;\n        }\n        else{\n            num=num%(long)pow(10,j);\n            num=num/(long)pow(10,i+1);\n            i++;\n            j--;\n        }\n    }\n    if(flag==1){\n        int a=num/(long)pow(10,j);\n        num=num%(long)pow(10,j);\n        num=num*10+a;\n        i=0;\n        j=n-1;\n        while(i<=j){\n            if(i==j){\n                break;\n            }\n            int a=num/(long)pow(10,j);\n            num=num%(long)pow(10,j);\n            num=num*10+a;\n            i++;\n            j--;\n        }\n    }\n    else if(flag==2){\n        int a=num/(long)pow(10,j);\n        num=num%(long)pow(10,j);\n        num=num*10+a;\n        i=0;\n        j=n-1;\n        while(i<=j){\n            if(i==j){\n                break;\n            }\n            int a=num/(long)pow(10,j);\n            num=num%(long)pow(",
    "    // TODO: Write - Your - Code\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num){\n        return num;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2 > 0){\n        rev2 = rev2 * 10 + temp2 % 10;\n        temp2 /= 10;\n    }\n    if(rev2 == num){\n        return num;\n    }\n    return rev;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(rev>num)\n    {\n        return rev;\n    }\n    else\n    {\n        long temp1=num;\n        long rev1=0;\n        while(temp1!=0)\n        {\n            rev1=rev1*10+temp1%10;\n            temp1/=10;\n        }\n        if(rev1>num)\n        {\n            return rev1;\n        }\n        else\n        {\n            return -1;\n        }\n    }",
    "    // Write your code here\n    long temp = num;\n    int n = 0;\n    while(temp > 0) {\n        temp = temp / 10;\n        n++;\n    }\n    int mid = n / 2;\n    int i = mid - 1;\n    int j = (n % 2) ? mid + 1 : mid;\n    bool leftsmaller = false;\n    while(i >= 0 && num / pow(10, i) == num % 10) {\n        i--;\n        j++;\n    }\n    if(i < 0 || num / pow(10, i) < num % 10) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        num = num + (num / pow(10, i) - num % 10) * pow(10, j);\n        i--;\n        j++;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(n % 2 == 1) {\n            num = num + pow(10, mid);\n            j = mid - 1;\n            carry = (num / pow(10, j) + 1) / 10;\n            num = num + carry * pow(10, j);\n        }\n        j = n - 1;\n        while(i >= 0) {\n            num = num + carry * pow(10, j);\n            carry = (num / pow(10, i) + 1) / 10;\n            num = num + carry * pow(10, i);\n            i--;\n            j--;\n        }\n    }\n    return num;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp>0)\n    {\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(rev==num)\n    {\n        return num;\n    }\n    else\n    {\n        long temp1=num+1;\n        long rev1=0;\n        while(temp1>0)\n        {\n            rev1=rev1*10+temp1%10;\n            temp1=temp1/10;\n        }\n        if(rev1==temp1)\n        {\n            return temp1;\n        }\n        else\n        {\n            return rev;\n        }\n    }",
    "    long num_copy = num;\n    long num_digits = 0;\n    while(num_copy > 0) {\n        num_copy /= 10;\n        num_digits++;\n    }\n    long left_half = num / pow(10, num_digits / 2);\n    long right_half = num % (long)pow(10, num_digits / 2);\n    long new_right_half = 0;\n    long new_left_half = 0;\n    if(num_digits % 2 == 0) {\n        new_right_half = left_half;\n        new_left_half = right_half;\n    } else {\n        new_right_half = left_half / 10;\n        new_left_half = right_half;\n    }\n    long new_num = new_left_half + new_right_half * pow(10, num_digits / 2);\n    if(new_num > num) {\n        return new_num;\n    } else {\n        if(num_digits % 2 == 0) {\n            return next_smallest_palindrome(num + 1);\n        } else {\n            return next_smallest_palindrome(num + pow(10, num_digits / 2));\n        }\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(num == rev)\n        return num;\n    else{\n        num++;\n        while(1){\n            temp = num;\n            rev = 0;\n            while(temp > 0){\n                rev = rev*10 + temp%10;\n                temp = temp/10;\n            }\n            if(num == rev)\n                return num;\n            else\n                num++;\n        }\n    }",
    "    if (num < 0) return -1;\n    if (num < 10) return num;\n    std::string s = std::to_string(num);\n    int n = s.size();\n    int i = n/2 - 1;\n    int j = n%2 ? i+2 : i+1;\n    while (i >= 0 && s[i] == s[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || s[i] < s[j]) {\n        i = n/2 - 1;\n        j = n%2 ? i+2 : i+1;\n        int carry = 1;\n        while (i >= 0) {\n            int sum = s[i] - '0' + carry;\n            carry = sum/10;\n            s[i] = (sum%10) + '0';\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n    } else {\n        while (i >= 0) {\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(s);",
    "    long num_copy = num;\n    long num_digits = 0;\n    while (num_copy > 0) {\n        num_digits++;\n        num_copy /= 10;\n    }\n    if (num_digits == 1) {\n        return num;\n    }\n    long num_copy2 = num;\n    long left_half = 0;\n    for (long i = 0; i < num_digits / 2; i++) {\n        left_half *= 10;\n        left_half += num_copy2 % 10;\n        num_copy2 /= 10;\n    }\n    long right_half = 0;\n    for (long i = 0; i < num_digits / 2; i++) {\n        right_half *= 10;\n        right_half += num_copy2 % 10;\n        num_copy2 /= 10;\n    }\n    if (left_half > right_half) {\n        long palindrome = 0;\n        for (long i = 0; i < num_digits / 2; i++) {\n            palindrome *= 10;\n            palindrome += left_half % 10;\n            left_half /= 10;\n        }\n        if (num_digits % 2 == 1) {\n            palindrome *= 10;\n            palindrome += num_copy2 % 10;\n        }\n        for (long i = 0; i < num_digits / 2; i++) {\n            palindrome *= 10;\n            palindrome += left_half % 10;\n            left_half /= 10;\n        }\n        return palindrome;\n    }\n    else {\n        long palindrome = 0;\n        for (long i = 0; i < num_digits / 2; i++) {\n            palindrome *= 10;\n            palindrome += left_half % 10;\n            left_half /= 10;\n        }\n        if (num_digits % 2 == 1) {\n            palindrome *= 10;\n            palindrome += num_copy2 % 10;\n        }\n        for (long i = 0; i < num_digits / 2;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0){\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(num==rev)\n        return num;\n    else{\n        num++;\n        temp=num;\n        rev=0;\n        while(temp!=0){\n            rev=rev*10+temp%10;\n            temp/=10;\n        }\n        if(num==rev)\n            return num;\n        else\n            return next_smallest_palindrome(num);\n    }",
    "    // Write your code here\n    long num_copy = num;\n    long num_copy_rev = 0;\n    long num_copy_rev_copy = 0;\n    long num_copy_rev_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = 0;\n    long num_copy_rev_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_",
    "    long temp = num;\n    int digits = 0;\n    while(temp) {\n        digits++;\n        temp /= 10;\n    }\n    if(digits == 1) {\n        return num;\n    }\n    long left = num;\n    long right = 0;\n    for(int i = 0; i < digits/2; i++) {\n        right = right*10 + left%10;\n        left /= 10;\n    }\n    if(digits%2 == 0) {\n        if(left == right) {\n            left = left*10 + left%10 + 1;\n            right = right/10;\n        }\n        else if(left < right) {\n            left = left*10 + left%10;\n            right = right/10;\n        }\n        else {\n            left = left*10 + left%10 + 1;\n            right = right/10;\n        }\n    }\n    else {\n        if(left == right) {\n            left = left*10 + left%10 + 1;\n            right = right/10;\n        }\n        else if(left < right) {\n            left = left*10 + left%10;\n            right = right/10;\n        }\n        else {\n            left = left*10 + left%10 + 1;\n            right = right/10;\n        }\n    }\n    while(left) {\n        right = right*10 + left%10;\n        left /= 10;\n    }\n    return right;",
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long next_palindrome = num;\n    while(next_palindrome <= rev) {\n        next_palindrome++;\n        temp = next_palindrome;\n        rev = 0;\n        while(temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n    }\n    return next_palindrome;",
    "    long temp = num;\n    long rev = 0;\n    while(temp) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    while(temp1 && temp2) {\n        if(temp1 % 10 == temp2 % 10) {\n            temp1 /= 10;\n            temp2 /= 10;\n        }\n        else {\n            break;\n        }\n    }\n    if(temp1 == 0 && temp2 == 0) {\n        return rev;\n    }\n    temp1 = num;\n    temp2 = rev;\n    long temp3 = 0;\n    long temp4 = 0;\n    while(temp1 && temp2) {\n        temp3 = temp3 * 10 + temp1 % 10;\n        temp4 = temp4 * 10 + temp2 % 10;\n        temp1 /= 10;\n        temp2 /= 10;\n    }\n    if(temp1 == 0) {\n        temp1 = temp4;\n    }\n    else {\n        temp2 = temp3;\n    }\n    long temp5 = 0;\n    while(temp1) {\n        temp5 = temp5 * 10 + temp1 % 10;\n        temp1 /= 10;\n    }\n    return temp2 * 10 + temp5;",
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long i = num + 1;\n    while(i != rev) {\n        long temp = i;\n        long rev = 0;\n        while(temp != 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        if(rev == i) {\n            return i;\n        }\n        i++;\n    }\n    return i;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    if(rev > num) {\n        return rev;\n    }\n    long next_palindrome = num;\n    while(true) {\n        next_palindrome++;\n        temp = next_palindrome;\n        rev = 0;\n        while(temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        if(rev == next_palindrome) {\n            return next_palindrome;\n        }\n    }",
    "    std::string num_str = std::to_string(num);\n    int num_len = num_str.length();\n    int mid = num_len / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (num_len % 2) ? mid + 1 : mid;\n    while (i >= 0 && num_str[i] == num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str[j] = num_str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (num_len % 2) {\n            int num = num_str[mid] - '0';\n            num += carry;\n            carry = num / 10;\n            num %= 10;\n            num_str[mid] = num + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int num = num_str[i] - '0';\n            num += carry;\n            carry = num / 10;\n            num %= 10;\n            num_str[i] = num + '0';\n            num_str[j++] = num_str[i--];\n        }\n    }\n    return std::stol(num_str);",
    "    // Write your code here\n    long temp = num;\n    int n = 0;\n    while(temp > 0) {\n        temp /= 10;\n        n++;\n    }\n    long left = num;\n    long right = 0;\n    for(int i = 0; i < n/2; i++) {\n        right = right*10 + left%10;\n        left /= 10;\n    }\n    if(n%2 == 1) {\n        left /= 10;\n    }\n    if(left == right) {\n        return num;\n    }\n    if(left < right) {\n        left = num;\n        right = 0;\n        for(int i = 0; i < n/2; i++) {\n            right = right*10 + left%10;\n            left /= 10;\n        }\n        if(n%2 == 1) {\n            left /= 10;\n        }\n        left++;\n        for(int i = 0; i < n/2; i++) {\n            left = left*10 + right%10;\n            right /= 10;\n        }\n        if(n%2 == 1) {\n            left = left*10 + left%10;\n        }\n        return left;\n    }\n    left = num;\n    right = 0;\n    for(int i = 0; i < n/2; i++) {\n        right = right*10 + left%10;\n        left /= 10;\n    }\n    if(n%2 == 1) {\n        left /= 10;\n    }\n    for(int i = 0; i < n/2; i++) {\n        left = left*10 + right%10;\n        right /= 10;\n    }\n    if(n%2 == 1) {\n        left = left*10 + left%10;\n    }\n    return left;",
    "    long n = num;\n    int digits = 0;\n    while(n) {\n        digits++;\n        n /= 10;\n    }\n    int mid = digits / 2;\n    long left = num / (long)pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long left_rev = 0;\n    long right_rev = 0;\n    while(right) {\n        right_rev = right_rev * 10 + right % 10;\n        right /= 10;\n    }\n    while(left) {\n        left_rev = left_rev * 10 + left % 10;\n        left /= 10;\n    }\n    if(left_rev > right_rev) {\n        return num + (long)pow(10, mid) - right_rev;\n    }\n    else {\n        return num + (long)pow(10, mid) - right_rev + 1;\n    }",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev < num)\n        return rev;\n    else {\n        long temp = num;\n        long rev = 0;\n        while(temp > 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        return rev;\n    }",
    "    if(num<10)\n        return num;\n    int n = log10(num)+1;\n    int mid = n/2;\n    int i=mid-1;\n    int j= (n%2)? mid+1 : mid;\n    bool leftsmaller = false;\n    while(i>=0 && num/pow(10,i)==num%10)\n    {\n        i--;\n        j++;\n    }\n    if(i<0 || num/pow(10,i)<num%10)\n        leftsmaller = true;\n    while(i>=0)\n    {\n        num += (num/pow(10,i)-num%10)*pow(10,i);\n        i--;\n        j++;\n    }\n    if(leftsmaller)\n    {\n        int carry = 1;\n        i=mid-1;\n        if(n%2==1)\n        {\n            num += pow(10,mid);\n            carry = (num/pow(10,mid))/10;\n            num = num%(long)pow(10,mid);\n            j=mid+1;\n        }\n        while(i>=0)\n        {\n            num += carry*pow(10,i);\n            carry = (num/pow(10,i))/10;\n            num = num%(long)pow(10,i);\n            i--;\n            j++;\n        }\n    }\n    return num;",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2 > 0) {\n        rev2 = rev2 * 10 + temp2 % 10;\n        temp2 /= 10;\n    }\n    if(rev2 == num) {\n        return num;\n    }\n    return rev;",
    "    long n = num;\n    int len = 0;\n    while(n) {\n        len++;\n        n /= 10;\n    }\n    if(len == 1) {\n        return num;\n    }\n    int mid = len / 2;\n    long left = num / pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long new_right = 0;\n    if(len % 2 == 0) {\n        new_right = left;\n    } else {\n        new_right = left / 10;\n    }\n    long new_num = left * pow(10, mid) + new_right;\n    if(new_num > num) {\n        return new_num;\n    }\n    if(len % 2 == 0) {\n        left++;\n    } else {\n        left = left / 10 * 10 + 1;\n    }\n    new_right = left;\n    new_num = left * pow(10, mid) + new_right;\n    return new_num;",
    "    // Write your code here\n    long n = num;\n    int digits = 0;\n    while(n) {\n        digits++;\n        n /= 10;\n    }\n    int mid = digits / 2;\n    long left = num / pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long left_copy = left;\n    long right_copy = right;\n    long left_rev = 0;\n    while(left_copy) {\n        left_rev = left_rev * 10 + left_copy % 10;\n        left_copy /= 10;\n    }\n    if(left_rev <= right) {\n        left += 1;\n        left_rev = 0;\n        left_copy = left;\n        while(left_copy) {\n            left_rev = left_rev * 10 + left_copy % 10;\n            left_copy /= 10;\n        }\n    }\n    long ans = left * pow(10, mid) + left_rev;\n    return ans;",
    "    std::string str = std::to_string(num);\n    int n = str.size();\n    int mid = n / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (n % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (n % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && num_str[i] == num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str[j] = num_str[i];\n        i--;\n        j++;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2 == 1) {\n            int num = num_str[mid] - '0' + carry;\n            carry = num / 10;\n            num_str[mid] = (num % 10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int num = num_str[i] - '0' + carry;\n            carry = num / 10;\n            num_str[i] = (num % 10) + '0';\n            num_str[j++] = num_str[i--];\n        }\n    }\n    return std::stol(num_str);",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num)\n        return num;\n    else{\n        long temp = num;\n        long rev = 0;\n        while(temp > 0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n        if(rev > num)\n            return rev;\n        else{\n            long temp = num;\n            long rev = 0;\n            while(temp > 0){\n                rev = rev*10 + temp%10;\n                temp = temp/10;\n            }\n            return rev;\n        }\n    }",
    "    int n = num;\n    int digits = 0;\n    while(n > 0) {\n        digits++;\n        n /= 10;\n    }\n    int mid = digits / 2;\n    int i = mid - 1;\n    int j = (digits % 2) ? mid + 1 : mid;\n    bool leftsmaller = false;\n    while(i >= 0 && num / pow(10, i) == num % 10) {\n        i--;\n        j++;\n    }\n    if(i < 0 || num / pow(10, i) < num % 10) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        num += (num / pow(10, i) - num % 10) * pow(10, i);\n        num += (num / pow(10, j) - num % 10) * pow(10, j);\n        i--;\n        j++;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(digits % 2 == 1) {\n            num += pow(10, mid);\n            j = mid + 1;\n        }\n        else {\n            j = mid;\n        }\n        while(i >= 0) {\n            num += carry * pow(10, i);\n            carry = (num / pow(10, i)) / 10;\n            num += carry * pow(10, j);\n            carry = (num / pow(10, j)) / 10;\n            i--;\n            j++;\n        }\n    }\n    return num;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num){\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    long count = 0;\n    while(temp1 > 0){\n        count++;\n        temp1 = temp1/10;\n    }\n    if(count%2 == 0){\n        long mid = count/2;\n        long mid1 = mid-1;\n        long mid2 = mid;\n        long mid3 = mid+1;\n        long mid4 = mid+2;\n        long temp3 = num;\n        long temp4 = rev;\n        long temp5 = num;\n        long temp6 = rev;\n        long temp7 = num;\n        long temp8 = rev;\n        long temp9 = num;\n        long temp10 = rev;\n        long temp11 = num;\n        long temp12 = rev;\n        long temp13 = num;\n        long temp14 = rev;\n        long temp15 = num;\n        long temp16 = rev;\n        long temp17 = num;\n        long temp18 = rev;\n        long temp19 = num;\n        long temp20 = rev;\n        long temp21 = num;\n        long temp22 = rev;\n        long temp23 = num;\n        long temp24 = rev;\n        long temp25 = num;\n        long temp26 = rev;\n        long temp27 = num;\n        long temp28 = rev;\n        long temp29 = num;\n        long temp30 = rev;\n        long temp31 = num;\n        long temp32 = rev;\n        long temp33 = num;\n        long temp34 = rev;\n        long temp35 = num;\n        long temp36 = rev;\n        long temp37 = num;\n        long temp38 = rev;\n        long temp39 = num;\n        long temp40 = rev;\n        long temp41 = num;\n        long temp42 = rev;\n        long temp43 = num;\n        long temp44 = rev;\n       ",
    "    // Write your code here\n    long temp = num;\n    int length = 0;\n    while(temp > 0) {\n        length++;\n        temp /= 10;\n    }\n    long *arr = new long[length];\n    temp = num;\n    for(int i = 0; i < length; i++) {\n        arr[i] = temp % 10;\n        temp /= 10;\n    }\n    int mid = length / 2;\n    int left = mid - 1;\n    int right = (length % 2 == 0) ? mid : mid + 1;\n    bool left_smaller = false;\n    while(left >= 0 && arr[left] == arr[right]) {\n        left--;\n        right++;\n    }\n    if(left < 0 || arr[left] < arr[right]) {\n        left_smaller = true;\n    }\n    while(left >= 0) {\n        arr[right] = arr[left];\n        right++;\n        left--;\n    }\n    if(left_smaller) {\n        int carry = 1;\n        left = mid - 1;\n        if(length % 2 == 1) {\n            arr[mid] += carry;\n            carry = arr[mid] / 10;\n            arr[mid] %= 10;\n            right = mid + 1;\n        } else {\n            right = mid;\n        }\n        while(left >= 0) {\n            arr[left] += carry;\n            carry = arr[left] / 10;\n            arr[left] %= 10;\n            arr[right] = arr[left];\n            right++;\n            left--;\n        }\n    }\n    long result = 0;\n    for(int i = 0; i < length; i++) {\n        result = result * 10 + arr[i];\n    }\n    return result;",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(num==rev)\n    {\n        return num;\n    }\n    else\n    {\n        return rev;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num)\n        return num;\n    else{\n        num++;\n        temp = num;\n        rev = 0;\n        while(temp != 0){\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        if(rev == num)\n            return num;\n        else\n            return next_smallest_palindrome(num);\n    }",
    "    // Write your code here\n    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (len%2)? mid + 1 : mid;\n    while(i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || str[i] < str[j]) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(len%2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long temp = num;\n    int digits = 0;\n    while(temp > 0) {\n        digits++;\n        temp /= 10;\n    }\n    int mid = digits / 2;\n    long left = num / pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long left_copy = left;\n    long right_copy = right;\n    long left_rev = 0;\n    long right_rev = 0;\n    while(left > 0) {\n        left_rev = left_rev * 10 + left % 10;\n        left /= 10;\n    }\n    while(right > 0) {\n        right_rev = right_rev * 10 + right % 10;\n        right /= 10;\n    }\n    if(left_rev > right_rev) {\n        if(digits % 2 == 0) {\n            return left_copy * pow(10, mid) + left_rev;\n        }\n        else {\n            return left_copy * pow(10, mid) + left_rev / 10;\n        }\n    }\n    else {\n        if(digits % 2 == 0) {\n            return (left_copy + 1) * pow(10, mid) + left_rev;\n        }\n        else {\n            return (left_copy + 1) * pow(10, mid) + left_rev / 10;\n        }\n    }",
    "    long n = num;\n    long rev = 0;\n    while(n > 0) {\n        rev = rev * 10 + n % 10;\n        n /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long next = num + 1;\n    while(true) {\n        n = next;\n        rev = 0;\n        while(n > 0) {\n            rev = rev * 10 + n % 10;\n            n /= 10;\n        }\n        if(rev == next) {\n            return next;\n        }\n        next++;\n    }",
    "    // Your code here\n    long temp = num;\n    int len = 0;\n    while(temp) {\n        len++;\n        temp /= 10;\n    }\n    int mid = len / 2;\n    long left = num / pow(10, mid);\n    long right = num % (long)pow(10, mid);\n    long right_rev = 0;\n    while(right) {\n        right_rev = right_rev * 10 + right % 10;\n        right /= 10;\n    }\n    if(left < right_rev) {\n        left++;\n        right_rev = 0;\n    }\n    long ans = left * pow(10, mid) + right_rev;\n    return ans;",
    "  // Implement this placeholder.\n  return 0;",
    "    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(num == rev) {\n        return num;\n    }\n    if(num > rev) {\n        num++;\n    }\n    while(true) {\n        temp = num;\n        rev = 0;\n        while(temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        if(num == rev) {\n            return num;\n        }\n        num++;\n    }",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(num==rev)\n    {\n        return num;\n    }\n    else\n    {\n        num++;\n        while(1)\n        {\n            temp=num;\n            rev=0;\n            while(temp!=0)\n            {\n                rev=rev*10+temp%10;\n                temp=temp/10;\n            }\n            if(num==rev)\n            {\n                return num;\n            }\n            else\n            {\n                num++;\n            }\n        }\n    }",
    "    // Write your code here\n    long num1=num;\n    long num2=num;\n    long rem;\n    long rev=0;\n    long rev1=0;\n    long rev2=0;\n    long rev3=0;\n    long rem1;\n    long rem2;\n    long rem3;\n    long rem4;\n    long rem5;\n    long rem6;\n    long rem7;\n    long rem8;\n    long rem9;\n    long rem10;\n    long rem11;\n    long rem12;\n    long rem13;\n    long rem14;\n    long rem15;\n    long rem16;\n    long rem17;\n    long rem18;\n    long rem19;\n    long rem20;\n    long rem21;\n    long rem22;\n    long rem23;\n    long rem24;\n    long rem25;\n    long rem26;\n    long rem27;\n    long rem28;\n    long rem29;\n    long rem30;\n    long rem31;\n    long rem32;\n    long rem33;\n    long rem34;\n    long rem35;\n    long rem36;\n    long rem37;\n    long rem38;\n    long rem39;\n    long rem40;\n    long rem41;\n    long rem42;\n    long rem43;\n    long rem44;\n    long rem45;\n    long rem46;\n    long rem47;\n    long rem48;\n    long rem49;\n    long rem50;\n    long rem51;\n    long rem52;\n    long rem53;\n    long rem54;\n    long rem55;\n    long rem56;\n    long rem57;\n    long rem58;\n    long rem59;\n    long rem60;\n    long rem61;\n    long rem62;\n    long rem63;\n    long rem64;\n    long rem65;\n    long rem66;\n    long rem67;\n    long rem68;\n    long rem69;\n    long rem70;\n    long rem71;\n    long rem72;\n    long rem73;\n    long rem74;\n    long rem75;\n    long",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(num == rev){\n        return num;\n    }\n    long temp1 = num;\n    long rev1 = 0;\n    while(temp1 > 0){\n        rev1 = rev1*10 + temp1%10;\n        temp1 /= 10;\n    }\n    if(num == rev1){\n        return num;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2 > 0){\n        rev2 = rev2*10 + temp2%10;\n        temp2 /= 10;\n    }\n    if(num == rev2){\n        return num;\n    }\n    long temp3 = num;\n    long rev3 = 0;\n    while(temp3 > 0){\n        rev3 = rev3*10 + temp3%10;\n        temp3 /= 10;\n    }\n    if(num == rev3){\n        return num;\n    }\n    return -1;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp!=0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(num == rev){\n        return num;\n    }\n    else{\n        return num+1;\n    }",
    "  // Implement this placeholder.\n  return 0;",
    "    long temp = num;\n    int len = 0;\n    while(temp > 0) {\n        len++;\n        temp /= 10;\n    }\n    long left = num;\n    long right = 0;\n    long div = 1;\n    for(int i = 0; i < len/2; i++) {\n        right = right * 10 + left % 10;\n        left /= 10;\n        div *= 10;\n    }\n    if(len % 2 == 1) {\n        left /= 10;\n        div /= 10;\n    }\n    if(left == right) {\n        return num;\n    }\n    if(left < right) {\n        left = left * div + right;\n        return left;\n    }\n    left = left * div + right;\n    left += div;\n    return left;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(num == rev){\n        num = num+1;\n    }\n    while(num != rev){\n        num = num+1;\n        temp = num;\n        rev = 0;\n        while(temp != 0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n    }\n    return num;",
    "    // Write your code here\n    long num1=num;\n    long rev=0;\n    while(num1>0)\n    {\n        rev=rev*10+num1%10;\n        num1/=10;\n    }\n    if(num==rev)\n    {\n        return num;\n    }\n    else\n    {\n        num++;\n        while(num!=rev)\n        {\n            num1=num;\n            rev=0;\n            while(num1>0)\n            {\n                rev=rev*10+num1%10;\n                num1/=10;\n            }\n            if(num==rev)\n            {\n                return num;\n            }\n            num++;\n        }\n    }",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp>0){\n        rev=rev*10+temp%10;\n        temp/=10;\n    }\n    if(rev==num)\n        return num;\n    else{\n        long temp=num;\n        long rev=0;\n        while(temp>0){\n            rev=rev*10+temp%10;\n            temp/=10;\n        }\n        if(rev<num){\n            return rev;\n        }\n        else{\n            long temp=num;\n            long rev=0;\n            while(temp>0){\n                rev=rev*10+temp%10;\n                temp/=10;\n            }\n            return rev;\n        }\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    else {\n        return rev;\n    }",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp2 = num;\n    long rev2 = 0;\n    while(temp2 > 0) {\n        rev2 = rev2 * 10 + temp2 % 10;\n        temp2 /= 10;\n    }\n    if(rev2 == num) {\n        return num;\n    }\n    long temp3 = num;\n    long rev3 = 0;\n    while(temp3 > 0) {\n        rev3 = rev3 * 10 + temp3 % 10;\n        temp3 /= 10;\n    }\n    if(rev3 == num) {\n        return num;\n    }\n    long temp4 = num;\n    long rev4 = 0;\n    while(temp4 > 0) {\n        rev4 = rev4 * 10 + temp4 % 10;\n        temp4 /= 10;\n    }\n    if(rev4 == num) {\n        return num;\n    }\n    long temp5 = num;\n    long rev5 = 0;\n    while(temp5 > 0) {\n        rev5 = rev5 * 10 + temp5 % 10;\n        temp5 /= 10;\n    }\n    if(rev5 == num) {\n        return num;\n    }\n    long temp6 = num;\n    long rev6 = 0;\n    while(temp6 > 0) {\n        rev6 = rev6 * 10 + temp6 % 10;\n        temp6 /= 10;\n    }\n    if(rev6 == num) {\n        return num;\n    }\n    long temp7 = num;\n    long rev7 = 0;\n    while(temp7 > 0) {\n        rev7 = rev7 * 10 + temp7 % 10;\n        temp7 /= 10;\n    }\n    if(rev7 == num) {\n        return num;\n    }\n    long temp8 = num;\n    long rev8 = 0;\n    while(temp8 > 0) {\n        rev8",
    "    // Write your code here\n    long temp = num;\n    int len = 0;\n    while(temp > 0) {\n        len++;\n        temp /= 10;\n    }\n    if(len == 1) {\n        return num;\n    }\n    long left = num;\n    long right = 0;\n    for(int i = 0; i < len/2; i++) {\n        right = right*10 + left%10;\n        left /= 10;\n    }\n    if(len%2 == 1) {\n        left /= 10;\n    }\n    if(left == right) {\n        return num;\n    }\n    if(left < right) {\n        left = num/(long)pow(10, len/2);\n        left++;\n        left *= (long)pow(10, len/2);\n        right = 0;\n        for(int i = 0; i < len/2; i++) {\n            right = right*10 + left%10;\n            left /= 10;\n        }\n        if(len%2 == 1) {\n            left /= 10;\n        }\n        return left*(long)pow(10, len) + right;\n    }\n    return left*(long)pow(10, len) + right;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    if(rev > num) {\n        return rev;\n    }\n    long next_palindrome = num + 1;\n    while(true) {\n        temp = next_palindrome;\n        rev = 0;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        if(rev == next_palindrome) {\n            return next_palindrome;\n        }\n        next_palindrome++;\n    }",
    "    std::string str = std::to_string(num);\n    int n = str.length();\n    int mid = n/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n % 2)? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        leftsmaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (n % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev == num)\n        return num;\n    else if(rev > num)\n        return rev;\n    else{\n        long temp = num;\n        long rev = 0;\n        while(temp != 0){\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        if(rev == num)\n            return num;\n        else if(rev > num)\n            return rev;\n        else{\n            long temp = num;\n            long rev = 0;\n            while(temp != 0){\n                rev = rev*10 + temp%10;\n                temp /= 10;\n            }\n            if(rev == num)\n                return num;\n            else if(rev > num)\n                return rev;\n            else{\n                long temp = num;\n                long rev = 0;\n                while(temp != 0){\n                    rev = rev*10 + temp%10;\n                    temp /= 10;\n                }\n                if(rev == num)\n                    return num;\n                else if(rev > num)\n                    return rev;\n                else{\n                    long temp = num;\n                    long rev = 0;\n                    while(temp != 0){\n                        rev = rev*10 + temp%10;\n                        temp /= 10;\n                    }\n                    if(rev == num)\n                        return num;\n                    else if(rev > num)\n                        return rev;\n                    else{\n                        long temp = num;\n                        long rev = 0;\n                        while(temp != 0){\n                            rev = rev*10 + temp%10;\n                            temp /= 10;\n                        }\n                        if(rev == num)\n                            return num;\n                        else if(rev > num)\n                            return rev;\n                        else{\n                            long temp = num;\n                            long rev = 0;\n                            while(temp != 0){\n                                rev = rev*10 + temp%10;\n                                temp /= 10;\n                            }\n",
    "    std::string str = std::to_string(num);\n    int n = str.length();\n    int mid = n / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (n % 2) ? mid + 1 : mid;\n    while (i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || str[i] < str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        str[j] = str[i];\n        j++;\n        i--;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (n % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    if (num < 0) return -1;\n    if (num < 10) return num;\n\n    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len / 2;\n\n    bool is_odd = len % 2;\n    int left_mid = mid - 1;\n    int right_mid = (is_odd) ? mid + 1 : mid;\n\n    bool left_smaller = false;\n    while (left_mid >= 0 && num_str[left_mid] == num_str[right_mid]) {\n        left_mid--;\n        right_mid++;\n    }\n\n    if (left_mid < 0 || num_str[left_mid] < num_str[right_mid]) {\n        left_smaller = true;\n    }\n\n    while (left_mid >= 0) {\n        num_str[right_mid] = num_str[left_mid];\n        left_mid--;\n        right_mid++;\n    }\n\n    if (left_smaller) {\n        int carry = 1;\n        left_mid = mid - 1;\n\n        if (is_odd) {\n            int num = num_str[mid] - '0' + carry;\n            carry = num / 10;\n            num_str[mid] = (num % 10) + '0';\n            right_mid = mid + 1;\n        } else {\n            right_mid = mid;\n        }\n\n        while (left_mid >= 0) {\n            int num = num_str[left_mid] - '0' + carry;\n            carry = num / 10;\n            num_str[left_mid] = (num % 10) + '0';\n            num_str[right_mid] = num_str[left_mid];\n            left_mid--;\n            right_mid++;\n        }\n    }\n\n    return std::stol(num_str);",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev > num)\n        return rev;\n    else {\n        long num_digits = 0;\n        temp = num;\n        while(temp > 0) {\n            num_digits++;\n            temp /= 10;\n        }\n        long left_half = num / pow(10, (num_digits + 1) / 2);\n        long right_half = num % (long)pow(10, (num_digits + 1) / 2);\n        long new_right_half = left_half;\n        if(num_digits % 2 == 0)\n            new_right_half /= 10;\n        if(new_right_half < right_half) {\n            left_half++;\n            new_right_half = left_half;\n            if(num_digits % 2 == 0)\n                new_right_half /= 10;\n        }\n        long new_num = left_half * pow(10, (num_digits + 1) / 2) + new_right_half;\n        return new_num;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp!=0){\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num)\n        return num;\n    else if(rev > num){\n        return rev;\n    }\n    else{\n        long temp = num;\n        long rev = 0;\n        while(temp!=0){\n            rev = rev*10 + temp%10;\n            temp = temp/10;\n        }\n        if(rev == num)\n            return num;\n        else if(rev > num){\n            return rev;\n        }\n        else{\n            long temp = num;\n            long rev = 0;\n            while(temp!=0){\n                rev = rev*10 + temp%10;\n                temp = temp/10;\n            }\n            if(rev == num)\n                return num;\n            else if(rev > num){\n                return rev;\n            }\n            else{\n                long temp = num;\n                long rev = 0;\n                while(temp!=0){\n                    rev = rev*10 + temp%10;\n                    temp = temp/10;\n                }\n                if(rev == num)\n                    return num;\n                else if(rev > num){\n                    return rev;\n                }\n                else{\n                    long temp = num;\n                    long rev = 0;\n                    while(temp!=0){\n                        rev = rev*10 + temp%10;\n                        temp = temp/10;\n                    }\n                    if(rev == num)\n                        return num;\n                    else if(rev > num){\n                        return rev;\n                    }\n                    else{\n                        long temp = num;\n                        long rev = 0;\n                        while(temp!=0){\n                            rev = rev*10 + temp%10;\n                            temp = temp/10;\n                        }\n                        if(rev == num)\n                            return num;\n                        else if(rev > num){\n                            return rev;\n                        }\n                        else{\n                            long temp = num;\n                            long rev = 0;\n                            while(",
    "    // Write your code here\n    string s = to_string(num);\n    int n = s.length();\n    int mid = n/2;\n    bool leftsmaller = false;\n    int i = mid-1;\n    int j = (n%2)? mid+1 : mid;\n    while(i>=0 && s[i]==s[j]){\n        i--;\n        j++;\n    }\n    if(i<0 || s[i]<s[j]){\n        leftsmaller = true;\n    }\n    while(i>=0){\n        s[j] = s[i];\n        i--;\n        j++;\n    }\n    if(leftsmaller){\n        int carry = 1;\n        i = mid-1;\n        if(n%2){\n            int x = s[mid]-'0';\n            x = x+carry;\n            carry = x/10;\n            x = x%10;\n            s[mid] = x+'0';\n            j = mid+1;\n        }else{\n            j = mid;\n        }\n        while(i>=0){\n            int x = s[i]-'0';\n            x = x+carry;\n            carry = x/10;\n            x = x%10;\n            s[i] = x+'0';\n            s[j] = s[i];\n            i--;\n            j++;\n        }\n    }\n    return stol(s);",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev*10 + temp%10;\n        temp = temp/10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    long temp3 = num;\n    long temp4 = rev;\n    long temp5 = num;\n    long temp6 = rev;\n    long temp7 = num;\n    long temp8 = rev;\n    long temp9 = num;\n    long temp10 = rev;\n    long temp11 = num;\n    long temp12 = rev;\n    long temp13 = num;\n    long temp14 = rev;\n    long temp15 = num;\n    long temp16 = rev;\n    long temp17 = num;\n    long temp18 = rev;\n    long temp19 = num;\n    long temp20 = rev;\n    long temp21 = num;\n    long temp22 = rev;\n    long temp23 = num;\n    long temp24 = rev;\n    long temp25 = num;\n    long temp26 = rev;\n    long temp27 = num;\n    long temp28 = rev;\n    long temp29 = num;\n    long temp30 = rev;\n    long temp31 = num;\n    long temp32 = rev;\n    long temp33 = num;\n    long temp34 = rev;\n    long temp35 = num;\n    long temp36 = rev;\n    long temp37 = num;\n    long temp38 = rev;\n    long temp39 = num;\n    long temp40 = rev;\n    long temp41 = num;\n    long temp42 = rev;\n    long temp43 = num;\n    long temp44 = rev;\n    long temp45 = num;\n    long temp46 = rev;\n    long temp47 = num;\n    long temp48 = rev;\n    long temp49 = num;\n    long temp50 = rev;\n    long temp51 = num;\n    long temp52 = rev;\n    long temp53 = num;\n    long temp54 = rev;\n    long temp55 = num;\n    long temp56 = rev;\n",
    "  if (num < 0) return -1;\n  if (num < 10) return num;\n  std::string s = std::to_string(num);\n  int n = s.size();\n  int mid = n / 2;\n  bool left_smaller = false;\n  int i = mid - 1;\n  int j = (n % 2) ? mid + 1 : mid;\n  while (i >= 0 && s[i] == s[j]) {\n    i--;\n    j++;\n  }\n  if (i < 0 || s[i] < s[j]) {\n    left_smaller = true;\n  }\n  while (i >= 0) {\n    s[j] = s[i];\n    j++;\n    i--;\n  }\n  if (left_smaller) {\n    int carry = 1;\n    i = mid - 1;\n    if (n % 2 == 1) {\n      int x = s[mid] - '0';\n      x += carry;\n      carry = x / 10;\n      s[mid] = (x % 10) + '0';\n      j = mid + 1;\n    } else {\n      j = mid;\n    }\n    while (i >= 0) {\n      int x = s[i] - '0';\n      x += carry;\n      carry = x / 10;\n      s[i] = (x % 10) + '0';\n      s[j++] = s[i--];\n    }\n  }\n  return std::stol(s);",
    "    // Write your code here\n    long temp=num;\n    long rev=0;\n    while(temp!=0)\n    {\n        rev=rev*10+temp%10;\n        temp=temp/10;\n    }\n    if(rev==num)\n    {\n        return num;\n    }\n    else\n    {\n        return rev;\n    }",
    "    // Write your code here\n    long num1=num;\n    long num2=num;\n    long temp=num;\n    long rev=0;\n    long count=0;\n    while(num1!=0)\n    {\n        num1=num1/10;\n        count++;\n    }\n    while(num2!=0)\n    {\n        rev=rev*10+num2%10;\n        num2=num2/10;\n    }\n    if(rev==temp)\n    {\n        temp++;\n        num1=temp;\n        num2=temp;\n        rev=0;\n        while(num2!=0)\n        {\n            rev=rev*10+num2%10;\n            num2=num2/10;\n        }\n        if(rev==num1)\n        {\n            return num1;\n        }\n        else\n        {\n            return next_smallest_palindrome(num1);\n        }\n    }\n    else\n    {\n        return rev;\n    }",
    "    std::string num_str = std::to_string(num);\n    int len = num_str.length();\n    int mid = len / 2;\n    bool left_smaller = false;\n    int i = mid - 1;\n    int j = (len % 2) ? mid + 1 : mid;\n    while (i >= 0 && num_str[i] == num_str[j]) {\n        i--;\n        j++;\n    }\n    if (i < 0 || num_str[i] < num_str[j]) {\n        left_smaller = true;\n    }\n    while (i >= 0) {\n        num_str[j] = num_str[i];\n        i--;\n        j++;\n    }\n    if (left_smaller) {\n        int carry = 1;\n        i = mid - 1;\n        if (len % 2) {\n            int num = num_str[mid] - '0' + carry;\n            carry = num / 10;\n            num_str[mid] = (num % 10) + '0';\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while (i >= 0) {\n            int num = num_str[i] - '0' + carry;\n            carry = num / 10;\n            num_str[i] = (num % 10) + '0';\n            num_str[j++] = num_str[i--];\n        }\n    }\n    return std::stol(num_str);",
    "    // Write your code here\n    if(num<10)\n        return num;\n    long temp=num;\n    int n=0;\n    while(temp>0){\n        n++;\n        temp/=10;\n    }\n    int mid=n/2;\n    int i=mid-1;\n    int j=n%2==0?mid:mid+1;\n    while(i>=0 && num/pow(10,j)==num%10){\n        i--;\n        j++;\n    }\n    if(i<0 || num/pow(10,j)<num%10){\n        i=mid-1;\n        j=n%2==0?mid:mid+1;\n        long left=num/pow(10,j);\n        long right=num%(long)pow(10,i+1);\n        long sum=left+1;\n        while(i>=0){\n            sum=sum*10+(sum%10);\n            i--;\n        }\n        num=sum*pow(10,j)+right;\n    }\n    else{\n        while(i>=0){\n            num=num/10+(num%10)*pow(10,n-1);\n            i--;\n            n--;\n        }\n    }\n    return num;",
    "    // Implement this placeholder.\n    return 0;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + (temp % 10);\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    long count = 0;\n    while(temp1 > 0) {\n        temp1 /= 10;\n        temp2 /= 10;\n        count++;\n    }\n    long temp3 = num;\n    long temp4 = rev;\n    long count1 = 0;\n    while(temp3 > 0) {\n        if(temp3 % 10 != temp4 % 10) {\n            count1++;\n        }\n        temp3 /= 10;\n        temp4 /= 10;\n    }\n    if(count1 == 1) {\n        return rev;\n    }\n    if(count % 2 == 0) {\n        long temp5 = num;\n        long temp6 = rev;\n        long count2 = 0;\n        while(temp5 > 0) {\n            if(temp5 % 10 != temp6 % 10) {\n                count2++;\n            }\n            temp5 /= 10;\n            temp6 /= 10;\n        }\n        if(count2 == 2) {\n            return rev;\n        }\n    }\n    long temp7 = num;\n    long temp8 = rev;\n    long count3 = 0;\n    while(temp7 > 0) {\n        if(temp7 % 10 != temp8 % 10) {\n            count3++;\n        }\n        temp7 /= 10;\n        temp8 /= 10;\n    }\n    if(count3 == 3) {\n        return rev;\n    }\n    long temp9 = num;\n    long temp10 = rev;\n    long count4 = 0;\n    while(temp9 > 0) {\n        if(temp9 % 10 != temp10 % 10) {\n            count4++;\n        }\n        temp9 /= 10;\n        temp10 /= 10;\n    }\n    if(count4 == 4) {\n        return rev",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(num > 0){\n        rev = rev * 10 + num % 10;\n        num /= 10;\n    }\n    if(rev < temp){\n        return rev;\n    }\n    else{\n        return -1;\n    }",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp != 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    while(temp1 != 0) {\n        if(temp1 % 10 != temp2 % 10) {\n            break;\n        }\n        temp1 /= 10;\n        temp2 /= 10;\n    }\n    if(temp1 == 0) {\n        return num;\n    }\n    temp1 = num;\n    temp2 = rev;\n    long temp3 = 0;\n    while(temp1 != 0) {\n        temp3 = temp3 * 10 + temp1 % 10;\n        temp1 /= 10;\n    }\n    if(temp3 == num) {\n        return num;\n    }\n    long temp4 = 0;\n    while(temp3 != 0) {\n        temp4 = temp4 * 10 + temp3 % 10;\n        temp3 /= 10;\n    }\n    if(temp4 == num) {\n        return num;\n    }\n    return temp4;",
    "    long temp = num;\n    int digits = 0;\n    while(temp) {\n        digits++;\n        temp /= 10;\n    }\n    long palindrome = num;\n    int i = 0;\n    while(i < digits/2) {\n        palindrome += pow(10, i) - pow(10, digits - i - 1);\n        i++;\n    }\n    return palindrome;",
    "    std::string str = std::to_string(num);\n    int len = str.length();\n    int mid = len/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (len % 2)? mid + 1 : mid;\n    while(i >= 0 && str[i] == str[j]) {\n        i--;\n        j++;\n    }\n    if(i < 0 || str[i] < str[j]) {\n        leftsmaller = true;\n    }\n    while(i >= 0) {\n        str[j] = str[i];\n        i--;\n        j++;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(len % 2 == 1) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i >= 0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x / 10;\n            x %= 10;\n            str[i] = (char)(x + '0');\n            str[j++] = str[i--];\n        }\n    }\n    return std::stol(str);",
    "    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(rev > num)\n        return rev;\n    if(num < 10)\n        return num+1;\n    long left = num;\n    long right = 0;\n    while(left > 0) {\n        right = right*10 + left%10;\n        left /= 10;\n    }\n    left = num;\n    long mid = left/10;\n    while(left > 0) {\n        mid = mid*10 + left%10;\n        left /= 10;\n    }\n    if(mid > right)\n        return mid;\n    left = num;\n    while(left > 0) {\n        right = right*10 + left%10;\n        left /= 10;\n    }\n    return right;",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0){\n        rev = rev*10 + temp%10;\n        temp /= 10;\n    }\n    if(num == rev){\n        return num;\n    }\n    long next_palindrome = num;\n    while(next_palindrome <= rev){\n        next_palindrome++;\n        temp = next_palindrome;\n        rev = 0;\n        while(temp > 0){\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        if(next_palindrome == rev){\n            return next_palindrome;\n        }\n    }\n    return next_palindrome;",
    "    // Write your code here\n    long n=num;\n    long temp=num;\n    int len=0;\n    while(temp>0){\n        len++;\n        temp=temp/10;\n    }\n    int mid=len/2;\n    int i=mid-1;\n    int j=(len%2==0)?mid:mid+1;\n    while(i>=0 && num/(long)pow(10,j)==num%10){\n        i--;\n        j++;\n    }\n    bool left_smaller=false;\n    if(i<0 || num/(long)pow(10,j)<num%10){\n        left_smaller=true;\n    }\n    while(i>=0){\n        long temp=num/(long)pow(10,j);\n        num=num%(long)pow(10,j);\n        num=num*10+temp;\n        i--;\n        j++;\n    }\n    if(left_smaller){\n        long carry=1;\n        i=mid-1;\n        if(len%2==1){\n            long temp=num%10;\n            num=num/10;\n            num=num+carry;\n            carry=temp;\n            j=1;\n        }\n        else{\n            j=0;\n        }\n        while(i>=0){\n            long temp=num/(long)pow(10,j);\n            num=num%(long)pow(10,j);\n            num=num*10+temp;\n            i--;\n            j++;\n        }\n    }\n    return num;",
    "    if(num<10)\n        return num;\n    std::string str = std::to_string(num);\n    int n = str.length();\n    int mid = n/2;\n    bool leftsmaller = false;\n    int i = mid - 1;\n    int j = (n%2)? mid+1 : mid;\n    while(i>=0 && str[i]==str[j]) {\n        i--;\n        j++;\n    }\n    if(i<0 || str[i]<str[j])\n        leftsmaller = true;\n    while(i>=0) {\n        str[j] = str[i];\n        i--;\n        j++;\n    }\n    if(leftsmaller) {\n        int carry = 1;\n        i = mid - 1;\n        if(n%2) {\n            int x = str[mid] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[mid] = (char)(x + '0');\n            j = mid + 1;\n        } else {\n            j = mid;\n        }\n        while(i>=0) {\n            int x = str[i] - '0';\n            x += carry;\n            carry = x/10;\n            x = x%10;\n            str[i] = (char)(x + '0');\n            str[j] = str[i];\n            i--;\n            j++;\n        }\n    }\n    return std::stol(str);",
    "    // Write your code here\n    long temp = num;\n    long rev = 0;\n    while(temp > 0) {\n        rev = rev * 10 + temp % 10;\n        temp /= 10;\n    }\n    if(rev == num) {\n        return num;\n    }\n    long temp1 = num;\n    long temp2 = rev;\n    long temp3 = num;\n    long temp4 = rev;\n    long count = 0;\n    while(temp1 > 0) {\n        count++;\n        temp1 /= 10;\n    }\n    long mid = count / 2;\n    long mid1 = mid;\n    long mid2 = mid;\n    if(count % 2 == 0) {\n        mid1--;\n        mid2++;\n    }\n    while(mid1 >= 0 && mid2 < count) {\n        if(temp2 % 10 < temp3 % 10) {\n            temp2 /= 10;\n            temp3 /= 10;\n            mid1--;\n            mid2++;\n        }\n        else if(temp2 % 10 > temp3 % 10) {\n            temp4 /= 10;\n            temp4 += pow(10, mid1);\n            temp4 *= pow(10, count - mid2);\n            return temp4;\n        }\n        else {\n            temp2 /= 10;\n            temp3 /= 10;\n            mid1--;\n            mid2++;\n        }\n    }\n    return temp4 + 1;",
    "    // Write your code here\n    if(num<=10)\n        return num+1;\n    if(num==11)\n        return 22;\n    long temp=num;\n    int count=0;\n    while(temp>0){\n        count++;\n        temp=temp/10;\n    }\n    long arr[count];\n    temp=num;\n    for(int i=0;i<count;i++){\n        arr[i]=temp%10;\n        temp=temp/10;\n    }\n    int mid=count/2;\n    int i=mid-1;\n    int j=(count%2==0)?mid:mid+1;\n    bool leftsmaller=false;\n    while(i>=0 && arr[i]==arr[j]){\n        i--;\n        j++;\n    }\n    if(i<0 || arr[i]<arr[j])\n        leftsmaller=true;\n    while(i>=0){\n        arr[j]=arr[i];\n        j++;\n        i--;\n    }\n    if(leftsmaller){\n        int carry=1;\n        i=mid-1;\n        if(count%2==1){\n            arr[mid]+=carry;\n            carry=arr[mid]/10;\n            arr[mid]%=10;\n            j=mid+1;\n        }\n        else\n            j=mid;\n        while(i>=0){\n            arr[i]+=carry;\n            carry=arr[i]/10;\n            arr[i]%=10;\n            arr[j++]=arr[i--];\n        }\n    }\n    long ans=0;\n    for(int i=0;i<count;i++){\n        ans=ans*10+arr[i];\n    }\n    return ans;"
  ]
}
{
  "name": "mbpp_394_check_distinct",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_394_check_distinct.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10];\n    for(int i=0; i<10; i++) {\n        arr[i] = 0;\n    }\n    while(test_tup) {\n        int digit = test_tup%10;\n        if(arr[digit]) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsly1mk74.cpp:2:\n/tmp/tmpsly1mk74.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsly1mk74.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpsly1mk74.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpsly1mk74.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  std::set<int> s;\n  while (test_tup > 0) {\n    int digit = test_tup % 10;\n    if (s.find(digit) != s.end()) {\n      return false;\n    }\n    s.insert(digit);\n    test_tup /= 10;\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyahiffzx.cpp:2:\n/tmp/tmpyahiffzx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyahiffzx.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpyahiffzx.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpyahiffzx.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpps734n8r.cpp:2:\n/tmp/tmpps734n8r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpps734n8r.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpps734n8r.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpps734n8r.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<long> test_vec;\n    while (test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(test_vec.begin(), test_vec.end());\n    for (int i = 1; i < test_vec.size(); i++) {\n        if (test_vec[i] == test_vec[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppfcm626_.cpp:2:\n/tmp/tmppfcm626_.cpp: In function \u2018int main()\u2019:\n/tmp/tmppfcm626_.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppfcm626_.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppfcm626_.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < sizeof(test_tup); i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuo8e3k4a.cpp:2:\n/tmp/tmpuo8e3k4a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuo8e3k4a.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpuo8e3k4a.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpuo8e3k4a.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<10> bits(test_tup);\n    return bits.count() == 10;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7nqkp96z.cpp:2:\n/tmp/tmp7nqkp96z.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7nqkp96z.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp7nqkp96z.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp7nqkp96z.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup != 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3fy2v1x1.cpp:2:\n/tmp/tmp3fy2v1x1.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3fy2v1x1.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp3fy2v1x1.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp3fy2v1x1.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<32> bs(test_tup);\n    return bs.count() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbeij_5vt.cpp:2:\n/tmp/tmpbeij_5vt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbeij_5vt.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbeij_5vt.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbeij_5vt.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  int count = 0;\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      if (i != j) {\n        if ((test_tup >> (i * 8)) & 0xFF == (test_tup >> (j * 8)) & 0xFF) {\n          count++;\n        }\n      }\n    }\n  }\n  if (count == 0) {\n    return true;\n  }\n  return false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6yj5_59z.cpp:2:\n/tmp/tmp6yj5_59z.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6yj5_59z.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp6yj5_59z.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp6yj5_59z.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 0; i < digits.size() - 1; i++) {\n        if(digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp87nwoguz.cpp:2:\n/tmp/tmp87nwoguz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp87nwoguz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp87nwoguz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp87nwoguz.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 0; i < digits.size() - 1; i++) {\n        if(digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp87nwoguz.cpp:2:\n/tmp/tmp87nwoguz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp87nwoguz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp87nwoguz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp87nwoguz.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppm99_6rn.cpp:2:\n/tmp/tmppm99_6rn.cpp: In function \u2018int main()\u2019:\n/tmp/tmppm99_6rn.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppm99_6rn.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppm99_6rn.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> test_set;\n    while (test_tup) {\n        test_set.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return test_set.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe0mq3wl7.cpp:2:\n/tmp/tmpe0mq3wl7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe0mq3wl7.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpe0mq3wl7.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpe0mq3wl7.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx5lo9md7.cpp:2:\n/tmp/tmpx5lo9md7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx5lo9md7.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx5lo9md7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx5lo9md7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while(test_tup) {\n        count += test_tup & 1;\n        test_tup >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyv46cezq.cpp:2:\n/tmp/tmpyv46cezq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyv46cezq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpyv46cezq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpyv46cezq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq6d43q5o.cpp:2:\n/tmp/tmpq6d43q5o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq6d43q5o.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpq6d43q5o.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpq6d43q5o.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 4; i++) {\n        int curr_digit = test_tup % 10;\n        test_tup /= 10;\n        for (int j = 0; j < 4; j++) {\n            int curr_digit2 = test_tup % 10;\n            test_tup /= 10;\n            if (curr_digit == curr_digit2) {\n                count++;\n            }\n        }\n    }\n    if (count == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeadldanw.cpp:2:\n/tmp/tmpeadldanw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeadldanw.cpp:25:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpeadldanw.cpp:26:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   26 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpeadldanw.cpp:27:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   27 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        if (test_tup & (1 << i)) {\n            if (mask & (1 << i)) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0hszy387.cpp:2:\n/tmp/tmp0hszy387.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0hszy387.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp0hszy387.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp0hszy387.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long temp = test_tup;\n    long mask = 0x1;\n    long count = 0;\n    while (temp != 0) {\n        if ((temp & mask) == 1) {\n            count++;\n        }\n        temp = temp >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplwaw97vm.cpp:2:\n/tmp/tmplwaw97vm.cpp: In function \u2018int main()\u2019:\n/tmp/tmplwaw97vm.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmplwaw97vm.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmplwaw97vm.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long test_tup_copy = test_tup;\n    std::set<int> s;\n    while (test_tup_copy > 0) {\n        int digit = test_tup_copy % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup_copy /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp99d_dcim.cpp:2:\n/tmp/tmp99d_dcim.cpp: In function \u2018int main()\u2019:\n/tmp/tmp99d_dcim.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp99d_dcim.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp99d_dcim.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppx7m0kdt.cpp:2:\n/tmp/tmppx7m0kdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmppx7m0kdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppx7m0kdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppx7m0kdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(long); i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx8l30_if.cpp:2:\n/tmp/tmpx8l30_if.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx8l30_if.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpx8l30_if.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpx8l30_if.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit])\n            return false;\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2zkwk2h9.cpp:2:\n/tmp/tmp2zkwk2h9.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2zkwk2h9.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2zkwk2h9.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2zkwk2h9.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 32; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwwmyebkh.cpp:2:\n/tmp/tmpwwmyebkh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwwmyebkh.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpwwmyebkh.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpwwmyebkh.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count_bits[64];\n    for (int i = 0; i < 64; i++) {\n        count_bits[i] = 0;\n    }\n    for (int i = 0; i < 64; i++) {\n        if ((test_tup & (1 << i)) != 0) {\n            count_bits[i]++;\n        }\n    }\n    for (int i = 0; i < 64; i++) {\n        if (count_bits[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnsgqm8is.cpp:2:\n/tmp/tmpnsgqm8is.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnsgqm8is.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpnsgqm8is.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpnsgqm8is.cpp:25:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 10; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 10;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5xuuk1ck.cpp:2:\n/tmp/tmp5xuuk1ck.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5xuuk1ck.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5xuuk1ck.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); ++i) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppih2zgdq.cpp:2:\n/tmp/tmppih2zgdq.cpp: In function \u2018int main()\u2019:\n/tmp/tmppih2zgdq.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppih2zgdq.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppih2zgdq.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        int curr_digit = test_tup % 10;\n        if (s.find(curr_digit) != s.end()) {\n            return false;\n        }\n        s.insert(curr_digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpg0fbuz6y.cpp:2:\n/tmp/tmpg0fbuz6y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpg0fbuz6y.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpg0fbuz6y.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpg0fbuz6y.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 8; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrh4iadd.cpp:2:\n/tmp/tmpvrh4iadd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrh4iadd.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvrh4iadd.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvrh4iadd.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long tup = test_tup;\n    int count = 0;\n    while (tup > 0) {\n        count++;\n        tup = tup >> 4;\n    }\n    int arr[count];\n    int i = 0;\n    while (test_tup > 0) {\n        arr[i] = test_tup & 15;\n        test_tup = test_tup >> 4;\n        i++;\n    }\n    for (int i = 0; i < count; i++) {\n        for (int j = i + 1; j < count; j++) {\n            if (arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgk8mjzcs.cpp:2:\n/tmp/tmpgk8mjzcs.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgk8mjzcs.cpp:29:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpgk8mjzcs.cpp:30:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   30 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpgk8mjzcs.cpp:31:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   31 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int test_arr[10];\n    int i = 0;\n    while (test_tup > 0) {\n        test_arr[i] = test_tup % 10;\n        test_tup /= 10;\n        i++;\n    }\n    std::sort(test_arr, test_arr + i);\n    for (int j = 0; j < i - 1; j++) {\n        if (test_arr[j] == test_arr[j + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpegw11gjj.cpp:2:\n/tmp/tmpegw11gjj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpegw11gjj.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpegw11gjj.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpegw11gjj.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    int i = 0;\n    while(test_tup) {\n        if(test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n        i++;\n    }\n    return count == i;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123684,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1afykisw.cpp:2:\n/tmp/tmp1afykisw.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1afykisw.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp1afykisw.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp1afykisw.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    int bit_set = 0;\n    while(test_tup) {\n        bit_set = test_tup & 1;\n        if(bit_set) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprh_lcy49.cpp:2:\n/tmp/tmprh_lcy49.cpp: In function \u2018int main()\u2019:\n/tmp/tmprh_lcy49.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmprh_lcy49.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmprh_lcy49.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 64; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 64;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_myx7i6g.cpp:2:\n/tmp/tmp_myx7i6g.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_myx7i6g.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_myx7i6g.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_myx7i6g.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if (mask & (1 << bit)) {\n                return false;\n            }\n            mask |= (1 << bit);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc722qov_.cpp:2:\n/tmp/tmpc722qov_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc722qov_.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpc722qov_.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpc722qov_.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpp14ttxug.cpp:2:\n/tmp/tmpp14ttxug.cpp: In function \u2018int main()\u2019:\n/tmp/tmpp14ttxug.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpp14ttxug.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpp14ttxug.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit]) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl12p46sf.cpp:2:\n/tmp/tmpl12p46sf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl12p46sf.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpl12p46sf.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpl12p46sf.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    int i = 0;\n    while (test_tup) {\n        if (test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n        i++;\n    }\n    return count == i;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdlgo1sas.cpp:2:\n/tmp/tmpdlgo1sas.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdlgo1sas.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpdlgo1sas.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpdlgo1sas.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> test_tup_vec;\n    while (test_tup > 0) {\n        test_tup_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(test_tup_vec.begin(), test_tup_vec.end());\n    for (int i = 0; i < test_tup_vec.size() - 1; i++) {\n        if (test_tup_vec[i] == test_tup_vec[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpax7g7901.cpp:2:\n/tmp/tmpax7g7901.cpp: In function \u2018int main()\u2019:\n/tmp/tmpax7g7901.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpax7g7901.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpax7g7901.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    int i;\n    for (i = 0; i < 32; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    if (count == 4) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpooec4n7u.cpp:2:\n/tmp/tmpooec4n7u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpooec4n7u.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpooec4n7u.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpooec4n7u.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit] == 1)\n            return false;\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptdokmgty.cpp:2:\n/tmp/tmptdokmgty.cpp: In function \u2018int main()\u2019:\n/tmp/tmptdokmgty.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptdokmgty.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptdokmgty.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  int test_arr[10];\n  for (int i = 0; i < 10; i++) {\n    test_arr[i] = 0;\n  }\n  while (test_tup > 0) {\n    int digit = test_tup % 10;\n    test_arr[digit]++;\n    if (test_arr[digit] > 1) {\n      return false;\n    }\n    test_tup /= 10;\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsyhn1fj3.cpp:2:\n/tmp/tmpsyhn1fj3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsyhn1fj3.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpsyhn1fj3.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpsyhn1fj3.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<long> test_vec;\n    while (test_tup > 0) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(test_vec.begin(), test_vec.end());\n    for (int i = 0; i < test_vec.size() - 1; i++) {\n        if (test_vec[i] == test_vec[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7ye1rybo.cpp:2:\n/tmp/tmp7ye1rybo.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7ye1rybo.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp7ye1rybo.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp7ye1rybo.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<10> test_bits(test_tup);\n    return test_bits.count() == 10;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcc6wc3wq.cpp:2:\n/tmp/tmpcc6wc3wq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcc6wc3wq.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpcc6wc3wq.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpcc6wc3wq.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrptznq7.cpp:2:\n/tmp/tmpvrptznq7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrptznq7.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvrptznq7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvrptznq7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        int curr = test_tup % 10;\n        test_tup /= 10;\n        if (s.find(curr) != s.end()) {\n            return false;\n        }\n        s.insert(curr);\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfbq0d8m1.cpp:2:\n/tmp/tmpfbq0d8m1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfbq0d8m1.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpfbq0d8m1.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpfbq0d8m1.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd17oni06.cpp:2:\n/tmp/tmpd17oni06.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd17oni06.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpd17oni06.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpd17oni06.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 4; i++) {\n        long digit = test_tup % 10;\n        if (mask & (1 << digit)) {\n            return false;\n        }\n        mask |= (1 << digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvm_4gxxe.cpp:2:\n/tmp/tmpvm_4gxxe.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvm_4gxxe.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvm_4gxxe.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvm_4gxxe.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnp1c1nke.cpp:2:\n/tmp/tmpnp1c1nke.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnp1c1nke.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpnp1c1nke.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 8; i++) {\n        long digit = test_tup & 0xF;\n        if (mask & (1 << digit)) {\n            return false;\n        }\n        mask |= (1 << digit);\n        test_tup >>= 4;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8qs3_bc8.cpp:2:\n/tmp/tmp8qs3_bc8.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8qs3_bc8.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8qs3_bc8.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8qs3_bc8.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while (test_tup) {\n        count += test_tup & 1;\n        test_tup = test_tup >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphc0nbqh2.cpp:2:\n/tmp/tmphc0nbqh2.cpp: In function \u2018int main()\u2019:\n/tmp/tmphc0nbqh2.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphc0nbqh2.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphc0nbqh2.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tlong mask = 0;\n\tfor (int i = 0; i < sizeof(long); i++) {\n\t\tlong bit = (test_tup >> i) & 1;\n\t\tif (bit == 1) {\n\t\t\tif ((mask & (1 << bit)) == 0) {\n\t\t\t\tmask |= (1 << bit);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpffsz3ru1.cpp:2:\n/tmp/tmpffsz3ru1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpffsz3ru1.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpffsz3ru1.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpffsz3ru1.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int bit_array[32] = {0};\n    for (int i = 0; i < 32; i++) {\n        int bit = (test_tup >> i) & 1;\n        if (bit_array[i] == 1 && bit == 1) {\n            return false;\n        }\n        bit_array[i] = bit;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl7g_j2t5.cpp:2:\n/tmp/tmpl7g_j2t5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl7g_j2t5.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpl7g_j2t5.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpl7g_j2t5.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> v;\n    while(test_tup) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for(int i = 0; i < v.size() - 1; i++) {\n        if(v[i] == v[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzqn66q0f.cpp:2:\n/tmp/tmpzqn66q0f.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzqn66q0f.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpzqn66q0f.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpzqn66q0f.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<long> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp62ojn9q5.cpp:2:\n/tmp/tmp62ojn9q5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp62ojn9q5.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp62ojn9q5.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp62ojn9q5.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup != 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3fy2v1x1.cpp:2:\n/tmp/tmp3fy2v1x1.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3fy2v1x1.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp3fy2v1x1.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp3fy2v1x1.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<long> v;\n    while (test_tup > 0) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for (int i = 0; i < v.size() - 1; i++) {\n        if (v[i] == v[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpad090d21.cpp:2:\n/tmp/tmpad090d21.cpp: In function \u2018int main()\u2019:\n/tmp/tmpad090d21.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpad090d21.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpad090d21.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 4; i++) {\n        count = 0;\n        for (int j = 0; j < 4; j++) {\n            if (((test_tup >> (4 * i)) & 15) == ((test_tup >> (4 * j)) & 15)) {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpof30h98u.cpp:2:\n/tmp/tmpof30h98u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpof30h98u.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpof30h98u.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpof30h98u.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp83x52hp2.cpp:2:\n/tmp/tmp83x52hp2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp83x52hp2.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp83x52hp2.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp83x52hp2.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpps734n8r.cpp:2:\n/tmp/tmpps734n8r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpps734n8r.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpps734n8r.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpps734n8r.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5tsqr58p.cpp:2:\n/tmp/tmp5tsqr58p.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5tsqr58p.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5tsqr58p.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5tsqr58p.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tstd::set<int> s;\n\twhile (test_tup) {\n\t\ts.insert(test_tup % 10);\n\t\ttest_tup /= 10;\n\t}\n\treturn s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6p96zmdf.cpp:2:\n/tmp/tmp6p96zmdf.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6p96zmdf.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp6p96zmdf.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp6p96zmdf.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp83x52hp2.cpp:2:\n/tmp/tmp83x52hp2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp83x52hp2.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp83x52hp2.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp83x52hp2.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpps734n8r.cpp:2:\n/tmp/tmpps734n8r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpps734n8r.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpps734n8r.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpps734n8r.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    // To print results to the standard output you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n    int arr[10];\n    for(int i=0;i<10;i++)\n        arr[i]=0;\n    while(test_tup>0)\n    {\n        int digit=test_tup%10;\n        if(arr[digit]==1)\n            return false;\n        arr[digit]=1;\n        test_tup/=10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0hcvk210.cpp:2:\n/tmp/tmp0hcvk210.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0hcvk210.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp0hcvk210.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp0hcvk210.cpp:25:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int a[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (a[digit]) {\n            return false;\n        }\n        a[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv4j1gaa9.cpp:2:\n/tmp/tmpv4j1gaa9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv4j1gaa9.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpv4j1gaa9.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpv4j1gaa9.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10] = {0};\n    while(test_tup) {\n        int digit = test_tup % 10;\n        if(arr[digit] == 1) {\n            return false;\n        }\n        arr[digit] = 1;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo8rwrm_6.cpp:2:\n/tmp/tmpo8rwrm_6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo8rwrm_6.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpo8rwrm_6.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpo8rwrm_6.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = test_tup & (1 << i);\n        if (bit != 0) {\n            if ((mask & bit) != 0) {\n                return false;\n            }\n            mask |= bit;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp118h894t.cpp:2:\n/tmp/tmp118h894t.cpp: In function \u2018int main()\u2019:\n/tmp/tmp118h894t.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp118h894t.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp118h894t.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrptznq7.cpp:2:\n/tmp/tmpvrptznq7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrptznq7.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvrptznq7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvrptznq7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return (s.size() == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeiwl5_pm.cpp:2:\n/tmp/tmpeiwl5_pm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeiwl5_pm.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpeiwl5_pm.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpeiwl5_pm.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tint count = 0;\n\tfor (int i = 0; i < 8; i++) {\n\t\tif ((test_tup & (1 << i)) != 0) {\n\t\t\tcount++;\n\t\t}\n\t}\n\tif (count == 8) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5p0dar93.cpp:2:\n/tmp/tmp5p0dar93.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5p0dar93.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5p0dar93.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5p0dar93.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit == 1) {\n            if ((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8w04qtzd.cpp:2:\n/tmp/tmp8w04qtzd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8w04qtzd.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8w04qtzd.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8w04qtzd.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 4; i++) {\n        int digit = test_tup % 10;\n        if (digit == 0) {\n            return false;\n        }\n        for (int j = 0; j < 4; j++) {\n            if (i != j) {\n                int temp = test_tup % 10;\n                if (digit == temp) {\n                    count++;\n                }\n            }\n            test_tup /= 10;\n        }\n    }\n    if (count == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptbfgya5y.cpp:2:\n/tmp/tmptbfgya5y.cpp: In function \u2018int main()\u2019:\n/tmp/tmptbfgya5y.cpp:28:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   28 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptbfgya5y.cpp:29:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptbfgya5y.cpp:30:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   30 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup/=10;\n    }\n    return (s.size() == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwy28hni0.cpp:2:\n/tmp/tmpwy28hni0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwy28hni0.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpwy28hni0.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpwy28hni0.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2d85gu1s.cpp:2:\n/tmp/tmp2d85gu1s.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2d85gu1s.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2d85gu1s.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2d85gu1s.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppx7m0kdt.cpp:2:\n/tmp/tmppx7m0kdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmppx7m0kdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmppx7m0kdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmppx7m0kdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 0; i < digits.size() - 1; i++) {\n        if(digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp87nwoguz.cpp:2:\n/tmp/tmp87nwoguz.cpp: In function \u2018int main()\u2019:\n/tmp/tmp87nwoguz.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp87nwoguz.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp87nwoguz.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu2j06ol5.cpp:2:\n/tmp/tmpu2j06ol5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu2j06ol5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpu2j06ol5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpu2j06ol5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvrptznq7.cpp:2:\n/tmp/tmpvrptznq7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvrptznq7.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvrptznq7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvrptznq7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> digits;\n    while (test_tup > 0) {\n        digits.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return digits.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7772ke74.cpp:2:\n/tmp/tmp7772ke74.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7772ke74.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp7772ke74.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp7772ke74.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    while (test_tup) {\n        if (mask & (1 << (test_tup % 10))) {\n            return false;\n        }\n        mask |= (1 << (test_tup % 10));\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmkklpii4.cpp:2:\n/tmp/tmpmkklpii4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmkklpii4.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpmkklpii4.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpmkklpii4.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long tup = test_tup;\n    int count = 0;\n    while (tup) {\n        count += tup & 1;\n        tup >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4rgkqlf5.cpp:2:\n/tmp/tmp4rgkqlf5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4rgkqlf5.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp4rgkqlf5.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp4rgkqlf5.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpps734n8r.cpp:2:\n/tmp/tmpps734n8r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpps734n8r.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpps734n8r.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpps734n8r.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return (s.size() == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgjiipqg4.cpp:2:\n/tmp/tmpgjiipqg4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgjiipqg4.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpgjiipqg4.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpgjiipqg4.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 10; i++) {\n        long bit = (test_tup >> (i * 3)) & 7;\n        if (mask & (1 << bit)) {\n            return false;\n        }\n        mask |= (1 << bit);\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1fdetdzn.cpp:2:\n/tmp/tmp1fdetdzn.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1fdetdzn.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp1fdetdzn.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp1fdetdzn.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5tsqr58p.cpp:2:\n/tmp/tmp5tsqr58p.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5tsqr58p.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5tsqr58p.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5tsqr58p.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tstd::set<int> s;\n\twhile (test_tup) {\n\t\ts.insert(test_tup % 10);\n\t\ttest_tup /= 10;\n\t}\n\treturn s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6p96zmdf.cpp:2:\n/tmp/tmp6p96zmdf.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6p96zmdf.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp6p96zmdf.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp6p96zmdf.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    int arr[10] = {0};\n    int i = 0;\n    while(test_tup) {\n        int rem = test_tup % 10;\n        if(arr[rem] == 1) {\n            return false;\n        }\n        arr[rem] = 1;\n        test_tup = test_tup / 10;\n        i++;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl1_obhi3.cpp:2:\n/tmp/tmpl1_obhi3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl1_obhi3.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpl1_obhi3.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpl1_obhi3.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int i;\n    int count = 0;\n    for (i = 0; i < 10; i++) {\n        if ((test_tup & (1 << i)) != 0) {\n            count++;\n        }\n    }\n    if (count == 10) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpri7of9x7.cpp:2:\n/tmp/tmpri7of9x7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpri7of9x7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpri7of9x7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpri7of9x7.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> v;\n    while (test_tup > 0) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for (int i = 1; i < v.size(); ++i) {\n        if (v[i] == v[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp7e9901ej.cpp:2:\n/tmp/tmp7e9901ej.cpp: In function \u2018int main()\u2019:\n/tmp/tmp7e9901ej.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp7e9901ej.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp7e9901ej.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphrvrosdt.cpp:2:\n/tmp/tmphrvrosdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmphrvrosdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphrvrosdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphrvrosdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<9> test_tup_bits(test_tup);\n    std::bitset<9> test_tup_bits_copy(test_tup);\n    for (int i = 0; i < 9; i++) {\n        if (test_tup_bits[i] == 1) {\n            test_tup_bits_copy[i] = 0;\n            if (test_tup_bits_copy.count() != 8) {\n                return false;\n            }\n            test_tup_bits_copy[i] = 1;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph5js33kl.cpp:2:\n/tmp/tmph5js33kl.cpp: In function \u2018int main()\u2019:\n/tmp/tmph5js33kl.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmph5js33kl.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmph5js33kl.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < 32; i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return (count == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpijqr11xe.cpp:2:\n/tmp/tmpijqr11xe.cpp: In function \u2018int main()\u2019:\n/tmp/tmpijqr11xe.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpijqr11xe.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpijqr11xe.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd17oni06.cpp:2:\n/tmp/tmpd17oni06.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd17oni06.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpd17oni06.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpd17oni06.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    int arr[10];\n    memset(arr,0,sizeof(arr));\n    while(test_tup)\n    {\n        int rem = test_tup%10;\n        if(arr[rem])\n            return false;\n        arr[rem]++;\n        test_tup/=10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdvluctou.cpp:2:\n/tmp/tmpdvluctou.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdvluctou.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpdvluctou.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpdvluctou.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tstd::set<int> s;\n\twhile(test_tup) {\n\t\ts.insert(test_tup%10);\n\t\ttest_tup /= 10;\n\t}\n\treturn s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplvvs6zl9.cpp:2:\n/tmp/tmplvvs6zl9.cpp: In function \u2018int main()\u2019:\n/tmp/tmplvvs6zl9.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmplvvs6zl9.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmplvvs6zl9.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp83x52hp2.cpp:2:\n/tmp/tmp83x52hp2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp83x52hp2.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp83x52hp2.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp83x52hp2.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<32> bs(test_tup);\n    return bs.count() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbeij_5vt.cpp:2:\n/tmp/tmpbeij_5vt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbeij_5vt.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpbeij_5vt.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpbeij_5vt.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> test_tup_vec;\n    while (test_tup > 0) {\n        test_tup_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(test_tup_vec.begin(), test_tup_vec.end());\n    for (int i = 0; i < test_tup_vec.size() - 1; i++) {\n        if (test_tup_vec[i] == test_tup_vec[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpax7g7901.cpp:2:\n/tmp/tmpax7g7901.cpp: In function \u2018int main()\u2019:\n/tmp/tmpax7g7901.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpax7g7901.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpax7g7901.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while (test_tup) {\n        count += test_tup & 1;\n        test_tup >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdwrnqa9n.cpp:2:\n/tmp/tmpdwrnqa9n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdwrnqa9n.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpdwrnqa9n.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpdwrnqa9n.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(long); ++i) {\n        long bit = test_tup & 1;\n        if (bit & mask) {\n            return false;\n        }\n        mask |= bit;\n        test_tup >>= 1;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuu152jiw.cpp:2:\n/tmp/tmpuu152jiw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuu152jiw.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpuu152jiw.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpuu152jiw.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> test_vec;\n    for (int i = 0; i < 4; i++) {\n        test_vec.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(test_vec.begin(), test_vec.end());\n    for (int i = 0; i < 3; i++) {\n        if (test_vec[i] == test_vec[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_z_xvjn0.cpp:2:\n/tmp/tmp_z_xvjn0.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_z_xvjn0.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_z_xvjn0.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_z_xvjn0.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while(test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for(int i = 1; i < digits.size(); i++) {\n        if(digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpexbjbtb_.cpp:2:\n/tmp/tmpexbjbtb_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpexbjbtb_.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpexbjbtb_.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpexbjbtb_.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); i++) {\n        if (digits[i] == digits[i - 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpql09x_ga.cpp:2:\n/tmp/tmpql09x_ga.cpp: In function \u2018int main()\u2019:\n/tmp/tmpql09x_ga.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpql09x_ga.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpql09x_ga.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for(int i = 0; i < 10; i++) {\n        if(test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 10;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplkbsq48g.cpp:2:\n/tmp/tmplkbsq48g.cpp: In function \u2018int main()\u2019:\n/tmp/tmplkbsq48g.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmplkbsq48g.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmplkbsq48g.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(test_tup); ++i) {\n        long curr_bit = (test_tup >> i) & 1;\n        if (curr_bit) {\n            if (mask & (1 << curr_bit)) {\n                return false;\n            }\n            mask |= (1 << curr_bit);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphmwu4htn.cpp:2:\n/tmp/tmphmwu4htn.cpp: In function \u2018int main()\u2019:\n/tmp/tmphmwu4htn.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphmwu4htn.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphmwu4htn.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int arr[10];\n    for(int i=0; i<10; i++) {\n        arr[i] = 0;\n    }\n    while(test_tup) {\n        int rem = test_tup%10;\n        arr[rem]++;\n        test_tup /= 10;\n    }\n    for(int i=0; i<10; i++) {\n        if(arr[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpstmgvz9q.cpp:2:\n/tmp/tmpstmgvz9q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpstmgvz9q.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpstmgvz9q.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpstmgvz9q.cpp:25:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return (s.size() == 4);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpozsu5v4c.cpp:2:\n/tmp/tmpozsu5v4c.cpp: In function \u2018int main()\u2019:\n/tmp/tmpozsu5v4c.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpozsu5v4c.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpozsu5v4c.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> v;\n    while (test_tup > 0) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for (int i = 0; i < v.size() - 1; i++) {\n        if (v[i] == v[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpad_m8odu.cpp:2:\n/tmp/tmpad_m8odu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpad_m8odu.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpad_m8odu.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpad_m8odu.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < 64; i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit) {\n            if (mask & (1 << bit)) {\n                return false;\n            }\n            mask |= (1 << bit);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph187syfy.cpp:2:\n/tmp/tmph187syfy.cpp: In function \u2018int main()\u2019:\n/tmp/tmph187syfy.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmph187syfy.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmph187syfy.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        count[test_tup % 10]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1)\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp63745eka.cpp:2:\n/tmp/tmp63745eka.cpp: In function \u2018int main()\u2019:\n/tmp/tmp63745eka.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp63745eka.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp63745eka.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while (test_tup != 0) {\n        if (test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpctizx45a.cpp:2:\n/tmp/tmpctizx45a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpctizx45a.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpctizx45a.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpctizx45a.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  long mask = 0;\n  for (int i = 0; i < 64; i++) {\n    long bit = (test_tup >> i) & 1;\n    if (bit == 1) {\n      if ((mask & (1 << i)) != 0) {\n        return false;\n      }\n      mask |= (1 << i);\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpciiaknj7.cpp:2:\n/tmp/tmpciiaknj7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpciiaknj7.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpciiaknj7.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpciiaknj7.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n  long test_tup_copy = test_tup;\n  std::vector<int> digits;\n  while (test_tup_copy > 0) {\n    digits.push_back(test_tup_copy % 10);\n    test_tup_copy /= 10;\n  }\n  std::sort(digits.begin(), digits.end());\n  for (int i = 0; i < digits.size() - 1; i++) {\n    if (digits[i] == digits[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpukjrg19i.cpp:2:\n/tmp/tmpukjrg19i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpukjrg19i.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpukjrg19i.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpukjrg19i.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for(int i = 0; i < 64; i++) {\n        if((test_tup & (1 << i)) != 0) {\n            if((mask & (1 << i)) != 0) {\n                return false;\n            }\n            mask |= (1 << i);\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp74jrjvjc.cpp:2:\n/tmp/tmp74jrjvjc.cpp: In function \u2018int main()\u2019:\n/tmp/tmp74jrjvjc.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp74jrjvjc.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp74jrjvjc.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        int num = test_tup % 10;\n        if (s.find(num) != s.end()) {\n            return false;\n        }\n        s.insert(num);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5pcokcpl.cpp:2:\n/tmp/tmp5pcokcpl.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5pcokcpl.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp5pcokcpl.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp5pcokcpl.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup > 0) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptxijshoq.cpp:2:\n/tmp/tmptxijshoq.cpp: In function \u2018int main()\u2019:\n/tmp/tmptxijshoq.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmptxijshoq.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmptxijshoq.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::bitset<64> test_bits(test_tup);\n    return test_bits.count() == 8;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprjsmcpni.cpp:2:\n/tmp/tmprjsmcpni.cpp: In function \u2018int main()\u2019:\n/tmp/tmprjsmcpni.cpp:10:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   10 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmprjsmcpni.cpp:11:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   11 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmprjsmcpni.cpp:12:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   12 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if (count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp83x52hp2.cpp:2:\n/tmp/tmp83x52hp2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp83x52hp2.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp83x52hp2.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp83x52hp2.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while(test_tup) {\n        if(test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpavt3nw5y.cpp:2:\n/tmp/tmpavt3nw5y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpavt3nw5y.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpavt3nw5y.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpavt3nw5y.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> v;\n    while(test_tup > 0) {\n        v.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(v.begin(), v.end());\n    for(int i = 0; i < v.size() - 1; i++) {\n        if(v[i] == v[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8w87kzjh.cpp:2:\n/tmp/tmp8w87kzjh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8w87kzjh.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp8w87kzjh.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp8w87kzjh.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> bits;\n    while (test_tup) {\n        bits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(bits.begin(), bits.end());\n    for (int i = 0; i < bits.size() - 1; i++) {\n        if (bits[i] == bits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpczlbdz0y.cpp:2:\n/tmp/tmpczlbdz0y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpczlbdz0y.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpczlbdz0y.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpczlbdz0y.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphrvrosdt.cpp:2:\n/tmp/tmphrvrosdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmphrvrosdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphrvrosdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphrvrosdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while (test_tup) {\n        count += test_tup & 1;\n        test_tup >>= 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdwrnqa9n.cpp:2:\n/tmp/tmpdwrnqa9n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdwrnqa9n.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpdwrnqa9n.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpdwrnqa9n.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Write your code here\n    long test_tup_copy = test_tup;\n    long count = 0;\n    while(test_tup_copy > 0) {\n        long temp = test_tup_copy % 10;\n        test_tup_copy /= 10;\n        long test_tup_copy_copy = test_tup_copy;\n        while(test_tup_copy_copy > 0) {\n            long temp2 = test_tup_copy_copy % 10;\n            test_tup_copy_copy /= 10;\n            if(temp == temp2) {\n                count++;\n            }\n        }\n    }\n    if(count > 0) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsgb5thpq.cpp:2:\n/tmp/tmpsgb5thpq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsgb5thpq.cpp:29:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   29 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpsgb5thpq.cpp:30:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   30 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpsgb5thpq.cpp:31:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   31 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < sizeof(test_tup); i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == sizeof(test_tup);\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp55cmbu2a.cpp:2:\n/tmp/tmp55cmbu2a.cpp: In function \u2018int main()\u2019:\n/tmp/tmp55cmbu2a.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp55cmbu2a.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp55cmbu2a.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> test_set;\n    while (test_tup > 0) {\n        test_set.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return test_set.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdkq01xla.cpp:2:\n/tmp/tmpdkq01xla.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdkq01xla.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpdkq01xla.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpdkq01xla.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 0; i < digits.size() - 1; i++) {\n        if (digits[i] == digits[i + 1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_m6lp4z5.cpp:2:\n/tmp/tmp_m6lp4z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_m6lp4z5.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp_m6lp4z5.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup > 0) {\n        int digit = test_tup % 10;\n        if (count[digit] > 0) {\n            return false;\n        }\n        count[digit]++;\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxrxfpwu4.cpp:2:\n/tmp/tmpxrxfpwu4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxrxfpwu4.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpxrxfpwu4.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpxrxfpwu4.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup > 0) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        if(count[digit] > 1) {\n            return false;\n        }\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo3o8ixo6.cpp:2:\n/tmp/tmpo3o8ixo6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo3o8ixo6.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpo3o8ixo6.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpo3o8ixo6.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2n3c39_r.cpp:2:\n/tmp/tmp2n3c39_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2n3c39_r.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmp2n3c39_r.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while (test_tup) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        test_tup /= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq6d43q5o.cpp:2:\n/tmp/tmpq6d43q5o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq6d43q5o.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpq6d43q5o.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpq6d43q5o.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    while (test_tup) {\n        long bit = test_tup & 1;\n        if (bit & mask) {\n            return false;\n        }\n        mask |= bit;\n        test_tup >>= 1;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpw3jhe3um.cpp:2:\n/tmp/tmpw3jhe3um.cpp: In function \u2018int main()\u2019:\n/tmp/tmpw3jhe3um.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpw3jhe3um.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpw3jhe3um.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd17oni06.cpp:2:\n/tmp/tmpd17oni06.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd17oni06.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpd17oni06.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpd17oni06.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while (test_tup) {\n        int digit = test_tup % 10;\n        if (s.find(digit) != s.end()) {\n            return false;\n        }\n        s.insert(digit);\n        test_tup /= 10;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphrvrosdt.cpp:2:\n/tmp/tmphrvrosdt.cpp: In function \u2018int main()\u2019:\n/tmp/tmphrvrosdt.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmphrvrosdt.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmphrvrosdt.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count[10] = {0};\n    while(test_tup > 0) {\n        int digit = test_tup % 10;\n        count[digit]++;\n        test_tup /= 10;\n    }\n    for(int i = 0; i < 10; i++) {\n        if(count[i] > 1) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvnnhmtz4.cpp:2:\n/tmp/tmpvnnhmtz4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvnnhmtz4.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpvnnhmtz4.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpvnnhmtz4.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    while (test_tup != 0) {\n        if (test_tup & 1) {\n            count++;\n        }\n        test_tup = test_tup >> 1;\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpctizx45a.cpp:2:\n/tmp/tmpctizx45a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpctizx45a.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpctizx45a.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpctizx45a.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::vector<int> digits;\n    while (test_tup > 0) {\n        digits.push_back(test_tup % 10);\n        test_tup /= 10;\n    }\n    std::sort(digits.begin(), digits.end());\n    for (int i = 1; i < digits.size(); ++i) {\n        if (digits[i] == digits[i-1]) {\n            return false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprayab324.cpp:2:\n/tmp/tmprayab324.cpp: In function \u2018int main()\u2019:\n/tmp/tmprayab324.cpp:20:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   20 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmprayab324.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmprayab324.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    // Extract the digits of the tuple.\n    int digits[10];\n    for (int i = 0; i < 10; i++) {\n        digits[i] = test_tup % 10;\n        test_tup /= 10;\n    }\n    // Check if there are any duplicates.\n    for (int i = 0; i < 10; i++) {\n        for (int j = i + 1; j < 10; j++) {\n            if (digits[i] == digits[j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpl3xnpeu0.cpp:2:\n/tmp/tmpl3xnpeu0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpl3xnpeu0.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpl3xnpeu0.cpp:24:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   24 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpl3xnpeu0.cpp:25:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   25 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    int count = 0;\n    for (int i = 0; i < sizeof(test_tup); i++) {\n        if (test_tup & (1 << i)) {\n            count++;\n        }\n    }\n    return count == 3;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuo8e3k4a.cpp:2:\n/tmp/tmpuo8e3k4a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuo8e3k4a.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpuo8e3k4a.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpuo8e3k4a.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    while(test_tup) {\n        s.insert(test_tup%10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpno832pmb.cpp:2:\n/tmp/tmpno832pmb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpno832pmb.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpno832pmb.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpno832pmb.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    std::set<int> s;\n    for (int i = 0; i < 4; i++) {\n        s.insert(test_tup % 10);\n        test_tup /= 10;\n    }\n    return s.size() == 4;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd17oni06.cpp:2:\n/tmp/tmpd17oni06.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd17oni06.cpp:14:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   14 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpd17oni06.cpp:15:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   15 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpd17oni06.cpp:16:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   16 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n    long mask = 0;\n    for (int i = 0; i < sizeof(test_tup); i++) {\n        long bit = (test_tup >> i) & 1;\n        if (bit & mask) {\n            return false;\n        }\n        mask |= bit;\n    }\n    return true;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpum7g36ze.cpp:2:\n/tmp/tmpum7g36ze.cpp: In function \u2018int main()\u2019:\n/tmp/tmpum7g36ze.cpp:17:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   17 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpum7g36ze.cpp:18:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   18 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpum7g36ze.cpp:19:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   19 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to check if given tuple contains no duplicates.\nbool check_distinct(long test_tup) {\n\tlong tup = test_tup;\n\tlong mask = 1;\n\tlong bit_count = 0;\n\twhile(tup) {\n\t\tif(tup & mask) {\n\t\t\tbit_count++;\n\t\t}\n\t\ttup = tup >> 1;\n\t}\n\tif(bit_count == 3) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nint main() {\n    auto candidate = check_distinct;\n    assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n    assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n    assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpild1cdfl.cpp:2:\n/tmp/tmpild1cdfl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpild1cdfl.cpp:21:37: error: cannot convert \u2018std::tuple<int, int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   21 |     assert(candidate(std::make_tuple(1, 4, 5, 6, 1, 4)) == (false));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int, int>\n/tmp/tmpild1cdfl.cpp:22:37: error: cannot convert \u2018std::tuple<int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   22 |     assert(candidate(std::make_tuple(1, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int>\n/tmp/tmpild1cdfl.cpp:23:37: error: cannot convert \u2018std::tuple<int, int, int, int, int>\u2019 to \u2018long int\u2019 in argument passing\n   23 |     assert(candidate(std::make_tuple(2, 3, 4, 5, 6)) == (true));\n      |                      ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~\n      |                                     |\n      |                                     std::tuple<int, int, int, int, int>\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
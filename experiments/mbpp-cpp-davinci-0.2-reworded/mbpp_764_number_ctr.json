{
  "name": "mbpp_764_number_ctr",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count number of digits in a given string.\nlong number_ctr(std::string str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = number_ctr;\n    assert(candidate((\"program2bedone\")) == (1));\n    assert(candidate((\"3wonders\")) == (1));\n    assert(candidate((\"123\")) == (3));\n    assert(candidate((\"3wond-1ers2\")) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9')\n            count++;\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "    long ctr = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < str.length(); i++) {\n        if(str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (isdigit(str[i])) {\n            count++;\n        }\n    }\n    return count;",
    "    long ctr = 0;\n    for(auto i: str) {\n        if(i >= '0' && i <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    int ctr = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    long ctr = 0;\n    for(int i = 0; i < str.length(); i++) {\n        if(str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    long ctr = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    long ctr = 0;\n    for (auto i : str) {\n        if (isdigit(i)) {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    long ctr = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "    long ctr = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            ctr++;\n        }\n    }\n    return ctr;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "\tlong count = 0;\n\tfor (int i = 0; i < str.length(); i++) {\n\t\tif (str[i] >= '0' && str[i] <= '9') {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;",
    "    long count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;",
    "\tlong count = 0;\n\tfor (int i = 0; i < str.length(); i++) {\n\t\tif (str[i] >= '0' && str[i] <= '9') {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;"
  ]
}
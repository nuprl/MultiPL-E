{
  "name": "mbpp_456_reverse_string_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to reverse each string in a given vector of string values.\nstd::vector<std::string> reverse_string_list(std::vector<std::string> stringlist) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_456_reverse_string_list.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = reverse_string_list;\n    assert(candidate((std::vector<std::string>({(std::string)\"Red\", (std::string)\"Green\", (std::string)\"Blue\", (std::string)\"White\", (std::string)\"Black\"}))) == (std::vector<std::string>({(std::string)\"deR\", (std::string)\"neerG\", (std::string)\"eulB\", (std::string)\"etihW\", (std::string)\"kcalB\"})));\n    assert(candidate((std::vector<std::string>({(std::string)\"john\", (std::string)\"amal\", (std::string)\"joel\", (std::string)\"george\"}))) == (std::vector<std::string>({(std::string)\"nhoj\", (std::string)\"lama\", (std::string)\"leoj\", (std::string)\"egroeg\"})));\n    assert(candidate((std::vector<std::string>({(std::string)\"jack\", (std::string)\"john\", (std::string)\"mary\"}))) == (std::vector<std::string>({(std::string)\"kcaj\", (std::string)\"nhoj\", (std::string)\"yram\"})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<std::string> result;\n    for (int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> reversed_stringlist;\n    for (int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        reversed_stringlist.push_back(temp);\n    }\n    return reversed_stringlist;",
    "    std::vector<std::string> reversed_stringlist;\n    for(int i=0; i<stringlist.size(); i++) {\n        std::string str = stringlist[i];\n        std::reverse(str.begin(), str.end());\n        reversed_stringlist.push_back(str);\n    }\n    return reversed_stringlist;",
    "    std::vector<std::string> reversed_stringlist;\n    for (int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        reversed_stringlist.push_back(temp);\n    }\n    return reversed_stringlist;",
    "    std::vector<std::string> result;\n    for(int i=0; i<stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for(int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for (auto i = stringlist.begin(); i != stringlist.end(); i++) {\n        std::string temp = *i;\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for (std::string s : stringlist) {\n        std::reverse(s.begin(), s.end());\n        result.push_back(s);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for(int i=0;i<stringlist.size();i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(),temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for(auto i:stringlist) {\n        std::string temp;\n        for(int j=i.size()-1;j>=0;j--) {\n            temp+=i[j];\n        }\n        result.push_back(temp);\n    }\n    return result;",
    "    for(int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        stringlist[i] = temp;\n    }\n    return stringlist;",
    "    std::vector<std::string> result;\n    for(int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for(int i=0;i<stringlist.size();i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(),temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> rev_stringlist;\n    for(int i=0; i<stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        rev_stringlist.push_back(temp);\n    }\n    return rev_stringlist;",
    "    std::vector<std::string> reversed_stringlist;\n    for(int i=0;i<stringlist.size();i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(),temp.end());\n        reversed_stringlist.push_back(temp);\n    }\n    return reversed_stringlist;",
    "    std::vector<std::string> reversed_stringlist;\n    for (int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        reversed_stringlist.push_back(temp);\n    }\n    return reversed_stringlist;",
    "    std::vector<std::string> result;\n    for (int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for(int i=0;i<stringlist.size();i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(),temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for (int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    for (int i = 0; i < stringlist.size(); i++) {\n        std::string temp = stringlist[i];\n        std::reverse(temp.begin(), temp.end());\n        result.push_back(temp);\n    }\n    return result;"
  ]
}
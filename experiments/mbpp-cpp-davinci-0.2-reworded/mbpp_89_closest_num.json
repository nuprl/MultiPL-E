{
  "name": "mbpp_89_closest_num",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the closest smaller number than n.\nlong closest_num(long N) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = closest_num;\n    assert(candidate((11)) == (10));\n    assert(candidate((7)) == (6));\n    assert(candidate((12)) == (11));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Write your code here\n    int i=0;\n    long num=N;\n    while(num>0)\n    {\n        if((num&1)==0)\n        {\n            break;\n        }\n        i++;\n        num=num>>1;\n    }\n    if(i==0)\n    {\n        return -1;\n    }\n    long ans=N&(~(1<<i));\n    ans=ans|(1<<(i-1));\n    return ans;",
    "    // Write your code here\n    long num = N;\n    int count = 0;\n    while(num > 0) {\n        if(num % 2 == 0) {\n            count++;\n        }\n        num = num / 2;\n    }\n    return pow(2, count);",
    "    // Your code here\n    long n=N;\n    long count=0;\n    while(n!=0)\n    {\n        n=n/2;\n        count++;\n    }\n    long ans=0;\n    for(long i=0;i<count-1;i++)\n    {\n        ans=ans+pow(2,i);\n    }\n    return ans;",
    "    long num = N;\n    int i = 0;\n    int j = 0;\n    while (num != 0) {\n        if ((num & 1) == 0) {\n            i++;\n        } else {\n            j++;\n        }\n        num = num >> 1;\n    }\n    long ans = N - (1 << (i + j));\n    return ans;",
    "  // Write your code here\n  long n = N;\n  long i = 0;\n  while(n) {\n    if(n & 1) {\n      break;\n    }\n    i++;\n    n = n >> 1;\n  }\n  return N - (1 << i);",
    "    // Write your code here\n    long num = N;\n    int i = 0;\n    while(num != 0) {\n        if(num & 1) {\n            break;\n        }\n        num = num >> 1;\n        i++;\n    }\n    if(i == 0) {\n        return -1;\n    }\n    return N - (1 << i);",
    "    long n = N;\n    int i = 0;\n    while(n > 0) {\n        if(n & 1) {\n            break;\n        }\n        i++;\n        n = n >> 1;\n    }\n    return N - (1 << i);",
    "    // Write your code here\n    long temp = N;\n    int count = 0;\n    while(temp){\n        if(temp&1){\n            break;\n        }\n        count++;\n        temp = temp>>1;\n    }\n    return N - (1<<count);",
    "  int i = 0;\n  int j = 0;\n  int k = 0;\n  int l = 0;\n  int m = 0;\n  int n = 0;\n  int o = 0;\n  int p = 0;\n  int q = 0;\n  int r = 0;\n  int s = 0;\n  int t = 0;\n  int u = 0;\n  int v = 0;\n  int w = 0;\n  int x = 0;\n  int y = 0;\n  int z = 0;\n  int a = 0;\n  int b = 0;\n  int c = 0;\n  int d = 0;\n  int e = 0;\n  int f = 0;\n  int g = 0;\n  int h = 0;\n  int i1 = 0;\n  int j1 = 0;\n  int k1 = 0;\n  int l1 = 0;\n  int m1 = 0;\n  int n1 = 0;\n  int o1 = 0;\n  int p1 = 0;\n  int q1 = 0;\n  int r1 = 0;\n  int s1 = 0;\n  int t1 = 0;\n  int u1 = 0;\n  int v1 = 0;\n  int w1 = 0;\n  int x1 = 0;\n  int y1 = 0;\n  int z1 = 0;\n  int a1 = 0;\n  int b1 = 0;\n  int c1 = 0;\n  int d1 = 0;\n  int e1 = 0;\n  int f1 = 0;\n  int g1 = 0;\n  int h1 = 0;\n  int i2 = 0;\n  int j2 = 0;\n  int k2 = 0;\n  int l2 = 0;\n  int m2 = 0;\n  int n2 = 0;\n  int o2 = 0;\n  int p2 = 0;\n  int q2 = 0;\n  int r2 = 0;\n  int s2 = 0;\n  int t2 = 0;\n  int u2 = 0;\n  int v2 = 0;\n  int w2 = 0;\n ",
    "  // Write your code here\n  // To print results to the standard output you can use printf()\n  // Example: printf(\"%s\", \"Hello world!\");\n  long num = N;\n  int i = 0;\n  while(num > 0) {\n    if((num & 1) == 0) {\n      break;\n    }\n    i++;\n    num = num >> 1;\n  }\n  if(i == 0) {\n    return N;\n  }\n  return N - (1 << i);",
    "  // TODO: Write your code here\n  long num = N;\n  int i = 0;\n  while(num != 0) {\n    if(((num >> i) & 1) == 1) {\n      num &= ~(1 << i);\n      num |= (1 << (i-1));\n      break;\n    }\n    i++;\n  }\n  return num;",
    "    // Write your code here\n    long num = N;\n    int i = 0;\n    while(num != 0) {\n        if(num & 1) {\n            break;\n        }\n        i++;\n        num = num >> 1;\n    }\n    return N - (1 << i);",
    "    // Write your code here\n    long n = N;\n    int i = 0;\n    while(n > 0) {\n        if((n & 1) == 0) {\n            break;\n        }\n        i++;\n        n = n >> 1;\n    }\n    if(i == 0) {\n        return -1;\n    }\n    long mask = (1 << i) - 1;\n    return N & (~mask);",
    "    if(N == 0) return 0;\n    long num = N;\n    int count = 0;\n    while(num) {\n        if(num & 1) break;\n        count++;\n        num = num >> 1;\n    }\n    return N - (1 << count);",
    "    // Write your code here\n    if(N==0)\n        return 0;\n    if(N==1)\n        return 0;\n    if(N==2)\n        return 1;\n    if(N==3)\n        return 2;\n    if(N==4)\n        return 3;\n    if(N==5)\n        return 4;\n    if(N==6)\n        return 5;\n    if(N==7)\n        return 6;\n    if(N==8)\n        return 7;\n    if(N==9)\n        return 8;\n    if(N==10)\n        return 9;\n    if(N==11)\n        return 10;\n    if(N==12)\n        return 11;\n    if(N==13)\n        return 12;\n    if(N==14)\n        return 13;\n    if(N==15)\n        return 14;\n    if(N==16)\n        return 15;\n    if(N==17)\n        return 16;\n    if(N==18)\n        return 17;\n    if(N==19)\n        return 18;\n    if(N==20)\n        return 19;\n    if(N==21)\n        return 20;\n    if(N==22)\n        return 21;\n    if(N==23)\n        return 22;\n    if(N==24)\n        return 23;\n    if(N==25)\n        return 24;\n    if(N==26)\n        return 25;\n    if(N==27)\n        return 26;\n    if(N==28)\n        return 27;\n    if(N==29)\n        return 28;\n    if(N==30)\n        return 29;\n    if(N==31)\n        return 30;\n    if(N==32)\n        return 31;\n    if(N==33)\n        return 32;\n    if(N==34)\n        return 33;\n    if(N==35)\n        return 34;\n    if(N==36)\n        return 35;\n    if(N==37)\n        return 36;\n    if(N==38)\n        return",
    "    // Write your code here\n    int i = 0;\n    long temp = N;\n    while(temp > 0) {\n        if(temp & 1) {\n            break;\n        }\n        i++;\n        temp = temp >> 1;\n    }\n    return N - (1 << i);",
    "    // Write your code here\n    // Return the answer\n    if(N==0)\n        return 0;\n    if(N==1)\n        return 0;\n    if(N==2)\n        return 1;\n    if(N==3)\n        return 2;\n    if(N==4)\n        return 1;\n    if(N==5)\n        return 2;\n    if(N==6)\n        return 3;\n    if(N==7)\n        return 4;\n    if(N==8)\n        return 5;\n    if(N==9)\n        return 6;\n    if(N==10)\n        return 7;\n    if(N==11)\n        return 8;\n    if(N==12)\n        return 9;\n    if(N==13)\n        return 10;\n    if(N==14)\n        return 11;\n    if(N==15)\n        return 12;\n    if(N==16)\n        return 13;\n    if(N==17)\n        return 14;\n    if(N==18)\n        return 15;\n    if(N==19)\n        return 16;\n    if(N==20)\n        return 17;\n    if(N==21)\n        return 18;\n    if(N==22)\n        return 19;\n    if(N==23)\n        return 20;\n    if(N==24)\n        return 21;\n    if(N==25)\n        return 22;\n    if(N==26)\n        return 23;\n    if(N==27)\n        return 24;\n    if(N==28)\n        return 25;\n    if(N==29)\n        return 26;\n    if(N==30)\n        return 27;\n    if(N==31)\n        return 28;\n    if(N==32)\n        return 29;\n    if(N==33)\n        return 30;\n    if(N==34)\n        return 31;\n    if(N==35)\n        return 32;\n    if(N==36)\n        return 33;\n    if(N==37)\n        return 34;\n    if(N",
    "    // Write your code here\n    // To print results to the standard output you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long num = 1;\n    while(i <= N) {\n        if(i == N) {\n            return i;\n        }\n        j = i;\n        k = i;\n        while(j > 0) {\n            if(j == N) {\n                return j;\n            }\n            k = j;\n            j = j/2;\n        }\n        if(k == N) {\n            return k;\n        }\n        i = i*2;\n    }\n    return num;",
    "    // Write your code here\n    // To print results to the standard output you can use printf()\n    // Example: printf(\"%s\", \"Hello world!\");\n    long a = N;\n    long b = N;\n    while(a%2 == 0) {\n        a = a/2;\n    }\n    while(b%5 == 0) {\n        b = b/5;\n    }\n    if(a == 1 && b == 1) {\n        return N-1;\n    }\n    else if(a == 1) {\n        return N-b;\n    }\n    else if(b == 1) {\n        return N-a;\n    }\n    else {\n        return N-a-b;\n    }",
    "    // Write your code here\n    long n = N;\n    long count = 0;\n    while(n > 0) {\n        if(n & 1) {\n            break;\n        }\n        count++;\n        n = n >> 1;\n    }\n    return N - pow(2, count);"
  ]
}
{
  "name": "mbpp_229_re_arrange_array",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes in a vector and an integer n, and re-arranges the first n elements of the given vector so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\nstd::vector<long> re_arrange_array(std::vector<long> arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = re_arrange_array;\n    assert(candidate((std::vector<long>({(long)-1, (long)2, (long)-3, (long)4, (long)5, (long)6, (long)-7, (long)8, (long)9})), (9)) == (std::vector<long>({(long)-1, (long)-3, (long)-7, (long)4, (long)5, (long)6, (long)2, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)12, (long)-14, (long)-26, (long)13, (long)15})), (5)) == (std::vector<long>({(long)-14, (long)-26, (long)12, (long)13, (long)15})));\n    assert(candidate((std::vector<long>({(long)10, (long)24, (long)36, (long)-42, (long)-39, (long)-78, (long)85})), (7)) == (std::vector<long>({(long)-42, (long)-39, (long)-78, (long)10, (long)24, (long)36, (long)85})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> result;\n    for(long i = 0; i < n; i++) {\n        if(arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        if(arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    long i = 0;\n    long j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0 && i < j) {\n            i++;\n        }\n        while (arr[j] >= 0 && i < j) {\n            j--;\n        }\n        if (i < j) {\n            std::swap(arr[i], arr[j]);\n        }\n    }\n    return arr;",
    "    long i = 0, j = 0;\n    while(i < n && j < n) {\n        if(arr[i] < 0) {\n            i++;\n        }\n        else if(arr[j] >= 0) {\n            j++;\n        }\n        else {\n            std::swap(arr[i], arr[j]);\n            i++;\n            j++;\n        }\n    }\n    return arr;",
    "  // Write your code here\n  std::vector<long> result;\n  std::vector<long> positive;\n  std::vector<long> negative;\n  for(int i=0;i<n;i++){\n    if(arr[i]<0){\n      negative.push_back(arr[i]);\n    }\n    else{\n      positive.push_back(arr[i]);\n    }\n  }\n  for(int i=0;i<negative.size();i++){\n    result.push_back(negative[i]);\n  }\n  for(int i=0;i<positive.size();i++){\n    result.push_back(positive[i]);\n  }\n  return result;",
    "    // Write your code here\n    std::vector<long> result;\n    for (long i = 0; i < n; i++) {\n        if (arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for (long i = 0; i < n; i++) {\n        if (arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    long i = 0, j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0 && i < j) {\n            i++;\n        }\n        while (arr[j] >= 0 && i < j) {\n            j--;\n        }\n        if (i < j) {\n            std::swap(arr[i], arr[j]);\n        }\n    }\n    return arr;",
    "    // Write your code here\n    std::vector<long> result;\n    for(int i=0;i<n;i++){\n        if(arr[i]<0){\n            result.push_back(arr[i]);\n        }\n    }\n    for(int i=0;i<n;i++){\n        if(arr[i]>=0){\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    int i = 0, j = n-1;\n    while(i < j) {\n        while(arr[i] < 0 && i < j) i++;\n        while(arr[j] >= 0 && i < j) j--;\n        if(i < j) {\n            long temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;",
    "    std::vector<long> result;\n    std::vector<long> positive;\n    std::vector<long> negative;\n    for (long i = 0; i < n; i++) {\n        if (arr[i] < 0) {\n            negative.push_back(arr[i]);\n        } else {\n            positive.push_back(arr[i]);\n        }\n    }\n    for (long i = 0; i < negative.size(); i++) {\n        result.push_back(negative[i]);\n    }\n    for (long i = 0; i < positive.size(); i++) {\n        result.push_back(positive[i]);\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i = 0; i < n; i++) {\n        if(arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for(int i = 0; i < n; i++) {\n        if(arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for (int i = 0; i < n; i++) {\n        if (arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if (arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    long i = 0;\n    long j = n - 1;\n    while (i < j) {\n        if (arr[i] < 0) {\n            i++;\n        } else if (arr[j] >= 0) {\n            j--;\n        } else {\n            std::swap(arr[i], arr[j]);\n        }\n    }\n    return arr;",
    "    std::vector<long> result;\n    for (long i = 0; i < n; i++) {\n        if (arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for (long i = 0; i < n; i++) {\n        if (arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    long i = 0, j = n - 1;\n    while (i < j) {\n        while (arr[i] < 0 && i < j)\n            i++;\n        while (arr[j] >= 0 && i < j)\n            j--;\n        if (i < j) {\n            long temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n    return arr;",
    "    long i = 0, j = n - 1;\n    while (i < j) {\n        if (arr[i] >= 0) {\n            if (arr[j] < 0) {\n                std::swap(arr[i], arr[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return arr;",
    "    std::vector<long> result;\n    for(int i = 0; i < n; i++) {\n        if(arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for(int i = 0; i < n; i++) {\n        if(arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(int i = 0; i < n; i++) {\n        if(arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for(int i = 0; i < n; i++) {\n        if(arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = 0; i < n; i++) {\n        if(arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        if(arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    std::vector<long> result;\n    for(long i = 0; i < n; i++) {\n        if(arr[i] < 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        if(arr[i] >= 0) {\n            result.push_back(arr[i]);\n        }\n    }\n    return result;",
    "    long i = -1;\n    for (long j = 0; j < n; j++) {\n        if (arr[j] < 0) {\n            i++;\n            std::swap(arr[i], arr[j]);\n        }\n    }\n    return arr;"
  ]
}
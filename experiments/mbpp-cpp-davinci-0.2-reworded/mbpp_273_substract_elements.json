{
  "name": "mbpp_273_substract_elements",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\nlong substract_elements(long test_tup1, long test_tup2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = substract_elements;\n    assert(candidate(std::make_tuple(10, 4, 5), std::make_tuple(2, 5, 18)) == std::make_tuple(8, -1, -13));\n    assert(candidate(std::make_tuple(11, 2, 3), std::make_tuple(24, 45, 16)) == std::make_tuple(-13, -43, -13));\n    assert(candidate(std::make_tuple(7, 18, 9), std::make_tuple(10, 11, 12)) == std::make_tuple(-3, 7, -3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "  return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    // Write your code here\n    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long result;\n    result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long result;\n    result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    // Write your code here\n    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "  return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "  long test_tup3 = test_tup1 - test_tup2;\n  return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "  long test_tup3 = test_tup1 - test_tup2;\n  return test_tup3;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "  return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "  long tup1[2];\n  long tup2[2];\n  tup1[0] = test_tup1;\n  tup1[1] = test_tup2;\n  tup2[0] = test_tup1;\n  tup2[1] = test_tup2;\n  long result[2];\n  result[0] = tup1[0] - tup2[0];\n  result[1] = tup1[1] - tup2[1];\n  return result[0] + result[1];",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    // Write your code here\n    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "\treturn test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long tup1 = test_tup1;\n    long tup2 = test_tup2;\n    long tup3 = 0;\n    long tup4 = 0;\n    long tup5 = 0;\n    long tup6 = 0;\n    long tup7 = 0;\n    long tup8 = 0;\n    long tup9 = 0;\n    long tup10 = 0;\n    long tup11 = 0;\n    long tup12 = 0;\n    long tup13 = 0;\n    long tup14 = 0;\n    long tup15 = 0;\n    long tup16 = 0;\n    long tup17 = 0;\n    long tup18 = 0;\n    long tup19 = 0;\n    long tup20 = 0;\n    long tup21 = 0;\n    long tup22 = 0;\n    long tup23 = 0;\n    long tup24 = 0;\n    long tup25 = 0;\n    long tup26 = 0;\n    long tup27 = 0;\n    long tup28 = 0;\n    long tup29 = 0;\n    long tup30 = 0;\n    long tup31 = 0;\n    long tup32 = 0;\n    long tup33 = 0;\n    long tup34 = 0;\n    long tup35 = 0;\n    long tup36 = 0;\n    long tup37 = 0;\n    long tup38 = 0;\n    long tup39 = 0;\n    long tup40 = 0;\n    long tup41 = 0;\n    long tup42 = 0;\n    long tup43 = 0;\n    long tup44 = 0;\n    long tup45 = 0;\n    long tup46 = 0;\n    long tup47 = 0;\n    long tup48 = 0;\n    long tup49 = 0;\n    long tup50 = 0;\n    long tup51 = 0;\n    long tup52 = 0;\n    long tup53 = 0;\n    long tup54 = 0;\n    long tup55 = 0;\n    long tup56 = 0;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = test_tup1 - test_tup2;\n    return result;",
    "    long result = 0;\n    for (int i = 0; i < test_tup1.size(); i++) {\n        result = test_tup1[i] - test_tup2[i];\n    }\n    return result;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    long result;\n    result = test_tup1 - test_tup2;\n    return result;",
    "    // Write your code here\n    long result = 0;\n    for (int i = 0; i < test_tup1.size(); i++) {\n        result = test_tup1[i] - test_tup2[i];\n    }\n    return result;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    long test_tup3;\n    test_tup3 = test_tup1 - test_tup2;\n    return test_tup3;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "    return test_tup1 - test_tup2;",
    "  return test_tup1 - test_tup2;"
  ]
}
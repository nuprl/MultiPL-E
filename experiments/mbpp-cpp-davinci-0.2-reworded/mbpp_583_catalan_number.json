{
  "name": "mbpp_583_catalan_number",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which returns nth catalan number.\nlong catalan_number(long num) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = catalan_number;\n    assert(candidate((10)) == (16796));\n    assert(candidate((9)) == (4862));\n    assert(candidate((7)) == (429));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res = res * (num + i);\n        res = res / (i + 1);\n    }\n    return res / (num + 1);",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for (long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for (long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    if(num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for(long i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    if (num <= 1) {\n        return 1;\n    }\n    long result = 0;\n    for (long i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "  if (num == 0) {\n    return 1;\n  }\n  long result = 0;\n  for (long i = 0; i < num; i++) {\n    result += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return result;",
    "    long res = 1;\n    for(long i = 2; i <= num; i++) {\n        res = res * (num + i)/i;\n    }\n    return res;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for(long i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan_number[num+1];\n    catalan_number[0] = 1;\n    catalan_number[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan_number[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan_number[i] += catalan_number[j] * catalan_number[i-j-1];\n        }\n    }\n    return catalan_number[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res = res * (num + i) / i;\n    }\n    return res;",
    "    long catalan[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i = 1; i <= num; i++) {\n        res *= (num + i);\n        res /= i;\n    }\n    return res / (num + 1);",
    "    if(num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for(int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long catalan_number[num+1];\n    catalan_number[0] = catalan_number[1] = 1;\n    for(int i=2;i<=num;i++) {\n        catalan_number[i] = 0;\n        for(int j=0;j<i;j++) {\n            catalan_number[i] += catalan_number[j]*catalan_number[i-j-1];\n        }\n    }\n    return catalan_number[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for (int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for(long i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if(num == 0) return 1;\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) return 1;\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if(num == 0 || num == 1) {\n        return 1;\n    }\n    long ans = 0;\n    for(long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for (long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for (long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res / (num + 1);",
    "\tlong res = 1;\n\tfor (long i = 2; i <= num; i++) {\n\t\tres *= (num + i);\n\t\tres /= i;\n\t}\n\treturn res / (num + 1);",
    "    long catalan_number[num+1];\n    catalan_number[0] = catalan_number[1] = 1;\n    for (long i = 2; i <= num; i++) {\n        catalan_number[i] = 0;\n        for (long j = 0; j < i; j++) {\n            catalan_number[i] += catalan_number[j] * catalan_number[i-j-1];\n        }\n    }\n    return catalan_number[num];",
    "    long *catalan = new long[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for (long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long *catalan = new long[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    if (num <= 1) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long res = 1;\n    for(long i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res *= (num + i);\n        res /= i;\n    }\n    return res;",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res / (num + 1);",
    "    long catalan_number = 1;\n    for (int i = 0; i < num; i++) {\n        catalan_number *= (num + i);\n        catalan_number /= (i + 1);\n    }\n    return catalan_number / (num + 1);",
    "    if (num <= 1) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long *catalan = new long[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(int i=2;i<=num;i++) {\n        catalan[i] = 0;\n        for(int j=0;j<i;j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2;i<=num;i++) {\n        catalan[i] = 0;\n        for(int j=0;j<i;j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num <= 1) {\n        return 1;\n    }\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if(num == 0 || num == 1) {\n        return 1;\n    }\n    long ans = 0;\n    for(int i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2;i<=num;i++) {\n        catalan[i] = 0;\n        for(int j=0;j<i;j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long* arr = new long[num+1];\n    arr[0] = 1;\n    arr[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        arr[i] = 0;\n        for(long j = 0; j < i; j++) {\n            arr[i] += arr[j]*arr[i-j-1];\n        }\n    }\n    long ans = arr[num];\n    delete [] arr;\n    return ans;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(int i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res / (num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for (int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "\tlong *dp = new long[num+1];\n\tdp[0] = 1;\n\tdp[1] = 1;\n\tfor(long i = 2; i <= num; i++) {\n\t\tdp[i] = 0;\n\t\tfor(long j = 0; j < i; j++) {\n\t\t\tdp[i] += dp[j] * dp[i-j-1];\n\t\t}\n\t}\n\tlong ans = dp[num];\n\tdelete [] dp;\n\treturn ans;",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    if (num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for (int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    if (num <= 1) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "  long catalan_number[num+1];\n  catalan_number[0] = 1;\n  catalan_number[1] = 1;\n  for(int i = 2; i <= num; i++) {\n    catalan_number[i] = 0;\n    for(int j = 0; j < i; j++) {\n      catalan_number[i] += catalan_number[j] * catalan_number[i-j-1];\n    }\n  }\n  return catalan_number[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res = res * (num + i);\n        res = res / (i + 1);\n    }\n    return res / (num + 1);",
    "    long res = 0;\n    if (num <= 1) {\n        return 1;\n    }\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long res = 1;\n    for(long i = 0; i < num; i++) {\n        res = res * (num + i);\n        res = res / (i + 1);\n    }\n    return res / (num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0)\n        return 1;\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if(num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for(int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    if(num == 0)\n        return 1;\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "  if (num <= 1) {\n    return 1;\n  }\n  long result = 0;\n  for (long i = 0; i < num; i++) {\n    result += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return result;",
    "    if (num <= 1) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for(int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long *catalan = new long[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    long result = catalan[num];\n    delete [] catalan;\n    return result;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num==0) {\n        return 1;\n    }\n    long result = 0;\n    for(int i=0;i<num;i++) {\n        result += catalan_number(i) * catalan_number(num-i-1);\n    }\n    return result;",
    "    long *catalan = new long[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    long result = catalan[num];\n    delete[] catalan;\n    return result;",
    "    if (num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for (int i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res = res * (num + i);\n        res = res / (i + 1);\n    }\n    return res / (num + 1);",
    "    long *catalan = new long[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    long result = catalan[num];\n    delete [] catalan;\n    return result;",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(int i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res *= (num + i);\n        res /= i;\n    }\n    return res;",
    "    long *catalan = new long[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    long result = catalan[num];\n    delete [] catalan;\n    return result;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res = res * (num + i)/i;\n    }\n    return res;",
    "    if(num == 0) {\n        return 1;\n    }\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for (int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long res = 1;\n    for(long i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    if(num == 0)\n        return 1;\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long result = 1;\n    for(int i = 0; i < num; i++) {\n        result *= (num + i);\n        result /= (i + 1);\n    }\n    return result/(num + 1);",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res = res * (num + i) / i;\n    }\n    return res;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2;i<=num;i++) {\n        catalan[i] = 0;\n        for(int j=0;j<i;j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long *catalan = new long[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0 || num == 1) {\n        return 1;\n    }\n    long result = 0;\n    for(int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num <= 1) {\n        return 1;\n    }\n    long result = 0;\n    for (long i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "  long res = 1;\n  for (int i = 0; i < num; i++) {\n    res = res * (num + i);\n    res = res / (i + 1);\n  }\n  return res / (num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2;i<=num;i++) {\n        catalan[i] = 0;\n        for(int j=0;j<i;j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for(long i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res / (num + 1);",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res = res * (num + i);\n        res = res / (i + 1);\n    }\n    return res / (num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j]*catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long *catalan = new long[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0) {\n        return 1;\n    }\n    long res = 0;\n    for (long i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "  if (num == 0) {\n    return 1;\n  }\n  long ans = 0;\n  for (int i = 0; i < num; i++) {\n    ans += catalan_number(i) * catalan_number(num - i - 1);\n  }\n  return ans;",
    "    long res = 1;\n    for(int i = 0; i < num; i++) {\n        res = res * (num + i) / (i + 1);\n    }\n    return res;",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(int i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    if (num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for (int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long res = 1;\n    for(int i = 0; i < num; i++) {\n        res = res * (2*num - i);\n        res = res / (i + 1);\n    }\n    return res / (num + 1);",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res *= (num + i);\n        res /= (i + 1);\n    }\n    return res/(num + 1);",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    if (num <= 1) return 1;\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if (num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for (long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num == 0)\n        return 1;\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long catalan[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long dp[num+1];\n    dp[0] = dp[1] = 1;\n    for(int i=2; i<=num; i++) {\n        dp[i] = 0;\n        for(int j=0; j<i; j++) {\n            dp[i] += dp[j] * dp[i-j-1];\n        }\n    }\n    return dp[num];",
    "    if (num == 0 || num == 1) {\n        return 1;\n    }\n    long ans = 0;\n    for (long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i=0; i<num; i++) {\n        res = res * (num + i);\n        res = res / (i + 1);\n    }\n    return res/(num + 1);",
    "    if(num == 0) return 1;\n    long res = 0;\n    for(int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    if(num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for(int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    long result = 1;\n    for(long i = 0; i < num; i++) {\n        result = result * (num + i);\n        result = result / (i + 1);\n    }\n    return result / (num + 1);",
    "    if(num == 0)\n        return 1;\n    long result = 0;\n    for(int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long result = 1;\n    for (long i = 0; i < num; i++) {\n        result = result * (num + i);\n        result = result / (i + 1);\n    }\n    return result / (num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan_number[num+1];\n    catalan_number[0] = 1;\n    catalan_number[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan_number[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan_number[i] += catalan_number[j] * catalan_number[i-j-1];\n        }\n    }\n    return catalan_number[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan_number[num+1];\n    catalan_number[0] = 1;\n    catalan_number[1] = 1;\n    for(int i=2;i<=num;i++) {\n        catalan_number[i] = 0;\n        for(int j=0;j<i;j++) {\n            catalan_number[i] += catalan_number[j]*catalan_number[i-j-1];\n        }\n    }\n    return catalan_number[num];",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res = res * (num + i) / i;\n    }\n    return res;",
    "    if (num == 0) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long res = 1;\n    for (int i = 0; i < num; i++) {\n        res = res * (num + i);\n        res = res / (i + 1);\n    }\n    return res / (num + 1);",
    "    if (num <= 1) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "  long catalan[num+1];\n  catalan[0] = catalan[1] = 1;\n  for (int i = 2; i <= num; i++) {\n    catalan[i] = 0;\n    for (int j = 0; j < i; j++) {\n      catalan[i] += catalan[j] * catalan[i-j-1];\n    }\n  }\n  return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan_number[num+1];\n    catalan_number[0] = 1;\n    catalan_number[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan_number[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan_number[i] += catalan_number[j] * catalan_number[i-j-1];\n        }\n    }\n    return catalan_number[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(int i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long result = 1;\n    for (int i = 0; i < num; i++) {\n        result = result * (num + i);\n        result = result / (i + 1);\n    }\n    return result / (num + 1);",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long *catalan = new long[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    long *catalan = new long[num+1];\n    catalan[0] = 1;\n    catalan[1] = 1;\n    for(long i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(long j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if (num <= 1) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long result = 1;\n    for (int i = 0; i < num; i++) {\n        result = result * (num + i);\n        result = result / (i + 1);\n    }\n    return result / (num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(long i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(long i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(long j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res = res * (num + i) / i;\n    }\n    return res;",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res = res * (num + i) / i;\n    }\n    return res;",
    "    if (num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for (int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long res = 1;\n    for (int i = 2; i <= num; i++) {\n        res = res * (num + i) / i;\n    }\n    return res;",
    "    if (num == 0) return 1;\n    long res = 0;\n    for (int i = 0; i < num; ++i) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i = 2; i <= num; i++) {\n        catalan[i] = 0;\n        for(int j = 0; j < i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "  long *catalan = new long[num+1];\n  catalan[0] = 1;\n  catalan[1] = 1;\n  for(long i = 2; i <= num; i++) {\n    catalan[i] = 0;\n    for(long j = 0; j < i; j++) {\n      catalan[i] += catalan[j] * catalan[i-j-1];\n    }\n  }\n  long result = catalan[num];\n  delete [] catalan;\n  return result;",
    "    if (num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for (int i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if(num == 0) {\n        return 1;\n    }\n    long ans = 0;\n    for(long i = 0; i < num; i++) {\n        ans += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return ans;",
    "    if(num == 0) {\n        return 1;\n    }\n    long sum = 0;\n    for(int i = 0; i < num; i++) {\n        sum += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return sum;",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "  long result = 1;\n  for (long i = 1; i <= num; i++) {\n    result *= (num + i);\n    result /= i;\n  }\n  return result / (num + 1);",
    "    long catalan[num+1];\n    catalan[0] = catalan[1] = 1;\n    for(int i=2; i<=num; i++) {\n        catalan[i] = 0;\n        for(int j=0; j<i; j++) {\n            catalan[i] += catalan[j] * catalan[i-j-1];\n        }\n    }\n    return catalan[num];",
    "    if(num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for(long i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if (num == 0) {\n        return 1;\n    }\n    long result = 0;\n    for (long i = 0; i < num; i++) {\n        result += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return result;",
    "    if (num == 0 || num == 1) {\n        return 1;\n    }\n    long res = 0;\n    for (int i = 0; i < num; i++) {\n        res += catalan_number(i) * catalan_number(num - i - 1);\n    }\n    return res;"
  ]
}
{
  "name": "mbpp_593_removezero_ip",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to remove leading zeroes from an ip address.\nstd::string removezero_ip(std::string ip) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_593_removezero_ip.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = removezero_ip;\n    assert(candidate((\"216.08.094.196\")) == (\"216.8.94.196\"));\n    assert(candidate((\"12.01.024\")) == (\"12.1.24\"));\n    assert(candidate((\"216.08.094.0196\")) == (\"216.8.94.196\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  std::string result = \"\";\n  int count = 0;\n  for(int i = 0; i < ip.size(); i++) {\n    if(ip[i] == '.') {\n      count = 0;\n    }\n    if(ip[i] == '0') {\n      count++;\n    }\n    if(ip[i] != '0') {\n      count = 0;\n    }\n    if(count < 2) {\n      result += ip[i];\n    }\n  }\n  return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(std::getline(ss, temp, '.')) {\n        int num = std::stoi(temp);\n        res += std::to_string(num);\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0,1);\n        }\n        result += temp + \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        result.push_back(ip[i]);\n    }\n    return result;",
    "    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    return ip.substr(i);",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int len = ip.length();\n    int i = 0;\n    while(i < len && ip[i] == '0') {\n        i++;\n    }\n    while(i < len) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            count = 0;\n            res += ip[i];\n        }\n        else if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            count++;\n            res += ip[i];\n        }\n    }\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i=0; i<ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i=count; i<ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        } else {\n            break;\n        }\n    }\n    if(count == ip.length()) {\n        return \"0\";\n    }\n    for(int i = count; i < ip.length(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            token.erase(0, 1);\n        }\n        result += token + \".\";\n    }\n    result.erase(result.size() - 1, 1);\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        result += temp + \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.size()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            result += token.substr(1);\n        } else {\n            result += token;\n        }\n        result += '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string res;\n    while(std::getline(ss, token, '.')) {\n        int num = std::stoi(token);\n        res += std::to_string(num);\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::stringstream ss(ip);\n    std::string item;\n    std::string res;\n    while(std::getline(ss, item, '.')) {\n        if(item.length() > 1 && item[0] == '0') {\n            item = item.substr(1, item.length() - 1);\n        }\n        res += item;\n        res += '.';\n    }\n    res = res.substr(0, res.length() - 1);\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        } else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::string result;\n    std::stringstream ss(ip);\n    std::string temp;\n    while(std::getline(ss, temp, '.')) {\n        int num = std::stoi(temp);\n        result += std::to_string(num);\n        result += \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(ip);\n    std::string s;\n    std::string result;\n    while(std::getline(ss, s, '.')) {\n        if(s.size() > 1 && s[0] == '0') {\n            s.erase(0, 1);\n        }\n        result += s + '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token.length() > 1 && token[0] == '0') {\n            token.erase(0,1);\n        }\n        result += token + \".\";\n    }\n    result.erase(result.length()-1, 1);\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            result += temp.substr(1);\n        } else {\n            result += temp;\n        }\n        result += \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i, ip.length() - i);\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(std::getline(ss, temp, '.')) {\n        while(temp.length() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        res += temp + \".\";\n    }\n    res.pop_back();\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        result += temp + '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        int num = std::stoi(token);\n        result += std::to_string(num);\n        result += '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::string res;\n    int count = 0;\n    for (int i = 0; i < ip.size(); i++) {\n        if (ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            res.push_back(ip[i]);\n            count++;\n        }\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        result += temp + \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i, ip.length() - i);\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(;i<ip.size();i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            count = 0;\n            res += ip[i];\n        }\n        else if(ip[i] != '0') {\n            res += ip[i];\n            count++;\n        }\n        else if(ip[i] == '0' && count > 0) {\n            res += ip[i];\n        }\n    }\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '.') {\n            count = 0;\n            res.push_back(ip[i]);\n        } else if(ip[i] == '0' && count == 0) {\n            continue;\n        } else {\n            count++;\n            res.push_back(ip[i]);\n        }\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "  std::string res = \"\";\n  int i = 0;\n  while(ip[i] == '0') {\n    i++;\n  }\n  while(i < ip.length()) {\n    res += ip[i];\n    i++;\n  }\n  return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(i < ip.length() && ip[i] == '0') {\n        i++;\n    }\n    if(i == ip.length()) {\n        res = \"0\";\n    }\n    else {\n        res = ip.substr(i);\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        result += temp + '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss,temp,'.')) {\n        if(temp.size() == 1 && temp[0] == '0') {\n            result += \"0\";\n        } else {\n            result += temp;\n        }\n        result += \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        result += temp + '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss,temp,'.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0,1);\n        }\n        result += temp + \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token == \"0\") {\n            token = \"\";\n        }\n        result += token + \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    int count = 0;\n    int n = ip.length();\n    for (int i = 0; i < n; i++) {\n        if (ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for (int i = count; i < n; i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            count = 0;\n        }\n        if(ip[i] != '0' || count > 0) {\n            result += ip[i];\n            count++;\n        }\n    }\n    return result;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        result += std::to_string(std::stoi(temp));\n        result += '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::string result;\n    int i=0;\n    while(ip[i]=='0') {\n        i++;\n    }\n    while(i<ip.length()) {\n        result.push_back(ip[i]);\n        i++;\n    }\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '.') {\n            res.push_back(ip[i]);\n            count = 0;\n        }\n        else if(ip[i] != '0') {\n            res.push_back(ip[i]);\n            count++;\n        }\n        else if(count > 0) {\n            res.push_back(ip[i]);\n        }\n    }\n    return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i=0;i<ip.size();i++) {\n        if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            res += ip[i];\n            count++;\n        }\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        } else {\n            break;\n        }\n    }\n    result = ip.substr(count, ip.size() - count);\n    return result;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        result += ip[i];\n        i++;\n    }\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            token.erase(0, 1);\n        }\n        result += token + \".\";\n    }\n    result.erase(result.size() - 1);\n    return result;",
    "\tstd::string res;\n\tint i = 0;\n\twhile (ip[i] == '0') {\n\t\ti++;\n\t}\n\twhile (i < ip.size()) {\n\t\tres += ip[i];\n\t\ti++;\n\t}\n\treturn res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0,1);\n        }\n        result += temp + \".\";\n    }\n    result.erase(result.end()-1);\n    return result;",
    "  std::string res;\n  int count = 0;\n  for (int i = 0; i < ip.size(); i++) {\n    if (ip[i] == '0' && ip[i + 1] == '.') {\n      count++;\n    }\n  }\n  for (int i = 0; i < ip.size(); i++) {\n    if (ip[i] == '0' && ip[i + 1] == '.' && count > 0) {\n      i++;\n      count--;\n    } else {\n      res.push_back(ip[i]);\n    }\n  }\n  return res;",
    "  std::string result;\n  int i = 0;\n  while(ip[i] == '0') {\n    i++;\n  }\n  result = ip.substr(i);\n  return result;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(;i<ip.length();i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            res += ip[i];\n            count++;\n        }\n    }\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            count = 0;\n            result += ip[i];\n        }\n        else if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            count++;\n            result += ip[i];\n        }\n    }\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i, ip.length()-i);\n    return result;",
    "\tstd::string res;\n\tint i = 0;\n\twhile (ip[i] == '0') {\n\t\ti++;\n\t}\n\tres = ip.substr(i);\n\treturn res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i=0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(;i<ip.length();i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        result += ip[i];\n        i++;\n    }\n    return result;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            res += ip[i];\n            count++;\n        }\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            result += temp.substr(1);\n        } else {\n            result += temp;\n        }\n        result += '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            token.erase(0, 1);\n        }\n        result += token + '.';\n    }\n    result.erase(result.size() - 1);\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        res += temp + \".\";\n    }\n    res.erase(res.size() - 1, 1);\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(i < ip.length()) {\n        if(ip[i] == '.') {\n            res.push_back(ip[i]);\n            i++;\n            continue;\n        }\n        if(ip[i] == '0') {\n            i++;\n            continue;\n        }\n        break;\n    }\n    while(i < ip.length()) {\n        res.push_back(ip[i]);\n        i++;\n    }\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i=0;i<ip.length();i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i=count;i<ip.length();i++) {\n        res.push_back(ip[i]);\n    }\n    return res;",
    "    std::string temp;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        temp.push_back(ip[i]);\n    }\n    return temp;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            res.push_back(ip[i]);\n            count++;\n        }\n    }\n    return res;",
    "  std::string res;\n  int i = 0;\n  while(ip[i] == '0') {\n    i++;\n  }\n  res = ip.substr(i);\n  return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    if(i == ip.length()) {\n        return \"0\";\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        res.push_back(ip[i]);\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string res;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            token = token.substr(1);\n        }\n        res += token + \".\";\n    }\n    res.pop_back();\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token[0] == '0') {\n            result += std::to_string(std::stoi(token));\n        } else {\n            result += token;\n        }\n        result += '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            res += temp.substr(1);\n        }\n        else {\n            res += temp;\n        }\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    if(i == ip.length()) {\n        res = \"0\";\n    } else {\n        res = ip.substr(i, ip.length() - i);\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(i < ip.size() && ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.size()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while (ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            token.erase(0,1);\n        }\n        result += token + \".\";\n    }\n    result.erase(result.size()-1, 1);\n    return result;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        } else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string s;\n    std::string res;\n    while(std::getline(ss, s, '.')) {\n        if(s.size() > 1 && s[0] == '0') {\n            s.erase(s.begin());\n        }\n        res += s;\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0')\n            count++;\n        else\n            break;\n    }\n    for(int i = count; i < ip.length(); i++)\n        res += ip[i];\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            result += ip[i];\n            count = 0;\n        }\n        else if(ip[i] != '0' || count > 0) {\n            result += ip[i];\n            count++;\n        }\n    }\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            result += ip[i];\n            count++;\n        }\n    }\n    return result;",
    "  std::string res;\n  int i = 0;\n  while(ip[i] == '0') {\n    i++;\n  }\n  res = ip.substr(i);\n  return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(std::getline(ss, temp, '.')) {\n        int num = std::stoi(temp);\n        res += std::to_string(num);\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        result += ip[i];\n        i++;\n    }\n    return result;",
    "    std::string result;\n    int i = 0;\n    while(i < ip.length() && ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i, ip.length() - i);\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::stringstream ss;\n    std::string temp;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            if(temp.length() == 0) {\n                ss << \"0\";\n            }\n            ss << temp;\n            ss << \".\";\n            temp.clear();\n        } else {\n            temp += ip[i];\n        }\n    }\n    if(temp.length() == 0) {\n        ss << \"0\";\n    }\n    ss << temp;\n    return ss.str();",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        } else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            res += ip[i];\n            count = 0;\n        }\n        else if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            while(count > 0) {\n                res += '0';\n                count--;\n            }\n            res += ip[i];\n        }\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string item;\n    std::string res;\n    while(std::getline(ss, item, '.')) {\n        if(item.size() > 1 && item[0] == '0') {\n            item = item.substr(1);\n        }\n        res += item + \".\";\n    }\n    res.pop_back();\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(temp.begin());\n        }\n        res += temp;\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        result += ip[i];\n        i++;\n    }\n    return result;",
    "    std::string res;\n    std::stringstream ss(ip);\n    std::string temp;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        res += temp + \".\";\n    }\n    res.erase(res.size() - 1);\n    return res;",
    "    std::string result = \"\";\n    int len = ip.length();\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < len) {\n        result += ip[i];\n        i++;\n    }\n    return result;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        res.push_back(ip[i]);\n    }\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0' && count == 0) {\n            continue;\n        }\n        else {\n            res.push_back(ip[i]);\n            count++;\n        }\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    result = ip.substr(i);\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        } else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::stringstream ss;\n    ss << ip;\n    std::string temp;\n    std::string res = \"\";\n    while(getline(ss, temp, '.')) {\n        while(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(temp.begin());\n        }\n        res += temp + '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string result;\n    std::stringstream ss(ip);\n    std::string temp;\n    while(std::getline(ss, temp, '.')) {\n        int val = std::stoi(temp);\n        result += std::to_string(val);\n        result += \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        } else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        res += temp + '.';\n    }\n    res.erase(res.size() - 1, 1);\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string s;\n    std::string res;\n    while(std::getline(ss, s, '.')) {\n        if(s.size() > 1 && s[0] == '0') {\n            s = s.substr(1);\n        }\n        res += s + \".\";\n    }\n    res = res.substr(0, res.size() - 1);\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            res += ip[i];\n            count = 0;\n        } else {\n            if(ip[i] == '0' && count == 0) {\n                continue;\n            } else {\n                res += ip[i];\n                count++;\n            }\n        }\n    }\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        result += ip[i];\n        i++;\n    }\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i, ip.length() - i);\n    return res;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string res;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            token.erase(0,1);\n        }\n        res += token + \".\";\n    }\n    res.erase(res.size()-1, 1);\n    return res;",
    "\tstd::stringstream ss(ip);\n\tstd::string temp;\n\tstd::string res;\n\twhile(getline(ss, temp, '.')) {\n\t\tif(temp.size() > 1 && temp[0] == '0') {\n\t\t\ttemp.erase(temp.begin());\n\t\t}\n\t\tres += temp + '.';\n\t}\n\tres.pop_back();\n\treturn res;",
    "    std::string result = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        result += temp + \".\";\n    }\n    result.erase(result.size() - 1, 1);\n    return result;",
    "    std::string res;\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string res;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            res += temp.substr(1);\n        } else {\n            res += temp;\n        }\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::stringstream ss(ip);\n    std::string token;\n    std::string result;\n    while(std::getline(ss, token, '.')) {\n        if(token.size() > 1 && token[0] == '0') {\n            token.erase(token.begin());\n        }\n        result += token + '.';\n    }\n    result.pop_back();\n    return result;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.size(); i++) {\n        result += ip[i];\n    }\n    return result;",
    "    std::stringstream ss(ip);\n    std::string item;\n    std::string res;\n    while(std::getline(ss, item, '.')) {\n        if(item.size() > 1 && item[0] == '0') {\n            res += item.substr(1);\n        } else {\n            res += item;\n        }\n        res += '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    std::string ans = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        ans += ip[i];\n    }\n    return ans;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    return ip.substr(i);",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.size()) {\n        result.push_back(ip[i]);\n        i++;\n    }\n    return result;",
    "    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    return ip.substr(i);",
    "    std::string result;\n    int i = 0;\n    while(ip[i] == '0' && ip[i+1] != '.') {\n        i++;\n    }\n    result = ip.substr(i, ip.length()-i);\n    return result;",
    "    std::stringstream ss(ip);\n    std::string temp;\n    std::string result;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        result += temp + \".\";\n    }\n    result.erase(result.size() - 1, 1);\n    return result;",
    "    std::string result;\n    std::stringstream ss(ip);\n    std::string temp;\n    while(std::getline(ss, temp, '.')) {\n        if(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(temp.begin());\n        }\n        result += temp + \".\";\n    }\n    result.pop_back();\n    return result;",
    "    std::string result = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0' && count == 0) {\n            continue;\n        } else {\n            result += ip[i];\n            count++;\n        }\n    }\n    return result;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    for(; i < ip.size(); i++) {\n        res.push_back(ip[i]);\n    }\n    return res;",
    "    std::stringstream ss;\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '.') {\n            ss << ip[i];\n            count = 0;\n        }\n        else if(ip[i] != '0' || count > 0) {\n            ss << ip[i];\n            count++;\n        }\n    }\n    return ss.str();",
    "    std::string res;\n    int i = 0;\n    int j = 0;\n    while(i < ip.size()) {\n        if(ip[i] == '.') {\n            res.push_back(ip[i]);\n            i++;\n            j = i;\n        }\n        else if(ip[i] == '0' && i == j) {\n            i++;\n        }\n        else {\n            res.push_back(ip[i]);\n            i++;\n        }\n    }\n    return res;",
    "\tstd::string res = \"\";\n\tint i = 0;\n\twhile(ip[i] == '0') {\n\t\ti++;\n\t}\n\tfor(; i < ip.length(); i++) {\n\t\tres += ip[i];\n\t}\n\treturn res;",
    "    std::string res = \"\";\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res += ip[i];\n        i++;\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i);\n    return res;",
    "\tstd::stringstream ss(ip);\n\tstd::string token;\n\tstd::string result;\n\twhile(std::getline(ss, token, '.')) {\n\t\tif(token.size() > 1 && token[0] == '0') {\n\t\t\tresult += token.substr(1);\n\t\t} else {\n\t\t\tresult += token;\n\t\t}\n\t\tresult += '.';\n\t}\n\tresult.pop_back();\n\treturn result;",
    "    std::stringstream ss(ip);\n    std::string temp, res;\n    while(std::getline(ss, temp, '.')) {\n        while(temp.size() > 1 && temp[0] == '0') {\n            temp.erase(0, 1);\n        }\n        res += temp + '.';\n    }\n    res.pop_back();\n    return res;",
    "    std::string res = \"\";\n    int count = 0;\n    for(int i = 0; i < ip.length(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i = count; i < ip.length(); i++) {\n        res += ip[i];\n    }\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    res = ip.substr(i, ip.length() - i);\n    return res;",
    "    std::string res;\n    int i = 0;\n    while(ip[i] == '0') {\n        i++;\n    }\n    while(i < ip.length()) {\n        res.push_back(ip[i]);\n        i++;\n    }\n    return res;",
    "    std::string res;\n    int count = 0;\n    for(int i=0; i<ip.size(); i++) {\n        if(ip[i] == '0') {\n            count++;\n        }\n        else {\n            break;\n        }\n    }\n    for(int i=count; i<ip.size(); i++) {\n        res.push_back(ip[i]);\n    }\n    return res;"
  ]
}
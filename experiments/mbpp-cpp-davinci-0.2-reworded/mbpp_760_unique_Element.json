{
  "name": "mbpp_760_unique_Element",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether a vector of numbers contains only one distinct element or not.\nbool unique_Element(std::vector<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = unique_Element;\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1}))) == (true));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)1, (long)2}))) == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5}))) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // Write your code here\n    int count = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_map<long, int> mp;\n    for(int i = 0; i < arr.size(); i++) {\n        mp[arr[i]]++;\n    }\n    for(auto i : mp) {\n        if(i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    // return true if there is only one distinct element in the vector\n    // return false otherwise\n    int n = arr.size();\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++)\n    {\n        if(arr[i] == arr[i+1])\n        {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=1;i<n;i++)\n    {\n        if(arr[i]==arr[i-1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count == 1){\n            return true;\n        }\n        count = 0;\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_map<long, int> umap;\n    for (int i = 0; i < arr.size(); i++) {\n        umap[arr[i]]++;\n    }\n    for (auto x : umap) {\n        if (x.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = i+1; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n                break;\n            }\n        }\n    }\n    if(count == 0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    std::unordered_map<long, int> mp;\n    for(int i=0; i<arr.size(); i++) {\n        mp[arr[i]]++;\n    }\n    for(auto i: mp) {\n        if(i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    /* Don't write main().\n     * Don't read input, it is passed as function argument.\n     * Return output and don't print it.\n     * Taking input and printing output is handled automatically.\n     */\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_map<long, int> m;\n    for(int i = 0; i < arr.size(); i++) {\n        m[arr[i]]++;\n    }\n    for(auto i : m) {\n        if(i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int i;\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]!=arr[i+1])\n        {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i] == arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count == 0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    sort(arr.begin(), arr.end());\n    for(int i=0; i<n-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_map<long, int> m;\n    for(int i = 0; i < arr.size(); i++) {\n        m[arr[i]]++;\n    }\n    for(auto i : m) {\n        if(i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = i+1; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == 0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n==0)\n        return false;\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++)\n    {\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    if(arr.size()==0){\n        return false;\n    }\n    else{\n        long x=arr[0];\n        for(int i=1;i<arr.size();i++){\n            if(arr[i]!=x){\n                return false;\n            }\n        }\n        return true;\n    }",
    "    std::unordered_set<long> s;\n    for (auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    std::unordered_map<long, int> m;\n    for(int i=0; i<arr.size(); i++) {\n        m[arr[i]]++;\n    }\n    for(auto x: m) {\n        if(x.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    int n = arr.size();\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto x:arr) {\n        s.insert(x);\n    }\n    if(s.size()==1) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n = arr.size();\n    if(n==0)\n        return false;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++)\n    {\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i=0;i<n;i++)\n    {\n        for(long j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    int count = 0;\n    int n = arr.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n==0)\n        return false;\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    long n = arr.size();\n    if(n == 1) {\n        return true;\n    }\n    std::sort(arr.begin(), arr.end());\n    for(long i = 0; i < n - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    if(n == 0){\n        return false;\n    }\n    if(n == 1){\n        return true;\n    }\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++){\n        if(arr[i] == arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int i;\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]!=arr[i+1])\n        {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == 0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    int n = arr.size();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if (count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int count=0;\n    for(int i=0;i<arr.size();i++)\n    {\n        for(int j=i+1;j<arr.size();j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > 1){\n            return false;\n        }\n    }\n    return true;",
    "    if(arr.size() == 1) {\n        return true;\n    }\n    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size() - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if (count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_map<long, int> mp;\n    for(int i = 0; i < arr.size(); i++) {\n        mp[arr[i]]++;\n    }\n    for(auto x : mp) {\n        if(x.second == 1) {\n            return true;\n        }\n    }\n    return false;",
    "    std::unordered_map<long, int> mp;\n    for(auto i: arr) {\n        mp[i]++;\n    }\n    for(auto i: mp) {\n        if(i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = i+1; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == 0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "\t// Write your code here\n\tif (arr.size() == 1) {\n\t\treturn true;\n\t}\n\tstd::sort(arr.begin(), arr.end());\n\tfor (int i = 0; i < arr.size() - 1; i++) {\n\t\tif (arr[i] != arr[i + 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;",
    "    std::sort(arr.begin(),arr.end());\n    for(int i=0;i<arr.size()-1;i++) {\n        if(arr[i]==arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int count = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = 0; j < arr.size(); j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int i=0;\n    while(i<n-1){\n        if(arr[i]!=arr[i+1]){\n            return false;\n        }\n        i++;\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(int i=0;i<arr.size();i++) {\n        s.insert(arr[i]);\n    }\n    if(s.size()==1) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n = arr.size();\n    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < n - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(),arr.end());\n    for(int i=0;i<arr.size()-1;i++) {\n        if(arr[i]==arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size() - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_map<long, int> m;\n    for(int i = 0; i < arr.size(); i++) {\n        m[arr[i]]++;\n    }\n    for(auto i : m) {\n        if(i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(arr[i] == arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count == n)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    // Write your code here\n    int n = arr.size();\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++){\n        if(arr[i] == arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++){\n        if(arr[i] == arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count == 1){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    if (n == 0) {\n        return false;\n    }\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    int n = arr.size();\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if (count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n==1){\n        return true;\n    }\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    // Write your code here\n    std::unordered_map<long,long> mp;\n    for(int i=0;i<arr.size();i++){\n        mp[arr[i]]++;\n    }\n    for(auto it=mp.begin();it!=mp.end();it++){\n        if(it->second>1){\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    if(s.size() == 1) {\n        return true;\n    }\n    return false;",
    "    int n = arr.size();\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n == 1){\n        return true;\n    }\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++){\n        if(arr[i] == arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    long n = arr.size();\n    if(n==1){\n        return true;\n    }\n    sort(arr.begin(),arr.end());\n    for(long i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count == 1) {\n            return true;\n        }\n        count = 0;\n    }\n    return false;",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size()-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++){\n        if(arr[i] == arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::unordered_set<long> s;\n    for(auto i:arr){\n        s.insert(i);\n    }\n    if(s.size()==1){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    if(n==0)\n        return false;\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++)\n    {\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n        if(count==1)\n        {\n            return true;\n        }\n    }\n    return false;",
    "    int n = arr.size();\n    if (n == 1) {\n        return true;\n    }\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size()-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size()-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count > 1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i = 0; i < n; i++){\n        for(long j = 0; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == n){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    std::unordered_map<long, int> m;\n    for (int i = 0; i < arr.size(); i++) {\n        m[arr[i]]++;\n    }\n    for (auto i : m) {\n        if (i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_map<long, int> m;\n    for(int i = 0; i < arr.size(); i++) {\n        m[arr[i]]++;\n    }\n    int count = 0;\n    for(auto i : m) {\n        if(i.second == 1) {\n            count++;\n        }\n    }\n    if(count == 1) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count == 1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }",
    "    // Write your code here\n    int n=arr.size();\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int i = 0;\n    int j = n-1;\n    while(i<j){\n        if(arr[i] == arr[j]){\n            i++;\n            j--;\n        }\n        else{\n            return false;\n        }\n    }\n    return true;",
    "  // Write your code here\n  // return true if the vector contains only one distinct element\n  // return false otherwise\n  std::sort(arr.begin(),arr.end());\n  for(int i=0;i<arr.size()-1;i++){\n      if(arr[i]==arr[i+1]){\n          return false;\n      }\n  }\n  return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(auto x: arr) {\n        s.insert(x);\n    }\n    return s.size() == 1;",
    "    int n = arr.size();\n    for(int i=0;i<n;i++) {\n        for(int j=i+1;j<n;j++) {\n            if(arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    int count = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    long n = arr.size();\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++)\n    {\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size() - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n == 1) {\n        return true;\n    }\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n==0)\n        return false;\n    int temp = arr[0];\n    for(int i=1;i<n;i++)\n    {\n        if(temp!=arr[i])\n            return false;\n    }\n    return true;",
    "    /* Don't write main().\n     * Don't read input, it is passed as function argument.\n     * Return output and don't print it.\n     * Taking input and printing output is handled automatically.\n     */\n    int n = arr.size();\n    if(n == 1){\n        return true;\n    }\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n - 1; i++){\n        if(arr[i] == arr[i + 1]){\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(long i=0;i<arr.size();i++) {\n        s.insert(arr[i]);\n    }\n    if(s.size()==1) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==n)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    // Write your code here\n    int count = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i+1; j < arr.size(); j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    long n = arr.size();\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(arr[i]==arr[j]){\n                return false;\n            }\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    // Write your code here\n    long n = arr.size();\n    if(n==1){\n        return true;\n    }\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(auto i:arr) {\n        s.insert(i);\n    }\n    if(s.size() == 1) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n        if(count==1)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }",
    "    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size() - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        if(s.find(i) != s.end()) {\n            return false;\n        }\n        s.insert(i);\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    // Write your code here\n    int n = arr.size();\n    if(n==1)\n        return true;\n    sort(arr.begin(), arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    if(n == 0)\n        return false;\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n            if(arr[i] == arr[j])\n                count++;\n        }\n        if(count == 1)\n            return true;\n        count = 0;\n    }\n    return false;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == n){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == n){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    int n = arr.size();\n    int i = 0;\n    while(i < n) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n        i++;\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1]){\n            count++;\n        }\n    }\n    if(count==n-1){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count==n){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    int n = arr.size();\n    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size() - 1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==n)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size() - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i=0;i<n;i++){\n        for(long j=0;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == n){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == 0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    if(n==1)\n        return true;\n    sort(arr.begin(),arr.end());\n    for(int i=0;i<n-1;i++){\n        if(arr[i]==arr[i+1])\n            return false;\n    }\n    return true;",
    "    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size()-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_set<long> s;\n    for(auto i:arr) {\n        s.insert(i);\n    }\n    if(s.size() == 1) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = i+1; j < n; j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n    }\n    if(count == 0){\n        return true;\n    }\n    else{\n        return false;\n    }",
    "    // Write your code here\n    std::unordered_map<long,int> m;\n    for(int i=0;i<arr.size();i++)\n    {\n        m[arr[i]]++;\n    }\n    for(auto x:m)\n    {\n        if(x.second==1)\n        {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count == 1) {\n            return true;\n        }\n        count = 0;\n    }\n    return false;",
    "    std::unordered_set<long> s;\n    for(auto i : arr) {\n        s.insert(i);\n    }\n    return s.size() == 1;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count == 1){\n            return true;\n        }\n        count = 0;\n    }\n    return false;",
    "    // Write your code here\n    int n = arr.size();\n    sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(auto i:arr) {\n        s.insert(i);\n    }\n    if(s.size()==1) {\n        return true;\n    }\n    return false;",
    "\t// Write your code here\n\t// return true if there is only one distinct element in the vector\n\t// else return false\n\tint n = arr.size();\n\tif(n == 1)\n\t\treturn true;\n\tsort(arr.begin(), arr.end());\n\tfor(int i = 0; i < n - 1; i++) {\n\t\tif(arr[i] == arr[i + 1])\n\t\t\treturn false;\n\t}\n\treturn true;",
    "    std::unordered_map<long, int> map;\n    for (long i = 0; i < arr.size(); i++) {\n        if (map.find(arr[i]) == map.end()) {\n            map[arr[i]] = 1;\n        } else {\n            map[arr[i]]++;\n        }\n    }\n    for (auto i : map) {\n        if (i.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    int n = arr.size();\n    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < n - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < arr.size() - 1; i++) {\n        if(arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    int n = arr.size();\n    if(n == 1) {\n        return true;\n    }\n    std::sort(arr.begin(), arr.end());\n    for(int i = 0; i < n-1; i++) {\n        if(arr[i] == arr[i+1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::unordered_map<long, int> mp;\n    for(int i = 0; i < arr.size(); i++) {\n        mp[arr[i]]++;\n    }\n    for(auto x : mp) {\n        if(x.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count>1){\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n        if(count == 1) {\n            return true;\n        }\n    }\n    return false;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(auto i:arr) {\n        s.insert(i);\n    }\n    if(s.size() == 1) {\n        return true;\n    }\n    return false;",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i] == arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count == 0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    std::unordered_set<long> s;\n    for(long i = 0; i < arr.size(); i++) {\n        s.insert(arr[i]);\n    }\n    if(s.size() == 1) {\n        return true;\n    }\n    return false;",
    "    // Write your code here\n    if(arr.size()==0)\n        return false;\n    long x=arr[0];\n    for(int i=1;i<arr.size();i++)\n    {\n        if(arr[i]!=x)\n            return false;\n    }\n    return true;",
    "    std::unordered_map<long, long> m;\n    for(long i = 0; i < arr.size(); i++) {\n        m[arr[i]]++;\n    }\n    for(auto x : m) {\n        if(x.second > 1) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    std::sort(arr.begin(),arr.end());\n    for(int i=0;i<arr.size()-1;i++){\n        if(arr[i]==arr[i+1]){\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(arr[i] == arr[j]){\n                count++;\n            }\n        }\n        if(count == 1){\n            return true;\n        }\n    }\n    return false;",
    "    std::sort(arr.begin(), arr.end());\n    for (int i = 0; i < arr.size() - 1; i++) {\n        if (arr[i] == arr[i + 1]) {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == 0) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    // Write your code here\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            if(arr[i]==arr[j])\n            {\n                count++;\n            }\n        }\n    }\n    if(count==0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }",
    "    // Write your code here\n    long n=arr.size();\n    long i;\n    for(i=0;i<n;i++)\n    {\n        if(arr[i]!=arr[0])\n        {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int n = arr.size();\n    int count = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < n; j++) {\n            if(arr[i] == arr[j]) {\n                count++;\n            }\n        }\n    }\n    if(count == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    int n = arr.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    // Write your code here\n    long n = arr.size();\n    long count = 0;\n    for(long i=0;i<n;i++){\n        for(long j=0;j<n;j++){\n            if(arr[i]==arr[j]){\n                count++;\n            }\n        }\n        if(count==1){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }",
    "    std::unordered_set<long> s;\n    for(auto i:arr)\n        s.insert(i);\n    return s.size()==1;"
  ]
}
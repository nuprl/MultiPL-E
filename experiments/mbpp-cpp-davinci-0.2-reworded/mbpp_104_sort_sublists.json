{
  "name": "mbpp_104_sort_sublists",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to sort each subvector of strings in a given vector of vectors.\nstd::vector<std::vector<std::string>> sort_sublists(std::vector<std::string> input_list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_104_sort_sublists.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = sort_sublists;\n    assert(candidate(std::make_tuple(std::vector<std::string>({(std::string)\"green\", (std::string)\"orange\"}), std::vector<std::string>({(std::string)\"black\", (std::string)\"white\"}), std::vector<std::string>({(std::string)\"white\", (std::string)\"black\", (std::string)\"orange\"}))) == (std::vector<std::vector<std::string>>({(std::vector<std::string>)std::vector<std::string>({(std::string)\"green\", (std::string)\"orange\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"black\", (std::string)\"white\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"black\", (std::string)\"orange\", (std::string)\"white\"})})));\n    assert(candidate(std::make_tuple(std::vector<std::string>({(std::string)\" red \", (std::string)\"green\"}), std::vector<std::string>({(std::string)\"blue \", (std::string)\" black\"}), std::vector<std::string>({(std::string)\" orange\", (std::string)\"brown\"}))) == (std::vector<std::vector<std::string>>({(std::vector<std::string>)std::vector<std::string>({(std::string)\" red \", (std::string)\"green\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\" black\", (std::string)\"blue \"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\" orange\", (std::string)\"brown\"})})));\n    assert(candidate(std::make_tuple(std::vector<std::string>({(std::string)\"zilver\", (std::string)\"gold\"}), std::vector<std::string>({(std::string)\"magnesium\", (std::string)\"aluminium\"}), std::vector<std::string>({(std::string)\"steel\", (std::string)\"bronze\"}))) == (std::vector<std::vector<std::string>>({(std::vector<std::string>)std::vector<std::string>({(std::string)\"gold\", (std::string)\"zilver\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"aluminium\", (std::string)\"magnesium\"}), (std::vector<std::string>)std::vector<std::string>({(std::string)\"bronze\", (std::string)\"steel\"})})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for(int i = 0; i < input_list.size(); i++) {\n        if(input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        }\n        else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for(int i=0;i<input_list.size();i++){\n        if(input_list[i]==\"#\"){\n            std::sort(temp.begin(),temp.end());\n            result.push_back(temp);\n            temp.clear();\n        }\n        else{\n            temp.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<std::string>> output_list;\n    std::vector<std::string> temp_list;\n    for(int i=0;i<input_list.size();i++) {\n        if(input_list[i] == \"end\") {\n            std::sort(temp_list.begin(),temp_list.end());\n            output_list.push_back(temp_list);\n            temp_list.clear();\n        }\n        else {\n            temp_list.push_back(input_list[i]);\n        }\n    }\n    return output_list;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> sublist;\n    for (auto i : input_list) {\n        if (i == \"|\") {\n            result.push_back(sublist);\n            sublist.clear();\n        }\n        else {\n            sublist.push_back(i);\n        }\n    }\n    result.push_back(sublist);\n    for (auto &i : result) {\n        std::sort(i.begin(), i.end());\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        }\n        else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for(int i=0;i<input_list.size();i++) {\n        if(input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        }\n        else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for(int i=0;i<input_list.size();i++){\n        if(input_list[i]==\"END\"){\n            std::sort(temp.begin(),temp.end());\n            result.push_back(temp);\n            temp.clear();\n        }\n        else{\n            temp.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> sub_list;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"|\") {\n            std::sort(sub_list.begin(), sub_list.end());\n            result.push_back(sub_list);\n            sub_list.clear();\n        } else {\n            sub_list.push_back(input_list[i]);\n        }\n    }\n    std::sort(sub_list.begin(), sub_list.end());\n    result.push_back(sub_list);\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for(int i = 0; i < input_list.size(); i++) {\n        if(input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"END\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"end\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        }\n        else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> output_list;\n    std::vector<std::string> temp;\n    for(int i=0;i<input_list.size();i++) {\n        if(input_list[i] == \"END\") {\n            std::sort(temp.begin(),temp.end());\n            output_list.push_back(temp);\n            temp.clear();\n        }\n        else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    return output_list;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> sublist;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"\") {\n            std::sort(sublist.begin(), sublist.end());\n            result.push_back(sublist);\n            sublist.clear();\n        } else {\n            sublist.push_back(input_list[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> temp;\n    for(int i = 0; i < input_list.size(); i++) {\n        if(input_list[i] == \"|\") {\n            std::sort(temp.begin(), temp.end());\n            result.push_back(temp);\n            temp.clear();\n        } else {\n            temp.push_back(input_list[i]);\n        }\n    }\n    std::sort(temp.begin(), temp.end());\n    result.push_back(temp);\n    return result;",
    "    std::vector<std::vector<std::string>> result;\n    std::vector<std::string> sublist;\n    for (int i = 0; i < input_list.size(); i++) {\n        if (input_list[i] == \"end\") {\n            std::sort(sublist.begin(), sublist.end());\n            result.push_back(sublist);\n            sublist.clear();\n        }\n        else {\n            sublist.push_back(input_list[i]);\n        }\n    }\n    return result;"
  ]
}
{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    while (n > 0) {\n        if (n % 2 == 0)\n            n = n / 2;\n        else if (n == 1)\n            return true;\n        else\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpnqbipwqy: /tmp/tmpnqbipwqy.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    while(n > 0) {\n        if(n % 2 == 1)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpsb07y1i2: /tmp/tmpsb07y1i2.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpxz9zgcff: /tmp/tmpxz9zgcff.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp2os270iu: /tmp/tmp2os270iu.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 1) {\n        return true;\n    }\n    if (n < 1) {\n        return false;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            n -= pow(2, i);\n        }\n        i++;\n        if (n == 0) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509698,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpa8kxyg_b: /tmp/tmpa8kxyg_b.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    if(n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp8b6117rj: /tmp/tmp8b6117rj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n < 0)\n        return false;\n    if (n == 0)\n        return true;\n    while (n > 1) {\n        if (n % 2 == 1)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpc88ldsnj: /tmp/tmpc88ldsnj.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 1) {\n        if (n % 2 == 1)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmput6fvg31: /tmp/tmput6fvg31.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp9nngfpiv: /tmp/tmp9nngfpiv.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (i == 0) {\n                return false;\n            }\n            n = n - pow(2, i);\n        }\n        i++;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) return true;\n    while (n != 1) {\n        if (n % 2 != 0) return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpumelus5f: /tmp/tmpumelus5f.cpp:14: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long i = 2;\n    while (i <= n) {\n        i = i * 2;\n    }\n    i = i / 2;\n    if (i == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - i);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp2os270iu: /tmp/tmp2os270iu.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) return true;\n    if(n == 1) return true;\n    if(n == 2) return true;\n    if(n == 3) return false;\n    if(n == 4) return true;\n    if(n == 5) return false;\n    if(n == 6) return false;\n    if(n == 7) return false;\n    if(n == 8) return true;\n    if(n == 9) return false;\n    if(n == 10) return false;\n    if(n == 11) return false;\n    if(n == 12) return false;\n    if(n == 13) return false;\n    if(n == 14) return false;\n    if(n == 15) return false;\n    if(n == 16) return true;\n    if(n == 17) return false;\n    if(n == 18) return false;\n    if(n == 19) return false;\n    if(n == 20) return false;\n    if(n == 21) return false;\n    if(n == 22) return false;\n    if(n == 23) return false;\n    if(n == 24) return false;\n    if(n == 25) return false;\n    if(n == 26) return false;\n    if(n == 27) return false;\n    if(n == 28) return false;\n    if(n == 29) return false;\n    if(n == 30) return false;\n    if(n == 31) return false;\n    if(n == 32) return true;\n    if(n == 33) return false;\n    if(n == 34) return false;\n    if(n == 35) return false;\n    if(n == 36) return false;\n    if(n == 37) return false;\n    if(n == 38) return false;\n    if(n == 39) return false;\n    if(n == 40) return false;\n    if(n == 41) return false;\n    if(n == 42) return false;\n    if(n == 43) return false;\n    if(n == 44) return false;\n    if(n == 45) return false;\n    if(n ==\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "/tmp/tmpgikd1862.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmpgikd1862.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpgikd1862.cpp:51:12: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   51 |     if(n ==\n      |       ~    ^\n      |            )\n   52 | }\n      | ~           \n/tmp/tmpgikd1862.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpgikd1862.cpp:52:1: warning: control reaches end of non-void function [-Wreturn-type]\n   52 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n != 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            n = n - 1;\n        }\n    }\n    if (n == 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp697edqok: /tmp/tmp697edqok.cpp:26: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            if (n == 1)\n                return true;\n            else\n                return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp_1r6zw0i: /tmp/tmp_1r6zw0i.cpp:23: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    if(n%2!=0)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpfjq0drot: /tmp/tmpfjq0drot.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0)\n        return false;\n    while(n!=1) {\n        if(n%2!=0)\n            return false;\n        n/=2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpf_ta_3yz: /tmp/tmpf_ta_3yz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp2os270iu: /tmp/tmp2os270iu.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp2os270iu: /tmp/tmp2os270iu.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n\t// Write your code here\n\tif(n==0)\n\treturn false;\n\tif(n==1)\n\treturn true;\n\twhile(n!=1)\n\t{\n\t\tif(n%2!=0)\n\t\treturn false;\n\t\tn=n/2;\n\t}\n\treturn true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpt3a5somw: /tmp/tmpt3a5somw.cpp:20: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n <= 0) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpolzlwmzk: /tmp/tmpolzlwmzk.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    int i = 0;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            break;\n        }\n        n = n / 2;\n        i++;\n    }\n    if (n == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpr_6ls6av: /tmp/tmpr_6ls6av.cpp:26: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp9nngfpiv: /tmp/tmp9nngfpiv.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmpywx6jodn: /tmp/tmpywx6jodn.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0) return true;\n    if(n==1) return true;\n    if(n%2==1) return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpkfsyhbrn: /tmp/tmpkfsyhbrn.cpp:12: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    long i = 1;\n    while (i < n) {\n        i = i << 1;\n    }\n    if (i == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - i);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124076,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0)\n        return true;\n    if(n==1)\n        return false;\n    if(n%2==1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpxnerfxsy: /tmp/tmpxnerfxsy.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n == 2)\n        return true;\n    if (n == 3)\n        return false;\n    if (n % 2 == 0)\n        return is_Sum_Of_Powers_Of_Two(n / 2);\n    return is_Sum_Of_Powers_Of_Two(n - 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp9musai7b: /tmp/tmp9musai7b.cpp:19: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return false;\n    while(n != 1) {\n        if(n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpusg8ffod: /tmp/tmpusg8ffod.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    while (n != 0) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpdmn1ld4v: /tmp/tmpdmn1ld4v.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) return true;\n    while(n != 1) {\n        if(n % 2 != 0) return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpezzu4x6g: /tmp/tmpezzu4x6g.cpp:14: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp4cs5et4e: /tmp/tmp4cs5et4e.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 1) {\n        if (n % 2 == 0)\n            n = n / 2;\n        else\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp2a18p9gt: /tmp/tmp2a18p9gt.cpp:19: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return false;\n    while(n != 1) {\n        if(n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpusg8ffod: /tmp/tmpusg8ffod.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n\tif (n == 0)\n\t\treturn true;\n\tif (n == 1)\n\t\treturn false;\n\twhile (n > 0) {\n\t\tif (n % 2 == 1)\n\t\t\treturn false;\n\t\tn = n / 2;\n\t}\n\treturn true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp0wmn_rfc: /tmp/tmp0wmn_rfc.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            n = n - 1;\n        }\n    }\n    if (n == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp4qrws2im: /tmp/tmp4qrws2im.cpp:27: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n == 2)\n        return true;\n    if (n == 3)\n        return false;\n    if (n == 4)\n        return true;\n    if (n == 5)\n        return false;\n    if (n == 6)\n        return false;\n    if (n == 7)\n        return false;\n    if (n == 8)\n        return true;\n    if (n == 9)\n        return false;\n    if (n == 10)\n        return false;\n    if (n == 11)\n        return false;\n    if (n == 12)\n        return false;\n    if (n == 13)\n        return false;\n    if (n == 14)\n        return false;\n    if (n == 15)\n        return false;\n    if (n == 16)\n        return true;\n    if (n == 17)\n        return false;\n    if (n == 18)\n        return false;\n    if (n == 19)\n        return false;\n    if (n == 20)\n        return false;\n    if (n == 21)\n        return false;\n    if (n == 22)\n        return false;\n    if (n == 23)\n        return false;\n    if (n == 24)\n        return false;\n    if (n == 25)\n        return false;\n    if (n == 26)\n        return false;\n    if (n == 27)\n        return false;\n    if (n == 28)\n        return false;\n    if (n == 29)\n        return false;\n    if (n == 30)\n        return false;\n    if (n == 31)\n        return false;\n    if (n == 32)\n        return true;\n    if (n == 33)\n        return false;\n    if (n == 34)\n        return false;\n    if (n == 35)\n        return false;\n    if (n == 36)\n        return false;\n    if (n == 37)\n        return false;\n    if (n == 38)\n        return false;\n    if (n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "/tmp/tmpvrvk3d61.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmpvrvk3d61.cpp:83:10: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if (n\n      |        ~ ^\n      |          )\n   84 | }\n      | ~         \n/tmp/tmpvrvk3d61.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpvrvk3d61.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 1) {\n        if (n % 2 == 0)\n            n = n / 2;\n        else\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp2a18p9gt: /tmp/tmp2a18p9gt.cpp:19: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return false;\n    while(n != 1) {\n        if(n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpusg8ffod: /tmp/tmpusg8ffod.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpe537a5gi: /tmp/tmpe537a5gi.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n % 2 == 1)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp6c8giusd: /tmp/tmp6c8giusd.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp4m6i5czk: /tmp/tmp4m6i5czk.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp9nngfpiv: /tmp/tmp9nngfpiv.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    while(n > 0) {\n        if(n%2 == 0)\n            n = n/2;\n        else if(n%2 == 1 && n != 1)\n            n = n - 1;\n        else if(n == 1)\n            return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp0hk9easl: /tmp/tmp0hk9easl.cpp:22: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    else if (n == 1)\n        return true;\n    else if (n % 2 == 1)\n        return false;\n    else\n        return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpmq729d28: /tmp/tmpmq729d28.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    if(n%2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp8frh76uf: /tmp/tmp8frh76uf.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 == 1) {\n            n = n - 1;\n        }\n        if (n % 2 == 0) {\n            n = n / 2;\n        }\n        if (n == 1) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp2gqzav4h: /tmp/tmp2gqzav4h.cpp:27: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpuwe5zt17: /tmp/tmpuwe5zt17.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n != 0) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp87n0ne4a: /tmp/tmp87n0ne4a.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n % 2 == 0) {\n        n /= 2;\n    }\n    return n == 1;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpv2yojna6: /tmp/tmpv2yojna6.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp01nspt6m: /tmp/tmp01nspt6m.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpxz9zgcff: /tmp/tmpxz9zgcff.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            break;\n        }\n    }\n    if (n == 1) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp7q2bpiub: /tmp/tmp7q2bpiub.cpp:22: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp2os270iu: /tmp/tmp2os270iu.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n%2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmppvctghla: /tmp/tmppvctghla.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpitp959_7: /tmp/tmpitp959_7.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    if(n % 2 == 0)\n        return is_Sum_Of_Powers_Of_Two(n / 2);\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124064,
      "stdout": "",
      "stderr": "tmpcgwgn3lc: /tmp/tmpcgwgn3lc.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp47hb7yq2: /tmp/tmp47hb7yq2.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpvt1uhmnr: /tmp/tmpvt1uhmnr.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 1) {\n        if (n % 2 == 1)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmput6fvg31: /tmp/tmput6fvg31.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    long i = 1;\n    while (i < n) {\n        i = i << 1;\n    }\n    if (i == n)\n        return true;\n    else\n        return is_Sum_Of_Powers_Of_Two(n - (i >> 1));\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 1) {\n        if (n % 2 == 0)\n            n = n / 2;\n        else\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmp2a18p9gt: /tmp/tmp2a18p9gt.cpp:19: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long x = 1;\n    while (x < n) {\n        x = x * 2;\n    }\n    if (x == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - x / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n % 2 == 1)\n            n -= 1;\n        n /= 2;\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpkt6wx4fc: /tmp/tmpkt6wx4fc.cpp:19: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    if(n%2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp_z93xgdm: /tmp/tmp_z93xgdm.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 1) {\n        return true;\n    }\n    if(n == 0) {\n        return false;\n    }\n    if(n % 2 != 0) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpzpgupzj0: /tmp/tmpzpgupzj0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpxz9zgcff: /tmp/tmpxz9zgcff.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return false;\n    }\n    while(n != 1) {\n        if(n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmpi3dv13ee: /tmp/tmpi3dv13ee.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n % 2 == 0)\n            n /= 2;\n        else if (n == 1)\n            return true;\n        else\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmp0pu84t5p: /tmp/tmp0pu84t5p.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 0) {\n        if (n % 2 == 1) {\n            n -= 1;\n        }\n        else {\n            n /= 2;\n        }\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmpro5bj_u0: /tmp/tmpro5bj_u0.cpp:21: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmpli54x4ow: /tmp/tmpli54x4ow.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n%2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmppvctghla: /tmp/tmppvctghla.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    int i = 0;\n    while(n > 0) {\n        if(n & 1) {\n            if(n == 1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        n = n >> 1;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmp9iwb37uw: /tmp/tmp9iwb37uw.cpp:27: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n < 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    while (n > 0) {\n        if (n == 1)\n            return true;\n        if (n % 2 == 0)\n            n = n / 2;\n        else\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmp0p5fn763: /tmp/tmp0p5fn763.cpp:23: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0)\n        return true;\n    if(n==1)\n        return false;\n    while(n!=1) {\n        if(n%2!=0)\n            return false;\n        n=n/2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmp9m1h1z9y: /tmp/tmp9m1h1z9y.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long temp = n;\n    while (temp % 2 == 0) {\n        temp = temp / 2;\n    }\n    return is_Sum_Of_Powers_Of_Two(temp - 1);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmpb8l8zn9a: /tmp/tmpb8l8zn9a.cpp:20: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n == 2)\n        return true;\n    if (n == 3)\n        return false;\n    if (n == 4)\n        return true;\n    if (n == 5)\n        return false;\n    if (n == 6)\n        return false;\n    if (n == 7)\n        return false;\n    if (n == 8)\n        return true;\n    if (n == 9)\n        return false;\n    if (n == 10)\n        return false;\n    if (n == 11)\n        return false;\n    if (n == 12)\n        return false;\n    if (n == 13)\n        return false;\n    if (n == 14)\n        return false;\n    if (n == 15)\n        return false;\n    if (n == 16)\n        return true;\n    if (n == 17)\n        return false;\n    if (n == 18)\n        return false;\n    if (n == 19)\n        return false;\n    if (n == 20)\n        return false;\n    if (n == 21)\n        return false;\n    if (n == 22)\n        return false;\n    if (n == 23)\n        return false;\n    if (n == 24)\n        return false;\n    if (n == 25)\n        return false;\n    if (n == 26)\n        return false;\n    if (n == 27)\n        return false;\n    if (n == 28)\n        return false;\n    if (n == 29)\n        return false;\n    if (n == 30)\n        return false;\n    if (n == 31)\n        return false;\n    if (n == 32)\n        return true;\n    if (n == 33)\n        return false;\n    if (n == 34)\n        return false;\n    if (n == 35)\n        return false;\n    if (n == 36)\n        return false;\n    if (n == 37)\n        return false;\n    if (n == 38)\n        return false;\n    if (n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "/tmp/tmpvrvk3d61.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmpvrvk3d61.cpp:83:10: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if (n\n      |        ~ ^\n      |          )\n   84 | }\n      | ~         \n/tmp/tmpvrvk3d61.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmpvrvk3d61.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    if(n%2==1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmprsz7q888: /tmp/tmprsz7q888.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n % 2 == 1)\n            n -= 1;\n        else\n            n /= 2;\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmplamf_x6p: /tmp/tmplamf_x6p.cpp:20: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long temp = n;\n    while (temp % 2 == 0) {\n        temp = temp / 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - temp);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmp655s76_0: /tmp/tmp655s76_0.cpp:23: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n % 2 == 0)\n            n /= 2;\n        else if (n == 1)\n            return true;\n        else\n            return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmp0pu84t5p: /tmp/tmp0pu84t5p.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return true;\n    if(n == 2)\n        return true;\n    if(n == 3)\n        return false;\n    if(n == 4)\n        return true;\n    if(n == 5)\n        return false;\n    if(n == 6)\n        return false;\n    if(n == 7)\n        return false;\n    if(n == 8)\n        return true;\n    if(n == 9)\n        return false;\n    if(n == 10)\n        return false;\n    if(n == 11)\n        return false;\n    if(n == 12)\n        return false;\n    if(n == 13)\n        return false;\n    if(n == 14)\n        return false;\n    if(n == 15)\n        return false;\n    if(n == 16)\n        return true;\n    if(n == 17)\n        return false;\n    if(n == 18)\n        return false;\n    if(n == 19)\n        return false;\n    if(n == 20)\n        return false;\n    if(n == 21)\n        return false;\n    if(n == 22)\n        return false;\n    if(n == 23)\n        return false;\n    if(n == 24)\n        return false;\n    if(n == 25)\n        return false;\n    if(n == 26)\n        return false;\n    if(n == 27)\n        return false;\n    if(n == 28)\n        return false;\n    if(n == 29)\n        return false;\n    if(n == 30)\n        return false;\n    if(n == 31)\n        return false;\n    if(n == 32)\n        return true;\n    if(n == 33)\n        return false;\n    if(n == 34)\n        return false;\n    if(n == 35)\n        return false;\n    if(n == 36)\n        return false;\n    if(n == 37)\n        return false;\n    if(n == 38)\n        return false;\n    if(n\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "/tmp/tmp8tbpm69p.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmp8tbpm69p.cpp:83:9: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   83 |     if(n\n      |       ~ ^\n      |         )\n   84 | }\n      | ~        \n/tmp/tmp8tbpm69p.cpp:84:1: error: expected primary-expression before \u2018}\u2019 token\n   84 | }\n      | ^\n/tmp/tmp8tbpm69p.cpp:84:1: warning: control reaches end of non-void function [-Wreturn-type]\n   84 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n==0) return true;\n    if(n==1) return true;\n    if(n==2) return true;\n    if(n==3) return false;\n    if(n==4) return true;\n    if(n==5) return false;\n    if(n==6) return false;\n    if(n==7) return false;\n    if(n==8) return true;\n    if(n==9) return false;\n    if(n==10) return false;\n    if(n==11) return false;\n    if(n==12) return false;\n    if(n==13) return false;\n    if(n==14) return false;\n    if(n==15) return false;\n    if(n==16) return true;\n    if(n==17) return false;\n    if(n==18) return false;\n    if(n==19) return false;\n    if(n==20) return false;\n    if(n==21) return false;\n    if(n==22) return false;\n    if(n==23) return false;\n    if(n==24) return false;\n    if(n==25) return false;\n    if(n==26) return false;\n    if(n==27) return false;\n    if(n==28) return false;\n    if(n==29) return false;\n    if(n==30) return false;\n    if(n==31) return false;\n    if(n==32) return true;\n    if(n==33) return false;\n    if(n==34) return false;\n    if(n==35) return false;\n    if(n==36) return false;\n    if(n==37) return false;\n    if(n==38) return false;\n    if(n==39) return false;\n    if(n==40) return false;\n    if(n==41) return false;\n    if(n==42) return false;\n    if(n==43) return false;\n    if(n==44) return false;\n    if(n==45) return false;\n    if(n==\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "/tmp/tmpa6hmj_rw.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmpa6hmj_rw.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpa6hmj_rw.cpp:51:11: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   51 |     if(n==\n      |       ~   ^\n      |           )\n   52 | }\n      | ~          \n/tmp/tmpa6hmj_rw.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpa6hmj_rw.cpp:52:1: warning: control reaches end of non-void function [-Wreturn-type]\n   52 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n != 0) {\n        if(n % 2 == 1) {\n            n -= 1;\n        }\n        n /= 2;\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmpj6dpuri7: /tmp/tmpj6dpuri7.cpp:22: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    long i = 1;\n    while(i < n) {\n        i = i << 1;\n    }\n    if(i == n) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - (i >> 1));\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    // Write your code here\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    if(n%2!=0)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmplceubjoj: /tmp/tmplceubjoj.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return false;\n    while(n != 1) {\n        if(n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpusg8ffod: /tmp/tmpusg8ffod.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    long i = 1;\n    while (i <= n) {\n        i *= 2;\n    }\n    i /= 2;\n    while (i > 0) {\n        if (n >= i) {\n            n -= i;\n        }\n        i /= 2;\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmp0bf6yio8: /tmp/tmp0bf6yio8.cpp:24: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n\tlong sum = 0;\n\tlong p = 1;\n\twhile (sum < n) {\n\t\tsum = sum + p;\n\t\tp = p * 2;\n\t}\n\treturn sum == n;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmpenybwefm: /tmp/tmpenybwefm.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpitp959_7: /tmp/tmpitp959_7.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    long i = 0;\n    long sum = 0;\n    while (sum < n) {\n        sum += pow(2, i);\n        if (sum == n) {\n            return true;\n        }\n        i++;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmpd0c7pdkv: /tmp/tmpd0c7pdkv.cpp:24: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    else if(n == 1)\n        return true;\n    else {\n        int i = 0;\n        while(n > 0) {\n            if(n % 2 == 1) {\n                if(i == 0)\n                    return false;\n                n -= pow(2, i);\n            }\n            i++;\n        }\n        if(n == 0)\n            return true;\n        else\n            return false;\n    }\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124080,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpxz9zgcff: /tmp/tmpxz9zgcff.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    long temp = n;\n    while (temp % 2 == 0) {\n        temp /= 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - temp);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124066,
      "stdout": "",
      "stderr": "tmpkanjgtpz: /tmp/tmpkanjgtpz.cpp:23: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    while(n != 1) {\n        if(n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmplinnu_8m: /tmp/tmplinnu_8m.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n == 3) {\n        return false;\n    }\n    if (n == 4) {\n        return true;\n    }\n    if (n == 5) {\n        return false;\n    }\n    if (n == 6) {\n        return false;\n    }\n    if (n == 7) {\n        return false;\n    }\n    if (n == 8) {\n        return true;\n    }\n    if (n == 9) {\n        return false;\n    }\n    if (n == 10) {\n        return false;\n    }\n    if (n == 11) {\n        return false;\n    }\n    if (n == 12) {\n        return false;\n    }\n    if (n == 13) {\n        return false;\n    }\n    if (n == 14) {\n        return false;\n    }\n    if (n == 15) {\n        return false;\n    }\n    if (n == 16) {\n        return true;\n    }\n    if (n == 17) {\n        return false;\n    }\n    if (n == 18) {\n        return false;\n    }\n    if (n == 19) {\n        return false;\n    }\n    if (n == 20) {\n        return false;\n    }\n    if (n == 21) {\n        return false;\n    }\n    if (n == 22) {\n        return false;\n    }\n    if (n == 23) {\n        return false;\n    }\n    if (n == 24) {\n        return false;\n    }\n    if (n == 25) {\n        return false;\n    }\n    if (n == 26) {\n        return false;\n    }\n    if (n == 27) {\n        return false;\n    }\n    if (n == 28) {\n        return false;\n    }\n    if (n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp01nspt6m: /tmp/tmp01nspt6m.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    long temp = n;\n    while (temp % 2 == 0)\n        temp /= 2;\n    return (temp == 1);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124066,
      "stdout": "",
      "stderr": "tmpg_mn5pm3: /tmp/tmpg_mn5pm3.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpjk101qok: /tmp/tmpjk101qok.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return true;\n    }\n    if (n % 2 == 1) {\n        return false;\n    }\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "tmpub_sqxcg: /tmp/tmpub_sqxcg.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n % 2 == 1)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n / 2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmp2os270iu: /tmp/tmp2os270iu.cpp:15: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n != 0) {\n        if (n % 2 == 0) {\n            n = n / 2;\n        } else {\n            n = n - 1;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpy9uc_cjl: /tmp/tmpy9uc_cjl.cpp:23: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n % 2 == 1)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpn313zzxq: /tmp/tmpn313zzxq.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) return true;\n    if (n == 1) return true;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n /= 2;\n        } else {\n            n -= 1;\n        }\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpnx3hnybm: /tmp/tmpnx3hnybm.cpp:19: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n > 0) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmp4hqnq8rp: /tmp/tmp4hqnq8rp.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n    while (n > 0) {\n        if (n == 2)\n            return true;\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpucdy7j3l: /tmp/tmpucdy7j3l.cpp:20: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    if (n == 2)\n        return true;\n    if (n == 3)\n        return false;\n    long x = 2;\n    while (x <= n) {\n        long y = n - x;\n        if (is_Sum_Of_Powers_Of_Two(y))\n            return true;\n        x = x * 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmp9bl5y05o: /tmp/tmp9bl5y05o.cpp:25: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    while(n > 0) {\n        if(n == 1) {\n            return true;\n        }\n        if(n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpk7680sn2: /tmp/tmpk7680sn2.cpp:24: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    // Write your code here\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    if(n%2!=0)\n        return false;\n    return is_Sum_Of_Powers_Of_Two(n/2);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124065,
      "stdout": "",
      "stderr": "tmplceubjoj: /tmp/tmplceubjoj.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    while(n > 0) {\n        if(n % 2 == 1)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpvx944jzq: /tmp/tmpvx944jzq.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n % 2 == 0)\n        n /= 2;\n    return (n == 1);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpumqcya_5: /tmp/tmpumqcya_5.cpp:13: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpu0g_ghh_: /tmp/tmpu0g_ghh_.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 1) {\n        if (n % 2 == 1) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmp4m6i5czk: /tmp/tmp4m6i5czk.cpp:21: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    while (n != 1) {\n        if (n % 2 != 0) {\n            return false;\n        }\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpih3b85r0: /tmp/tmpih3b85r0.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    int i = 1;\n    while (n) {\n        if (n % 2 == 1) {\n            n -= pow(2, i);\n            if (n < 0) {\n                return false;\n            }\n        }\n        i++;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpphqar5yn: /tmp/tmpphqar5yn.cpp:25: int main(): Assertion `candidate((14)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    while (n > 1) {\n        if (n % 2 == 1)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpgmp4bgos: /tmp/tmpgmp4bgos.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    long temp = n;\n    while (temp != 0) {\n        if (temp % 2 != 0) {\n            break;\n        }\n        temp = temp / 2;\n    }\n    if (temp == 1) {\n        return true;\n    }\n    return is_Sum_Of_Powers_Of_Two(n - temp);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpz57683pn: /tmp/tmpz57683pn.cpp:25: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0)\n        return true;\n    if(n == 1)\n        return false;\n    while(n > 1) {\n        if(n % 2 == 1)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpnn8yx402: /tmp/tmpnn8yx402.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n /= 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpu18jrmfy: /tmp/tmpu18jrmfy.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return true;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "tmpgaobsm3l: /tmp/tmpgaobsm3l.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n <= 0) {\n        return false;\n    }\n    if (n == 1) {\n        return true;\n    }\n    while (n > 0) {\n        if (n % 2 == 1) {\n            n = n - 1;\n        }\n        if (n % 2 == 0) {\n            n = n / 2;\n        }\n        if (n == 1) {\n            return true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpz2jdsp4_: /tmp/tmpz2jdsp4_.cpp:27: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return false;\n    }\n    if(n%2 == 0) {\n        return is_Sum_Of_Powers_Of_Two(n/2);\n    }\n    return is_Sum_Of_Powers_Of_Two(n-1);\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmp4op4fogd: /tmp/tmp4op4fogd.cpp:18: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    long p = 1;\n    while (p <= n) {\n        if (n == p) {\n            return true;\n        }\n        p = p * 2;\n    }\n    return false;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmpwhf2_r2z: /tmp/tmpwhf2_r2z.cpp:19: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0) {\n        return true;\n    }\n    if (n == 1) {\n        return false;\n    }\n    while (n > 0) {\n        if (n % 2 == 1) {\n            n -= 1;\n        }\n        n /= 2;\n    }\n    return n == 0;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124067,
      "stdout": "",
      "stderr": "tmp3e6cuksq: /tmp/tmp3e6cuksq.cpp:22: int main(): Assertion `candidate((7)) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) {\n        return true;\n    }\n    if(n == 1) {\n        return true;\n    }\n    if(n == 2) {\n        return true;\n    }\n    if(n == 3) {\n        return false;\n    }\n    if(n == 4) {\n        return true;\n    }\n    if(n == 5) {\n        return false;\n    }\n    if(n == 6) {\n        return false;\n    }\n    if(n == 7) {\n        return false;\n    }\n    if(n == 8) {\n        return true;\n    }\n    if(n == 9) {\n        return false;\n    }\n    if(n == 10) {\n        return false;\n    }\n    if(n == 11) {\n        return false;\n    }\n    if(n == 12) {\n        return false;\n    }\n    if(n == 13) {\n        return false;\n    }\n    if(n == 14) {\n        return false;\n    }\n    if(n == 15) {\n        return false;\n    }\n    if(n == 16) {\n        return true;\n    }\n    if(n == 17) {\n        return false;\n    }\n    if(n == 18) {\n        return false;\n    }\n    if(n == 19) {\n        return false;\n    }\n    if(n == 20) {\n        return false;\n    }\n    if(n == 21) {\n        return false;\n    }\n    if(n == 22) {\n        return false;\n    }\n    if(n == 23) {\n        return false;\n    }\n    if(n == 24) {\n        return false;\n    }\n    if(n == 25) {\n        return false;\n    }\n    if(n == 26) {\n        return false;\n    }\n    if(n == 27) {\n        return false;\n    }\n    if(n == 28) {\n        return false;\n    }\n    if(n == 29) {\n        return false;\n    }\n   \n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124063,
      "stdout": "",
      "stderr": "tmpitp959_7: /tmp/tmpitp959_7.cpp:99: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if (n == 0)\n        return false;\n    while (n != 1) {\n        if (n % 2 != 0)\n            return false;\n        n = n / 2;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124062,
      "stdout": "",
      "stderr": "tmp8sk0osyz: /tmp/tmp8sk0osyz.cpp:16: int main(): Assertion `candidate((10)) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nbool is_Sum_Of_Powers_Of_Two(long n) {\n    if(n == 0) return true;\n    if(n == 1) return true;\n    if(n == 2) return true;\n    if(n == 3) return false;\n    if(n == 4) return true;\n    if(n == 5) return false;\n    if(n == 6) return false;\n    if(n == 7) return false;\n    if(n == 8) return true;\n    if(n == 9) return false;\n    if(n == 10) return false;\n    if(n == 11) return false;\n    if(n == 12) return false;\n    if(n == 13) return false;\n    if(n == 14) return false;\n    if(n == 15) return false;\n    if(n == 16) return true;\n    if(n == 17) return false;\n    if(n == 18) return false;\n    if(n == 19) return false;\n    if(n == 20) return false;\n    if(n == 21) return false;\n    if(n == 22) return false;\n    if(n == 23) return false;\n    if(n == 24) return false;\n    if(n == 25) return false;\n    if(n == 26) return false;\n    if(n == 27) return false;\n    if(n == 28) return false;\n    if(n == 29) return false;\n    if(n == 30) return false;\n    if(n == 31) return false;\n    if(n == 32) return true;\n    if(n == 33) return false;\n    if(n == 34) return false;\n    if(n == 35) return false;\n    if(n == 36) return false;\n    if(n == 37) return false;\n    if(n == 38) return false;\n    if(n == 39) return false;\n    if(n == 40) return false;\n    if(n == 41) return false;\n    if(n == 42) return false;\n    if(n == 43) return false;\n    if(n == 44) return false;\n    if(n == 45) return false;\n    if(n ==\n}\nint main() {\n    auto candidate = is_Sum_Of_Powers_Of_Two;\n    assert(candidate((10)) == (true));\n    assert(candidate((7)) == (false));\n    assert(candidate((14)) == (true));\n}\n",
      "timestamp": 1666124061,
      "stdout": "",
      "stderr": "/tmp/tmpgikd1862.cpp: In function \u2018bool is_Sum_Of_Powers_Of_Two(long int)\u2019:\n/tmp/tmpgikd1862.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpgikd1862.cpp:51:12: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   51 |     if(n ==\n      |       ~    ^\n      |            )\n   52 | }\n      | ~           \n/tmp/tmpgikd1862.cpp:52:1: error: expected primary-expression before \u2018}\u2019 token\n   52 | }\n      | ^\n/tmp/tmpgikd1862.cpp:52:1: warning: control reaches end of non-void function [-Wreturn-type]\n   52 | }\n      | ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
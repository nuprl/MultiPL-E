{
  "name": "mbpp_389_find_lucas",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the n'th lucas number.\nlong find_lucas(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_389_find_lucas.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = find_lucas;\n    assert(candidate((9)) == (76));\n    assert(candidate((4)) == (7));\n    assert(candidate((3)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1)+find_lucas(n-2);",
    "\tif (n == 0)\n\t\treturn 2;\n\tif (n == 1)\n\t\treturn 1;\n\telse\n\t\treturn find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1)+find_lucas(n-2);",
    "    if (n == 0) return 2;\n    if (n == 1) return 1;\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if(n == 0) {\n        return 2;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0)\n        return 2;\n    if (n == 1)\n        return 1;\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if(n == 0) {\n        return 2;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1)+find_lucas(n-2);",
    "    if(n == 0) {\n        return 2;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    return find_lucas(n-1) + find_lucas(n-2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1)+find_lucas(n-2);",
    "    long first = 2;\n    long second = 1;\n    long result = 0;\n    if (n == 1) {\n        return first;\n    }\n    if (n == 2) {\n        return second;\n    }\n    for (long i = 3; i <= n; i++) {\n        result = first + second;\n        first = second;\n        second = result;\n    }\n    return result;",
    "    if (n == 0) return 2;\n    if (n == 1) return 1;\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    } else if (n == 1) {\n        return 1;\n    } else {\n        return find_lucas(n - 1) + find_lucas(n - 2);\n    }",
    "  if(n==0)\n    return 2;\n  if(n==1)\n    return 1;\n  return find_lucas(n-1)+find_lucas(n-2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if (n == 0) {\n        return 2;\n    }\n    if (n == 1) {\n        return 1;\n    }\n    return find_lucas(n - 1) + find_lucas(n - 2);",
    "    if(n==0)\n        return 2;\n    if(n==1)\n        return 1;\n    return find_lucas(n-1)+find_lucas(n-2);"
  ]
}
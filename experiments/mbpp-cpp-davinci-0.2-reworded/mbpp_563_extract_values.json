{
  "name": "mbpp_563_extract_values",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract values between quotation marks from a string.\nstd::vector<std::string> extract_values(std::string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = extract_values;\n    assert(candidate((\"\"Python\", \"PHP\", \"Java\"\")) == (std::vector<std::string>({(std::string)\"Python\", (std::string)\"PHP\", (std::string)\"Java\"})));\n    assert(candidate((\"\"python\",\"program\",\"language\"\")) == (std::vector<std::string>({(std::string)\"python\", (std::string)\"program\", (std::string)\"language\"})));\n    assert(candidate((\"\"red\",\"blue\",\"green\",\"yellow\"\")) == (std::vector<std::string>({(std::string)\"red\", (std::string)\"blue\", (std::string)\"green\", (std::string)\"yellow\"})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else {\n            if(flag) {\n                temp += text[i];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value.clear();\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int flag = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag == 0) {\n                flag = 1;\n            } else {\n                flag = 0;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else if (flag == 1) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i=0;i<text.length();i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string temp;\n  for (int i = 0; i < text.length(); i++) {\n    if (text[i] == '\"') {\n      temp = \"\";\n      i++;\n      while (text[i] != '\"') {\n        temp += text[i];\n        i++;\n      }\n      result.push_back(temp);\n    }\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        result.push_back(item);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++)\n    {\n        if(text[i]=='\"')\n        {\n            temp=\"\";\n            i++;\n            while(text[i]!='\"')\n            {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                values.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::stringstream ss(text);\n  std::string item;\n  while (std::getline(ss, item, '\"')) {\n    if (!item.empty()) {\n      result.push_back(item);\n    }\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (temp != \"\") {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            values.push_back(temp);\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == '\"') {\n                    result.push_back(temp);\n                    break;\n                }\n                temp += text[j];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++){\n        if(text[i]=='\"'){\n            temp=\"\";\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        if (!item.empty())\n            result.push_back(item);\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]=='\"') {\n            temp=\"\";\n            i++;\n            while(text[i]!='\"') {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(auto i : text) {\n        if(i == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += i;\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value.clear();\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]=='\"') {\n            temp=\"\";\n            i++;\n            while(text[i]!='\"') {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            values.push_back(temp);\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++) {\n        if(text[i]=='\"') {\n            temp.clear();\n            for(int j=i+1;j<text.size();j++) {\n                if(text[j]=='\"') {\n                    result.push_back(temp);\n                    break;\n                }\n                temp.push_back(text[j]);\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "  std::vector<std::string> values;\n  std::string value;\n  bool in_quotes = false;\n  for (auto c : text) {\n    if (c == '\"') {\n      if (in_quotes) {\n        values.push_back(value);\n        value = \"\";\n      }\n      in_quotes = !in_quotes;\n    } else if (in_quotes) {\n      value += c;\n    }\n  }\n  return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                result.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++) {\n        if(text[i]=='\"') {\n            i++;\n            while(text[i]!='\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++){\n        if(text[i]=='\"'){\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp=\"\";\n        }\n    }\n    return result;",
    "  std::vector<std::string> values;\n  std::string value;\n  bool in_quotes = false;\n  for (char c : text) {\n    if (c == '\"') {\n      if (in_quotes) {\n        values.push_back(value);\n        value.clear();\n      }\n      in_quotes = !in_quotes;\n    } else if (in_quotes) {\n      value += c;\n    }\n  }\n  return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            flag = !flag;\n            if(flag) {\n                temp = \"\";\n            } else {\n                result.push_back(temp);\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value.push_back(c);\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    int start = 0;\n    int end = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (start == 0) {\n                start = i;\n            } else {\n                end = i;\n                result.push_back(text.substr(start + 1, end - start - 1));\n                start = 0;\n                end = 0;\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i=0;i<text.size();i++){\n        if(text[i]=='\"'){\n            if(flag){\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            }\n            else{\n                flag = true;\n            }\n        }\n        else if(flag){\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++)\n    {\n        if(text[i]=='\"')\n        {\n            for(int j=i+1;j<text.length();j++)\n            {\n                if(text[j]=='\"')\n                {\n                    result.push_back(temp);\n                    temp.clear();\n                    break;\n                }\n                else\n                {\n                    temp+=text[j];\n                }\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    int flag = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag == 0) {\n                flag = 1;\n            } else {\n                flag = 0;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            if (flag == 1) {\n                temp += text[i];\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            flag = !flag;\n            if(!flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value.push_back(c);\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                value.push_back(text[i]);\n                i++;\n            }\n            values.push_back(value);\n            value.clear();\n        }\n        i++;\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (temp != \"\") {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string::size_type start = 0;\n    std::string::size_type end = 0;\n    while ((start = text.find('\"', end)) != std::string::npos) {\n        end = text.find('\"', start + 1);\n        if (end == std::string::npos) {\n            break;\n        }\n        result.push_back(text.substr(start + 1, end - start - 1));\n        end++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            i++;\n            while(text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += text[i];\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == '\"') {\n            value = \"\";\n            i++;\n            while (text[i] != '\"') {\n                value += text[i];\n                i++;\n            }\n            values.push_back(value);\n        }\n        i++;\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value.push_back(c);\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string::size_type pos = 0;\n    while (pos != std::string::npos) {\n        pos = text.find('\"', pos);\n        if (pos != std::string::npos) {\n            std::string::size_type end = text.find('\"', pos + 1);\n            if (end != std::string::npos) {\n                values.push_back(text.substr(pos + 1, end - pos - 1));\n                pos = end + 1;\n            } else {\n                pos = end;\n            }\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i=0;i<text.length();i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "  std::vector<std::string> res;\n  std::string temp;\n  bool flag = false;\n  for(int i = 0; i < text.length(); i++) {\n    if(text[i] == '\"') {\n      if(flag) {\n        res.push_back(temp);\n        temp = \"\";\n      }\n      flag = !flag;\n    }\n    else if(flag) {\n      temp += text[i];\n    }\n  }\n  return res;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            flag = !flag;\n            if (flag) {\n                temp = \"\";\n            } else {\n                result.push_back(temp);\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0; i<text.size(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string::size_type pos = 0;\n    while (pos != std::string::npos) {\n        pos = text.find('\"', pos);\n        if (pos != std::string::npos) {\n            std::string::size_type end = text.find('\"', pos + 1);\n            if (end != std::string::npos) {\n                result.push_back(text.substr(pos + 1, end - pos - 1));\n                pos = end + 1;\n            }\n            else {\n                pos = end;\n            }\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (temp != \"\") {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(temp != \"\") {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == '\"') {\n            temp.clear();\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value.clear();\n        }\n    }\n    if (!value.empty()) {\n        values.push_back(value);\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool is_quotation = false;\n    for (char c : text) {\n        if (c == '\"') {\n            is_quotation = !is_quotation;\n            if (!is_quotation) {\n                values.push_back(value);\n                value.clear();\n            }\n        } else if (is_quotation) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++)\n    {\n        if(text[i]=='\"')\n        {\n            temp=\"\";\n            i++;\n            while(text[i]!='\"')\n            {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag == false) {\n                flag = true;\n            }\n            else {\n                flag = false;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        }\n        else if(flag == true) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                values.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++){\n        if(text[i]=='\"'){\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n            if (!in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> values;\n    std::string::iterator it = text.begin();\n    std::string::iterator it2 = text.begin();\n    while(it != text.end()) {\n        if(*it == '\"') {\n            it2 = it + 1;\n            while(*it2 != '\"') {\n                it2++;\n            }\n            values.push_back(std::string(it + 1, it2));\n            it = it2 + 1;\n        } else {\n            it++;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag == false) {\n                flag = true;\n            } else {\n                flag = false;\n                result.push_back(temp);\n                temp.clear();\n            }\n        } else if(flag == true) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++)\n    {\n        if(text[i]=='\"')\n        {\n            temp=\"\";\n            i++;\n            while(text[i]!='\"')\n            {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while (i < text.length()) {\n        if (text[i] == '\"') {\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string::size_type start = 0;\n    std::string::size_type end = 0;\n    while ((start = text.find('\"', start)) != std::string::npos) {\n        end = text.find('\"', start + 1);\n        if (end == std::string::npos) {\n            break;\n        }\n        result.push_back(text.substr(start + 1, end - start - 1));\n        start = end + 1;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while (text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            flag = !flag;\n            if (!flag) {\n                result.push_back(temp);\n                temp.clear();\n            }\n        } else if (flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string temp;\n  bool flag = false;\n  for(int i = 0; i < text.size(); i++) {\n    if(text[i] == '\"') {\n      flag = !flag;\n      if(!flag) {\n        result.push_back(temp);\n        temp = \"\";\n      }\n    }\n    else if(flag) {\n      temp += text[i];\n    }\n  }\n  return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value.push_back(c);\n        } else if (!value.empty()) {\n            values.push_back(value);\n            value.clear();\n        }\n    }\n    if (!value.empty()) {\n        values.push_back(value);\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp.push_back(text[i]);\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.size();i++)\n    {\n        if(text[i]=='\"')\n        {\n            temp=\"\";\n            i++;\n            while(text[i]!='\"')\n            {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int flag = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag == 0) {\n                flag = 1;\n            } else {\n                flag = 0;\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else if (flag == 1) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string::size_type start = 0;\n    std::string::size_type end = 0;\n    while ((start = text.find('\"', start)) != std::string::npos) {\n        start++;\n        end = text.find('\"', start);\n        result.push_back(text.substr(start, end - start));\n        start = end + 1;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value.clear();\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (flag == false) {\n                flag = true;\n            } else {\n                flag = false;\n                result.push_back(temp);\n                temp.clear();\n            }\n        } else if (flag == true) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            flag = !flag;\n            if(flag == false) {\n                result.push_back(temp);\n                temp.clear();\n            }\n        }\n        else if(flag) {\n            temp.push_back(text[i]);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (auto i : text) {\n        if (i == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += i;\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == '\"') {\n            temp.clear();\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.length()) {\n        if(text[i] == '\"') {\n            temp = \"\";\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string::size_type start = 0;\n    std::string::size_type end = 0;\n    while ((start = text.find('\"', start)) != std::string::npos) {\n        start++;\n        end = text.find('\"', start);\n        result.push_back(text.substr(start, end - start));\n        start = end + 1;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n                flag = false;\n            }\n            else {\n                flag = true;\n            }\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "  std::vector<std::string> result;\n  std::string temp;\n  bool flag = false;\n  for (int i = 0; i < text.length(); i++) {\n    if (text[i] == '\"') {\n      flag = !flag;\n      if (flag == false) {\n        result.push_back(temp);\n        temp = \"\";\n      }\n      continue;\n    }\n    if (flag) {\n      temp += text[i];\n    }\n  }\n  return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        }\n        else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++){\n        if(text[i]=='\"'){\n            i++;\n            while(text[i]!='\"'){\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::stringstream ss(text);\n    std::string item;\n    while (std::getline(ss, item, '\"')) {\n        if (!item.empty()) {\n            result.push_back(item);\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (auto c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i=0;i<text.length();i++) {\n        if(text[i]=='\"') {\n            i++;\n            while(text[i]!='\"') {\n                temp+=text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        } else if (c == ',') {\n            values.push_back(value);\n            value = \"\";\n        }\n    }\n    values.push_back(value);\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            flag = !flag;\n            if (!flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> values;\n    std::string value;\n    bool in_quotes = false;\n    for (char c : text) {\n        if (c == '\"') {\n            if (in_quotes) {\n                values.push_back(value);\n                value = \"\";\n            }\n            in_quotes = !in_quotes;\n        } else if (in_quotes) {\n            value += c;\n        }\n    }\n    return values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            if(flag) {\n                result.push_back(temp);\n                temp.clear();\n                flag = false;\n            } else {\n                flag = true;\n            }\n        } else if(flag) {\n            temp += text[i];\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp.clear();\n        }\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp = \"\";\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == '\"') {\n            if (temp != \"\") {\n                result.push_back(temp);\n                temp = \"\";\n            }\n        } else {\n            temp += text[i];\n        }\n    }\n    return result;",
    "\tstd::vector<std::string> values;\n\tstd::string value;\n\tbool in_quotes = false;\n\tfor (char c : text) {\n\t\tif (c == '\"') {\n\t\t\tif (in_quotes) {\n\t\t\t\tvalues.push_back(value);\n\t\t\t\tvalue.clear();\n\t\t\t}\n\t\t\tin_quotes = !in_quotes;\n\t\t}\n\t\telse if (in_quotes) {\n\t\t\tvalue.push_back(c);\n\t\t}\n\t}\n\treturn values;",
    "    std::vector<std::string> result;\n    std::string temp;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == '\"') {\n            i++;\n            while(text[i] != '\"') {\n                temp += text[i];\n                i++;\n            }\n            result.push_back(temp);\n            temp = \"\";\n        }\n        i++;\n    }\n    return result;",
    "    std::vector<std::string> result;\n    std::string temp;\n    bool flag = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '\"') {\n            if (flag) {\n                result.push_back(temp);\n                temp = \"\";\n            }\n            flag = !flag;\n        } else if (flag) {\n            temp += text[i];\n        }\n    }\n    return result;"
  ]
}
{
  "name": "mbpp_118_string_to_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to convert a string to a vector of strings split on the space character.\nstd::vector<std::string> string_to_list(std::string string) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = string_to_list;\n    assert(candidate((\"python programming\")) == (std::vector<std::string>({(std::string)\"python\", (std::string)\"programming\"})));\n    assert(candidate((\"lists tuples strings\")) == (std::vector<std::string>({(std::string)\"lists\", (std::string)\"tuples\", (std::string)\"strings\"})));\n    assert(candidate((\"write a program\")) == (std::vector<std::string>({(std::string)\"write\", (std::string)\"a\", (std::string)\"program\"})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::stringstream ss(string);\n  std::string word;\n  while(ss >> word) {\n    list.push_back(word);\n  }\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::stringstream stream(string);\n    while (stream >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::string word = \"\";\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] == ' ') {\n      list.push_back(word);\n      word = \"\";\n    } else {\n      word += string[i];\n    }\n  }\n  list.push_back(word);\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        }\n        else {\n            word = word + string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::string word = \"\";\n  for (int i = 0; i < string.length(); i++) {\n    if (string[i] == ' ') {\n      list.push_back(word);\n      word = \"\";\n    } else {\n      word += string[i];\n    }\n  }\n  list.push_back(word);\n  return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (char c : string) {\n        if (c == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += c;\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string token;\n    while (std::getline(ss, token, ' ')) {\n        list.push_back(token);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while(std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word = word + string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (char c : string) {\n        if (c == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += c;\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        result.push_back(item);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::istringstream iss(string);\n    while (iss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        result.push_back(item);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::istringstream iss(string);\n    while (iss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        }\n        else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        result.push_back(item);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::stringstream ss(string);\n  std::string word;\n  while (ss >> word) {\n    list.push_back(word);\n  }\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word = word + string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::string word;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] != ' ') {\n            word += string[i];\n        } else {\n            list.push_back(word);\n            word = \"\";\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::stringstream ss(string);\n  std::string word;\n  while(ss >> word) {\n    list.push_back(word);\n  }\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::istringstream iss(string);\n    std::string word;\n    while(iss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::stringstream ss(string);\n  std::string word;\n  while(ss >> word) {\n    list.push_back(word);\n  }\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string item;\n    while(std::getline(ss, item, ' ')) {\n        result.push_back(item);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::stringstream stream(string);\n    while (stream >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::stringstream ss(string);\n  std::string word;\n  while (ss >> word) {\n    list.push_back(word);\n  }\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::stringstream stream(string);\n    while (stream >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word = word + string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (auto c : string) {\n        if (c == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += c;\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::stringstream stream(string);\n    while (stream >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.length(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> result;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        result.push_back(word);\n    }\n    return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::stringstream ss(string);\n  std::string word;\n  while (ss >> word) {\n    list.push_back(word);\n  }\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::stringstream stream(string);\n    while (stream >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> list;\n  std::string word;\n  for (int i = 0; i < string.size(); i++) {\n    if (string[i] == ' ') {\n      list.push_back(word);\n      word = \"\";\n    } else {\n      word += string[i];\n    }\n  }\n  list.push_back(word);\n  return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "  std::vector<std::string> result;\n  std::stringstream ss(string);\n  std::string word;\n  while (ss >> word) {\n    result.push_back(word);\n  }\n  return result;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word;\n    std::stringstream stream(string);\n    while (stream >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while(ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string item;\n    while (std::getline(ss, item, ' ')) {\n        list.push_back(item);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;",
    "    std::vector<std::string> list;\n    std::string word = \"\";\n    for (int i = 0; i < string.size(); i++) {\n        if (string[i] == ' ') {\n            list.push_back(word);\n            word = \"\";\n        } else {\n            word += string[i];\n        }\n    }\n    list.push_back(word);\n    return list;",
    "    std::vector<std::string> list;\n    std::stringstream ss(string);\n    std::string word;\n    while (ss >> word) {\n        list.push_back(word);\n    }\n    return list;"
  ]
}
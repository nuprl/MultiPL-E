{
  "name": "mbpp_260_newman_prime",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the nth newman\u2013shanks\u2013williams prime number.\nlong newman_prime(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_260_newman_prime.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = newman_prime;\n    assert(candidate((3)) == (7));\n    assert(candidate((4)) == (17));\n    assert(candidate((5)) == (41));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long i = 1, j = 1, k = 1, count = 0;\n    while (count < n) {\n        i += 6 * j;\n        j += 6 * k;\n        k += 6 * j;\n        if (i % 5 != 0) {\n            count++;\n            if (count == n)\n                return i;\n        }\n        if (j % 5 != 0) {\n            count++;\n            if (count == n)\n                return j;\n        }\n        if (k % 5 != 0) {\n            count++;\n            if (count == n)\n                return k;\n        }\n    }\n    return 0;",
    "    long count = 1;\n    long i = 1;\n    while(count != n) {\n        i++;\n        if(i % 2 == 0) {\n            continue;\n        }\n        long j = 1;\n        while(j * j <= i) {\n            if(i % j == 0) {\n                break;\n            }\n            j++;\n        }\n        if(j * j > i) {\n            count++;\n        }\n    }\n    return i;",
    "    long count = 0;\n    long i = 1;\n    while (count < n) {\n        i++;\n        if (i % 2 == 0 || i % 3 == 0) {\n            continue;\n        }\n        long j = 1;\n        while (j * j < i) {\n            if (i % (6 * j - 1) == 0 || i % (6 * j + 1) == 0) {\n                break;\n            }\n            j++;\n        }\n        if (j * j > i) {\n            count++;\n        }\n    }\n    return i;",
    "    long i, j, k, l, m, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n",
    "    long i, j, k, count = 0;\n    for (i = 2; count < n; i++) {\n        for (j = 2; j < i; j++) {\n            if (i % j == 0) {\n                break;\n            }\n        }\n        if (j == i) {\n            count++;\n            if (count == n) {\n                return i;\n            }\n            for (k = 2; k < i; k++) {\n                if (i % k == 0) {\n                    break;\n                }\n            }\n            if (k == i) {\n                count++;\n                if (count == n) {\n                    return i;\n                }\n            }\n        }\n    }\n    return 0;",
    "    long i, j, k, l, m, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n",
    "    assert(n>0);\n    long p = 1;\n    long i = 1;\n    while (i <= n) {\n        p += 2;\n        if (p % 3 == 0) {\n            continue;\n        }\n        long j = 1;\n        while (j * j <= p) {\n            j += 2;\n            if (p % j == 0) {\n                break;\n            }\n        }\n        if (j * j > p) {\n            i++;\n        }\n    }\n    return p;",
    "    long count = 0;\n    long i = 2;\n    while (count < n) {\n        long j = 1;\n        long flag = 0;\n        while (j * j <= i) {\n            if (i % j == 0) {\n                flag = 1;\n                break;\n            }\n            j++;\n        }\n        if (flag == 0) {\n            count++;\n        }\n        i++;\n    }\n    return i - 1;",
    "    long i,j,k,l,m,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20,n21,n22,n23,n24,n25,n26,n27,n28,n29,n30,n31,n32,n33,n34,n35,n36,n37,n38,n39,n40,n41,n42,n43,n44,n45,n46,n47,n48,n49,n50,n51,n52,n53,n54,n55,n56,n57,n58,n59,n60,n61,n62,n63,n64,n65,n66,n67,n68,n69,n70,n71,n72,n73,n74,n75,n76,n77,n78,n79,n80,n81,n82,n83,n84,n85,n86,n87,n88,n89,n90,n91,n92,n93,n94,n95,n96,n97,n98,n99,n100,n101,n102,n103,n104,n105,n106,n107,n108,n109,n110,n111,n112,n113,n114,n115,n116,n117,n118,n119,n120,n121,n122,n123,n124,n125,n126,n127,n128,n129,n130,n131,n132,n133,n134,n135,n136,n137,n138,n139,n140,n141,n142,n143,n144,n145,n146,n147,n148,n149,n150,n151,n152,n153,n154,n155,n156,n157,n158,n159,n160,n161,n162,n163,n164,n165,n166,n",
    "    long prime = 1;\n    for (long i = 1; i <= n; i++) {\n        prime = (6 * i) - 1;\n        if (i % 2 == 0) {\n            prime = (6 * i) + 1;\n        }\n    }\n    return prime;",
    "    long i,j,k,l,m,nth_prime,count=0;\n    for(i=2;i<=n;i++) {\n        if(i%2==0) {\n            continue;\n        }\n        else {\n            count++;\n            if(count==n) {\n                nth_prime=i;\n            }\n        }\n    }\n    return nth_prime;",
    "\tlong p = 1;\n\tlong count = 1;\n\twhile (count < n) {\n\t\tp = (p * 2) + 1;\n\t\tif (p % 3 == 0) {\n\t\t\tp += 2;\n\t\t}\n\t\tlong i = 5;\n\t\tbool flag = true;\n\t\twhile (i * i <= p) {\n\t\t\tif (p % i == 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti += 2;\n\t\t\tif (p % i == 0) {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti += 4;\n\t\t}\n\t\tif (flag) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn p;",
    "    long i, j, k, l, m, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162, n163, n164, n165, n166, n",
    "    long long int i,j,k,l,m,nth,count=0,a[100000],b[100000],c[100000],d[100000],e[100000],f[100000],g[100000],h[100000],p,q,r,s,t,u,v,w,x,y,z;\n    for(i=2;i<=100000;i++)\n    {\n        if(a[i]==0)\n        {\n            for(j=2*i;j<=100000;j=j+i)\n            {\n                a[j]=1;\n            }\n        }\n    }\n    for(i=2;i<=100000;i++)\n    {\n        if(a[i]==0)\n        {\n            b[count]=i;\n            count++;\n        }\n    }\n    for(i=0;i<count;i++)\n    {\n        c[i]=b[i]*b[i];\n    }\n    for(i=0;i<count;i++)\n    {\n        d[i]=c[i]*b[i];\n    }\n    for(i=0;i<count;i++)\n    {\n        e[i]=d[i]*b[i];\n    }\n    for(i=0;i<count;i++)\n    {\n        f[i]=e[i]*b[i];\n    }\n    for(i=0;i<count;i++)\n    {\n        g[i]=f[i]*b[i];\n    }\n    for(i=0;i<count;i++)\n    {\n        h[i]=g[i]*b[i];\n    }\n    for(i=0;i<count;i++)\n    {\n        for(j=0;j<count;j++)\n        {\n            for(k=0;k<count;k++)\n            {\n                for(l=0;l<count;l++)\n                {\n                    for(m=0;m<count;m++)\n                    {\n                        for(nth=",
    "    long i, j, count = 0, s = 1, d, p = 1;\n    while (count < n) {\n        s = 1;\n        p = p + 2 * s;\n        while (1) {\n            d = (p - 1) / 2;\n            for (i = 2; i <= sqrt(d); i++) {\n                if (d % i == 0)\n                    break;\n            }\n            if (i > sqrt(d))\n                break;\n            s++;\n            p = p + 2 * s;\n        }\n        count++;\n    }\n    return p;",
    "    long i = 1, count = 0;\n    while (count < n) {\n        i++;\n        if (i % 2 != 0 && i % 3 != 0) {\n            long j = 5;\n            int flag = 1;\n            while (j * j <= i) {\n                if (i % j == 0 || i % (j + 2) == 0) {\n                    flag = 0;\n                    break;\n                }\n                j += 6;\n            }\n            if (flag)\n                count++;\n        }\n    }\n    return (i);",
    "    long i = 1;\n    long j = 1;\n    long k = 1;\n    long count = 1;\n    long prime = 3;\n    while (count < n) {\n        i = 6 * k - 1;\n        j = 6 * k + 1;\n        if (is_prime(i)) {\n            prime = i;\n            count++;\n        }\n        if (is_prime(j)) {\n            prime = j;\n            count++;\n        }\n        k++;\n    }\n    return prime;",
    "    long count = 0;\n    long i = 2;\n    while (count < n) {\n        if (is_prime(i) && is_prime((i - 1) / 2)) {\n            count++;\n        }\n        i++;\n    }\n    return i - 1;",
    "    if(n == 1) return 3;\n    long i = 1, j = 1, k = 1, p = 3;\n    while(i < n) {\n        j = 1;\n        while(j <= k) {\n            p += 2 * k * j;\n            if(is_prime(p)) {\n                i++;\n                if(i == n) return p;\n            }\n            j++;\n        }\n        k++;\n    }\n    return p;",
    "    long i, j, k, count = 0, p = 1;\n    while (count < n) {\n        p += 2;\n        for (i = 3; i * i <= p; i += 2) {\n            if (p % i == 0) {\n                break;\n            }\n        }\n        if (i * i > p) {\n            count++;\n        }\n    }\n    return p;"
  ]
}
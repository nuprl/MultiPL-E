{
  "name": "mbpp_292_find",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find quotient of two numbers (rounded down to the nearest integer).\nlong find(long n, long m) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = find;\n    assert(candidate((10), (3)) == (3));\n    assert(candidate((4), (2)) == (2));\n    assert(candidate((20), (5)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if (n == 0) {\n        return 0;\n    }\n    if (m == 0) {\n        return INT_MAX;\n    }\n    if (n < 0) {\n        return find(-n, m);\n    }\n    if (m < 0) {\n        return find(n, -m);\n    }\n    if (n < m) {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    // Write your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    return n/m;",
    "    return n / m;",
    "    if(n==0)\n        return 0;\n    if(n<0)\n        return -find(-n,m);\n    if(m==0)\n        return INT_MAX;\n    if(m<0)\n        return -find(n,-m);\n    long ans=0;\n    while(n>=m) {\n        n-=m;\n        ans++;\n    }\n    return ans;",
    "    return n/m;",
    "    if(n==0)\n        return 0;\n    if(n<m)\n        return 0;\n    else\n        return 1+find(n-m,m);",
    "    if (m == 0) {\n        return -1;\n    }\n    long quotient = 0;\n    long divisor = m;\n    long dividend = n;\n    while (divisor <= dividend) {\n        divisor <<= 1;\n    }\n    while (divisor >= m) {\n        quotient <<= 1;\n        if (divisor <= dividend) {\n            dividend -= divisor;\n            quotient += 1;\n        }\n        divisor >>= 1;\n    }\n    return quotient;",
    "    // Your code here\n    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    long quotient = 0;\n    long temp = 0;\n    for (long i = 31; i >= 0; i--) {\n        if (temp + (m << i) <= n) {\n            temp += m << i;\n            quotient |= 1LL << i;\n        }\n    }\n    return quotient;",
    "    return (n / m);",
    "    // Your code here\n    if(n<m){\n        return 0;\n    }\n    if(n==m){\n        return 1;\n    }\n    if(n>m){\n        return 1+find(n-m,m);\n    }",
    "    // Your code here\n    if(n<0)\n    {\n        n=n*-1;\n    }\n    if(m<0)\n    {\n        m=m*-1;\n    }\n    long q=n/m;\n    return q;",
    "    if(n<m)\n        return 0;\n    return 1+find(n-m,m);",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n < 0) {\n        return -1 + find(n + m, m);\n    }\n    return 1 + find(n - m, m);",
    "    return n / m;",
    "    // write your code here\n    // return the quotient\n    return (n/m);",
    "    long q = n / m;\n    if (n % m == 0) {\n        return q;\n    }\n    else {\n        return q - 1;\n    }",
    "    long q = n / m;\n    if (n % m == 0) {\n        return q;\n    }\n    else {\n        return q - 1;\n    }",
    "    // Your code here\n    long q = n/m;\n    return q;",
    "    return n/m;",
    "    // Your code here\n    return n/m;",
    "    return n/m;",
    "    // Write your code here\n    return n/m;",
    "    return n/m;",
    "    // Write your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    // Your code here\n    if(n<m)\n    return 0;\n    else\n    return 1+find(n-m,m);",
    "    if(n<m)\n        return 0;\n    return 1+find(n-m,m);",
    "    if(m==0)\n        return -1;\n    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    return n/m;",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n < 0) {\n        return -find(-n, m);\n    }\n    if (m < 0) {\n        return -find(n, -m);\n    }\n    if (n < m) {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    long q = 0;\n    while (n >= m) {\n        n -= m;\n        q++;\n    }\n    return q;",
    "    // Your code here\n    return n/m;",
    "    return n / m;",
    "    if (n == 0)\n        return 0;\n    if (n < 0)\n        return -find(-n, m);\n    if (m < 0)\n        return -find(n, -m);\n    long q = 0;\n    while (n >= m) {\n        n -= m;\n        q++;\n    }\n    return q;",
    "    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    return n/m;",
    "    if(n<m)\n        return 0;\n    else\n        return 1+find(n-m,m);",
    "    // Your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    assert(n>=0 && m>0);\n    return n/m;",
    "    return n/m;",
    "    if (n == 0) {\n        return 0;\n    }\n    long ans = find(n - m, m);\n    if (n < m) {\n        return ans;\n    }\n    return ans + 1;",
    "    assert(m > 0);\n    long q = 0;\n    long t = 0;\n    for (long b = long(1) << 31; b; b >>= 1) {\n        if (t + b <= n) {\n            t += b;\n            q |= b;\n        }\n    }\n    return q;",
    "    // write your code here\n    if(n<m)\n        return 0;\n    else if(n==m)\n        return 1;\n    else{\n        long q=1;\n        while(n>m){\n            n=n-m;\n            q++;\n        }\n        return q;\n    }",
    "    return n/m;",
    "    return n / m;",
    "    //Your code here\n    if(m==0)\n    return -1;\n    else\n    return n/m;",
    "    if(n==0)\n        return 0;\n    if(n<m)\n        return 0;\n    else\n        return 1+find(n-m,m);",
    "    // write your code here\n    // return floor(n/m);\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    return (n / m);",
    "    if(m==0)\n        return INT_MAX;\n    if(n==0)\n        return 0;\n    if(n<0 && m>0)\n        return -1*find(-1*n,m);\n    if(n>0 && m<0)\n        return -1*find(n,-1*m);\n    if(n<0 && m<0)\n        return find(-1*n,-1*m);\n    return 1+find(n-m,m);",
    "    return n/m;",
    "    // Your code here\n    return n/m;",
    "    // Your code here\n    if(m==0)\n    return -1;\n    else\n    return n/m;",
    "    return n/m;",
    "    // write your code here\n    // return n/m;\n    return floor(n/m);",
    "    if(n==0)\n        return 0;\n    if(n<m)\n        return 0;\n    return 1+find(n-m,m);",
    "    return n/m;",
    "    long q = n/m;\n    if(n%m == 0) {\n        return q;\n    }\n    else {\n        return q-1;\n    }",
    "    // Your code here\n    return n/m;",
    "    // Your code here\n    if(n<m)\n    return 0;\n    else\n    return 1+find(n-m,m);",
    "    // Write your code here\n    long q = n/m;\n    return q;",
    "    return n / m;",
    "    return n/m;",
    "    return n/m;",
    "    return n/m;",
    "    // Your code here\n    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    // Your code here\n    if(n<m)\n    return 0;\n    else\n    return 1+find(n-m,m);",
    "    // write your code here\n    if(n<m)\n        return 0;\n    else if(n==m)\n        return 1;\n    else\n        return 1+find(n-m,m);",
    "    return (n / m);",
    "    return (n / m);",
    "    // write your code here\n    // return n/m;\n    if(n<0 && m<0)\n        return (n/m);\n    else if(n>0 && m>0)\n        return (n/m);\n    else if(n<0 && m>0)\n        return (n/m);\n    else\n        return (n/m);",
    "    if (m == 0) {\n        return -1;\n    }\n    long count = 0;\n    while (n >= m) {\n        n = n - m;\n        count++;\n    }\n    return count;",
    "    if (n == 0)\n        return 0;\n    if (n < 0)\n        return -find(-n, m);\n    if (m < 0)\n        return -find(n, -m);\n    if (n < m)\n        return 0;\n    return 1 + find(n - m, m);",
    "    if (n < m) {\n        return 0;\n    }\n    long count = 1;\n    long sum = m;\n    while (sum + m <= n) {\n        sum += m;\n        count++;\n    }\n    return count;",
    "    return n/m;",
    "    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    return n/m;",
    "    // Your code here\n    return n/m;",
    "    assert(m != 0);\n    return n / m;",
    "    if(n==0)\n        return 0;\n    if(n<m)\n        return 0;\n    return 1+find(n-m,m);",
    "    return n / m;",
    "    // Your code here\n    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    return (n / m);",
    "    if (m == 0) {\n        return -1;\n    }\n    long q = 0;\n    while (n >= m) {\n        n = n - m;\n        q++;\n    }\n    return q;",
    "    // write your code here\n    // return n/m;\n    return floor(n/m);",
    "    return n / m;",
    "    if(n==0)\n        return 0;\n    if(n<0)\n        return -find(-n,m);\n    if(m<0)\n        return -find(n,-m);\n    if(n<m)\n        return 0;\n    return 1+find(n-m,m);",
    "    return n/m;",
    "    return n/m;",
    "    return n/m;",
    "    long q = n / m;\n    if (n % m == 0) {\n        return q;\n    }\n    else {\n        return q + 1;\n    }",
    "    // Your code here\n    return n/m;",
    "    assert(m != 0);\n    return n / m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    if(n==0)\n        return 0;\n    if(n<0)\n        return -1;\n    if(m==0)\n        return -1;\n    if(m<0)\n        return -1;\n    return n/m;",
    "    // Write your code here\n    return n/m;",
    "    if (n < 0) {\n        n = -n;\n    }\n    if (m < 0) {\n        m = -m;\n    }\n    if (n < m) {\n        return 0;\n    }\n    long count = 0;\n    while (n >= m) {\n        n = n - m;\n        count++;\n    }\n    return count;",
    "    if (n == 0)\n        return 0;\n    if (m == 0)\n        return INT_MAX;\n    if (n < m)\n        return 0;\n    long q = 1;\n    long t = m;\n    while (t < n) {\n        t <<= 1;\n        q <<= 1;\n    }\n    if (t > n) {\n        t >>= 1;\n        q >>= 1;\n    }\n    return q + find(n - t, m);",
    "    //write your code here\n    return n/m;",
    "    // Write your code here\n    long q = n/m;\n    return q;",
    "    long q = n/m;\n    if (n%m != 0) {\n        q = q-1;\n    }\n    return q;",
    "    return n/m;",
    "    return (n/m);",
    "    if (n == 0)\n        return 0;\n    if (n < 0)\n        return -find(-n, m);\n    if (m < 0)\n        return -find(n, -m);\n    if (n < m)\n        return 0;\n    return 1 + find(n - m, m);",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    if(n==0)\n        return 0;\n    if(n<m)\n        return 0;\n    if(n==m)\n        return 1;\n    return 1+find(n-m,m);",
    "    return (n / m);",
    "    long q = 0;\n    while (n >= m) {\n        n -= m;\n        q++;\n    }\n    return q;",
    "    // Write your code here\n    return n/m;",
    "\t// Write your code here\n\treturn n/m;",
    "    return n / m;",
    "    // Write your code here\n    if(m==0)\n        return -1;\n    if(n==0)\n        return 0;\n    if(n<0 && m<0)\n        return find(-n,-m);\n    if(n<0 && m>0)\n        return -find(-n,m);\n    if(n>0 && m<0)\n        return -find(n,-m);\n    if(n>=m)\n        return 1+find(n-m,m);\n    return 0;",
    "    assert(m != 0);\n    return n/m;",
    "    return (n/m);",
    "    return n/m;",
    "    return (n / m);",
    "    return (n / m);",
    "    // Your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    assert(m!=0);\n    if(n==0)\n        return 0;\n    if(n<0 && m<0)\n        return find(-n,-m);\n    if(n<0)\n        return -find(-n,m);\n    if(m<0)\n        return -find(n,-m);\n    long q = 0;\n    while(n>=m) {\n        n = n-m;\n        q++;\n    }\n    return q;",
    "    // Your code here\n    return n/m;",
    "    // write your code here\n    return n/m;",
    "    if(n == 0) {\n        return 0;\n    }\n    if(n < 0) {\n        n = -n;\n    }\n    if(m < 0) {\n        m = -m;\n    }\n    long ans = 0;\n    while(n >= m) {\n        n = n - m;\n        ans++;\n    }\n    return ans;",
    "    return n/m;",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n < 0) {\n        return -find(-n, m);\n    }\n    if (m < 0) {\n        return -find(n, -m);\n    }\n    if (n < m) {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n < 0 && m < 0) {\n        return find(-n, -m);\n    }\n    if (n < 0) {\n        return -find(-n, m);\n    }\n    if (m < 0) {\n        return -find(n, -m);\n    }\n    long q = 0;\n    while (n >= m) {\n        n -= m;\n        q++;\n    }\n    return q;",
    "    return n/m;",
    "    long q = 0;\n    while (n >= m) {\n        n -= m;\n        q++;\n    }\n    return q;",
    "    long quotient = 0;\n    long temp = 0;\n    for (long i = 31; i >= 0; i--) {\n        if (temp + (m << i) <= n) {\n            temp += m << i;\n            quotient |= 1LL << i;\n        }\n    }\n    return quotient;",
    "    assert(m!=0);\n    return n/m;",
    "    // Your code here\n    if(m==0)\n    {\n        return -1;\n    }\n    else\n    {\n        return n/m;\n    }",
    "    if(n==0)\n        return 0;\n    if(n<0)\n        return -1*find(-1*n,m);\n    if(m<0)\n        return -1*find(n,-1*m);\n    if(n<m)\n        return 0;\n    return 1+find(n-m,m);",
    "    return n/m;",
    "    if (n == 0)\n        return 0;\n    if (n < 0)\n        return -find(-n, m);\n    if (m < 0)\n        return -find(n, -m);\n    long q = 0;\n    while (n >= m) {\n        n -= m;\n        q++;\n    }\n    return q;",
    "    long q = n/m;\n    return q;",
    "    // Your code here\n    return n/m;",
    "    return n/m;",
    "    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    if(n < m)\n        return 0;\n    else if(n == m)\n        return 1;\n    else {\n        long q = 1;\n        long t = m;\n        while(t < n) {\n            t <<= 1;\n            q <<= 1;\n        }\n        if(t > n) {\n            t >>= 1;\n            q >>= 1;\n        }\n        return q + find(n - t, m);\n    }",
    "    if (n < m) {\n        return 0;\n    }\n    long count = 1;\n    long t = m;\n    while (t + t <= n) {\n        count = count + count;\n        t = t + t;\n    }\n    return count + find(n - t, m);",
    "    return n/m;",
    "    // Your code here\n    return (n/m);",
    "    if(n<m)\n        return 0;\n    long count = 1;\n    long sum = m;\n    while(sum+sum<=n) {\n        sum+=sum;\n        count+=count;\n    }\n    return count+find(n-sum, m);",
    "    return n/m;",
    "    return (n / m);",
    "    // Write your code here\n    long q = n/m;\n    return q;",
    "    if (n < m) {\n        return 0;\n    }\n    long count = 1;\n    long sum = m;\n    while (sum + m <= n) {\n        sum += m;\n        count++;\n    }\n    return count;",
    "    // Write your code here\n    return n/m;",
    "    // Your code here\n    return n/m;",
    "    return n/m;",
    "    if(n==0) return 0;\n    if(n<0) return -find(-n,m);\n    if(m<0) return -find(n,-m);\n    long count = 0;\n    while(n>=m) {\n        n-=m;\n        count++;\n    }\n    return count;",
    "    return n/m;",
    "    // write your code here\n    // return the quotient\n    if(n<m)\n        return 0;\n    else\n        return 1+find(n-m,m);",
    "    // write your code here\n    // return n/m;\n    return floor(n/m);",
    "    return n/m;",
    "    // write your code here\n    // return the quotient\n    return (n/m);",
    "    //write your code here\n    return n/m;",
    "    return n/m;",
    "    // Your code here\n    return n/m;",
    "    // write your code here\n    // return the quotient\n    return n/m;",
    "    return n/m;",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n < 0) {\n        return -find(-n, m);\n    }\n    if (m < 0) {\n        return -find(n, -m);\n    }\n    if (n < m) {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    return n/m;",
    "    // write your code here\n    // return the quotient\n    long q = n/m;\n    return q;",
    "    return (n / m);",
    "    return n/m;",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n < 0) {\n        return -find(-n, m);\n    }\n    if (m < 0) {\n        return -find(n, -m);\n    }\n    long q = 0;\n    while (n >= m) {\n        n -= m;\n        q++;\n    }\n    return q;",
    "    if(n<m)\n        return 0;\n    else if(n==m)\n        return 1;\n    else\n        return 1+find(n-m,m);",
    "    if (n < m) {\n        return 0;\n    }\n    long q = 1;\n    long t = m;\n    while (t < n) {\n        t <<= 1;\n        q <<= 1;\n    }\n    return q + find(n - t, m);",
    "    assert(m > 0);\n    return n / m;",
    "    // Your code here\n    long q = n/m;\n    return q;",
    "    // write your code here\n    return n/m;",
    "    return (n / m);",
    "    return n/m;",
    "    if (n == 0) {\n        return 0;\n    }\n    if (n < 0) {\n        return -1 + find(n + m, m);\n    }\n    return 1 + find(n - m, m);",
    "\tif (n < m) {\n\t\treturn 0;\n\t}\n\tlong q = 1;\n\tlong t = m;\n\twhile (t < n) {\n\t\tt <<= 1;\n\t\tq <<= 1;\n\t}\n\tif (t > n) {\n\t\tt >>= 1;\n\t\tq >>= 1;\n\t}\n\treturn q + find(n - t, m);",
    "    // write your code here\n    // return the quotient\n    if(m==0)\n        return -1;\n    else if(n==0)\n        return 0;\n    else if(n<0 && m<0)\n        return find(-n,-m);\n    else if(n<0)\n        return -find(-n,m);\n    else if(m<0)\n        return -find(n,-m);\n    else if(n<m)\n        return 0;\n    else\n        return 1+find(n-m,m);",
    "    return n/m;",
    "    // write your code here\n    // return n/m;\n    return floor(n/m);",
    "    // Write your code here\n    return n/m;",
    "    return n/m;",
    "    return n/m;",
    "    // Write your code here\n    long q = n/m;\n    return q;",
    "    return n / m;"
  ]
}
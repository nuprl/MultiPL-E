{
  "name": "mbpp_14_find_Volume",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the volume of a triangular prism.\nlong find_Volume(long l, long b, long h) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_14_find_Volume.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = find_Volume;\n    assert(candidate((10), (8), (6)) == (240));\n    assert(candidate((3), (2), (2)) == (6));\n    assert(candidate((1), (2), (1)) == (1));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return l*b*h;",
    "  return l * b * h;",
    "  long volume = l * b * h;\n  return volume;",
    "  long volume = l * b * h;\n  return volume;",
    "    return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    // Write your code here\n    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "  return l*b*h;",
    "    return l*b*h;",
    "  long vol = l * b * h;\n  return vol;",
    "  long volume = l * b * h;\n  return volume;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l*b*h;",
    "  return l * b * h;",
    "    return (l * b * h);",
    "    return (l*b*h);",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "  long volume = l * b * h;\n  return volume;",
    "    long volume = l * b * h;\n    return volume;",
    "  long volume = l * b * h;\n  return volume;",
    "    return l*b*h;",
    "    return l*b*h;",
    "  return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "  return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "  return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    // Write your code here\n    return l*b*h;",
    "    return l*b*h;",
    "    long area = l * b;\n    long volume = area * h;\n    return volume;",
    "    long volume = l * b * h;\n    return volume;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return (l*b*h);",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    long volume = l*b*h;\n    return volume;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "  return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return (l * b * h);",
    "  return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    return (l*b*h);",
    "    long volume = l*b*h;\n    return volume;",
    "  return l*b*h;",
    "    return l*b*h;",
    "  return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l * b * h;",
    "    return l*b*h;",
    "  return l*b*h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l * b * h;",
    "    return l*b*h;",
    "  return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "  assert(l>0 && b>0 && h>0);\n  return l*b*h;",
    "    return l*b*h;",
    "  return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return (l * b * h);",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "  return l * b * h;",
    "    return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l * b * h;",
    "    return l * b * h;",
    "    long volume = l * b * h;\n    return volume;",
    "    return l * b * h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return l*b*h;",
    "    return (l * b * h);",
    "    return l * b * h;",
    "    return l * b * h;"
  ]
}
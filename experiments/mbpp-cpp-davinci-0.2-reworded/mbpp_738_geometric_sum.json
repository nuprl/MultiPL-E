{
  "name": "mbpp_738_geometric_sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/cppthon-exercises/data-structures-and-algorithms/cppthon-recursion-exercise-9.php\nfloat geometric_sum(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = geometric_sum;\n    assert(candidate((7)) == (1.9921875));\n    assert(candidate((4)) == (1.9375));\n    assert(candidate((8)) == (1.99609375));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if(n==0)\n        return 1;\n    return 1/pow(2,n)+geometric_sum(n-1);",
    "    if(n == 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n-1);",
    "\tif (n == 0) {\n\t\treturn 1;\n\t}\n\treturn 1 + (1 / pow(2, n)) + geometric_sum(n - 1);",
    "    if(n==0)\n        return 1;\n    else\n        return (1/pow(2,n)) + geometric_sum(n-1);",
    "    if(n==0)\n        return 1;\n    return 1/pow(2,n)+geometric_sum(n-1);",
    "    if(n==0)\n        return 1;\n    return 1/pow(2,n)+geometric_sum(n-1);",
    "    if(n==0)\n        return 1;\n    return 1.0/pow(2,n)+geometric_sum(n-1);",
    "    if(n==0)\n        return 1;\n    else\n        return (1/pow(2,n)) + geometric_sum(n-1);",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + (1 / pow(2, n)) + geometric_sum(n - 1);",
    "    if(n==0) {\n        return 1;\n    }\n    return 1/pow(2,n)+geometric_sum(n-1);",
    "    if(n==0)\n        return 1;\n    else\n        return (1/pow(2,n)) + geometric_sum(n-1);",
    "    if(n == 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + (1 / pow(2, n)) + geometric_sum(n - 1);",
    "    if(n==0)\n        return 1;\n    else\n        return 1/pow(2,n)+geometric_sum(n-1);",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + (n * geometric_sum(n - 1));",
    "    if(n==0)\n        return 1;\n    else\n        return (1/pow(2,n))+geometric_sum(n-1);",
    "\tif (n == 0) {\n\t\treturn 1;\n\t}\n\treturn (1 / (pow(2, n))) + geometric_sum(n - 1);",
    "    if (n == 0) {\n        return 1;\n    }\n    return (1 / pow(2, n)) + geometric_sum(n - 1);",
    "    if (n == 0) {\n        return 1;\n    }\n    return (1 / pow(2, n)) + geometric_sum(n - 1);",
    "    if (n == 0) {\n        return 1;\n    }\n    return 1 + n * geometric_sum(n - 1);"
  ]
}
{
  "name": "mbpp_470_add_pairwise",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the pairwise addition of the neighboring elements of the given tuple.\nlong add_pairwise(long test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_470_add_pairwise.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = add_pairwise;\n    assert(candidate(std::make_tuple(1, 5, 7, 8, 10)) == std::make_tuple(6, 12, 15, 18));\n    assert(candidate(std::make_tuple(2, 6, 8, 9, 11)) == std::make_tuple(8, 14, 17, 20));\n    assert(candidate(std::make_tuple(3, 7, 9, 10, 12)) == std::make_tuple(10, 16, 19, 22));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0;\n    long tup = test_tup;\n    long last_digit = tup % 10;\n    tup = tup / 10;\n    while (tup != 0) {\n        long curr_digit = tup % 10;\n        sum += curr_digit + last_digit;\n        last_digit = curr_digit;\n        tup = tup / 10;\n    }\n    return sum;",
    "    long sum = 0;\n    long tup = test_tup;\n    while (tup != 0) {\n        long first = tup % 10;\n        tup /= 10;\n        long second = tup % 10;\n        tup /= 10;\n        sum += first + second;\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while(temp) {\n        sum += temp%10;\n        temp /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while(temp != 0) {\n        sum += temp%10;\n        temp /= 10;\n        if(temp != 0) {\n            sum += temp%10;\n            temp /= 10;\n            temp /= 10;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long tup = test_tup;\n    while (tup > 0) {\n        sum += tup % 10;\n        tup /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while (temp > 0) {\n        long digit = temp % 10;\n        sum += digit;\n        temp /= 10;\n        digit = temp % 10;\n        sum += digit;\n        temp /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while(temp != 0) {\n        sum += temp%10;\n        temp /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while(temp > 0) {\n        sum += temp%10;\n        temp /= 10;\n        temp /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (test_tup) {\n        sum += test_tup % 10;\n        test_tup /= 100;\n    }\n    return sum;",
    "    int sum = 0;\n    int i = 0;\n    while (test_tup) {\n        if (i % 2 == 0) {\n            sum += test_tup % 10;\n        }\n        test_tup /= 10;\n        i++;\n    }\n    return sum;",
    "    long sum = 0;\n    long tup = test_tup;\n    while (tup) {\n        sum += tup % 10;\n        tup /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    long tup = test_tup;\n    while (tup) {\n        sum += tup % 10;\n        tup /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    for(int i=0; i<test_tup.size(); i++) {\n        sum += test_tup[i] + test_tup[i+1];\n    }\n    return sum;",
    "    int sum = 0;\n    int i = 0;\n    while(test_tup != 0) {\n        int rem = test_tup % 10;\n        test_tup = test_tup / 10;\n        if(i % 2 == 0) {\n            sum += rem;\n        }\n        i++;\n    }\n    return sum;",
    "    long sum = 0;\n    long x = test_tup;\n    while (x) {\n        sum += x%10;\n        x /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    long tup = test_tup;\n    while (tup) {\n        sum += tup % 10;\n        tup /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while(temp) {\n        sum += temp%10;\n        temp = temp/100;\n    }\n    return sum;",
    "    int i,j;\n    long sum=0;\n    for(i=0;i<4;i++)\n    {\n        for(j=0;j<4;j++)\n        {\n            if(i==j)\n            {\n                continue;\n            }\n            else\n            {\n                sum=sum+test_tup[i]+test_tup[j];\n            }\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while (temp != 0) {\n        sum += temp%10;\n        temp /= 100;\n    }\n    return sum;",
    "    long sum = 0;\n    long temp = test_tup;\n    while(temp) {\n        sum += temp%10;\n        temp /= 10;\n        sum += temp%10;\n        temp /= 10;\n    }\n    return sum;"
  ]
}
{
  "name": "mbpp_131_reverse_vowels",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to reverse only the vowels of a given string (where y is not a vowel).\nstd::string reverse_vowels(std::string str1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = reverse_vowels;\n    assert(candidate((\"Python\")) == (\"Python\"));\n    assert(candidate((\"USA\")) == (\"ASU\"));\n    assert(candidate((\"ab\")) == (\"ab\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string result = \"\";\n    std::stack<char> s;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            s.push(str1[i]);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            result += s.top();\n            s.pop();\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    int j = str2.length() - 1;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j--;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string str2;\n    std::vector<char> vowels;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            vowels.push_back(str1[i]);\n        }\n    }\n    int j = vowels.size() - 1;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2 += vowels[j];\n            j--;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    std::vector<int> v;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            v.push_back(i);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[v.back()];\n            v.pop_back();\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    std::stack<char> st;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            st.push(str1[i]);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += st.top();\n            st.pop();\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string str3 = \"\";\n    std::string str4 = \"\";\n    std::string str5 = \"\";\n    std::string str6 = \"\";\n    std::string str7 = \"\";\n    std::string str8 = \"\";\n    std::string str9 = \"\";\n    std::string str10 = \"\";\n    std::string str11 = \"\";\n    std::string str12 = \"\";\n    std::string str13 = \"\";\n    std::string str14 = \"\";\n    std::string str15 = \"\";\n    std::string str16 = \"\";\n    std::string str17 = \"\";\n    std::string str18 = \"\";\n    std::string str19 = \"\";\n    std::string str20 = \"\";\n    std::string str21 = \"\";\n    std::string str22 = \"\";\n    std::string str23 = \"\";\n    std::string str24 = \"\";\n    std::string str25 = \"\";\n    std::string str26 = \"\";\n    std::string str27 = \"\";\n    std::string str28 = \"\";\n    std::string str29 = \"\";\n    std::string str30 = \"\";\n    std::string str31 = \"\";\n    std::string str32 = \"\";\n    std::string str33 = \"\";\n    std::string str34 = \"\";\n    std::string str35 = \"\";\n    std::string str36 = \"\";\n    std::string str37 = \"\";\n    std::string str38 = \"\";\n    std::string str39 = \"\";\n    std::string str40 = \"\";\n    std::string str41 = \"\";\n    std::string str42 = \"\";\n    std::string str43 = \"\";\n    std::string str44 = \"\";\n    std::string str45 = \"\";\n    std::string str46 = \"\";\n    std::string str47 = \"\";\n    std::string str48 = \"\";\n    std::string str49 = \"\";\n    std::string str50 = \"\";\n    std::string str51 = \"\";\n    std::string str52 = \"\";\n   ",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string result = \"\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) != std::string::npos && vowels.find(str1[j]) != std::string::npos) {\n            std::swap(str1[i], str1[j]);\n            i++;\n            j--;\n        }\n        else if (vowels.find(str1[i]) != std::string::npos) {\n            j--;\n        }\n        else if (vowels.find(str1[j]) != std::string::npos) {\n            i++;\n        }\n        else {\n            i++;\n            j--;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if(vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length()-1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    std::stack<char> s;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            s.push(str1[i]);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2.push_back(s.top());\n            s.pop();\n        } else {\n            str2.push_back(str1[i]);\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int len = str1.length();\n    for(int i=0;i<len;i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(),str2.end());\n    int j=0;\n    for(int i=0;i<len;i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    std::stack<char> st;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            st.push(str1[i]);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += st.top();\n            st.pop();\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::vector<char> vowels;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            vowels.push_back(str1[i]);\n        }\n    }\n    int j = vowels.size() - 1;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2 += vowels[j];\n            j--;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0, j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j++];\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int n = str1.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        while (i < j && vowels.find(str1[i]) == std::string::npos) {\n            i++;\n        }\n        while (i < j && vowels.find(str1[j]) == std::string::npos) {\n            j--;\n        }\n        if (i < j) {\n            std::swap(str1[i], str1[j]);\n            i++;\n            j--;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    int i = 0, j = str1.length() - 1;\n    while (i < j) {\n        while (i < j && !is_vowel(str1[i])) {\n            str2 += str1[i];\n            i++;\n        }\n        while (i < j && !is_vowel(str1[j])) {\n            j--;\n        }\n        if (i < j) {\n            str2 += str1[j];\n            j--;\n        }\n    }\n    if (i == j) {\n        str2 += str1[i];\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string str2 = \"\";\n    for(int i=0;i<str1.length();i++) {\n        if(vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    std::reverse(str2.begin(),str2.end());\n    int j = 0;\n    for(int i=0;i<str1.length();i++) {\n        if(vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    std::stack<char> s;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            s.push(str1[i]);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += s.top();\n            s.pop();\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if(vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::stack<char> s;\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            s.push(str1[i]);\n        }\n    }\n    for(int i = 0; i < str1.length(); i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            str2 += s.top();\n            s.pop();\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.size() - 1;\n    while(i < j) {\n        if(vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if(vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    std::vector<int> v;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            v.push_back(i);\n        }\n    }\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[v[v.size() - j - 1]];\n            j++;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        while(i < j && vowels.find(str1[i]) == std::string::npos) {\n            i++;\n        }\n        while(i < j && vowels.find(str1[j]) == std::string::npos) {\n            j--;\n        }\n        if(i < j) {\n            std::swap(str1[i], str1[j]);\n            i++;\n            j--;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int j=0;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]=='a'||str1[i]=='e'||str1[i]=='i'||str1[i]=='o'||str1[i]=='u'||str1[i]=='A'||str1[i]=='E'||str1[i]=='I'||str1[i]=='O'||str1[i]=='U') {\n            str2[j]=str1[i];\n            j++;\n        }\n    }\n    j--;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]=='a'||str1[i]=='e'||str1[i]=='i'||str1[i]=='o'||str1[i]=='u'||str1[i]=='A'||str1[i]=='E'||str1[i]=='I'||str1[i]=='O'||str1[i]=='U') {\n            str1[i]=str2[j];\n            j--;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = str1;\n    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str2[i], str2[j]);\n        i++;\n        j--;\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::vector<char> v;\n    std::vector<char>::iterator it;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            v.push_back(str1[i]);\n        }\n    }\n    it = v.end();\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2 += *it;\n            it--;\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n        } else if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n        } else {\n            std::swap(str1[i], str1[j]);\n            i++;\n            j--;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "\tstd::string str2 = \"\";\n\tstd::string vowels = \"aeiouAEIOU\";\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (vowels.find(str1[i]) != std::string::npos) {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\tstd::reverse(str2.begin(), str2.end());\n\tint j = 0;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (vowels.find(str1[i]) != std::string::npos) {\n\t\t\tstr1[i] = str2[j];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0, j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string str3 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2 += str1[i];\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str3 += str2[j];\n            j++;\n        } else {\n            str3 += str1[i];\n        }\n    }\n    return str3;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        while (i < j && !is_vowel(str1[i])) {\n            i++;\n        }\n        while (i < j && !is_vowel(str1[j])) {\n            j--;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if(vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string str2 = str1;\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str2[i] = str1[j];\n                str2[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    int j = str2.length() - 1;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j--;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    std::stack<char> s;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            s.push(str1[i]);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += s.top();\n            s.pop();\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "\tstd::string vowels = \"aeiouAEIOU\";\n\tint i = 0;\n\tint j = str1.length() - 1;\n\twhile (i < j) {\n\t\tif (vowels.find(str1[i]) != std::string::npos && vowels.find(str1[j]) != std::string::npos) {\n\t\t\tstd::swap(str1[i], str1[j]);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t\telse if (vowels.find(str1[i]) != std::string::npos) {\n\t\t\tj--;\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            str2 += str1[i];\n            i++;\n        } else if (vowels.find(str1[j]) == std::string::npos) {\n            str2 += str1[j];\n            j--;\n        } else {\n            str2 += str1[j];\n            j--;\n            i++;\n        }\n    }\n    if (i == j) {\n        str2 += str1[i];\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n        } else if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n        } else {\n            std::swap(str1[i], str1[j]);\n            i++;\n            j--;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length()-1;\n    while(i<j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i],str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string str3 = \"\";\n    std::string str4 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            str2 = str2 + str1[i];\n        }\n        else {\n            str3 = str3 + str1[i];\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            str4 = str4 + str2[0];\n            str2.erase(str2.begin() + 0);\n        }\n        else {\n            str4 = str4 + str3[0];\n            str3.erase(str3.begin() + 0);\n        }\n    }\n    return str4;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            str2 += str1[i];\n            i++;\n        } else if (vowels.find(str1[j]) == std::string::npos) {\n            str2 += str1[j];\n            j--;\n        } else {\n            str2 += str1[j];\n            j--;\n            i++;\n        }\n    }\n    if (i == j) {\n        str2 += str1[i];\n    }\n    return str2;",
    "    std::string str2;\n    std::string str3;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str3.push_back(str2[j]);\n            j++;\n        }\n        else {\n            str3.push_back(str1[i]);\n        }\n    }\n    return str3;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if(vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string result = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            result += str1[i];\n        }\n    }\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            result += vowels[vowels.length() - 1 - j];\n            j++;\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0, j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if(vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "  std::string vowels = \"aeiou\";\n  int i = 0;\n  int j = str1.length() - 1;\n  while (i < j) {\n    while (i < j && vowels.find(str1[i]) == std::string::npos) {\n      i++;\n    }\n    while (i < j && vowels.find(str1[j]) == std::string::npos) {\n      j--;\n    }\n    if (i < j) {\n      std::swap(str1[i], str1[j]);\n      i++;\n      j--;\n    }\n  }\n  return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n        } else if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n        } else {\n            std::swap(str1[i], str1[j]);\n            i++;\n            j--;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "\tint i = 0;\n\tint j = str1.length() - 1;\n\twhile (i < j) {\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n\t\t\tif (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n\t\t\t\tstd::swap(str1[i], str1[j]);\n\t\t\t\ti++;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ti++;\n\t\t}\n\t}\n\treturn str1;",
    "    std::string vowels = \"aeiou\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        while(vowels.find(str1[i]) == std::string::npos && i < j) {\n            i++;\n        }\n        while(vowels.find(str1[j]) == std::string::npos && i < j) {\n            j--;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = str1;\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str2[i], str2[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str2;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]=='a'||str1[i]=='e'||str1[i]=='i'||str1[i]=='o'||str1[i]=='u'||str1[i]=='A'||str1[i]=='E'||str1[i]=='I'||str1[i]=='O'||str1[i]=='U') {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(),str2.end());\n    int j=0;\n    for(int i=0;i<str1.length();i++) {\n        if(str1[i]=='a'||str1[i]=='e'||str1[i]=='i'||str1[i]=='o'||str1[i]=='u'||str1[i]=='A'||str1[i]=='E'||str1[i]=='I'||str1[i]=='O'||str1[i]=='U') {\n            str1[i]=str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "\tstd::string str2;\n\tstd::stack<char> st;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n\t\t\tst.push(str1[i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n\t\t\tstr2.push_back(st.top());\n\t\t\tst.pop();\n\t\t}\n\t\telse {\n\t\t\tstr2.push_back(str1[i]);\n\t\t}\n\t}\n\treturn str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string str3;\n    std::string str4;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            str2.push_back(str1[i]);\n        }\n        else {\n            str3.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            str4.push_back(str2[0]);\n            str2.erase(str2.begin());\n        }\n        else {\n            str4.push_back(str3[0]);\n            str3.erase(str3.begin());\n        }\n    }\n    return str4;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length()-1;\n    while(i<j) {\n        if(str1[i]=='a' || str1[i]=='e' || str1[i]=='i' || str1[i]=='o' || str1[i]=='u' || str1[i]=='A' || str1[i]=='E' || str1[i]=='I' || str1[i]=='O' || str1[i]=='U') {\n            if(str1[j]=='a' || str1[j]=='e' || str1[j]=='i' || str1[j]=='o' || str1[j]=='u' || str1[j]=='A' || str1[j]=='E' || str1[j]=='I' || str1[j]=='O' || str1[j]=='U') {\n                std::swap(str1[i],str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "  std::string vowels = \"aeiouAEIOU\";\n  int i = 0;\n  int j = str1.length()-1;\n  while (i < j) {\n    if (vowels.find(str1[i]) == std::string::npos) {\n      i++;\n      continue;\n    }\n    if (vowels.find(str1[j]) == std::string::npos) {\n      j--;\n      continue;\n    }\n    std::swap(str1[i], str1[j]);\n    i++;\n    j--;\n  }\n  return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int len = str1.length();\n    for(int i=0; i<len; i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2.push_back(str1[i]);\n        }\n    }\n    int len2 = str2.length();\n    int j = len2-1;\n    for(int i=0; i<len; i++) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str1[i] = str2[j];\n            j--;\n        }\n    }\n    return str1;",
    "    std::string str2 = str1;\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str2[i] = str1[j];\n                str2[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    std::vector<char> v;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            v.push_back(str1[i]);\n        }\n    }\n    int j = v.size() - 1;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += v[j];\n            j--;\n        } else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    std::string str2 = \"\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.size() - 1;\n    while(i < j) {\n        if(str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if(str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    int i = 0, j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "\tstd::string str2;\n\tstd::stack<char> s;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n\t\t\ts.push(str1[i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n\t\t\tstr2 += s.top();\n\t\t\ts.pop();\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "\tstd::string str2 = \"\";\n\tstd::string vowels = \"aeiouAEIOU\";\n\tstd::stack<char> s;\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (vowels.find(str1[i]) != std::string::npos) {\n\t\t\ts.push(str1[i]);\n\t\t}\n\t}\n\tfor (int i = 0; i < str1.length(); i++) {\n\t\tif (vowels.find(str1[i]) != std::string::npos) {\n\t\t\tstr2 += s.top();\n\t\t\ts.pop();\n\t\t}\n\t\telse {\n\t\t\tstr2 += str1[i];\n\t\t}\n\t}\n\treturn str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2.insert(j, 1, str1[i]);\n            j++;\n        }\n    }\n    j = str2.length() - 1;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j--;\n        }\n    }\n    return str1;",
    "    // Write your code here\n    int i=0;\n    int j=str1.length()-1;\n    while(i<j){\n        if(str1[i]=='a' || str1[i]=='e' || str1[i]=='i' || str1[i]=='o' || str1[i]=='u'){\n            if(str1[j]=='a' || str1[j]=='e' || str1[j]=='i' || str1[j]=='o' || str1[j]=='u'){\n                char temp=str1[i];\n                str1[i]=str1[j];\n                str1[j]=temp;\n                i++;\n                j--;\n            }\n            else{\n                j--;\n            }\n        }\n        else{\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string str3 = \"\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2 += str1[i];\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str3 += str2[j];\n            j++;\n        }\n        else {\n            str3 += str1[i];\n        }\n    }\n    return str3;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiouAEIOU\";\n    std::vector<int> indices;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            indices.push_back(i);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[indices.back()];\n            indices.pop_back();\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int n = str1.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string str2;\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int i = 0;\n    while (i < str1.length()) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str2.push_back(str1[i]);\n        }\n        i++;\n    }\n    i = 0;\n    int j = str2.length() - 1;\n    while (i < str1.length()) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            str1[i] = str2[j];\n            j--;\n        }\n        i++;\n    }\n    return str1;",
    "    std::string str2;\n    std::string str3;\n    std::string str4;\n    std::string str5;\n    std::string str6;\n    std::string str7;\n    std::string str8;\n    std::string str9;\n    std::string str10;\n    std::string str11;\n    std::string str12;\n    std::string str13;\n    std::string str14;\n    std::string str15;\n    std::string str16;\n    std::string str17;\n    std::string str18;\n    std::string str19;\n    std::string str20;\n    std::string str21;\n    std::string str22;\n    std::string str23;\n    std::string str24;\n    std::string str25;\n    std::string str26;\n    std::string str27;\n    std::string str28;\n    std::string str29;\n    std::string str30;\n    std::string str31;\n    std::string str32;\n    std::string str33;\n    std::string str34;\n    std::string str35;\n    std::string str36;\n    std::string str37;\n    std::string str38;\n    std::string str39;\n    std::string str40;\n    std::string str41;\n    std::string str42;\n    std::string str43;\n    std::string str44;\n    std::string str45;\n    std::string str46;\n    std::string str47;\n    std::string str48;\n    std::string str49;\n    std::string str50;\n    std::string str51;\n    std::string str52;\n    std::string str53;\n    std::string str54;\n    std::string str55;\n    std::string str56;\n    std::string str57;\n    std::string str58;\n    std::string str59;\n    std::string str60;\n    std::string str61;\n    std::string str62;\n    std::string str63;\n    std::string str64;\n    std::string str65;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string str2 = str1;\n    int i = 0, j = str1.size() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str2[i], str2[j]);\n        i++;\n        j--;\n    }\n    return str2;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int n = str1.length();\n    int i = 0;\n    int j = n - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n        }\n        else if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n        }\n        else {\n            std::swap(str1[i], str1[j]);\n            i++;\n            j--;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                str2[i] = str1[j];\n                str2[j] = str1[i];\n                i++;\n                j--;\n            }\n            else {\n                str2[j] = str1[j];\n                j--;\n            }\n        }\n        else {\n            str2[i] = str1[i];\n            i++;\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    for(int i=0; i<str1.length(); i++) {\n        if(vowels.find(str1[i]) != std::string::npos) {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for(int i=0; i<str1.length(); i++) {\n        if(vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i=0;\n    int j=str1.length()-1;\n    while(i<j) {\n        if(str1[i]=='a' || str1[i]=='e' || str1[i]=='i' || str1[i]=='o' || str1[i]=='u') {\n            if(str1[j]=='a' || str1[j]=='e' || str1[j]=='i' || str1[j]=='o' || str1[j]=='u') {\n                std::swap(str1[i],str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2 = \"\";\n    std::string vowels = \"aeiou\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string str2 = \"\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            str2 += str1[i];\n            i++;\n        } else if (vowels.find(str1[j]) == std::string::npos) {\n            str2 += str1[j];\n            j--;\n        } else {\n            str2 += str1[j];\n            j--;\n            i++;\n        }\n    }\n    if (i == j) {\n        str2 += str1[i];\n    }\n    return str2;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string str2 = \"\";\n    for (int i = 0; i < str1.size(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2 += str1[i];\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.size(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::stack<char> s;\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            s.push(str1[i]);\n        }\n    }\n    for (int i = 0; i < str1.length(); i++) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            str2 += s.top();\n            s.pop();\n        }\n        else {\n            str2 += str1[i];\n        }\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str2.push_back(str1[i]);\n        }\n    }\n    std::reverse(str2.begin(), str2.end());\n    int j = 0;\n    for (int i = 0; i < str1.length(); i++) {\n        if (vowels.find(str1[i]) != std::string::npos) {\n            str1[i] = str2[j];\n            j++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.size() - 1;\n    while (i < j) {\n        while (i < j && vowels.find(str1[i]) == std::string::npos) {\n            str2.push_back(str1[i]);\n            i++;\n        }\n        while (i < j && vowels.find(str1[j]) == std::string::npos) {\n            str2.push_back(str1[j]);\n            j--;\n        }\n        if (i < j) {\n            str2.push_back(str1[j]);\n            str2.push_back(str1[i]);\n            i++;\n            j--;\n        }\n    }\n    if (i == j) {\n        str2.push_back(str1[i]);\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while(i < j) {\n        if(vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if(vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            i++;\n            continue;\n        }\n        if (vowels.find(str1[j]) == std::string::npos) {\n            j--;\n            continue;\n        }\n        std::swap(str1[i], str1[j]);\n        i++;\n        j--;\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string str2;\n    std::string::iterator it1 = str1.begin();\n    std::string::iterator it2 = str1.end() - 1;\n    while(it1 < it2) {\n        if(!is_vowel(*it1)) {\n            str2.push_back(*it1);\n            it1++;\n        }\n        else if(!is_vowel(*it2)) {\n            str2.push_back(*it2);\n            it2--;\n        }\n        else {\n            str2.push_back(*it2);\n            it2--;\n            it1++;\n        }\n    }\n    if(it1 == it2) {\n        str2.push_back(*it1);\n    }\n    return str2;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i=0;\n    int j=str1.length()-1;\n    while(i<j) {\n        if(str1[i]=='a'||str1[i]=='e'||str1[i]=='i'||str1[i]=='o'||str1[i]=='u'||str1[i]=='A'||str1[i]=='E'||str1[i]=='I'||str1[i]=='O'||str1[i]=='U') {\n            if(str1[j]=='a'||str1[j]=='e'||str1[j]=='i'||str1[j]=='o'||str1[j]=='u'||str1[j]=='A'||str1[j]=='E'||str1[j]=='I'||str1[j]=='O'||str1[j]=='U') {\n                char temp=str1[i];\n                str1[i]=str1[j];\n                str1[j]=temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    std::string vowels = \"aeiouAEIOU\";\n    std::string result = \"\";\n    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (vowels.find(str1[i]) == std::string::npos) {\n            result += str1[i];\n            i++;\n        }\n        else if (vowels.find(str1[j]) == std::string::npos) {\n            result += str1[j];\n            j--;\n        }\n        else {\n            result += str1[j];\n            j--;\n            i++;\n        }\n    }\n    return result;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u') {\n                char temp = str1[i];\n                str1[i] = str1[j];\n                str1[j] = temp;\n                i++;\n                j--;\n            }\n            else {\n                j--;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    return str1;",
    "    int i = 0;\n    int j = str1.length() - 1;\n    while (i < j) {\n        if (str1[i] == 'a' || str1[i] == 'e' || str1[i] == 'i' || str1[i] == 'o' || str1[i] == 'u' || str1[i] == 'A' || str1[i] == 'E' || str1[i] == 'I' || str1[i] == 'O' || str1[i] == 'U') {\n            if (str1[j] == 'a' || str1[j] == 'e' || str1[j] == 'i' || str1[j] == 'o' || str1[j] == 'u' || str1[j] == 'A' || str1[j] == 'E' || str1[j] == 'I' || str1[j] == 'O' || str1[j] == 'U') {\n                std::swap(str1[i], str1[j]);\n                i++;\n                j--;\n            } else {\n                j--;\n            }\n        } else {\n            i++;\n        }\n    }\n    return str1;"
  ]
}
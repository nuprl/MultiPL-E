{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the maximum difference between any two elements in a given vector.\nlong max_Abs_Diff(long arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = max_Abs_Diff;\n    assert(candidate(std::make_tuple(2, 1, 5, 3)) == (4));\n    assert(candidate(std::make_tuple(9, 3, 2, 5, 1)) == (8));\n    assert(candidate(std::make_tuple(3, 2, 1)) == (2));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max = 0;\n    for(int i = 0; i < arr.size(); i++) {\n        for(int j = i + 1; j < arr.size(); j++) {\n            if(abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_ele = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_ele > max_diff)\n            max_diff = arr[i] - min_ele;\n        if (arr[i] < min_ele)\n            min_ele = arr[i];\n    }\n    return max_diff;",
    "    long max = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max) {\n                max = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max;",
    "    long max_diff = 0;\n    for(int i=0; i<arr.size(); i++) {\n        for(int j=i+1; j<arr.size(); j++) {\n            if(arr[i] - arr[j] > max_diff) {\n                max_diff = arr[i] - arr[j];\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    long size = arr.size();\n    for (int i = 1; i < size; i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i+1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        max_diff = max(max_diff, arr[i] - min_element);\n        min_element = min(min_element, arr[i]);\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    long size = arr.size();\n    for(int i = 1; i < size; i++) {\n        if(arr[i] - min_element > max_diff) {\n            max_diff = arr[i] - min_element;\n        }\n        if(arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    long min_ele = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        max_diff = max(max_diff, arr[i] - min_ele);\n        min_ele = min(min_ele, arr[i]);\n    }\n    return max_diff;",
    "    long max_diff = 0;\n    for (int i = 0; i < arr.size(); i++) {\n        for (int j = i + 1; j < arr.size(); j++) {\n            if (abs(arr[i] - arr[j]) > max_diff) {\n                max_diff = abs(arr[i] - arr[j]);\n            }\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for(int i = 1; i < arr.size(); i++) {\n        if(arr[i] - min_element > max_diff) {\n            max_diff = arr[i] - min_element;\n        }\n        if(arr[i] < min_element) {\n            min_element = arr[i];\n        }\n    }\n    return max_diff;",
    "    long max_diff = arr[1] - arr[0];\n    long min_element = arr[0];\n    for (int i = 1; i < arr.size(); i++) {\n        if (arr[i] - min_element > max_diff)\n            max_diff = arr[i] - min_element;\n        if (arr[i] < min_element)\n            min_element = arr[i];\n    }\n    return max_diff;"
  ]
}
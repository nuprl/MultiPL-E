{
  "name": "mbpp_61_count_Substrings",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to count the number of substrings with the sum of digits equal to their length.\nlong count_Substrings(std::string s) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = count_Substrings;\n    assert(candidate((\"112112\")) == (6));\n    assert(candidate((\"111\")) == (6));\n    assert(candidate((\"1101112\")) == (12));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = s[i] - '0';\n        for (int j = i + 1; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1))\n                count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for(int j = i; j < s.length(); j++) {\n            sum += (s[j] - '0');\n            if(sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    int n = s.length();\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        int sum = 0;\n        for (int j = i; j < n; j++) {\n            sum += (s[j] - '0');\n            if (sum == (j - i + 1)) {\n                ans++;\n            }\n        }\n    }\n    return ans;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for(int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for(int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if(sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        long sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1))\n                count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == j - i + 1) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += (s[j] - '0');\n            if (sum == (j - i + 1))\n                count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1))\n                count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += (s[j] - '0');\n            if (sum == (j - i + 1))\n                count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1))\n                count++;\n        }\n    }\n    return count;",
    "    long count = 0;\n    for (int i = 0; i < s.length(); i++) {\n        int sum = 0;\n        for (int j = i; j < s.length(); j++) {\n            sum += s[j] - '0';\n            if (sum == (j - i + 1)) {\n                count++;\n            }\n        }\n    }\n    return count;"
  ]
}
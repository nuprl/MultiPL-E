{
  "name": "mbpp_90_len_log",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the length of the longest word.\nlong len_log(std::vector<std::string> list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = len_log;\n    assert(candidate((std::vector<std::string>({(std::string)\"python\", (std::string)\"PHP\", (std::string)\"bigdata\"}))) == (7));\n    assert(candidate((std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"abc\"}))) == (3));\n    assert(candidate((std::vector<std::string>({(std::string)\"small\", (std::string)\"big\", (std::string)\"tall\"}))) == (5));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    std::vector<std::string>::iterator it;\n    long max = 0;\n    for (it = list1.begin(); it != list1.end(); it++) {\n        if (max < (*it).length()) {\n            max = (*it).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (i->length() > max) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].length() > max) {\n\t\t\tmax = list1[i].length();\n\t\t}\n\t}\n\treturn max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int len = 0;\n    for (auto i : list1) {\n        if (len < i.length()) {\n            len = i.length();\n        }\n    }\n    return len;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string str : list1) {\n        if (str.length() > max) {\n            max = str.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (max < i.length()) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto x : list1) {\n        if (x.length() > max) {\n            max = x.length();\n        }\n    }\n    return max;",
    "    long max_len = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max_len < (*i).length()) {\n            max_len = (*i).length();\n        }\n    }\n    return max_len;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max_len = 0;\n    for (std::string word : list1) {\n        if (word.length() > max_len) {\n            max_len = word.length();\n        }\n    }\n    return max_len;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    // Write your code here\n    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max_len = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max_len < i->length()) {\n            max_len = i->length();\n        }\n    }\n    return max_len;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long len = 0;\n    for(auto i: list1) {\n        if(len < i.length()) {\n            len = i.length();\n        }\n    }\n    return len;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).size()) {\n            max = (*i).size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string str : list1) {\n        if (str.length() > max) {\n            max = str.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long len = 0;\n    for (auto i : list1) {\n        if (len < i.length()) {\n            len = i.length();\n        }\n    }\n    return len;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length())\n            max = (*i).length();\n    }\n    return max;",
    "\tlong max = 0;\n\tfor (int i = 0; i < list1.size(); i++) {\n\t\tif (list1[i].size() > max) {\n\t\t\tmax = list1[i].size();\n\t\t}\n\t}\n\treturn max;",
    "    long max_len = 0;\n    for (std::string word : list1) {\n        if (word.length() > max_len) {\n            max_len = word.length();\n        }\n    }\n    return max_len;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int len = 0;\n    for (auto i : list1) {\n        if (i.length() > len) {\n            len = i.length();\n        }\n    }\n    return len;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(auto i = list1.begin(); i != list1.end(); i++) {\n        if(max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).size()) {\n            max = (*i).size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int len = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > len) {\n            len = list1[i].length();\n        }\n    }\n    return len;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int len = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > len) {\n            len = list1[i].length();\n        }\n    }\n    return len;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.size() > max) {\n            max = i.size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < (*i).length()) {\n            max = (*i).length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (max < i.size()) {\n            max = i.size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (max < i.length()) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = list1[0].length();\n    for(int i=1; i<list1.size(); i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (max < i.length()) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    /*\n    Objective: To find the length of the longest word.\n    Input Parameter:\n        list1: list of strings.\n    Return Value: length of the longest word.\n    */\n    int max = 0;\n    for(int i=0; i<list1.size(); i++) {\n        if(list1[i].length() > max)\n            max = list1[i].length();\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    // Write your code here\n    int max = 0;\n    for(int i=0;i<list1.size();i++){\n        if(max<list1[i].length()){\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i=0;i<list1.size();i++) {\n        if(list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for(int i = 0; i < list1.size(); i++) {\n        if(max < list1[i].length()) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (std::string i : list1) {\n        if (i.length() > max)\n            max = i.length();\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    int max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].size() > max) {\n            max = list1[i].size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i = list1.begin(); i != list1.end(); i++) {\n        if (max < i->length()) {\n            max = i->length();\n        }\n    }\n    return max;",
    "    long len = 0;\n    for (auto i : list1) {\n        if (len < i.length()) {\n            len = i.length();\n        }\n    }\n    return len;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.length() > max) {\n            max = i.length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.size() > max) {\n            max = i.size();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (int i = 0; i < list1.size(); i++) {\n        if (list1[i].length() > max) {\n            max = list1[i].length();\n        }\n    }\n    return max;",
    "    long max = 0;\n    for (auto i : list1) {\n        if (i.size() > max) {\n            max = i.size();\n        }\n    }\n    return max;"
  ]
}
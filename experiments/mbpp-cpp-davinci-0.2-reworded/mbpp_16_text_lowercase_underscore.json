{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\nbool text_lowercase_underscore(std::string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = text_lowercase_underscore;\n    assert(candidate((\"aab_cbbbc\")) == (true));\n    assert(candidate((\"aab_Abbbc\")) == (false));\n    assert(candidate((\"Aaab_abbbc\")) == (false));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    int n = text.length();\n    for(int i = 0; i < n; i++) {\n        if(text[i] == '_') {\n            if(i == 0 || i == n-1) {\n                return false;\n            }\n            if(!islower(text[i-1]) || !islower(text[i+1])) {\n                return false;\n            }\n        }\n        else if(!islower(text[i])) {\n            return false;\n        }\n    }\n    return true;",
    "    int len = text.length();\n    if(len == 0) {\n        return false;\n    }\n    for(int i = 0; i < len; i++) {\n        if(text[i] == '_') {\n            if(i == 0 || i == len - 1) {\n                return false;\n            }\n            if(!isalpha(text[i - 1]) || !isalpha(text[i + 1])) {\n                return false;\n            }\n            if(!islower(text[i - 1]) || !islower(text[i + 1])) {\n                return false;\n            }\n        }\n        else if(!islower(text[i])) {\n            return false;\n        }\n    }\n    return true;",
    "    int i = 0;\n    while (i < text.length()) {\n        if (text[i] >= 'a' && text[i] <= 'z') {\n            i++;\n        } else if (text[i] == '_') {\n            i++;\n        } else {\n            return false;\n        }\n    }\n    return true;",
    "    for(int i=0;i<text.length();i++) {\n        if(text[i]=='_') {\n            if(text[i+1]>='a' && text[i+1]<='z') {\n                continue;\n            }\n            else {\n                return false;\n            }\n        }\n        else if(text[i]>='a' && text[i]<='z') {\n            continue;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;",
    "    int underscore_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            underscore_count++;\n        }\n    }\n    if (underscore_count == 0) {\n        return false;\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            if (text[i+1] == '_') {\n                return false;\n            }\n            if (text[i+1] < 'a' || text[i+1] > 'z') {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    bool flag = true;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            if (text[i - 1] < 'a' || text[i - 1] > 'z') {\n                flag = false;\n                break;\n            }\n            if (text[i + 1] < 'a' || text[i + 1] > 'z') {\n                flag = false;\n                break;\n            }\n        }\n    }\n    return flag;",
    "    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            if (text[i - 1] < 'a' || text[i - 1] > 'z') {\n                return false;\n            }\n            if (text[i + 1] < 'a' || text[i + 1] > 'z') {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    int len = text.length();\n    int i = 0;\n    while(i < len) {\n        if(text[i] >= 'a' && text[i] <= 'z') {\n            i++;\n            continue;\n        }\n        else if(text[i] == '_') {\n            i++;\n            continue;\n        }\n        else {\n            return false;\n        }\n    }\n    return true;",
    "    int len = text.length();\n    if(len == 0) return false;\n    for(int i = 0; i < len; i++) {\n        if(text[i] == '_') {\n            if(i == 0 || i == len-1) return false;\n            if(!islower(text[i-1]) || !islower(text[i+1])) return false;\n        }\n        else if(!islower(text[i])) return false;\n    }\n    return true;",
    "    int i = 0;\n    bool flag = false;\n    while(i < text.size()) {\n        if(text[i] >= 'a' && text[i] <= 'z') {\n            flag = true;\n            i++;\n        }\n        else if(text[i] == '_') {\n            flag = true;\n            i++;\n        }\n        else {\n            flag = false;\n            break;\n        }\n    }\n    return flag;",
    "    bool flag = true;\n    for (int i = 0; i < text.length(); i++) {\n        if (i == 0 && text[i] == '_') {\n            flag = false;\n            break;\n        }\n        if (i == text.length() - 1 && text[i] == '_') {\n            flag = false;\n            break;\n        }\n        if (text[i] == '_' && text[i + 1] == '_') {\n            flag = false;\n            break;\n        }\n        if (text[i] == '_' && !islower(text[i + 1])) {\n            flag = false;\n            break;\n        }\n        if (!islower(text[i]) && text[i] != '_') {\n            flag = false;\n            break;\n        }\n    }\n    return flag;",
    "    int underscore_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            underscore_count++;\n        }\n    }\n    if (underscore_count == 0) {\n        return false;\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            if (text[i+1] == '_') {\n                return false;\n            }\n            if (text[i-1] == '_') {\n                return false;\n            }\n        }\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            if (!isalpha(text[i-1])) {\n                return false;\n            }\n            if (!isalpha(text[i+1])) {\n                return false;\n            }\n        }\n    }\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            if (!islower(text[i-1])) {\n                return false;\n            }\n            if (!islower(text[i+1])) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    int i = 0;\n    while (i < text.size()) {\n        if (text[i] >= 'a' && text[i] <= 'z') {\n            i++;\n        } else if (text[i] == '_') {\n            i++;\n        } else {\n            return false;\n        }\n    }\n    return true;",
    "    int len = text.length();\n    if (len == 0) {\n        return false;\n    }\n    for (int i = 0; i < len; i++) {\n        if (text[i] >= 'a' && text[i] <= 'z') {\n            continue;\n        } else if (text[i] == '_') {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;",
    "    int len = text.length();\n    for(int i = 0; i < len; i++) {\n        if(text[i] == '_') {\n            if(i == 0 || i == len - 1) {\n                return false;\n            }\n            if(!islower(text[i - 1]) || !islower(text[i + 1])) {\n                return false;\n            }\n        }\n    }\n    return true;",
    "    int count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == '_') {\n            count++;\n        }\n    }\n    if (count == 0) {\n        return false;\n    }\n    else {\n        return true;\n    }",
    "    for(int i=0;i<text.length();i++) {\n        if(text[i]=='_') {\n            if(text[i-1]>='a' && text[i-1]<='z' && text[i+1]>='a' && text[i+1]<='z') {\n                continue;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;",
    "  for (int i = 0; i < text.length(); i++) {\n    if (text[i] == '_') {\n      if (text[i - 1] < 'a' || text[i - 1] > 'z') {\n        return false;\n      }\n      if (text[i + 1] < 'a' || text[i + 1] > 'z') {\n        return false;\n      }\n    }\n  }\n  return true;",
    "    int i = 0;\n    while (i < text.size()) {\n        if (text[i] >= 'a' && text[i] <= 'z') {\n            i++;\n        } else if (text[i] == '_') {\n            i++;\n        } else {\n            return false;\n        }\n    }\n    return true;",
    "    // Write your code here\n    int i=0;\n    while(text[i]!='\\0')\n    {\n        if(text[i]=='_')\n        {\n            if(text[i-1]>='a' && text[i-1]<='z')\n            {\n                if(text[i+1]>='a' && text[i+1]<='z')\n                {\n                    i++;\n                    continue;\n                }\n                else\n                {\n                    return false;\n                }\n            }\n            else\n            {\n                return false;\n            }\n        }\n        else if(text[i]>='a' && text[i]<='z')\n        {\n            i++;\n            continue;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    return true;"
  ]
}
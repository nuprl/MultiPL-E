{
  "name": "mbpp_633_pair_xor_Sum",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            sum+=arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i=0;i<n;i++)\n    {\n        for(long j=i+1;j<n;j++)\n        {\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(int i=0;i<n;i++) {\n        for(int j=i+1;j<n;j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n\tlong sum = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tfor (long j = i + 1; j < n; j++) {\n\t\t\tsum += (arr[i] ^ arr[j]);\n\t\t}\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i]^arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i]^arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n\tlong ans = 0;\n\tfor (long i = 0; i < n; i++) {\n\t\tfor (long j = i + 1; j < n; j++) {\n\t\t\tans += (arr[i] ^ arr[j]);\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum=0;\n    for(long i=0;i<n;i++)\n    {\n        for(long j=i+1;j<n;j++)\n        {\n            sum+=arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i=0;i<n;i++)\n    {\n        for(long j=0;j<n;j++)\n        {\n            sum += (arr[i]^arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "tmpa8xqbq1r: /tmp/tmpa8xqbq1r.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i=0;i<n;i++){\n        for(long j=i+1;j<n;j++){\n            sum += (arr[i]^arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long result = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            result += (arr[i] ^ arr[j]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n\t// Write your code here\n\tlong sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tsum += arr[i] ^ arr[j];\n\t\t}\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++){\n        for(long j = i+1; j < n; j++){\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum=0;\n    for(long i=0;i<n;i++){\n        for(long j=i+1;j<n;j++){\n            sum+=arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; ++i) {\n        for (int j = i + 1; j < n; ++j) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++){\n        for(long j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++){\n        for(long j = i+1; j < n; j++){\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i=0; i<n; i++) {\n        for(long j=i+1; j<n; j++) {\n            sum += (arr[i]^arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123088,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            ans += arr[i] ^ arr[j];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            sum+=arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i+1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            ans += arr[i] ^ arr[j];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i=0;i<n;i++)\n    {\n        for(long j=i+1;j<n;j++)\n        {\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += arr[i] ^ arr[j];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            sum += arr[i]^arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(int i = 0; i < n; i++) {\n        for(int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += arr[i] ^ arr[j];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = i+1; j < n; j++)\n        {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long ans = 0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=i+1;j<n;j++)\n        {\n            ans += arr[i]^arr[j];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += arr[i] ^ arr[j];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long result = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            result += (arr[i] ^ arr[j]);\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = i+1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123085,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    // Write your code here\n    long sum = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = i+1; j < n; j++){\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long res = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            res += (arr[i] ^ arr[j]);\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1666123087,
      "stdout": "",
      "stderr": "tmps_f9ge78: /tmp/tmps_f9ge78.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += arr[i] ^ arr[j];\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long ans = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            ans += (arr[i] ^ arr[j]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of xor of all pairs of numbers in the given vector.\nlong pair_xor_Sum(std::vector<long> arr, long n) {\n    long sum = 0;\n    for (long i = 0; i < n; i++) {\n        for (long j = i + 1; j < n; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}\nint main() {\n    auto candidate = pair_xor_Sum;\n    assert(candidate((std::vector<long>({(long)5, (long)9, (long)7, (long)6})), (4)) == (47));\n    assert(candidate((std::vector<long>({(long)7, (long)3, (long)5})), (3)) == (12));\n    assert(candidate((std::vector<long>({(long)7, (long)3})), (2)) == (4));\n}\n",
      "timestamp": 1665510121,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_629_Split",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find even numbers from a vector of numbers.\nstd::vector<long> Split(std::vector<long> list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = Split;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)5}))) == (std::vector<long>({(long)2, (long)4})));\n    assert(candidate((std::vector<long>({(long)4, (long)5, (long)6, (long)7, (long)8, (long)0, (long)1}))) == (std::vector<long>({(long)4, (long)6, (long)8, (long)0})));\n    assert(candidate((std::vector<long>({(long)8, (long)12, (long)15, (long)19}))) == (std::vector<long>({(long)8, (long)12})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "  std::vector<long> even;\n  for (auto i : list) {\n    if (i % 2 == 0) {\n      even.push_back(i);\n    }\n  }\n  return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    std::vector<long> odd;\n    for(auto i : list) {\n        if(i % 2 == 0) {\n            even.push_back(i);\n        }\n        else {\n            odd.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "  std::vector<long> evens;\n  for (auto i : list) {\n    if (i % 2 == 0) {\n      evens.push_back(i);\n    }\n  }\n  return evens;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(auto i: list) {\n        if(i % 2 == 0) {\n            even_list.push_back(i);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (auto i : list) {\n    if (i % 2 == 0) {\n      even.push_back(i);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for(auto i:list) {\n        if(i%2==0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(long i = 0; i < list.size(); i++) {\n        if(list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(auto i = list.begin(); i != list.end(); i++) {\n        if(*i % 2 == 0) {\n            even_list.push_back(*i);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (auto i = list.begin(); i != list.end(); i++) {\n    if (*i % 2 == 0) {\n      even.push_back(*i);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(long i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> evenList;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            evenList.push_back(list[i]);\n        }\n    }\n    return evenList;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for(long i=0;i<list.size();i++){\n    if(list[i]%2==0){\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even_list.push_back(i);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even.push_back(*i);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even_list.push_back(i);\n        }\n    }\n    return even_list;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(long i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(auto i : list) {\n        if(i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even_list.push_back(i);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (auto i = list.begin(); i != list.end(); i++) {\n    if (*i % 2 == 0) {\n      even.push_back(*i);\n    }\n  }\n  return even;",
    "    std::vector<long> even_list;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even_list.push_back(*i);\n        }\n    }\n    return even_list;",
    "  std::vector<long> even;\n  std::vector<long> odd;\n  for (auto i : list) {\n    if (i % 2 == 0) {\n      even.push_back(i);\n    } else {\n      odd.push_back(i);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even_list.push_back(i);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for(int i = 0; i < list.size(); i++) {\n        if(list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i = 0; i < list.size(); i++) {\n        if(list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for(long i=0;i<list.size();i++) {\n    if(list[i]%2==0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even_list.push_back(i);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(auto i : list) {\n        if(i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    std::vector<long> odd;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        } else {\n            odd.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(long i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even.push_back(*i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    std::vector<long> odd;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n        else\n        {\n            odd.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> evenList;\n    for(auto i : list) {\n        if(i % 2 == 0) {\n            evenList.push_back(i);\n        }\n    }\n    return evenList;",
    "    std::vector<long> even;\n    for(auto i: list) {\n        if(i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even.push_back(*i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    std::vector<long> odd;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n        else {\n            odd.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i = 0; i < list.size(); i++) {\n        if(list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even.push_back(*i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even.push_back(*i);\n        }\n    }\n    return even;",
    "    std::vector<long> evens;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            evens.push_back(list[i]);\n        }\n    }\n    return evens;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(long num : list) {\n        if(num % 2 == 0) {\n            even_list.push_back(num);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++){\n        if(list[i]%2==0){\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(long i = 0; i < list.size(); i++) {\n        if(list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(auto i : list) {\n        if(i%2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even.push_back(*i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(auto i:list){\n        if(i%2==0){\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (long i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++){\n        if(list[i]%2==0){\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (int i = 0; i < list.size(); i++) {\n    if (list[i] % 2 == 0) {\n      even.push_back(list[i]);\n    }\n  }\n  return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (auto i : list) {\n    if (i % 2 == 0) {\n      even.push_back(i);\n    }\n  }\n  return even;",
    "    std::vector<long> even_list;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++){\n        if(list[i]%2==0){\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even_list;\n    for (auto i = list.begin(); i != list.end(); i++) {\n        if (*i % 2 == 0) {\n            even_list.push_back(*i);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for (auto i : list) {\n        if (i % 2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(long i=0;i<list.size();i++)\n    {\n        if(list[i]%2==0)\n        {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for(auto i : list) {\n        if(i%2 == 0) {\n            even.push_back(i);\n        }\n    }\n    return even;",
    "  std::vector<long> even;\n  for (auto i : list) {\n    if (i % 2 == 0) {\n      even.push_back(i);\n    }\n  }\n  return even;",
    "    std::vector<long> even_list;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even_list.push_back(list[i]);\n        }\n    }\n    return even_list;",
    "    std::vector<long> even;\n    for(int i=0;i<list.size();i++) {\n        if(list[i]%2==0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;",
    "    std::vector<long> even;\n    for (int i = 0; i < list.size(); i++) {\n        if (list[i] % 2 == 0) {\n            even.push_back(list[i]);\n        }\n    }\n    return even;"
  ]
}
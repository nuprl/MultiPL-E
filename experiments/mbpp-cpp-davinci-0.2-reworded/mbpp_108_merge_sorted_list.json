{
  "name": "mbpp_108_merge_sorted_list",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to merge three vectors into a single sorted vector.\nstd::vector<long> merge_sorted_list(std::vector<long> num1, std::vector<long> num2, std::vector<long> num3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = merge_sorted_list;\n    assert(candidate((std::vector<long>({(long)25, (long)24, (long)15, (long)4, (long)5, (long)29, (long)110})), (std::vector<long>({(long)19, (long)20, (long)11, (long)56, (long)25, (long)233, (long)154})), (std::vector<long>({(long)24, (long)26, (long)54, (long)48}))) == (std::vector<long>({(long)4, (long)5, (long)11, (long)15, (long)19, (long)20, (long)24, (long)24, (long)25, (long)25, (long)26, (long)29, (long)48, (long)54, (long)56, (long)110, (long)154, (long)233})));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)6, (long)8, (long)9})), (std::vector<long>({(long)2, (long)5, (long)7, (long)11})), (std::vector<long>({(long)1, (long)4, (long)7, (long)8, (long)12}))) == (std::vector<long>({(long)1, (long)1, (long)2, (long)3, (long)4, (long)5, (long)5, (long)6, (long)7, (long)7, (long)8, (long)8, (long)9, (long)11, (long)12})));\n    assert(candidate((std::vector<long>({(long)18, (long)14, (long)10, (long)9, (long)8, (long)7, (long)9, (long)3, (long)2, (long)4, (long)1})), (std::vector<long>({(long)25, (long)35, (long)22, (long)85, (long)14, (long)65, (long)75, (long)25, (long)58})), (std::vector<long>({(long)12, (long)74, (long)9, (long)50, (long)61, (long)41}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4, (long)7, (long)8, (long)9, (long)9, (long)9, (long)10, (long)12, (long)14, (long)14, (long)18, (long)22, (long)25, (long)25, (long)35, (long)41, (long)50, (long)58, (long)61, (long)65, (long)74, (long)75, (long)85})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n        else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n        else if(num1[i] == num2[j] && num1[i] == num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n            j++;\n            k++;\n        }\n        else if(num1[i] == num2[j]) {\n            result.push_back(num1[i]);\n            i++;\n            j++;\n        }\n        else if(num1[i] == num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n            k++;\n        }\n        else if(num2[j] == num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i=0, j=0, k=0;\n    while(i<num1.size() && j<num2.size() && k<num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i<num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j<num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k<num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else if(num3[k] <= num1[i] && num3[k] <= num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> merged_list;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            merged_list.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            merged_list.push_back(num2[j]);\n            j++;\n        } else {\n            merged_list.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        merged_list.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        merged_list.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        merged_list.push_back(num3[k]);\n        k++;\n    }\n    return merged_list;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.size() && j < num2.size() && k < num3.size()) {\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) {\n\t\t\tresult.push_back(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) {\n\t\t\tresult.push_back(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse {\n\t\t\tresult.push_back(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.size()) {\n\t\tresult.push_back(num1[i]);\n\t\ti++;\n\t}\n\twhile (j < num2.size()) {\n\t\tresult.push_back(num2[j]);\n\t\tj++;\n\t}\n\twhile (k < num3.size()) {\n\t\tresult.push_back(num3[k]);\n\t\tk++;\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "  std::vector<long> result;\n  int i = 0, j = 0, k = 0;\n  while (i < num1.size() && j < num2.size() && k < num3.size()) {\n    if (num1[i] < num2[j] && num1[i] < num3[k]) {\n      result.push_back(num1[i]);\n      i++;\n    } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n      result.push_back(num2[j]);\n      j++;\n    } else {\n      result.push_back(num3[k]);\n      k++;\n    }\n  }\n  while (i < num1.size()) {\n    result.push_back(num1[i]);\n    i++;\n  }\n  while (j < num2.size()) {\n    result.push_back(num2[j]);\n    j++;\n  }\n  while (k < num3.size()) {\n    result.push_back(num3[k]);\n    k++;\n  }\n  return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 < *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            it1++;\n        }\n        else if(*it2 < *it1 && *it2 < *it3) {\n            result.push_back(*it2);\n            it2++;\n        }\n        else if(*it3 < *it1 && *it3 < *it2) {\n            result.push_back(*it3);\n            it3++;\n        }\n        else if(*it1 == *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            result.push_back(*it2);\n            it1++;\n            it2++;\n        }\n        else if(*it1 == *it3 && *it1 < *it2) {\n            result.push_back(*it1);\n            result.push_back(*it3);\n            it1++;\n            it3++;\n        }\n        else if(*it2 == *it3 && *it2 < *it1) {\n            result.push_back(*it2);\n            result.push_back(*it3);\n            it2++;\n            it3++;\n        }\n        else if(*it1 == *it2 && *it1 == *it3) {\n            result.push_back(*it1);\n            result.push_back(*it2);\n            result.push_back(*it3);\n            it1++;\n            it2++;\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if (num3[k] <= num1[i] && num3[k] <= num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if (num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        } else if (num1[i] == num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n            j++;\n        } else if (num1[i] == num3[k] && num1[i] < num2[j]) {\n            result.push_back(num1[i]);\n            i++;\n            k++;\n        } else if (num2[j] == num3[k] && num2[j] < num1[i]) {\n            result.push_back(num2[j]);\n            j++;\n            k++;\n        } else if (num1[i] == num2[j] && num1[i] == num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n            j++;\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> num;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            num.push_back(num1[i]);\n            i++;\n        } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            num.push_back(num2[j]);\n            j++;\n        } else {\n            num.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        num.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        num.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        num.push_back(num3[k]);\n        k++;\n    }\n    return num;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.size() && j < num2.size() && k < num3.size()) {\n\t\tif (num1[i] < num2[j]) {\n\t\t\tif (num1[i] < num3[k]) {\n\t\t\t\tresult.push_back(num1[i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult.push_back(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (num2[j] < num3[k]) {\n\t\t\t\tresult.push_back(num2[j]);\n\t\t\t\tj++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult.push_back(num3[k]);\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t}\n\twhile (i < num1.size()) {\n\t\tresult.push_back(num1[i]);\n\t\ti++;\n\t}\n\twhile (j < num2.size()) {\n\t\tresult.push_back(num2[j]);\n\t\tj++;\n\t}\n\twhile (k < num3.size()) {\n\t\tresult.push_back(num3[k]);\n\t\tk++;\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if (num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "\tstd::vector<long> result;\n\tint i = 0, j = 0, k = 0;\n\twhile (i < num1.size() && j < num2.size() && k < num3.size()) {\n\t\tif (num1[i] < num2[j] && num1[i] < num3[k]) {\n\t\t\tresult.push_back(num1[i]);\n\t\t\ti++;\n\t\t}\n\t\telse if (num2[j] < num1[i] && num2[j] < num3[k]) {\n\t\t\tresult.push_back(num2[j]);\n\t\t\tj++;\n\t\t}\n\t\telse {\n\t\t\tresult.push_back(num3[k]);\n\t\t\tk++;\n\t\t}\n\t}\n\twhile (i < num1.size()) {\n\t\tresult.push_back(num1[i]);\n\t\ti++;\n\t}\n\twhile (j < num2.size()) {\n\t\tresult.push_back(num2[j]);\n\t\tj++;\n\t}\n\twhile (k < num3.size()) {\n\t\tresult.push_back(num3[k]);\n\t\tk++;\n\t}\n\treturn result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 < *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            it1++;\n        }\n        else if(*it2 < *it1 && *it2 < *it3) {\n            result.push_back(*it2);\n            it2++;\n        }\n        else if(*it3 < *it1 && *it3 < *it2) {\n            result.push_back(*it3);\n            it3++;\n        }\n        else if(*it1 == *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n        }\n        else if(*it1 == *it3 && *it1 < *it2) {\n            result.push_back(*it1);\n            it1++;\n            it3++;\n        }\n        else if(*it2 == *it3 && *it2 < *it1) {\n            result.push_back(*it2);\n            it2++;\n            it3++;\n        }\n        else if(*it1 == *it2 && *it1 == *it3) {\n            result.push_back(*it1);\n            it1++;\n            it2++;\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 <= *it2 && *it1 <= *it3) {\n            result.push_back(*it1);\n            it1++;\n        } else if(*it2 <= *it1 && *it2 <= *it3) {\n            result.push_back(*it2);\n            it2++;\n        } else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if (num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if (num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 <= *it2 && *it1 <= *it3) {\n            result.push_back(*it1);\n            it1++;\n        } else if(*it2 <= *it1 && *it2 <= *it3) {\n            result.push_back(*it2);\n            it2++;\n        } else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else if (num3[k] <= num1[i] && num3[k] <= num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 <= *it2 && *it1 <= *it3) {\n            result.push_back(*it1);\n            it1++;\n        }\n        else if(*it2 <= *it1 && *it2 <= *it3) {\n            result.push_back(*it2);\n            it2++;\n        }\n        else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 < *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            it1++;\n        }\n        else if(*it2 < *it1 && *it2 < *it3) {\n            result.push_back(*it2);\n            it2++;\n        }\n        else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 <= *it2 && *it1 <= *it3) {\n            result.push_back(*it1);\n            it1++;\n        }\n        else if(*it2 <= *it1 && *it2 <= *it3) {\n            result.push_back(*it2);\n            it2++;\n        }\n        else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 <= *it2 && *it1 <= *it3) {\n            result.push_back(*it1);\n            it1++;\n        } else if(*it2 <= *it1 && *it2 <= *it3) {\n            result.push_back(*it2);\n            it2++;\n        } else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 < *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            it1++;\n        }\n        else if(*it2 < *it1 && *it2 < *it3) {\n            result.push_back(*it2);\n            it2++;\n        }\n        else if(*it3 < *it1 && *it3 < *it2) {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n        else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n        else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "  std::vector<long> result;\n  std::vector<long>::iterator it1 = num1.begin();\n  std::vector<long>::iterator it2 = num2.begin();\n  std::vector<long>::iterator it3 = num3.begin();\n  while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n    if(*it1 <= *it2 && *it1 <= *it3) {\n      result.push_back(*it1);\n      it1++;\n    } else if(*it2 <= *it1 && *it2 <= *it3) {\n      result.push_back(*it2);\n      it2++;\n    } else {\n      result.push_back(*it3);\n      it3++;\n    }\n  }\n  while(it1 != num1.end()) {\n    result.push_back(*it1);\n    it1++;\n  }\n  while(it2 != num2.end()) {\n    result.push_back(*it2);\n    it2++;\n  }\n  while(it3 != num3.end()) {\n    result.push_back(*it3);\n    it3++;\n  }\n  return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 < *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            it1++;\n        }\n        else if(*it2 < *it1 && *it2 < *it3) {\n            result.push_back(*it2);\n            it2++;\n        }\n        else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n        else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            }\n            else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while (it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if (*it1 <= *it2 && *it1 <= *it3) {\n            result.push_back(*it1);\n            it1++;\n        } else if (*it2 <= *it1 && *it2 <= *it3) {\n            result.push_back(*it2);\n            it2++;\n        } else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while (it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while (it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while (it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> merged_list;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            merged_list.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            merged_list.push_back(num2[j]);\n            j++;\n        } else {\n            merged_list.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        merged_list.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        merged_list.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        merged_list.push_back(num3[k]);\n        k++;\n    }\n    return merged_list;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if (num3[k] <= num1[i] && num3[k] <= num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while(it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if(*it1 <= *it2 && *it1 <= *it3) {\n            result.push_back(*it1);\n            it1++;\n        } else if(*it2 <= *it1 && *it2 <= *it3) {\n            result.push_back(*it2);\n            it2++;\n        } else {\n            result.push_back(*it3);\n            it3++;\n        }\n    }\n    while(it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while(it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while(it3 != num3.end()) {\n        result.push_back(*it3);\n        it3++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j]) {\n            if (num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if (num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if (num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        } else if (num1[i] == num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n            j++;\n        } else if (num1[i] == num3[k] && num1[i] < num2[j]) {\n            result.push_back(num1[i]);\n            i++;\n            k++;\n        } else if (num2[j] == num3[k] && num2[j] < num1[i]) {\n            result.push_back(num2[j]);\n            j++;\n            k++;\n        } else if (num1[i] == num2[j] && num1[i] == num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n            j++;\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else if(num3[k] <= num1[i] && num3[k] <= num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else if(num3[k] < num1[i] && num3[k] < num2[j]) {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    std::vector<long>::iterator it1 = num1.begin();\n    std::vector<long>::iterator it2 = num2.begin();\n    std::vector<long>::iterator it3 = num3.begin();\n    while (it1 != num1.end() && it2 != num2.end() && it3 != num3.end()) {\n        if (*it1 < *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            it1++;\n        } else if (*it2 < *it1 && *it2 < *it3) {\n            result.push_back(*it2);\n            it2++;\n        } else if (*it3 < *it1 && *it3 < *it2) {\n            result.push_back(*it3);\n            it3++;\n        } else if (*it1 == *it2 && *it1 < *it3) {\n            result.push_back(*it1);\n            result.push_back(*it2);\n            it1++;\n            it2++;\n        } else if (*it1 == *it3 && *it1 < *it2) {\n            result.push_back(*it1);\n            result.push_back(*it3);\n            it1++;\n            it3++;\n        } else if (*it2 == *it3 && *it2 < *it1) {\n            result.push_back(*it2);\n            result.push_back(*it3);\n            it2++;\n            it3++;\n        } else if (*it1 == *it2 && *it1 == *it3) {\n            result.push_back(*it1);\n            result.push_back(*it2);\n            result.push_back(*it3);\n            it1++;\n            it2++;\n            it3++;\n        }\n    }\n    while (it1 != num1.end()) {\n        result.push_back(*it1);\n        it1++;\n    }\n    while (it2 != num2.end()) {\n        result.push_back(*it2);\n        it2++;\n    }\n    while",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while (i < num1.size() && j < num2.size() && k < num3.size()) {\n        if (num1[i] <= num2[j] && num1[i] <= num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if (num2[j] <= num1[i] && num2[j] <= num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while (i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while (j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while (k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j]) {\n            if(num1[i] < num3[k]) {\n                result.push_back(num1[i]);\n                i++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        } else {\n            if(num2[j] < num3[k]) {\n                result.push_back(num2[j]);\n                j++;\n            } else {\n                result.push_back(num3[k]);\n                k++;\n            }\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        } else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        } else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;",
    "    std::vector<long> result;\n    int i = 0, j = 0, k = 0;\n    while(i < num1.size() && j < num2.size() && k < num3.size()) {\n        if(num1[i] < num2[j] && num1[i] < num3[k]) {\n            result.push_back(num1[i]);\n            i++;\n        }\n        else if(num2[j] < num1[i] && num2[j] < num3[k]) {\n            result.push_back(num2[j]);\n            j++;\n        }\n        else {\n            result.push_back(num3[k]);\n            k++;\n        }\n    }\n    while(i < num1.size()) {\n        result.push_back(num1[i]);\n        i++;\n    }\n    while(j < num2.size()) {\n        result.push_back(num2[j]);\n        j++;\n    }\n    while(k < num3.size()) {\n        result.push_back(num3[k]);\n        k++;\n    }\n    return result;"
  ]
}
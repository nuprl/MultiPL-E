{
  "name": "mbpp_630_get_coordinates",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nstd::vector<std::vector<long>> get_coordinates(long test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = get_coordinates;\n    assert(candidate(std::make_tuple(3, 4)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)2, (long)3}), (std::vector<long>)std::vector<long>({(long)2, (long)4}), (std::vector<long>)std::vector<long>({(long)2, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)3}), (std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)3}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5})})));\n    assert(candidate(std::make_tuple(4, 5)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)3, (long)4}), (std::vector<long>)std::vector<long>({(long)3, (long)5}), (std::vector<long>)std::vector<long>({(long)3, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)4}), (std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)4}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6})})));\n    assert(candidate(std::make_tuple(5, 6)) == (std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)4, (long)5}), (std::vector<long>)std::vector<long>({(long)4, (long)6}), (std::vector<long>)std::vector<long>({(long)4, (long)7}), (std::vector<long>)std::vector<long>({(long)5, (long)5}), (std::vector<long>)std::vector<long>({(long)5, (long)6}), (std::vector<long>)std::vector<long>({(long)5, (long)7}), (std::vector<long>)std::vector<long>({(long)6, (long)5}), (std::vector<long>)std::vector<long>({(long)6, (long)6}), (std::vector<long>)std::vector<long>({(long)6, (long)7})})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> test_coordinates;\n    long test_coordinate = test_tup;\n    for (int i = 0; i < 3; i++) {\n        test_coordinates.push_back(test_coordinate % 10);\n        test_coordinate /= 10;\n    }\n    std::vector<long> test_coordinates_1 = test_coordinates;\n    std::vector<long> test_coordinates_2 = test_coordinates;\n    std::vector<long> test_coordinates_3 = test_coordinates;\n    std::vector<long> test_coordinates_4 = test_coordinates;\n    std::vector<long> test_coordinates_5 = test_coordinates;\n    std::vector<long> test_coordinates_6 = test_coordinates;\n    std::vector<long> test_coordinates_7 = test_coordinates;\n    std::vector<long> test_coordinates_8 = test_coordinates;\n    test_coordinates_1[0] += 1;\n    test_coordinates_2[0] -= 1;\n    test_coordinates_3[1] += 1;\n    test_coordinates_4[1] -= 1;\n    test_coordinates_5[2] += 1;\n    test_coordinates_6[2] -= 1;\n    test_coordinates_7[0] += 1;\n    test_coordinates_7[1] += 1;\n    test_coordinates_8[0] += 1;\n    test_coordinates_8[2] += 1;\n    coordinates.push_back(test_coordinates_1);\n    coordinates.push_back(test_coordinates_2);\n    coordinates.push_back(test_coordinates_3);\n    coordinates.push_back(test_coordinates_4);\n    coordinates.push_back(test_coordinates_5);\n    coordinates.push_back(test_coordinates_6);\n    coordinates.push_back(test_coordinates_7);\n    coordinates.push_back(test_coordinates_8);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup;\n    long y = test_tup;\n    for (long i = 0; i < 5; i++) {\n        temp.push_back(x);\n        temp.push_back(y);\n        coordinates.push_back(temp);\n        temp.clear();\n        x++;\n        y++;\n    }\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> tup;\n    long x = test_tup;\n    while (x > 0) {\n        tup.push_back(x % 10);\n        x /= 10;\n    }\n    for (long i = 0; i < tup.size(); i++) {\n        std::vector<long> temp = tup;\n        temp[i] += 1;\n        coordinates.push_back(temp);\n        temp[i] -= 2;\n        coordinates.push_back(temp);\n    }\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> coordinate;\n    long i = 0;\n    while(test_tup) {\n        if(test_tup & 1) {\n            coordinate.push_back(i);\n        }\n        test_tup = test_tup >> 1;\n        i++;\n    }\n    coordinates.push_back(coordinate);\n    return coordinates;",
    "    std::vector<std::vector<long>> res;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    res.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    res.push_back(temp);\n    temp.clear();\n    return res;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup/10000;\n    long y = test_tup%10000;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> temp;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    temp.push_back(test_tup);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup-2);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup-3);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup-4);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup-5);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup-6);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup-7);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(test_tup+8);\n    coordinates.push_back(temp);",
    "    std::vector<std::vector<long>> coordinates;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    std::vector<long> tup;\n    tup.push_back(x);\n    tup.push_back(y);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x);\n    tup.push_back(y + 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x);\n    tup.push_back(y - 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x + 1);\n    tup.push_back(y);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x - 1);\n    tup.push_back(y);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x + 1);\n    tup.push_back(y + 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x + 1);\n    tup.push_back(y - 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x - 1);\n    tup.push_back(y + 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    tup.push_back(x - 1);\n    tup.push_back(y - 1);\n    coordinates.push_back(tup);\n    tup.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup/100;\n    long y = test_tup%100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x+1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y+1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x-1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y-1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;",
    "    std::vector<std::vector<long>> coordinates;\n    std::vector<long> temp;\n    long x = test_tup / 100;\n    long y = test_tup % 100;\n    temp.push_back(x);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x + 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x - 1);\n    temp.push_back(y);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y + 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    temp.push_back(x);\n    temp.push_back(y - 1);\n    coordinates.push_back(temp);\n    temp.clear();\n    return coordinates;"
  ]
}
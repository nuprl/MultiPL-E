{
  "name": "mbpp_599_sum_average",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_599_sum_average.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmp4qzr0o6i.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp4qzr0o6i.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp4qzr0o6i.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qzr0o6i.cpp:2:\n/tmp/tmp4qzr0o6i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qzr0o6i.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    float average = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzqdqsy2b.cpp:2:\n/tmp/tmpzqdqsy2b.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzqdqsy2b.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpzqdqsy2b.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpzqdqsy2b.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpzqdqsy2b.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpzqdqsy2b.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpzqdqsy2b.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpr9075vrl.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpr9075vrl.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpr9075vrl.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr9075vrl.cpp:2:\n/tmp/tmpr9075vrl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr9075vrl.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpr9075vrl.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpr9075vrl.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpr9075vrl.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpr9075vrl.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo33aulri.cpp:2:\n/tmp/tmpo33aulri.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo33aulri.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpo33aulri.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpo33aulri.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpo33aulri.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpo33aulri.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpo33aulri.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpvmr17p8j.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpvmr17p8j.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpvmr17p8j.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvmr17p8j.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvmr17p8j.cpp:2:\n/tmp/tmpvmr17p8j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvmr17p8j.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpvmr17p8j.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpvmr17p8j.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn7y4jnn5.cpp:2:\n/tmp/tmpn7y4jnn5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn7y4jnn5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpn7y4jnn5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpn7y4jnn5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpn7y4jnn5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpn7y4jnn5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpn7y4jnn5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(int i=1;i<=number;i++)\n    {\n        sum.f0+=i;\n    }\n    average.f1=sum.f0/number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpepk8kvz6.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpepk8kvz6.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpepk8kvz6.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpepk8kvz6.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpepk8kvz6.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpepk8kvz6.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpepk8kvz6.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpepk8kvz6.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpepk8kvz6.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpepk8kvz6.cpp:2:\n/tmp/tmpepk8kvz6.cpp: In function \u2018int main()\u2019:\n/tmp/tmpepk8kvz6.cpp:27:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   27 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpan190sua.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpan190sua.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpan190sua.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpan190sua.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpan190sua.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpan190sua.cpp:2:\n/tmp/tmpan190sua.cpp: In function \u2018int main()\u2019:\n/tmp/tmpan190sua.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpan190sua.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpan190sua.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpan190sua.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpan190sua.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(int i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpeukjr1a0.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpeukjr1a0.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpeukjr1a0.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpeukjr1a0.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpeukjr1a0.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeukjr1a0.cpp:2:\n/tmp/tmpeukjr1a0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeukjr1a0.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpeukjr1a0.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpeukjr1a0.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpeukjr1a0.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpeukjr1a0.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = (float)sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpsz73g969.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpsz73g969.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpsz73g969.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpsz73g969.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsz73g969.cpp:2:\n/tmp/tmpsz73g969.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsz73g969.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpvmr17p8j.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpvmr17p8j.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpvmr17p8j.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvmr17p8j.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvmr17p8j.cpp:2:\n/tmp/tmpvmr17p8j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvmr17p8j.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpvmr17p8j.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpvmr17p8j.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result;\n    result.f0 = 0;\n    for (long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpc89y021z.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpc89y021z.cpp:16:22: error: no matching function for call to \u2018Union_long_float::Union_long_float()\u2019\n   16 |     Union_long_float result;\n      |                      ^~~~~~\n/tmp/tmpc89y021z.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpc89y021z.cpp:6:5: note:   candidate expects 1 argument, 0 provided\n/tmp/tmpc89y021z.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpc89y021z.cpp:5:18: note:   candidate expects 1 argument, 0 provided\n/tmp/tmpc89y021z.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpc89y021z.cpp:3:7: note:   candidate expects 1 argument, 0 provided\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc89y021z.cpp:2:\n/tmp/tmpc89y021z.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc89y021z.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpc89y021z.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpc89y021z.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool opera",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result;\n    int sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    result.f0 = sum;\n    result.f1 = sum / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdmhir0qf.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdmhir0qf.cpp:16:22: error: no matching function for call to \u2018Union_long_float::Union_long_float()\u2019\n   16 |     Union_long_float result;\n      |                      ^~~~~~\n/tmp/tmpdmhir0qf.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdmhir0qf.cpp:6:5: note:   candidate expects 1 argument, 0 provided\n/tmp/tmpdmhir0qf.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpdmhir0qf.cpp:5:18: note:   candidate expects 1 argument, 0 provided\n/tmp/tmpdmhir0qf.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpdmhir0qf.cpp:3:7: note:   candidate expects 1 argument, 0 provided\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdmhir0qf.cpp:2:\n/tmp/tmpdmhir0qf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdmhir0qf.cpp:27:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   27 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdmhir0qf.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdmhir0qf.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool opera",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/tmp/tmpnz3g9wy4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnz3g9wy4.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpnz3g9wy4.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpnz3g9wy4.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp175zzlwt.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp175zzlwt.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp175zzlwt.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp175zzlwt.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp175zzlwt.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp175zzlwt.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp175zzlwt.cpp:2:\n/tmp/tmp175zzlwt.cpp: In function \u2018int main()\u2019:\n/tmp/tmp175zzlwt.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp175zzlwt.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp175zzlwt.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, do",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz3svc3pd.cpp:2:\n/tmp/tmpz3svc3pd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz3svc3pd.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpz3svc3pd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpz3svc3pd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpz3svc3pd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpz3svc3pd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpz3svc3pd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(int i = 1; i <= number; i++) {\n        result.f1 += i;\n    }\n    result.f1 /= number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpiq6p3nqn.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpiq6p3nqn.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpiq6p3nqn.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpiq6p3nqn.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpiq6p3nqn.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpiq6p3nqn.cpp:2:\n/tmp/tmpiq6p3nqn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpiq6p3nqn.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpiq6p3nqn.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpiq6p3nqn.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpiq6p3nqn.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpiq6p3nqn.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpwojvjyn3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpwojvjyn3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpwojvjyn3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpwojvjyn3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpwojvjyn3.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpwojvjyn3.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwojvjyn3.cpp:2:\n/tmp/tmpwojvjyn3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwojvjyn3.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpwojvjyn3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpwojvjyn3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo33aulri.cpp:2:\n/tmp/tmpo33aulri.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo33aulri.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpo33aulri.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpo33aulri.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpo33aulri.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpo33aulri.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpo33aulri.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp175zzlwt.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp175zzlwt.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp175zzlwt.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp175zzlwt.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp175zzlwt.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp175zzlwt.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp175zzlwt.cpp:2:\n/tmp/tmp175zzlwt.cpp: In function \u2018int main()\u2019:\n/tmp/tmp175zzlwt.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp175zzlwt.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp175zzlwt.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, do",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpr9075vrl.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpr9075vrl.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpr9075vrl.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr9075vrl.cpp:2:\n/tmp/tmpr9075vrl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr9075vrl.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpr9075vrl.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpr9075vrl.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpr9075vrl.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpr9075vrl.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(long i = 1; i <= number; i++) {\n        sum = sum + i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp471ix9ky.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp471ix9ky.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp471ix9ky.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp471ix9ky.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp471ix9ky.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp471ix9ky.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp471ix9ky.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp471ix9ky.cpp:19:19: error: no match for \u2018operator+\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum = sum + i;\n      |               ~~~ ^ ~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\n/tmp/tmp471ix9ky.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp471ix9ky.cpp:2:\n/tmp/tmp471ix9ky.cpp",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpep9wwst9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpep9wwst9.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpep9wwst9.cpp:2:\n/tmp/tmpep9wwst9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpep9wwst9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum = sum + i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpvblfab4i.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpvblfab4i.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpvblfab4i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpvblfab4i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:19:19: error: no match for \u2018operator+\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum = sum + i;\n      |               ~~~ ^ ~\n      |               |     |\n      |               |     int\n      |               Union_long_float\n/tmp/tmpvblfab4i.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvblfab4i.cpp:2:\n/tmp/tmpvblfab4i.cpp: In funct",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpthv1a3tm.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpthv1a3tm.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpthv1a3tm.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpthv1a3tm.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpthv1a3tm.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpthv1a3tm.cpp:2:\n/tmp/tmpthv1a3tm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpthv1a3tm.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    Union_long_float average = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp6kljx1w5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp6kljx1w5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp6kljx1w5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp6kljx1w5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp6kljx1w5.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kljx1w5.cpp:2:\n/tmp/tmp6kljx1w5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kljx1w5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp6kljx1w5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp6kljx1w5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp6kljx1w5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp6kljx1w5.cpp:10:32",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    Union_long_float average = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp6kljx1w5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp6kljx1w5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp6kljx1w5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp6kljx1w5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp6kljx1w5.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6kljx1w5.cpp:2:\n/tmp/tmp6kljx1w5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6kljx1w5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp6kljx1w5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp6kljx1w5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp6kljx1w5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp6kljx1w5.cpp:10:32",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = sum / number;\n    Union_long_float result(sum);\n    result.f1 = average;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe6dl78ki.cpp:2:\n/tmp/tmpe6dl78ki.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe6dl78ki.cpp:27:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   27 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpe6dl78ki.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpe6dl78ki.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpe6dl78ki.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpe6dl78ki.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpe6dl78ki.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn7y4jnn5.cpp:2:\n/tmp/tmpn7y4jnn5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn7y4jnn5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpn7y4jnn5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpn7y4jnn5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpn7y4jnn5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpn7y4jnn5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpn7y4jnn5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpxni4akci.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpxni4akci.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpxni4akci.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpxni4akci.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxni4akci.cpp:2:\n/tmp/tmpxni4akci.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxni4akci.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpfod4284s.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpfod4284s.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpfod4284s.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpfod4284s.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpfod4284s.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfod4284s.cpp:2:\n/tmp/tmpfod4284s.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfod4284s.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpfod4284s.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpfod4284s.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpfod4284s.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpfod4284s.cpp:10:32: note:   no known conversion for argument 1 from ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/tmp/tmpnz3g9wy4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnz3g9wy4.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpnz3g9wy4.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpnz3g9wy4.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpwojvjyn3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpwojvjyn3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpwojvjyn3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpwojvjyn3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpwojvjyn3.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpwojvjyn3.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwojvjyn3.cpp:2:\n/tmp/tmpwojvjyn3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwojvjyn3.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpwojvjyn3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpwojvjyn3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpse7p1471.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpse7p1471.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpse7p1471.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpse7p1471.cpp:2:\n/tmp/tmpse7p1471.cpp: In function \u2018int main()\u2019:\n/tmp/tmpse7p1471.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpse7p1471.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpse7p1471.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpse7p1471.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpse7p1471.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3intf9mx.cpp:2:\n/tmp/tmp3intf9mx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3intf9mx.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp3intf9mx.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp3intf9mx.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp3intf9mx.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp3intf9mx.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3intf9mx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpxni4akci.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpxni4akci.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpxni4akci.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpxni4akci.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxni4akci.cpp:2:\n/tmp/tmpxni4akci.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxni4akci.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3intf9mx.cpp:2:\n/tmp/tmp3intf9mx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3intf9mx.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp3intf9mx.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp3intf9mx.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp3intf9mx.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp3intf9mx.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3intf9mx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp346j9xfw.cpp:2:\n/tmp/tmp346j9xfw.cpp: In function \u2018int main()\u2019:\n/tmp/tmp346j9xfw.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp346j9xfw.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp346j9xfw.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp346j9xfw.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp346j9xfw.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp346j9xfw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpy1u1ogeg.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpy1u1ogeg.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpy1u1ogeg.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpy1u1ogeg.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpy1u1ogeg.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpy1u1ogeg.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpy1u1ogeg.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpy1u1ogeg.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpy1u1ogeg.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy1u1ogeg.cpp:2:\n/tmp/tmpy1u1ogeg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy1u1ogeg.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpan190sua.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpan190sua.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpan190sua.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpan190sua.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpan190sua.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpan190sua.cpp:2:\n/tmp/tmpan190sua.cpp: In function \u2018int main()\u2019:\n/tmp/tmpan190sua.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpan190sua.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpan190sua.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpan190sua.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpan190sua.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpan190sua.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpan190sua.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpan190sua.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpan190sua.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpan190sua.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpan190sua.cpp:2:\n/tmp/tmpan190sua.cpp: In function \u2018int main()\u2019:\n/tmp/tmpan190sua.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpan190sua.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpan190sua.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpan190sua.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpan190sua.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for (int i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpymsakxci.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpymsakxci.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpymsakxci.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpymsakxci.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpymsakxci.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpymsakxci.cpp:2:\n/tmp/tmpymsakxci.cpp: In function \u2018int main()\u2019:\n/tmp/tmpymsakxci.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpymsakxci.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpymsakxci.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpymsakxci.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpymsakxci.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    Union_long_float result(sum);\n    result.f1 = average;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmc6pmw62.cpp:2:\n/tmp/tmpmc6pmw62.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmc6pmw62.cpp:27:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   27 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpmc6pmw62.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpmc6pmw62.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpmc6pmw62.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpmc6pmw62.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpmc6pmw62.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp346j9xfw.cpp:2:\n/tmp/tmp346j9xfw.cpp: In function \u2018int main()\u2019:\n/tmp/tmp346j9xfw.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp346j9xfw.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp346j9xfw.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp346j9xfw.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp346j9xfw.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp346j9xfw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3intf9mx.cpp:2:\n/tmp/tmp3intf9mx.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3intf9mx.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp3intf9mx.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp3intf9mx.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp3intf9mx.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp3intf9mx.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3intf9mx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(int i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpeukjr1a0.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpeukjr1a0.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpeukjr1a0.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpeukjr1a0.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpeukjr1a0.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeukjr1a0.cpp:2:\n/tmp/tmpeukjr1a0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeukjr1a0.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpeukjr1a0.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpeukjr1a0.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpeukjr1a0.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpeukjr1a0.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    int sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx1zf46j7.cpp:2:\n/tmp/tmpx1zf46j7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx1zf46j7.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpx1zf46j7.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpx1zf46j7.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpx1zf46j7.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpx1zf46j7.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpx1zf46j7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    Union_long_float result(sum);\n    result.f1 = average;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2ds5mx6a.cpp:2:\n/tmp/tmp2ds5mx6a.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2ds5mx6a.cpp:27:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   27 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp2ds5mx6a.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp2ds5mx6a.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp2ds5mx6a.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp2ds5mx6a.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp2ds5mx6a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 0; i <= number; i++) {\n        sum.f0 += i;\n    }\n    Union_long_float average = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmp9fjl_8pj.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp9fjl_8pj.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp9fjl_8pj.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp9fjl_8pj.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9fjl_8pj.cpp:2:\n/tmp/tmp9fjl_8pj.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9fjl_8pj.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp9fjl_8pj.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp9fjl_8pj.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp9fjl_8pj.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp9fjl_8pj.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum.f0 / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmp3mkb66uk.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp3mkb66uk.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp3mkb66uk.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp3mkb66uk.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp3mkb66uk.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3mkb66uk.cpp:2:\n/tmp/tmp3mkb66uk.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3mkb66uk.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp3mkb66uk.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp3mkb66uk.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp3mkb66uk.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp3mkb66uk.cpp:10:32",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for (long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpephhzmld.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpephhzmld.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpephhzmld.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpephhzmld.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpephhzmld.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpephhzmld.cpp:2:\n/tmp/tmpephhzmld.cpp: In function \u2018int main()\u2019:\n/tmp/tmpephhzmld.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpephhzmld.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpephhzmld.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpephhzmld.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpephhzmld.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp346j9xfw.cpp:2:\n/tmp/tmp346j9xfw.cpp: In function \u2018int main()\u2019:\n/tmp/tmp346j9xfw.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp346j9xfw.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp346j9xfw.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp346j9xfw.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp346j9xfw.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp346j9xfw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = (float)sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpsz73g969.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpsz73g969.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpsz73g969.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpsz73g969.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpsz73g969.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsz73g969.cpp:2:\n/tmp/tmpsz73g969.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsz73g969.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = (float)sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfn3ql5_i.cpp:2:\n/tmp/tmpfn3ql5_i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfn3ql5_i.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpfn3ql5_i.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpfn3ql5_i.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpfn3ql5_i.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpfn3ql5_i.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfn3ql5_i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for (long i = 0; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpe0fwc7tx.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpe0fwc7tx.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpe0fwc7tx.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpe0fwc7tx.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpe0fwc7tx.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe0fwc7tx.cpp:2:\n/tmp/tmpe0fwc7tx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe0fwc7tx.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpe0fwc7tx.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpe0fwc7tx.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpe0fwc7tx.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpe0fwc7tx.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / (float)number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpa3i1hapj.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpa3i1hapj.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpa3i1hapj.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpa3i1hapj.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa3i1hapj.cpp:2:\n/tmp/tmpa3i1hapj.cpp: In function \u2018int main()\u2019:\n/tmp/tmpa3i1hapj.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpa3i1hapj.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpa3i1hapj.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpa3i1hapj.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpa3i1hapj.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/tmp/tmpnz3g9wy4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnz3g9wy4.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpnz3g9wy4.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpnz3g9wy4.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpep9wwst9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpep9wwst9.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpep9wwst9.cpp:2:\n/tmp/tmpep9wwst9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpep9wwst9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/tmp/tmpnz3g9wy4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnz3g9wy4.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpnz3g9wy4.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpnz3g9wy4.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/tmp/tmpnz3g9wy4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnz3g9wy4.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpnz3g9wy4.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpnz3g9wy4.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpr9075vrl.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpr9075vrl.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpr9075vrl.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr9075vrl.cpp:2:\n/tmp/tmpr9075vrl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr9075vrl.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpr9075vrl.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpr9075vrl.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpr9075vrl.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpr9075vrl.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpgb4eiteb.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpgb4eiteb.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpgb4eiteb.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpgb4eiteb.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgb4eiteb.cpp:2:\n/tmp/tmpgb4eiteb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgb4eiteb.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuj4h2fq3.cpp:2:\n/tmp/tmpuj4h2fq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuj4h2fq3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpuj4h2fq3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpuj4h2fq3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpuj4h2fq3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpuj4h2fq3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpuj4h2fq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpse7p1471.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpse7p1471.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpse7p1471.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpse7p1471.cpp:2:\n/tmp/tmpse7p1471.cpp: In function \u2018int main()\u2019:\n/tmp/tmpse7p1471.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpse7p1471.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpse7p1471.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpse7p1471.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpse7p1471.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfbsc23df.cpp:2:\n/tmp/tmpfbsc23df.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfbsc23df.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpfbsc23df.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpfbsc23df.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpfbsc23df.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpfbsc23df.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfbsc23df.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = sum / (float)number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprwl84fpz.cpp:2:\n/tmp/tmprwl84fpz.cpp: In function \u2018int main()\u2019:\n/tmp/tmprwl84fpz.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmprwl84fpz.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmprwl84fpz.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmprwl84fpz.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmprwl84fpz.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmprwl84fpz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    float average = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = (float)sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpn76fjv5x.cpp:2:\n/tmp/tmpn76fjv5x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpn76fjv5x.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpn76fjv5x.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpn76fjv5x.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpn76fjv5x.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpn76fjv5x.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpn76fjv5x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpvmr17p8j.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpvmr17p8j.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpvmr17p8j.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvmr17p8j.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvmr17p8j.cpp:2:\n/tmp/tmpvmr17p8j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvmr17p8j.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpvmr17p8j.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpvmr17p8j.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmp4qzr0o6i.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp4qzr0o6i.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp4qzr0o6i.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qzr0o6i.cpp:2:\n/tmp/tmp4qzr0o6i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qzr0o6i.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpuj4h2fq3.cpp:2:\n/tmp/tmpuj4h2fq3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpuj4h2fq3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpuj4h2fq3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpuj4h2fq3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpuj4h2fq3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpuj4h2fq3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpuj4h2fq3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmp4qzr0o6i.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp4qzr0o6i.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp4qzr0o6i.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qzr0o6i.cpp:2:\n/tmp/tmp4qzr0o6i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qzr0o6i.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbn7xqw67.cpp:2:\n/tmp/tmpbn7xqw67.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbn7xqw67.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbn7xqw67.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbn7xqw67.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbn7xqw67.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbn7xqw67.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpbn7xqw67.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = (float)sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpm55flxnx.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpm55flxnx.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpm55flxnx.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpm55flxnx.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpm55flxnx.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpm55flxnx.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpm55flxnx.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpm55flxnx.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpm55flxnx.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpm55flxnx.cpp:2:\n/tmp/tmpm55flxnx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpm55flxnx.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpggej0to9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpggej0to9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpggej0to9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpggej0to9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpggej0to9.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpggej0to9.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpggej0to9.cpp:2:\n/tmp/tmpggej0to9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpggej0to9.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpggej0to9.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpggej0to9.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmp4qzr0o6i.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp4qzr0o6i.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp4qzr0o6i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4qzr0o6i.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp4qzr0o6i.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4qzr0o6i.cpp:2:\n/tmp/tmp4qzr0o6i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4qzr0o6i.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpthv1a3tm.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpthv1a3tm.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpthv1a3tm.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpthv1a3tm.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpthv1a3tm.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpthv1a3tm.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpthv1a3tm.cpp:2:\n/tmp/tmpthv1a3tm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpthv1a3tm.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpgb4eiteb.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpgb4eiteb.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpgb4eiteb.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpgb4eiteb.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgb4eiteb.cpp:2:\n/tmp/tmpgb4eiteb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgb4eiteb.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpgb4eiteb.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpgb4eiteb.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpgb4eiteb.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpgb4eiteb.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpgb4eiteb.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgb4eiteb.cpp:2:\n/tmp/tmpgb4eiteb.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgb4eiteb.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float) sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmp00_iq7sg.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp00_iq7sg.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp00_iq7sg.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp00_iq7sg.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp00_iq7sg.cpp:2:\n/tmp/tmp00_iq7sg.cpp: In function \u2018int main()\u2019:\n/tmp/tmp00_iq7sg.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp00_iq7sg.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp00_iq7sg.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp00_iq7sg.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp00_iq7sg.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpr9075vrl.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpr9075vrl.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpr9075vrl.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr9075vrl.cpp:2:\n/tmp/tmpr9075vrl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr9075vrl.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpr9075vrl.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpr9075vrl.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpr9075vrl.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpr9075vrl.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmppwf8qpbt.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmppwf8qpbt.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmppwf8qpbt.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmppwf8qpbt.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppwf8qpbt.cpp:2:\n/tmp/tmppwf8qpbt.cpp: In function \u2018int main()\u2019:\n/tmp/tmppwf8qpbt.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmppwf8qpbt.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmppwf8qpbt.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmppwf8qpbt.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmppwf8qpbt.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpdi6sjwyq.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdi6sjwyq.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdi6sjwyq.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdi6sjwyq.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdi6sjwyq.cpp:2:\n/tmp/tmpdi6sjwyq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdi6sjwyq.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdi6sjwyq.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdi6sjwyq.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdi6sjwyq.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdi6sjwyq.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpggej0to9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpggej0to9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpggej0to9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpggej0to9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpggej0to9.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpggej0to9.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpggej0to9.cpp:2:\n/tmp/tmpggej0to9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpggej0to9.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpggej0to9.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpggej0to9.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpep9wwst9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpep9wwst9.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpep9wwst9.cpp:2:\n/tmp/tmpep9wwst9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpep9wwst9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    return Union_long_float(sum.f0 / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmp9vn9zh_y.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp9vn9zh_y.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp9vn9zh_y.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp9vn9zh_y.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp9vn9zh_y.cpp:2:\n/tmp/tmp9vn9zh_y.cpp: In function \u2018int main()\u2019:\n/tmp/tmp9vn9zh_y.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp9vn9zh_y.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp9vn9zh_y.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp9vn9zh_y.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp9vn9zh_y.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/tmp/tmpnz3g9wy4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnz3g9wy4.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpnz3g9wy4.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpnz3g9wy4.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpnz3g9wy4.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnz3g9wy4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz_ye1870.cpp:2:\n/tmp/tmpz_ye1870.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz_ye1870.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpz_ye1870.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpz_ye1870.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpz_ye1870.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpz_ye1870.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpz_ye1870.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo33aulri.cpp:2:\n/tmp/tmpo33aulri.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo33aulri.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpo33aulri.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpo33aulri.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpo33aulri.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpo33aulri.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpo33aulri.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpwojvjyn3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpwojvjyn3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpwojvjyn3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpwojvjyn3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpwojvjyn3.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpwojvjyn3.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwojvjyn3.cpp:2:\n/tmp/tmpwojvjyn3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwojvjyn3.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpwojvjyn3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpwojvjyn3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 0; i < number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmp2_7dycxo.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp2_7dycxo.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp2_7dycxo.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp2_7dycxo.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2_7dycxo.cpp:2:\n/tmp/tmp2_7dycxo.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2_7dycxo.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp2_7dycxo.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp2_7dycxo.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp2_7dycxo.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp2_7dycxo.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpkv_jqml9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpkv_jqml9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpkv_jqml9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpkv_jqml9.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpkv_jqml9.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkv_jqml9.cpp:2:\n/tmp/tmpkv_jqml9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkv_jqml9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++) {\n        sum = sum + i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpzx_vl1iw.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpzx_vl1iw.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpzx_vl1iw.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpzx_vl1iw.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpzx_vl1iw.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpzx_vl1iw.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpzx_vl1iw.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpzx_vl1iw.cpp:19:19: error: no match for \u2018operator+\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum = sum + i;\n      |               ~~~ ^ ~\n      |               |     |\n      |               |     int\n      |               Union_long_float\n/tmp/tmpzx_vl1iw.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzx_vl1iw.cpp:2:\n/tmp/tmpzx_vl1iw.cpp: In funct",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpse7p1471.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpse7p1471.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpse7p1471.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpse7p1471.cpp:2:\n/tmp/tmpse7p1471.cpp: In function \u2018int main()\u2019:\n/tmp/tmpse7p1471.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpse7p1471.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpse7p1471.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpse7p1471.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpse7p1471.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(int i=1;i<=number;i++){\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0/number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmprpzduo2d.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmprpzduo2d.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmprpzduo2d.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmprpzduo2d.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmprpzduo2d.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmprpzduo2d.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmprpzduo2d.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmprpzduo2d.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmprpzduo2d.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprpzduo2d.cpp:2:\n/tmp/tmprpzduo2d.cpp: In function \u2018int main()\u2019:\n/tmp/tmprpzduo2d.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpbpi64vb3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpbpi64vb3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpbpi64vb3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpbpi64vb3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbpi64vb3.cpp:2:\n/tmp/tmpbpi64vb3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbpi64vb3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpbpi64vb3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpbpi64vb3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpbpi64vb3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpse7p1471.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpse7p1471.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpse7p1471.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpse7p1471.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpse7p1471.cpp:2:\n/tmp/tmpse7p1471.cpp: In function \u2018int main()\u2019:\n/tmp/tmpse7p1471.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpse7p1471.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpse7p1471.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpse7p1471.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpse7p1471.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpybaerint.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpybaerint.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpybaerint.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpybaerint.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpybaerint.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpybaerint.cpp:2:\n/tmp/tmpybaerint.cpp: In function \u2018int main()\u2019:\n/tmp/tmpybaerint.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for (int i = 0; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmpx342df18.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpx342df18.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpx342df18.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpx342df18.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpx342df18.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx342df18.cpp:2:\n/tmp/tmpx342df18.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx342df18.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpx342df18.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpx342df18.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpx342df18.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpx342df18.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpep9wwst9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpep9wwst9.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpep9wwst9.cpp:2:\n/tmp/tmpep9wwst9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpep9wwst9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum = sum + i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpvblfab4i.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpvblfab4i.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpvblfab4i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpvblfab4i.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpvblfab4i.cpp:19:19: error: no match for \u2018operator+\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum = sum + i;\n      |               ~~~ ^ ~\n      |               |     |\n      |               |     int\n      |               Union_long_float\n/tmp/tmpvblfab4i.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvblfab4i.cpp:2:\n/tmp/tmpvblfab4i.cpp: In funct",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpxni4akci.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpxni4akci.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpxni4akci.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpxni4akci.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxni4akci.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxni4akci.cpp:2:\n/tmp/tmpxni4akci.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxni4akci.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpf5hq5m80.cpp:2:\n/tmp/tmpf5hq5m80.cpp: In function \u2018int main()\u2019:\n/tmp/tmpf5hq5m80.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpf5hq5m80.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpf5hq5m80.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpf5hq5m80.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpf5hq5m80.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpf5hq5m80.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpvmr17p8j.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpvmr17p8j.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpvmr17p8j.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvmr17p8j.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvmr17p8j.cpp:2:\n/tmp/tmpvmr17p8j.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvmr17p8j.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpvmr17p8j.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpvmr17p8j.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpvmr17p8j.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    long sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    float average = (float)sum / number;\n    return Union_long_float(average);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/tmp/tmp0kaol88w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kaol88w.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp0kaol88w.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp0kaol88w.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp0kaol88w.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~~~~~~^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kaol88w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for(int i = 1; i <= number; i++){\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmpxu6tgd39.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpxu6tgd39.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpxu6tgd39.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxu6tgd39.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxu6tgd39.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpxu6tgd39.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxu6tgd39.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxu6tgd39.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpxu6tgd39.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxu6tgd39.cpp:2:\n/tmp/tmpxu6tgd39.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxu6tgd39.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp44tkn568.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp44tkn568.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp44tkn568.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp44tkn568.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp44tkn568.cpp:2:\n/tmp/tmp44tkn568.cpp: In function \u2018int main()\u2019:\n/tmp/tmp44tkn568.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp44tkn568.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp44tkn568.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp44tkn568.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp44tkn568.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for (long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = (float) sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmpmonz9yht.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpmonz9yht.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpmonz9yht.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpmonz9yht.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpmonz9yht.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpmonz9yht.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpmonz9yht.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpmonz9yht.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpmonz9yht.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmonz9yht.cpp:2:\n/tmp/tmpmonz9yht.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmonz9yht.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpep9wwst9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpep9wwst9.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpep9wwst9.cpp:2:\n/tmp/tmpep9wwst9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpep9wwst9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f1 += i;\n    }\n    sum.f1 /= number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmpvg9koxvq.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpvg9koxvq.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpvg9koxvq.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpvg9koxvq.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpvg9koxvq.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvg9koxvq.cpp:2:\n/tmp/tmpvg9koxvq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvg9koxvq.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpvg9koxvq.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpvg9koxvq.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpvg9koxvq.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpvg9koxvq.cpp:10:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpr9075vrl.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpr9075vrl.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmpr9075vrl.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpr9075vrl.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr9075vrl.cpp:2:\n/tmp/tmpr9075vrl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr9075vrl.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpr9075vrl.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpr9075vrl.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpr9075vrl.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpr9075vrl.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = (float)sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmp8fpibrt3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp8fpibrt3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp8fpibrt3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp8fpibrt3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8fpibrt3.cpp:2:\n/tmp/tmp8fpibrt3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8fpibrt3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp8fpibrt3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp8fpibrt3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp8fpibrt3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp8fpibrt3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmplrax19s5.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmplrax19s5.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmplrax19s5.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmplrax19s5.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplrax19s5.cpp:2:\n/tmp/tmplrax19s5.cpp: In function \u2018int main()\u2019:\n/tmp/tmplrax19s5.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmplrax19s5.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmplrax19s5.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmplrax19s5.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmplrax19s5.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    for(long i = 1; i <= number; i++) {\n        result.f0 += i;\n    }\n    result.f1 = (float)result.f0 / number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmp4l9kw68q.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp4l9kw68q.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmp4l9kw68q.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp4l9kw68q.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp4l9kw68q.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4l9kw68q.cpp:2:\n/tmp/tmp4l9kw68q.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4l9kw68q.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp4l9kw68q.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp4l9kw68q.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp4l9kw68q.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp4l9kw68q.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (long i = 1; i <= number; i++) {\n        sum.f1 += i;\n    }\n    sum.f1 /= number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmpee0hhge3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpee0hhge3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpee0hhge3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpee0hhge3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpee0hhge3.cpp:2:\n/tmp/tmpee0hhge3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpee0hhge3.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpee0hhge3.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpee0hhge3.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpee0hhge3.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpee0hhge3.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum = sum + i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmpmym9mlt3.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpmym9mlt3.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpmym9mlt3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpmym9mlt3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpmym9mlt3.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpmym9mlt3.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpmym9mlt3.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpmym9mlt3.cpp:19:19: error: no match for \u2018operator+\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum = sum + i;\n      |               ~~~ ^ ~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\n/tmp/tmpmym9mlt3.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmym9mlt3.cpp:2:\n/tmp/tmpmym9mlt3.cpp",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (long i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmp5bj61wjr.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp5bj61wjr.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmp5bj61wjr.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp5bj61wjr.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmp5bj61wjr.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bj61wjr.cpp:2:\n/tmp/tmp5bj61wjr.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bj61wjr.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for(int i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    sum.f1 = sum.f0 / number;\n    return sum;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1665509816,
      "stdout": "",
      "stderr": "/tmp/tmpdga46fqd.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpdga46fqd.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpdga46fqd.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpdga46fqd.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdga46fqd.cpp:2:\n/tmp/tmpdga46fqd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdga46fqd.cpp:25:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   25 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpdga46fqd.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmpdga46fqd.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmpdga46fqd.cpp:10:32: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018float\u2019\n   10 |     }    bool operator==(float f) {\n      |                          ~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    Union_long_float average = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    average = sum / number;\n    return Union_long_float(sum);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmpxsserq3s.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpxsserq3s.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpxsserq3s.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxsserq3s.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxsserq3s.cpp:17:32: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   17 |     Union_long_float average = 0;\n      |                                ^\n/tmp/tmpxsserq3s.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpxsserq3s.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpxsserq3s.cpp:19:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   19 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpxsserq3s.cpp:21:19: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   21 |     average = sum / number;\n      |               ~~~ ^ ~~~~~~\n      |               |     |\n      |               |     long int\n      |               Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxsserq3s.cpp:2:\n/tmp/tmpxsserq3s.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxsserq3s.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018U",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return sum / number;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmpggej0to9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpggej0to9.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmpggej0to9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpggej0to9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpggej0to9.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\n/tmp/tmpggej0to9.cpp:20:16: error: no match for \u2018operator/\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018long int\u2019)\n   20 |     return sum / number;\n      |            ~~~ ^ ~~~~~~\n      |            |     |\n      |            |     long int\n      |            Union_long_float\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpggej0to9.cpp:2:\n/tmp/tmpggej0to9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpggej0to9.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmpggej0to9.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmpggej0to9.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum = 0;\n    for (int i = 1; i <= number; i++) {\n        sum += i;\n    }\n    return Union_long_float(sum.f0 / number);\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122686,
      "stdout": "",
      "stderr": "/tmp/tmp3mkb66uk.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmp3mkb66uk.cpp:16:28: error: conversion from \u2018int\u2019 to \u2018Union_long_float\u2019 is ambiguous\n   16 |     Union_long_float sum = 0;\n      |                            ^\n/tmp/tmp3mkb66uk.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmp3mkb66uk.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmp3mkb66uk.cpp:18:13: error: no match for \u2018operator+=\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018int\u2019)\n   18 |         sum += i;\n      |         ~~~~^~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3mkb66uk.cpp:2:\n/tmp/tmp3mkb66uk.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3mkb66uk.cpp:24:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   24 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmp3mkb66uk.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmp3mkb66uk.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmp3mkb66uk.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmp3mkb66uk.cpp:10:32",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float result(0);\n    result.f0 = number * (number + 1) / 2;\n    result.f1 = result.f0 / (float)number;\n    return result;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122701,
      "stdout": "",
      "stderr": "/tmp/tmps3k8r7q7.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmps3k8r7q7.cpp:16:30: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float result(0);\n      |                              ^\n/tmp/tmps3k8r7q7.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmps3k8r7q7.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmps3k8r7q7.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps3k8r7q7.cpp:2:\n/tmp/tmps3k8r7q7.cpp: In function \u2018int main()\u2019:\n/tmp/tmps3k8r7q7.cpp:23:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   23 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |            ~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~~~~\n      |                     |                        |\n      |                     Union_long_float         std::tuple<int, double>\n/tmp/tmps3k8r7q7.cpp:8:10: note: candidate: \u2018bool Union_long_float::operator==(long int)\u2019\n    8 |     bool operator==(long f) {\n      |          ^~~~~~~~\n/tmp/tmps3k8r7q7.cpp:8:26: note:   no known conversion for argument 1 from \u2018std::tuple<int, double>\u2019 to \u2018long int\u2019\n    8 |     bool operator==(long f) {\n      |                     ~~~~~^\n/tmp/tmps3k8r7q7.cpp:10:15: note: candidate: \u2018bool Union_long_float::operator==(float)\u2019\n   10 |     }    bool operator==(float f) {\n      |               ^~~~~~~~\n/tmp/tmps3k8r7q7.c",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_long_float{\n    long f0;\n    float f1;    Union_long_float(long _f0) : f0(_f0) {}\n    Union_long_float(float _f1) : f1(_f1) {}\n    ~Union_long_float() {}\n    bool operator==(long f) {\n        return f0 == f ;\n    }    bool operator==(float f) {\n        return f1 == f ;\n    }\n};\n// Write a function to find sum and average of first n natural numbers.\nUnion_long_float sum_average(long number) {\n    Union_long_float sum(0);\n    Union_long_float average(0);\n    for(long i = 1; i <= number; i++) {\n        sum.f0 += i;\n    }\n    average.f1 = sum.f0 / number;\n    return average;\n}\nint main() {\n    auto candidate = sum_average;\n    assert(candidate((10)) == std::make_tuple(55, 5.5));\n    assert(candidate((15)) == std::make_tuple(120, 8.0));\n    assert(candidate((20)) == std::make_tuple(210, 10.5));\n}\n",
      "timestamp": 1666122671,
      "stdout": "",
      "stderr": "/tmp/tmpep9wwst9.cpp: In function \u2018Union_long_float sum_average(long int)\u2019:\n/tmp/tmpep9wwst9.cpp:16:27: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   16 |     Union_long_float sum(0);\n      |                           ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:17:31: error: call of overloaded \u2018Union_long_float(int)\u2019 is ambiguous\n   17 |     Union_long_float average(0);\n      |                               ^\n/tmp/tmpep9wwst9.cpp:6:5: note: candidate: \u2018Union_long_float::Union_long_float(float)\u2019\n    6 |     Union_long_float(float _f1) : f1(_f1) {}\n      |     ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:5:18: note: candidate: \u2018Union_long_float::Union_long_float(long int)\u2019\n    5 |     float f1;    Union_long_float(long _f0) : f0(_f0) {}\n      |                  ^~~~~~~~~~~~~~~~\n/tmp/tmpep9wwst9.cpp:3:7: note: candidate: \u2018constexpr Union_long_float::Union_long_float(const Union_long_float&)\u2019\n    3 | union Union_long_float{\n      |       ^~~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpep9wwst9.cpp:2:\n/tmp/tmpep9wwst9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpep9wwst9.cpp:26:28: error: no match for \u2018operator==\u2019 (operand types are \u2018Union_long_float\u2019 and \u2018std::tuple<int, double>\u2019)\n   26 |     assert(candidate((10)) == std::make_tuple(55, 5.5));\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_160_find_solution",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmphzc7s6ki.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphzc7s6ki.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphzc7s6ki.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmphzc7s6ki.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphzc7s6ki.cpp:2:\n/tmp/tmphzc7s6ki.cpp: In function \u2018int main()\u2019:\n/tmp/tmphzc7s6ki.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphzc7s6ki.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0 && n == 0) {\n        return std::nullopt;\n    }\n    if (a == 0 && b == 0 && n != 0) {\n        return std::nullopt;\n    }\n    if (a == 0 && b != 0) {\n        if (n % b == 0) {\n            return std::make_tuple(0, n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0 && a != 0) {\n        if (n % a == 0) {\n            return std::make_tuple(n / a, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = 0;\n    long y = 0;\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / gcd;\n    long b1 = b / gcd;\n    long n1 = n / gcd;\n    long x1 = 0;\n    long y1 = 0;\n    long x2 = 1;\n    long y2 = 0;\n    while (a1 != 0) {\n        long q = b1 / a1;\n        long r = b1 % a1;\n        long x = x2 - q * x1;\n        long y = y2 - q * y1;\n        b1 = a1;\n        a1 = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    if (b1 == 1) {\n        x = x2 * n1;\n        y = y2 * n1;\n        return std::make_tuple(x, y);\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpvxj95k5y.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpvxj95k5y.cpp:13:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, long int}]((n / b))\u2019 from \u2018std::tuple<int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   13 |             return std::make_tuple(0, n / b);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<int, long int>\n/tmp/tmpvxj95k5y.cpp:20:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int, int}](0)\u2019 from \u2018std::tuple<long int, int>\u2019 to \u2018std::optional<long int>\u2019\n   20 |             return std::make_tuple(n / a, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<long int, int>\n/tmp/tmpvxj95k5y.cpp:53:31: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   53 |         return std::make_tuple(x, y);\n      |                ~~~~~~~~~~~~~~~^~~~~~\n      |                               |\n      |                               std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvxj95k5y.cpp:2:\n/tmp/tmpvxj95k5y.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvxj95k5y.cpp:59:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   59 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::opti",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpy7tq_rdn.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpy7tq_rdn.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpy7tq_rdn.cpp:2:\n/tmp/tmpy7tq_rdn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpy7tq_rdn.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpy7tq_rdn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    long a1 = a / d, b1 = b / d, n1 = n / d;\n    long r1 = 1, r2 = 0, r = a1;\n    long q = b1 / r;\n    long s1 = 0, s2 = 1, s = b1;\n    while (r != 0) {\n        long t = s - q * r;\n        s = r;\n        r = t;\n        t = s1 - q * r1;\n        s1 = r1;\n        r1 = t;\n        t = s2 - q * r2;\n        s2 = r2;\n        r2 = t;\n        q = s / r;\n    }\n    x = n1 * s1 / s;\n    y = n1 * s2 / s;\n    return std::make_pair(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpwz6rn4xz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpwz6rn4xz.cpp:28:26: error: could not convert \u2018std::make_pair<long int&, long int&>(x, y)\u2019 from \u2018std::pair<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   28 |     return std::make_pair(x, y);\n      |            ~~~~~~~~~~~~~~^~~~~~\n      |                          |\n      |                          std::pair<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwz6rn4xz.cpp:2:\n/tmp/tmpwz6rn4xz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwz6rn4xz.cpp:32:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   32 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwz6rn4xz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylak",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::__gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n    while (a % d != 0 || b % d != 0) {\n        long q = a / d;\n        long r = a % d;\n        long x = x2 - q * x1;\n        long y = y2 - q * y1;\n        a = d;\n        b = r;\n        d = std::__gcd(a, b);\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2 * (n / d);\n    y = y2 * (n / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmcyaph1a.cpp:2:\n/tmp/tmpmcyaph1a.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmcyaph1a.cpp:30:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   30 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpmcyaph1a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmcyaph1a.cpp:2:\n/tmp/tmpmcyaph1a.cpp:30:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   30 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmptfffjucy.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptfffjucy.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmptfffjucy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmptfffjucy.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptfffjucy.cpp:2:\n/tmp/tmptfffjucy.cpp: In function \u2018int main()\u2019:\n/tmp/tmptfffjucy.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptfffjucy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = __gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmp78mhoq3m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp78mhoq3m.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmp78mhoq3m.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmp78mhoq3m.cpp:9:14: error: \u2018__gcd\u2019 was not declared in this scope\n    9 |     long d = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmp78mhoq3m.cpp:9:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmp78mhoq3m.cpp:12:27: error: could n",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    long x, y;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g);\n    return {y, x - y * (a / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpymuwyjg5.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpymuwyjg5.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpymuwyjg5.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpymuwyjg5.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpymuwyjg5.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / g, a / g, n / g);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpymuwyjg5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmphsiiw3cf.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphsiiw3cf.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphsiiw3cf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmphsiiw3cf.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphsiiw3cf.cpp:2:\n/tmp/tmphsiiw3cf.cpp: In function \u2018int main()\u2019:\n/tmp/tmphsiiw3cf.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphsiiw3cf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>(0) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>(n / b) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>(n / a) : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n);\n    return std::optional<long>(x - (a / b) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpn106f4_p.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpn106f4_p.cpp:22:47: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   22 |     std::tie(x, y) = find_solution(b, a % b, n);\n      |                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpn106f4_p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = n / b;\n    while (x * a + y * b < n) {\n        ++x;\n        --y;\n    }\n    while (x * a + y * b > n) {\n        --x;\n        ++y;\n    }\n    if (x * a + y * b == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp68qm2k_p.cpp:2:\n/tmp/tmp68qm2k_p.cpp: In function \u2018int main()\u2019:\n/tmp/tmp68qm2k_p.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp68qm2k_p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp68qm2k_p.cpp:2:\n/tmp/tmp68qm2k_p.cpp:50:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpczk7mrxn.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpczk7mrxn.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpczk7mrxn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpczk7mrxn.cpp:10:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   10 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpczk7mrxn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpczk7mrxn.cpp:13:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   13 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpczk7mrxn.cpp:2:\n/tmp/tmpczk7mrxn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpczk7mrxn.cpp:17:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   17 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        return std::nullopt;\n    }\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    long a1 = a / d, b1 = b / d, n1 = n / d;\n    extended_euclid(a1, b1, x, y);\n    x *= n1;\n    y *= n1;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmp6vxdci7_.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp6vxdci7_.cpp:20:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   20 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp6vxdci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp6vxdci7_.cpp:24:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   24 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp6vxdci7_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp6vxdci7_.cpp:26:5: error: \u2018extended_euclid\u2019 was not declared in this scope\n   26 |     extended_euclid(a1, b1, x, y);\n      |     ^~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6vxdci7_.cpp:2:\n/tmp/tmp6vxdci7_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6vxdci7_.cpp:33:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   33 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x, y;\n    long d = extended_gcd(a, b, x, y);\n    return std::make_optional(x * (n / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmp37d4kg8o.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp37d4kg8o.cpp:26:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   26 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp37d4kg8o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp37d4kg8o.cpp:30:14: error: \u2018extended_gcd\u2019 was not declared in this scope\n   30 |     long d = extended_gcd(a, b, x, y);\n      |              ^~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp37d4kg8o.cpp:2:\n/tmp/tmp37d4kg8o.cpp: In function \u2018int main()\u2019:\n/tmp/tmp37d4kg8o.cpp:35:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp37d4kg8o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpo7iq6twd.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpo7iq6twd.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpo7iq6twd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpo7iq6twd.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpo7iq6twd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpo7iq6twd.cpp:12:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpo7iq6twd.cpp:2:\n/tmp/tmpo7iq6twd.cpp: In function \u2018int main()\u2019:\n/tmp/tmpo7iq6twd.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n    ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 1;\n    long x1 = 1, y1 = 0;\n    while (a % b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x2 = x0 - q * x1;\n        long y2 = y0 - q * y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n        a = b;\n        b = r;\n    }\n    long x = x1 * (n / d);\n    long y = y1 * (n / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/tmp/tmp3v37w6re.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3v37w6re.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/tmp/tmp3v37w6re.cpp:50:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        return n == b ? std::make_optional(0) : std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + x.value());\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5297eym7.cpp:2:\n/tmp/tmp5297eym7.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5297eym7.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp5297eym7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5297eym7.cpp:2:\n/tmp/tmp5297eym7.cpp:16:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return {};\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return {};\n    }\n    x = (n - b * y) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpleguwki7.cpp:2:\n/tmp/tmpleguwki7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpleguwki7.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpleguwki7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpleguwki7.cpp:2:\n/tmp/tmpleguwki7.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpx6lrxzto.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpx6lrxzto.cpp:12:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx6lrxzto.cpp:2:\n/tmp/tmpx6lrxzto.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx6lrxzto.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpx6lrxzto.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpumfxmll7.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpumfxmll7.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpumfxmll7.cpp:2:\n/tmp/tmpumfxmll7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpumfxmll7.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpumfxmll7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    return std::nullopt;\n  }\n  if (a == 0) {\n    return n / b;\n  }\n  if (b == 0) {\n    return n / a;\n  }\n  long g = std::gcd(a, b);\n  if (n % g != 0) {\n    return std::nullopt;\n  }\n  a /= g;\n  b /= g;\n  n /= g;\n  long x = 0;\n  long y = n / b;\n  while (x * a + y * b < n) {\n    x++;\n    y--;\n  }\n  return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmp5bs4ynbt.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp5bs4ynbt.cpp:27:25: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   27 |   return std::make_tuple(x, y);\n      |          ~~~~~~~~~~~~~~~^~~~~~\n      |                         |\n      |                         std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5bs4ynbt.cpp:2:\n/tmp/tmp5bs4ynbt.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5bs4ynbt.cpp:31:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   31 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp5bs4ynbt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/i",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    while (p % a != 0) {\n        q += b / g;\n        p += n;\n    }\n    return std::make_optional(p / a - q * (b / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk1mr5533.cpp:2:\n/tmp/tmpk1mr5533.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk1mr5533.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpk1mr5533.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk1mr5533.cpp:2:\n/tmp/tmpk1mr5533.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{n / b} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d);\n    return std::optional<long>{x * (a / d) + y * (b / d)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpx77o_3c2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpx77o_3c2.cpp:19:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   19 |     std::tie(x, y) = find_solution(b / d, a / d, n / d);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpx77o_3c2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long a1 = a / d, b1 = b / d, n1 = n / d;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1);\n    return std::make_optional(b1 * x + (a1 % b1) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpjg_s38bz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpjg_s38bz.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpjg_s38bz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk5wj98_5.cpp:2:\n/tmp/tmpk5wj98_5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk5wj98_5.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpk5wj98_5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk5wj98_5.cpp:2:\n/tmp/tmpk5wj98_5.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    long a1 = a / d;\n    long b1 = b / d;\n    long n1 = n / d;\n    extended_euclid(a1, b1, x, y);\n    return std::make_optional(x * n1);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmphwdm611m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphwdm611m.cpp:35:5: error: \u2018extended_euclid\u2019 was not declared in this scope\n   35 |     extended_euclid(a1, b1, x, y);\n      |     ^~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphwdm611m.cpp:2:\n/tmp/tmphwdm611m.cpp: In function \u2018int main()\u2019:\n/tmp/tmphwdm611m.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphwdm611m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphwdm611m.cpp:2:\n/tmp/tmphwdm611m.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018cons",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += b / gcd;\n        } else {\n            y -= a / gcd;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwp9izskm.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long g = __gcd(a, b);\n    while (x < n / a) {\n        if ((n - a * x) % b == 0) {\n            return std::make_tuple(x, (n - a * x) / b);\n        }\n        x += b / g;\n        y -= a / g;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmphy0m3ts0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphy0m3ts0.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmphy0m3ts0.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmphy0m3ts0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphy0m3ts0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmphy0m3ts0.cpp:10:14: error: \u2018__gcd\u2019 was not declared in this scope\n   10 |     long g = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmphy0m3ts0.cpp:10:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmphy0m3ts0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphy0m3ts0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmphy0m3ts0.cpp:13:35: error: could",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / g, a / g, n / g).value();\n    return std::make_optional(std::make_pair(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpztbzs95o.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpztbzs95o.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / g, a / g, n / g).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpztbzs95o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x += b / gcd;\n        } else {\n            y -= a / gcd;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwp9izskm.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9izskm.cpp:2:\n/tmp/tmpwp9izskm.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        return std::nullopt;\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmp31bamylb.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp31bamylb.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp31bamylb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::__gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpsqqe_92i.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsqqe_92i.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsqqe_92i.cpp:2:\n/tmp/tmpsqqe_92i.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsqqe_92i.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpsqqe_92i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0, y = 0;\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long d = gcd(a, b);\n    x = (n / d) * (b / d);\n    y = (n / d) * (a / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmphlk23q5w.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphlk23q5w.cpp:6:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    6 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphlk23q5w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmphlk23q5w.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphlk23q5w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphlk23q5w.cpp:2:\n/tmp/tmphlk23q5w.cpp: In function \u2018int main()\u2019:\n/tmp/tmphlk23q5w.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return {y, x - y * (a / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpyh_wcicp.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpyh_wcicp.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpyh_wcicp.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpyh_wcicp.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpyh_wcicp.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpyh_wcicp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    x = (n - b * y) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj7radd4q.cpp:2:\n/tmp/tmpj7radd4q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj7radd4q.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpj7radd4q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj7radd4q.cpp:2:\n/tmp/tmpj7radd4q.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return {};\n    }\n    x = (n - b * y) / a;\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmp83ig8rem.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp83ig8rem.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmp83ig8rem.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmp83ig8rem.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmp83ig8rem.cpp:42:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   42 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp83ig8rem.cpp:2:\n/tmp/tmp83ig8rem.cpp: In function \u2018int main()\u2019:\n/tmp/tmp83ig8rem.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     st",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        return n / b;\n    }\n    if (b == 0) {\n        return n / a;\n    }\n    if (n % (a * b) == 0) {\n        return n / (a * b);\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2z_k4dth.cpp:2:\n/tmp/tmp2z_k4dth.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2z_k4dth.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp2z_k4dth.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2z_k4dth.cpp:2:\n/tmp/tmp2z_k4dth.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    return std::nullopt;\n  }\n  if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (n % std::__gcd(a, b) != 0) {\n    return std::nullopt;\n  }\n  long x = 0;\n  long y = n / b;\n  while (a * x + b * y != n) {\n    if (a * x + b * y < n) {\n      x++;\n    } else {\n      y--;\n    }\n  }\n  return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpowczpk5d.cpp:2:\n/tmp/tmpowczpk5d.cpp: In function \u2018int main()\u2019:\n/tmp/tmpowczpk5d.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpowczpk5d.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpowczpk5d.cpp:2:\n/tmp/tmpowczpk5d.cpp:38:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    std::optional<long> x = find_solution(b1, a1 % b1, n1);\n    if (x) {\n        return std::make_optional(x.value() * a1);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb238x4y3.cpp:2:\n/tmp/tmpb238x4y3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb238x4y3.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpb238x4y3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb238x4y3.cpp:2:\n/tmp/tmpb238x4y3.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    std::optional<long> x = find_solution(b / d, a / d, n / d);\n    if (x) {\n        return std::make_optional(x.value() * b / d);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptf1cntm_.cpp:2:\n/tmp/tmptf1cntm_.cpp: In function \u2018int main()\u2019:\n/tmp/tmptf1cntm_.cpp:39:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   39 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptf1cntm_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptf1cntm_.cpp:2:\n/tmp/tmptf1cntm_.cpp:39:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   39 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    x = (n - b * y) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_ijzkq08.cpp:2:\n/tmp/tmp_ijzkq08.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_ijzkq08.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp_ijzkq08.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_ijzkq08.cpp:2:\n/tmp/tmp_ijzkq08.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x.has_value()) {\n        return std::nullopt;\n    }\n    return std::make_optional(x.value() - (b / a) * (n / a));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdl4dps6x.cpp:2:\n/tmp/tmpdl4dps6x.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdl4dps6x.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpdl4dps6x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdl4dps6x.cpp:2:\n/tmp/tmpdl4dps6x.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        return std::nullopt;\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    std::optional<long> x = find_solution(b1, a1 % b1, n1);\n    if (x.has_value()) {\n        return std::make_optional(x.value() * a1 + (n1 - x.value() * b1) / a1);\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8kn7bz8_.cpp:2:\n/tmp/tmp8kn7bz8_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8kn7bz8_.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8kn7bz8_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8kn7bz8_.cpp:2:\n/tmp/tmp8kn7bz8_.cpp:38:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (y < 0) {\n            return std::nullopt;\n        }\n        x += 1;\n        y = (n - a * x) / b;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq6xjihkl.cpp:2:\n/tmp/tmpq6xjihkl.cpp: In function \u2018int main()\u2019:\n/tmp/tmpq6xjihkl.cpp:35:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpq6xjihkl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpq6xjihkl.cpp:2:\n/tmp/tmpq6xjihkl.cpp:35:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   35 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    // ax + by = n\n    // ax = n - by\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x = (n - by) / a\n    // x\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmpqymv1kt9.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpqymv1kt9.cpp:49:1: warning: no return statement in function returning non-void [-Wreturn-type]\n   49 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqymv1kt9.cpp:2:\n/tmp/tmpqymv1kt9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpqymv1kt9.cpp:52:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   52 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpqymv1kt9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpqymv1kt9.cpp:2:\n/tmp/tmpqymv1kt9.cpp:52:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpumfxmll7.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpumfxmll7.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpumfxmll7.cpp:2:\n/tmp/tmpumfxmll7.cpp: In function \u2018int main()\u2019:\n/tmp/tmpumfxmll7.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpumfxmll7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>(0) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>(n / b) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>(n / a) : std::nullopt;\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n    return std::optional<long>((x * (b / g) + y * (a / g)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmphjc4fvbz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphjc4fvbz.cpp:19:63: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   19 |     std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n      |                                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmphjc4fvbz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    return {y, x - y * (a / b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmposghq6ev.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmposghq6ev.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmposghq6ev.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmposghq6ev.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmposghq6ev.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmposghq6ev.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, cons",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    return std::make_optional(n / g);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkpzuduij.cpp:2:\n/tmp/tmpkpzuduij.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkpzuduij.cpp:34:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   34 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpkpzuduij.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkpzuduij.cpp:2:\n/tmp/tmpkpzuduij.cpp:34:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   34 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long r = a % b;\n    while (r > 0) {\n        long q = a / b;\n        long t = x - q * y;\n        x = y;\n        y = t;\n        a = b;\n        b = r;\n        r = a % b;\n    }\n    return std::make_optional(x * (n / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnhimmjgf.cpp:2:\n/tmp/tmpnhimmjgf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnhimmjgf.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnhimmjgf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnhimmjgf.cpp:2:\n/tmp/tmpnhimmjgf.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::__gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long g = std::__gcd(a, b);\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmp0zv1pe03.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp0zv1pe03.cpp:18:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   18 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0zv1pe03.cpp:2:\n/tmp/tmp0zv1pe03.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0zv1pe03.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0zv1pe03.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-s",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_tuple(0, n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_tuple(n / a, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = 0;\n    long y = 0;\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    a /= gcd;\n    b /= gcd;\n    n /= gcd;\n    while (a * x <= n) {\n        if ((n - a * x) % b == 0) {\n            y = (n - a * x) / b;\n            return std::make_tuple(x, y);\n        }\n        x++;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmpsr4_4h5u.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsr4_4h5u.cpp:10:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, long int}]((n / b))\u2019 from \u2018std::tuple<int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   10 |             return std::make_tuple(0, n / b);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<int, long int>\n/tmp/tmpsr4_4h5u.cpp:17:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int, int}](0)\u2019 from \u2018std::tuple<long int, int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |             return std::make_tuple(n / a, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<long int, int>\n/tmp/tmpsr4_4h5u.cpp:34:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   34 |             return std::make_tuple(x, y);\n      |                    ~~~~~~~~~~~~~~~^~~~~~\n      |                                   |\n      |                                   std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsr4_4h5u.cpp:2:\n/tmp/tmpsr4_4h5u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsr4_4h5u.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |              ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt2pwcbno.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzmws208e.cpp:2:\n/tmp/tmpzmws208e.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzmws208e.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpzmws208e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzmws208e.cpp:2:\n/tmp/tmpzmws208e.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return {0, 0};\n    } else {\n      return {};\n    }\n  }\n  if (a == 0) {\n    if (n % b == 0) {\n      return {0, n / b};\n    } else {\n      return {};\n    }\n  }\n  if (b == 0) {\n    if (n % a == 0) {\n      return {n / a, 0};\n    } else {\n      return {};\n    }\n  }\n  long x, y;\n  long g = std::__gcd(a, b);\n  if (n % g != 0) {\n    return {};\n  }\n  a /= g;\n  b /= g;\n  n /= g;\n  std::tie(x, y) = find_solution(b, a % b, n);\n  return {y, x - (a / b) * y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmplmg8l3rz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmplmg8l3rz.cpp:7:19: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |       return {0, 0};\n      |                   ^\n      |                   |\n      |                   <brace-enclosed initializer list>\n/tmp/tmplmg8l3rz.cpp:14:23: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |       return {0, n / b};\n      |                       ^\n      |                       |\n      |                       <brace-enclosed initializer list>\n/tmp/tmplmg8l3rz.cpp:21:23: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |       return {n / a, 0};\n      |                       ^\n      |                       |\n      |                       <brace-enclosed initializer list>\n/tmp/tmplmg8l3rz.cpp:34:45: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   34 |   std::tie(x, y) = find_solution(b, a % b, n);\n      |                                             ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmplmg8l3rz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typenam",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 1, y = 0;\n    long x1 = 0, y1 = 1;\n    long q, r, m, n1;\n    while (a != 0) {\n        q = b / a;\n        r = b % a;\n        m = x - q * x1;\n        n1 = y - q * y1;\n        x = x1;\n        y = y1;\n        x1 = m;\n        y1 = n1;\n        b = a;\n        a = r;\n    }\n    if (b == 1) {\n        return std::make_optional(x * n);\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpot_zbicx.cpp:2:\n/tmp/tmpot_zbicx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpot_zbicx.cpp:27:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   27 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpot_zbicx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpot_zbicx.cpp:2:\n/tmp/tmpot_zbicx.cpp:27:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   27 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmp90qryzjg.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp90qryzjg.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp90qryzjg.cpp:2:\n/tmp/tmp90qryzjg.cpp: In function \u2018int main()\u2019:\n/tmp/tmp90qryzjg.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp90qryzjg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    x = (n - y * a) / b;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjqaqdt_r.cpp:2:\n/tmp/tmpjqaqdt_r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpjqaqdt_r.cpp:39:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   39 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpjqaqdt_r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpjqaqdt_r.cpp:2:\n/tmp/tmpjqaqdt_r.cpp:39:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   39 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return {0, n / b};\n        } else {\n            return {};\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return {n / a, 0};\n        } else {\n            return {};\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return {};\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = n;\n    while (y >= 0) {\n        long t = a * x + b * y;\n        if (t == n) {\n            return {x, y};\n        }\n        if (t < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return {};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmpwcpm32h5.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpwcpm32h5.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmpwcpm32h5.cpp:14:29: error: could not convert \u2018{0, (n / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return {0, n / b};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpwcpm32h5.cpp:21:29: error: could not convert \u2018{(n / a), 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return {n / a, 0};\n      |                             ^\n      |                             |\n      |                             <brace-enclosed initializer list>\n/tmp/tmpwcpm32h5.cpp:37:25: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   37 |             return {x, y};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwcpm32h5.cpp:2:\n/tmp/tmpwcpm32h5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwcpm32h5.cpp:49:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   49 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(b1 * x + (a1 % b1) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmp8fhg6qiy.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp8fhg6qiy.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp8fhg6qiy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmphsiiw3cf.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphsiiw3cf.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphsiiw3cf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmphsiiw3cf.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphsiiw3cf.cpp:2:\n/tmp/tmphsiiw3cf.cpp: In function \u2018int main()\u2019:\n/tmp/tmphsiiw3cf.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphsiiw3cf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = 0;\n    long d = 1;\n    while (d <= n) {\n        d *= 2;\n    }\n    d /= 2;\n    while (d > 0) {\n        if (x + d <= n) {\n            x += d;\n            y += a * d / b;\n        }\n        d /= 2;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr0g0nwwh.cpp:2:\n/tmp/tmpr0g0nwwh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr0g0nwwh.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpr0g0nwwh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr0g0nwwh.cpp:2:\n/tmp/tmpr0g0nwwh.cpp:50:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::make_optional(0) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::make_optional(n / b) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::make_optional(n / a) : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y, x - y * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmpavqun23n.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpavqun23n.cpp:19:63: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   19 |     std::tie(x, y) = find_solution(b / d, a / d, n / d).value();\n      |                                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpavqun23n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxay8g6y0.cpp:2:\n/tmp/tmpxay8g6y0.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxay8g6y0.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpxay8g6y0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxay8g6y0.cpp:2:\n/tmp/tmpxay8g6y0.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::optional<long>{0};\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::optional<long>{0, n / b};\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::optional<long>{n / a, 0};\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    long q = 0, r = 0;\n    while (b != 0) {\n        q = a / b;\n        r = a % b;\n        x0 = x2;\n        y0 = y2;\n        x2 = x1 - q * x2;\n        y2 = y1 - q * y2;\n        x1 = x0;\n        y1 = y0;\n        a = b;\n        b = r;\n    }\n    return std::optional<long>{x1 * (n / g), y1 * (n / g)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmp_v_p_e2_.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp_v_p_e2_.cpp:14:48: error: no matching function for call to \u2018std::optional<long int>::optional(<brace-enclosed initializer list>)\u2019\n   14 |             return std::optional<long>{0, n / b};\n      |                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/node_handle.h:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/hashtable.h:37,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/unordered_map:46,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp_v_p_e2_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/optional:768:2: note: candidate: \u2018template<class _Up, class ... _Args, typename std::enable_if<__and_v<std::is_constructible<long int, std::initializer_list<_Tp>&, _Args&& ...> >, bool>::type <anonymous> > constexpr std::optional<_Tp>::optional(std::in_place_t, std::initializer_list<_Up>, _Args&& ...)\u2019\n  768 |  optional(in_place_t, initializer_list<_Up> __il, _Args&&... __args)\n      |  ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/optional:768:2: note:   template argument deduction/substitution failed:\n/tmp/tmp_v_p_e2_.cpp:14:48: note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\n   14 |             return std::optional<long>{0, n / b};\n      |                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/node_handle.h:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::__gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long g = std::__gcd(a, b);\n    a /= g;\n    b /= g;\n    n /= g;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x = x1 - q * x2;\n        long y = y1 - q * y2;\n        a = b;\n        b = r;\n        x1 = x2;\n        x2 = x;\n        y1 = y2;\n        y2 = y;\n    }\n    x = x1 * n;\n    y = y1 * n;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeyw80_41.cpp:2:\n/tmp/tmpeyw80_41.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeyw80_41.cpp:33:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   33 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpeyw80_41.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeyw80_41.cpp:2:\n/tmp/tmpeyw80_41.cpp:33:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   33 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n);\n    if (x) {\n        return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + x.value());\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwjuyd0il.cpp:2:\n/tmp/tmpwjuyd0il.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwjuyd0il.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpwjuyd0il.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwjuyd0il.cpp:2:\n/tmp/tmpwjuyd0il.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(b1 * x + (a1 % b1) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmp8fhg6qiy.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp8fhg6qiy.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp8fhg6qiy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_vdgtwkd.cpp:2:\n/tmp/tmp_vdgtwkd.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_vdgtwkd.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp_vdgtwkd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_vdgtwkd.cpp:2:\n/tmp/tmp_vdgtwkd.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n        if (y < 0) {\n            return std::nullopt;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2yalcms3.cpp:2:\n/tmp/tmp2yalcms3.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2yalcms3.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp2yalcms3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2yalcms3.cpp:2:\n/tmp/tmp2yalcms3.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(b1 * x + (a1 % b1) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmp8fhg6qiy.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp8fhg6qiy.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp8fhg6qiy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::__gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmp1iar9_6f.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp1iar9_6f.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1iar9_6f.cpp:2:\n/tmp/tmp1iar9_6f.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1iar9_6f.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp1iar9_6f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x, y;\n    long g = gcdExtended(a, b, &x, &y);\n    x = x * (n / g);\n    y = y * (n / g);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmp6ll35_5x.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp6ll35_5x.cpp:26:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   26 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp6ll35_5x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp6ll35_5x.cpp:30:14: error: \u2018gcdExtended\u2019 was not declared in this scope\n   30 |     long g = gcdExtended(a, b, &x, &y);\n      |              ^~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6ll35_5x.cpp:2:\n/tmp/tmp6ll35_5x.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6ll35_5x.cpp:37:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   37 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp6ll35_5x.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const s",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long d = gcd(a, b);\n    while (y * b < n) {\n        y++;\n    }\n    x = (n - y * b) / a;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmp10cgkzy2.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp10cgkzy2.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp10cgkzy2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp10cgkzy2.cpp:10:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   10 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp10cgkzy2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp10cgkzy2.cpp:15:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   15 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp10cgkzy2.cpp:2:\n/tmp/tmp10cgkzy2.cpp: In function \u2018int main()\u2019:\n/tmp/tmp10cgkzy2.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmppd9bqxry.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmppd9bqxry.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppd9bqxry.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppd9bqxry.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppd9bqxry.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmppd9bqxry.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppd9bqxry.cpp:2:\n/tmp/tmppd9bqxry.cpp: In function \u2018int main()\u2019:\n/tmp/tmppd9bqxry.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp482v87vv.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp482v87vv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    return std::make_optional(y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdm6mbx47.cpp:2:\n/tmp/tmpdm6mbx47.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdm6mbx47.cpp:45:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   45 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpdm6mbx47.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdm6mbx47.cpp:2:\n/tmp/tmpdm6mbx47.cpp:45:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   45 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{n / b} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    long x = y0, y = x0 - y0 * (a / b);\n    return std::optional<long>{x};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmp3l5r3069.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp3l5r3069.cpp:19:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   19 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp3l5r3069.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n\n    long x = 0;\n    long y = n / b;\n    while (y >= 0) {\n        if ((n - b * y) % a == 0) {\n            x = (n - b * y) / a;\n            return std::make_optional(x);\n        }\n        y--;\n    }\n\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1spthux7.cpp:2:\n/tmp/tmp1spthux7.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1spthux7.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp1spthux7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1spthux7.cpp:2:\n/tmp/tmp1spthux7.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    long g = std::gcd(a, b);\n    while (true) {\n        long r = n - y * b;\n        if (r % a == 0) {\n            x = r / a;\n            break;\n        }\n        y -= g / b;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpekqpfvnv.cpp:2:\n/tmp/tmpekqpfvnv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpekqpfvnv.cpp:23:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   23 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpekqpfvnv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpekqpfvnv.cpp:2:\n/tmp/tmpekqpfvnv.cpp:23:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   23 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g;\n    long q = b / g;\n    long r = n / g;\n    std::optional<long> x = find_solution(q, -p, r);\n    if (x) {\n        return std::make_optional(x.value() * q);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp88836oe7.cpp:2:\n/tmp/tmp88836oe7.cpp: In function \u2018int main()\u2019:\n/tmp/tmp88836oe7.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp88836oe7.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp88836oe7.cpp:2:\n/tmp/tmp88836oe7.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    } else if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    } else if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    } else {\n        long g = std::gcd(a, b);\n        if (n % g != 0) {\n            return std::nullopt;\n        }\n        long x = 0;\n        long y = n / g;\n        while (x * a + y * b != n) {\n            if (x * a + y * b > n) {\n                y--;\n            } else {\n                x++;\n            }\n        }\n        return std::make_optional(x);\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprbk4c35z.cpp:2:\n/tmp/tmprbk4c35z.cpp: In function \u2018int main()\u2019:\n/tmp/tmprbk4c35z.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmprbk4c35z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprbk4c35z.cpp:2:\n/tmp/tmprbk4c35z.cpp:38:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / d;\n    while (y > 0) {\n        long t = x + (a / d);\n        if (t * b > n) {\n            break;\n        }\n        x = t;\n        y = (n - x * b) / a;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyqhcvf61.cpp:2:\n/tmp/tmpyqhcvf61.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyqhcvf61.cpp:44:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpyqhcvf61.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyqhcvf61.cpp:2:\n/tmp/tmpyqhcvf61.cpp:44:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   44 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmpsor6r14v.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsor6r14v.cpp:17:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsor6r14v.cpp:2:\n/tmp/tmpsor6r14v.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsor6r14v.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpsor6r14v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{n / b} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g);\n    x = -x;\n    return std::optional<long>{x};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmpblr09l72.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpblr09l72.cpp:19:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   19 |     std::tie(x, y) = find_solution(b / g, a / g, n / g);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpblr09l72.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{n / b} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::optional<long>{x - (a / b) * y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmp2brl9rsz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp2brl9rsz.cpp:22:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   22 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp2brl9rsz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = n / g * b / a;\n    long y = (n - a * x) / b;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx2f1gz8u.cpp:2:\n/tmp/tmpx2f1gz8u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx2f1gz8u.cpp:36:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   36 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpx2f1gz8u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx2f1gz8u.cpp:2:\n/tmp/tmpx2f1gz8u.cpp:36:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   36 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  auto x = find_solution(b % a, a, n % a);\n  if (!x) {\n    return std::nullopt;\n  }\n  return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj1v6i4z9.cpp:2:\n/tmp/tmpj1v6i4z9.cpp: In function \u2018int main()\u2019:\n/tmp/tmpj1v6i4z9.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpj1v6i4z9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpj1v6i4z9.cpp:2:\n/tmp/tmpj1v6i4z9.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long d = 0;\n    long x1 = 1;\n    long x2 = 0;\n    long y1 = 0;\n    long y2 = 1;\n    long q = 0;\n    long r = 0;\n    while (a % b) {\n        q = a / b;\n        r = a % b;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n        a = b;\n        b = r;\n    }\n    d = b;\n    x = x2;\n    y = y2;\n    if (n % d) {\n        return {};\n    }\n    return {x * (n / d), y * (n / d)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmpi1j1o0yh.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpi1j1o0yh.cpp:32:37: error: could not convert \u2018{(x * (n / d)), (y * (n / d))}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   32 |     return {x * (n / d), y * (n / d)};\n      |                                     ^\n      |                                     |\n      |                                     <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpi1j1o0yh.cpp:2:\n/tmp/tmpi1j1o0yh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpi1j1o0yh.cpp:36:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   36 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpi1j1o0yh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /s",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = g;\n    while (d <= n) {\n        if ((n - d) % a == 0) {\n            x = (n - d) / a;\n            y = d / b;\n            break;\n        }\n        d += g;\n    }\n    if (x == 0 && y == 0) {\n        return std::nullopt;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa4yk5ugp.cpp:2:\n/tmp/tmpa4yk5ugp.cpp: In function \u2018int main()\u2019:\n/tmp/tmpa4yk5ugp.cpp:47:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpa4yk5ugp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa4yk5ugp.cpp:2:\n/tmp/tmpa4yk5ugp.cpp:47:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x3 = x0 - q * x1;\n        long y3 = y0 - q * y1;\n        long x4 = x1 - q * x2;\n        long y4 = y1 - q * y2;\n        x0 = x1;\n        x1 = x2;\n        x2 = x3;\n        y0 = y1;\n        y1 = y2;\n        y2 = y3;\n        a = b;\n        b = r;\n    }\n    long x = x0;\n    long y = y0;\n    long k = n / d;\n    return std::make_optional(x * k);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeyod76sa.cpp:2:\n/tmp/tmpeyod76sa.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeyod76sa.cpp:56:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   56 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpeyod76sa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeyod76sa.cpp:2:\n/tmp/tmpeyod76sa.cpp:56:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   56 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g;\n    long q = b / g;\n    long m = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(q, p, m);\n    return std::make_optional(q * x + p * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpq1e9dxs9.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpq1e9dxs9.cpp:34:43: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   34 |     std::tie(x, y) = find_solution(q, p, m);\n      |                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpq1e9dxs9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |  ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{n / b} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    a /= d;\n    b /= d;\n    n /= d;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::optional<long>{x - (a / b) * y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmp2brl9rsz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp2brl9rsz.cpp:22:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   22 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp2brl9rsz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    x = (n - b * y) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_ijzkq08.cpp:2:\n/tmp/tmp_ijzkq08.cpp: In function \u2018int main()\u2019:\n/tmp/tmp_ijzkq08.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp_ijzkq08.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp_ijzkq08.cpp:2:\n/tmp/tmp_ijzkq08.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    long a1 = a / d;\n    long b1 = b / d;\n    long n1 = n / d;\n    long r1 = 1, r2 = 0, r3 = a1;\n    long t1 = 0, t2 = 1, t3 = b1;\n    long q = 0;\n    while (t3 != 1) {\n        q = r3 / t3;\n        long r = r1 - q * t1;\n        long s = r2 - q * t2;\n        long t = r3 - q * t3;\n        r1 = t1;\n        r2 = t2;\n        r3 = t3;\n        t1 = r;\n        t2 = s;\n        t3 = t;\n    }\n    x = (n1 * t2) / b1;\n    y = (n1 * t1) / a1;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpgrwraphq.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpgrwraphq.cpp:30:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   30 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgrwraphq.cpp:2:\n/tmp/tmpgrwraphq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgrwraphq.cpp:34:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   34 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgrwraphq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        }\n        return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        return std::nullopt;\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = 0;\n    long d = 1;\n    while (d <= n) {\n        d *= 2;\n    }\n    d /= 2;\n    while (d > 0) {\n        if (x + d <= n) {\n            x += d;\n            y += d * a / b;\n        }\n        d /= 2;\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpob6hwf_q.cpp:2:\n/tmp/tmpob6hwf_q.cpp: In function \u2018int main()\u2019:\n/tmp/tmpob6hwf_q.cpp:47:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpob6hwf_q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpob6hwf_q.cpp:2:\n/tmp/tmpob6hwf_q.cpp:47:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp: In function \u2018int main()\u2019:\n/tmp/tmpt2pwcbno.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpt2pwcbno.cpp:2:\n/tmp/tmpt2pwcbno.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if(a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if(a == 0) {\n        return n / b;\n    }\n    if(b == 0) {\n        return n / a;\n    }\n    long x = 0;\n    long y = 0;\n    long gcd = std::__gcd(a, b);\n    if(n % gcd != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / gcd;\n    long b1 = b / gcd;\n    long n1 = n / gcd;\n    long x1 = 0;\n    long y1 = 0;\n    long x2 = 1;\n    long y2 = 0;\n    long x3 = 0;\n    long y3 = 1;\n    while(true) {\n        if(a1 * x2 + b1 * y2 == n1) {\n            x = x2;\n            y = y2;\n            break;\n        }\n        long q = a1 / b1;\n        x3 = x2 - q * x3;\n        y3 = y2 - q * y3;\n        a1 = b1;\n        b1 = a1 % b1;\n        x2 = x3;\n        y2 = y3;\n    }\n    return std::make_pair(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpzxoep4je.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpzxoep4je.cpp:43:26: error: could not convert \u2018std::make_pair<long int&, long int&>(x, y)\u2019 from \u2018std::pair<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   43 |     return std::make_pair(x, y);\n      |            ~~~~~~~~~~~~~~^~~~~~\n      |                          |\n      |                          std::pair<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzxoep4je.cpp:2:\n/tmp/tmpzxoep4je.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzxoep4je.cpp:47:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   47 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpzxoep4je.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylak",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    return std::nullopt;\n  }\n  if (a == 0) {\n    return n / b;\n  }\n  if (b == 0) {\n    return n / a;\n  }\n  if (n % (a * b) != 0) {\n    return std::nullopt;\n  }\n  long x = 0;\n  long y = n / b;\n  while (a * x + b * y != n) {\n    if (a * x + b * y > n) {\n      y--;\n    } else {\n      x++;\n    }\n  }\n  return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmp8a66vxcu.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp8a66vxcu.cpp:26:25: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   26 |   return std::make_tuple(x, y);\n      |          ~~~~~~~~~~~~~~~^~~~~~\n      |                         |\n      |                         std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp8a66vxcu.cpp:2:\n/tmp/tmp8a66vxcu.cpp: In function \u2018int main()\u2019:\n/tmp/tmp8a66vxcu.cpp:30:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   30 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp8a66vxcu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(std::make_tuple(0, 0));\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(std::make_tuple(0, n / b));\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(std::make_tuple(n / a, 0));\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_optional(std::make_tuple(x, y));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpa9cl7s2t.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpa9cl7s2t.cpp:7:38: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<int, int>; typename std::decay<_Tp>::type = std::tuple<int, int>]()\u2019 from \u2018optional<std::tuple<int, int>>\u2019 to \u2018optional<long int>\u2019\n    7 |             return std::make_optional(std::make_tuple(0, 0));\n      |                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\n      |                                      |\n      |                                      optional<std::tuple<int, int>>\n/tmp/tmpa9cl7s2t.cpp:14:38: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<int, long int>; typename std::decay<_Tp>::type = std::tuple<int, long int>]()\u2019 from \u2018optional<std::tuple<int, long int>>\u2019 to \u2018optional<long int>\u2019\n   14 |             return std::make_optional(std::make_tuple(0, n / b));\n      |                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                      |\n      |                                      optional<std::tuple<int, long int>>\n/tmp/tmpa9cl7s2t.cpp:21:38: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<long int, int>; typename std::decay<_Tp>::type = std::tuple<long int, int>]()\u2019 from \u2018optional<std::tuple<long int, int>>\u2019 to \u2018optional<long int>\u2019\n   21 |             return std::make_optional(std::make_tuple(n / a, 0));\n      |                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\n      |                                      |\n      |                                      optional<std::tuple<long int, int>>\n/tmp/tmpa9cl7s2t.cpp:34:30: error: could not convert \u2018std::make_optional(_Tp&&) [with _Tp = std::tuple<long int, long int>; typename std::decay<_Tp>::type = std::tuple<long int, long int>]()\u2019 from \u2018optional<std::tuple<long int, long int>>\u2019 to \u2018optional<long int>\u2019\n   34 |     return std::make_optional(std::make_tuple(x, y));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0;\n    long y0 = n / b;\n    long x1 = b / d;\n    long y1 = -a / d;\n    long x = x0 + (n / d) * x1;\n    long y = y0 + (n / d) * y1;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxwloo_wt.cpp:2:\n/tmp/tmpxwloo_wt.cpp: In function \u2018int main()\u2019:\n/tmp/tmpxwloo_wt.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpxwloo_wt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpxwloo_wt.cpp:2:\n/tmp/tmpxwloo_wt.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp482v87vv.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp482v87vv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    assert(a > 0 && b > 0 && n > 0);\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n        if (x > n / a || y < 0) {\n            return std::nullopt;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmph7xmc9an.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmph7xmc9an.cpp:18:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   18 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmph7xmc9an.cpp:2:\n/tmp/tmph7xmc9an.cpp: In function \u2018int main()\u2019:\n/tmp/tmph7xmc9an.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmph7xmc9an.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g;\n    long q = b / g;\n    long r = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(q, p % q, r % q).value();\n    return std::make_optional(x * (b / g) + y * (a / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpm40uwcf8.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpm40uwcf8.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(q, p % q, r % q).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpm40uwcf8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0, d = gcd(a, b);\n    x = n / d * b / a;\n    y = n / d - a / b * x;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpwt4vmg7r.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpwt4vmg7r.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpwt4vmg7r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpwt4vmg7r.cpp:8:28: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    8 |     long x = 0, y = 0, d = gcd(a, b);\n      |                            ^~~\n      |                            std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpwt4vmg7r.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpwt4vmg7r.cpp:11:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   11 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwt4vmg7r.cpp:2:\n/tmp/tmpwt4vmg7r.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwt4vmg7r.cpp:15:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   15 |     assert(candidate((2), (3), (7)) == std:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpmxnmfx_z.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmxnmfx_z.cpp:17:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmxnmfx_z.cpp:2:\n/tmp/tmpmxnmfx_z.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmxnmfx_z.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpmxnmfx_z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmphzc7s6ki.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmphzc7s6ki.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmphzc7s6ki.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmphzc7s6ki.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphzc7s6ki.cpp:2:\n/tmp/tmphzc7s6ki.cpp: In function \u2018int main()\u2019:\n/tmp/tmphzc7s6ki.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmphzc7s6ki.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_tuple(0, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_tuple(0, n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_tuple(n / a, 0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_tuple(y, x - (a / b) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpmucxw2gp.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmucxw2gp.cpp:7:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, int}](0)\u2019 from \u2018std::tuple<int, int>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return std::make_tuple(0, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~\n      |                                   |\n      |                                   std::tuple<int, int>\n/tmp/tmpmucxw2gp.cpp:14:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {int, long int}]((n / b))\u2019 from \u2018std::tuple<int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   14 |             return std::make_tuple(0, n / b);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<int, long int>\n/tmp/tmpmucxw2gp.cpp:21:35: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int, int}](0)\u2019 from \u2018std::tuple<long int, int>\u2019 to \u2018std::optional<long int>\u2019\n   21 |             return std::make_tuple(n / a, 0);\n      |                    ~~~~~~~~~~~~~~~^~~~~~~~~~\n      |                                   |\n      |                                   std::tuple<long int, int>\n/tmp/tmpmucxw2gp.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpmucxw",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpmaqoq56k.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmaqoq56k.cpp:14:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   14 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmaqoq56k.cpp:2:\n/tmp/tmpmaqoq56k.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmaqoq56k.cpp:18:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   18 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpmaqoq56k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (n % gcd(a, b) != 0) {\n    return std::nullopt;\n  }\n  long x = 0;\n  long y = n / b;\n  while (x * a + y * b != n) {\n    if (x * a + y * b < n) {\n      x++;\n    } else {\n      y--;\n    }\n  }\n  return std::make_pair(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "/tmp/tmpeph2jveq.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpeph2jveq.cpp:5:11: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |   if (n % gcd(a, b) != 0) {\n      |           ^~~\n      |           std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpeph2jveq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpeph2jveq.cpp:17:24: error: could not convert \u2018std::make_pair<long int&, long int&>(x, y)\u2019 from \u2018std::pair<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |   return std::make_pair(x, y);\n      |          ~~~~~~~~~~~~~~^~~~~~\n      |                        |\n      |                        std::pair<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpeph2jveq.cpp:2:\n/tmp/tmpeph2jveq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpeph2jveq.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpeph2jveq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> boo",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123294,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnkwdr4v4.cpp:2:\n/tmp/tmpnkwdr4v4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnkwdr4v4.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpnkwdr4v4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnkwdr4v4.cpp:2:\n/tmp/tmpnkwdr4v4.cpp:21:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        return std::nullopt;\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0;\n    long y = n;\n    while (y >= 0) {\n        if (a * x + b * y == n) {\n            return std::make_optional(x);\n        }\n        x++;\n        y--;\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptty3kk4z.cpp:2:\n/tmp/tmptty3kk4z.cpp: In function \u2018int main()\u2019:\n/tmp/tmptty3kk4z.cpp:43:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptty3kk4z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptty3kk4z.cpp:2:\n/tmp/tmptty3kk4z.cpp:43:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   43 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x3 = x0 - q * x1;\n        long y3 = y0 - q * y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n        a = b;\n        b = r;\n    }\n    return std::make_optional(x2 * (n / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr2a1lfuf.cpp:2:\n/tmp/tmpr2a1lfuf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr2a1lfuf.cpp:51:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpr2a1lfuf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr2a1lfuf.cpp:2:\n/tmp/tmpr2a1lfuf.cpp:51:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    x = -x;\n    return std::make_optional(std::make_tuple(x, y));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmptn9w86_q.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptn9w86_q.cpp:33:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   33 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmptn9w86_q.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    x = -x;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmpz5zice3e.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpz5zice3e.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpz5zice3e.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        return std::nullopt;\n    }\n    auto x = find_solution(b, a % b, n);\n    if (x.has_value()) {\n        return std::make_optional(x.value() * a / b);\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzb6ieq65.cpp:2:\n/tmp/tmpzb6ieq65.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzb6ieq65.cpp:25:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   25 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpzb6ieq65.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzb6ieq65.cpp:2:\n/tmp/tmpzb6ieq65.cpp:25:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   25 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(y - (a1 / b1) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmp21ieuiwb.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp21ieuiwb.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp21ieuiwb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    return std::make_optional(x * (a / g) + y * (b / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmp1eas0ww5.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp1eas0ww5.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp1eas0ww5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0;\n    long y0 = n / d;\n    long x1 = 1;\n    long y1 = (n - a * x1) / b;\n    while (y1 * a != n - x1 * b) {\n        long x2 = x0 - x1;\n        long y2 = y0 - y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n    }\n    return std::make_optional(x1);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe6yetdis.cpp:2:\n/tmp/tmpe6yetdis.cpp: In function \u2018int main()\u2019:\n/tmp/tmpe6yetdis.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpe6yetdis.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpe6yetdis.cpp:2:\n/tmp/tmpe6yetdis.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    long u1 = 1, u2 = 0, u3 = a;\n    long v1 = 0, v2 = 1, v3 = b;\n    while (v3 != 0) {\n        long q = u3 / v3;\n        long t1 = u1 - v1 * q;\n        long t2 = u2 - v2 * q;\n        long t3 = u3 - v3 * q;\n        u1 = v1;\n        u2 = v2;\n        u3 = v3;\n        v1 = t1;\n        v2 = t2;\n        v3 = t3;\n    }\n    x = u1 * n;\n    y = u2 * n;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp80958x1w.cpp:2:\n/tmp/tmp80958x1w.cpp: In function \u2018int main()\u2019:\n/tmp/tmp80958x1w.cpp:55:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   55 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp80958x1w.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp80958x1w.cpp:2:\n/tmp/tmp80958x1w.cpp:55:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   55 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmpmq79w5re.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmq79w5re.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:9:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    9 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpmq79w5re.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmq79w5re.cpp:2:\n/tmp/tmpmq79w5re.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmq79w5re.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::optional<long>{0};\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::optional<long>{(n - b * x.value()) / a};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkaxdkt12.cpp:2:\n/tmp/tmpkaxdkt12.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkaxdkt12.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpkaxdkt12.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkaxdkt12.cpp:2:\n/tmp/tmpkaxdkt12.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n/b;\n    while (a*x + b*y != n) {\n        if (a*x + b*y > n) {\n            y--;\n        } else {\n            x++;\n        }\n        if (x > n/a || y < 0) {\n            return std::nullopt;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "/tmp/tmpu4d0k_09.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpu4d0k_09.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpu4d0k_09.cpp:2:\n/tmp/tmpu4d0k_09.cpp: In function \u2018int main()\u2019:\n/tmp/tmpu4d0k_09.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpu4d0k_09.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0, y = 0, d = std::gcd(a, b);\n    while (d != 0) {\n        long t = b / d;\n        b -= t * d;\n        x -= t * y;\n        std::swap(a, b);\n        std::swap(x, y);\n        d = std::gcd(a, b);\n    }\n    return {x * n / a, y * n / a};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "/tmp/tmpbzm4z23o.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpbzm4z23o.cpp:17:33: error: could not convert \u2018{((x * n) / a), ((y * n) / a)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return {x * n / a, y * n / a};\n      |                                 ^\n      |                                 |\n      |                                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpbzm4z23o.cpp:2:\n/tmp/tmpbzm4z23o.cpp: In function \u2018int main()\u2019:\n/tmp/tmpbzm4z23o.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpbzm4z23o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gc",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (a * x + b * y > n) {\n            y--;\n        } else {\n            x++;\n        }\n        if (y < 0) {\n            return std::nullopt;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "/tmp/tmpd0wl3mfx.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpd0wl3mfx.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd0wl3mfx.cpp:2:\n/tmp/tmpd0wl3mfx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd0wl3mfx.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpd0wl3mfx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if(a == 0 && b == 0) {\n        if(n == 0) {\n            return std::make_optional(0);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if(a == 0) {\n        if(n % b == 0) {\n            return std::make_optional(0);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if(b == 0) {\n        if(n % a == 0) {\n            return std::make_optional(n / a);\n        }\n        else {\n            return std::nullopt;\n        }\n    }\n    if(n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * mod_inverse(a / d, b / d);\n    y = (n - a * x) / b;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "/tmp/tmpsghsgngg.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsghsgngg.cpp:29:12: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   29 |     if(n % gcd(a, b) != 0) {\n      |            ^~~\n      |            std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpsghsgngg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpsghsgngg.cpp:33:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   33 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpsghsgngg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmpsghsgngg.cpp:34:17: error: \u2018mod_inverse\u2019 was not declared in this scope\n   34 |     x = n / d * mod_inverse(a / d, b / d);\n      |                 ^~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsghsgngg.cpp:2:\n/tmp/tmpsghsgngg.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsghsgngg.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/ce",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  long x = n / a;\n  long y = (n - a * x) / b;\n  if (a * x + b * y == n) {\n    return std::make_optional(x);\n  } else {\n    return std::nullopt;\n  }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1v4b7v7m.cpp:2:\n/tmp/tmp1v4b7v7m.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1v4b7v7m.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp1v4b7v7m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1v4b7v7m.cpp:2:\n/tmp/tmp1v4b7v7m.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long a1 = a / d, b1 = b / d, n1 = n / d;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1);\n    return std::make_optional(b1 * x + (a1 % b1) * y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "/tmp/tmpjg_s38bz.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpjg_s38bz.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpjg_s38bz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        x++;\n        y = (n - x * a) / b;\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "/tmp/tmptplbyqzd.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptplbyqzd.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmptplbyqzd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmptplbyqzd.cpp:14:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   14 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptplbyqzd.cpp:2:\n/tmp/tmptplbyqzd.cpp: In function \u2018int main()\u2019:\n/tmp/tmptplbyqzd.cpp:18:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   18 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptplbyqzd.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::optional<long>{0};\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::optional<long>{0};\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::optional<long>{n / a};\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    return std::optional<long>{(n / g) * std::__gcd(a, b)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfi7p7xq5.cpp:2:\n/tmp/tmpfi7p7xq5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfi7p7xq5.cpp:34:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   34 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfi7p7xq5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfi7p7xq5.cpp:2:\n/tmp/tmpfi7p7xq5.cpp:34:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   34 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    while (p % a != 0) {\n        q++;\n        p += b;\n    }\n    return std::make_optional(p / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfvup12wv.cpp:2:\n/tmp/tmpfvup12wv.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfvup12wv.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpfvup12wv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfvup12wv.cpp:2:\n/tmp/tmpfvup12wv.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    a /= d;\n    b /= d;\n    n /= d;\n    std::tie(x, y) = find_solution(b, a % b, n % a).value();\n    x -= (a / b) * y;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123309,
      "stdout": "",
      "stderr": "/tmp/tmpsm9zjrrf.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsm9zjrrf.cpp:35:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   35 |     std::tie(x, y) = find_solution(b, a % b, n % a).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpsm9zjrrf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 1;\n    long x1 = 1, y1 = 0;\n    while (a % b != 0) {\n        long q = a / b;\n        long r = a % b;\n        long x2 = x0 - q * x1;\n        long y2 = y0 - q * y1;\n        x0 = x1;\n        y0 = y1;\n        x1 = x2;\n        y1 = y2;\n        a = b;\n        b = r;\n    }\n    long x = x1 * (n / d);\n    long y = y1 * (n / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/tmp/tmp3v37w6re.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3v37w6re.cpp:50:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3v37w6re.cpp:2:\n/tmp/tmp3v37w6re.cpp:50:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   50 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long x = 0;\n    long y = 0;\n    while (a % 2 == 0 && b % 2 == 0) {\n        a /= 2;\n        b /= 2;\n        ++r;\n    }\n    d = a;\n    e = b;\n    while (d != 0) {\n        while (d % 2 == 0) {\n            d /= 2;\n            if (e % 2 == 1) {\n                s += 1;\n            } else {\n                ++q;\n            }\n        }\n        while (e % 2 == 0) {\n            e /= 2;\n            if (d % 2 == 1) {\n                s += 1;\n            } else {\n                ++q;\n            }\n        }\n        f = (d - e) / 2;\n        if (f > 0) {\n            s += 1;\n            d = f;\n        } else {\n            f = (e - d) / 2;\n            if (f > 0) {\n                q += 1;\n                e = f;\n            } else {\n                break;\n            }\n        }\n    }\n    if (r\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmpkdhevw6v.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpkdhevw6v.cpp:77:10: error: expected \u2018)\u2019 before \u2018}\u2019 token\n   77 |     if (r\n      |        ~ ^\n      |          )\n   78 | }\n      | ~         \n/tmp/tmpkdhevw6v.cpp:78:1: error: expected primary-expression before \u2018}\u2019 token\n   78 | }\n      | ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkdhevw6v.cpp:2:\n/tmp/tmpkdhevw6v.cpp: In function \u2018int main()\u2019:\n/tmp/tmpkdhevw6v.cpp:81:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   81 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpkdhevw6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpkdhevw",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    std::optional<long> x = find_solution(b1, a1 % b1, n1);\n    if (x) {\n        return std::make_optional(x.value() * a1);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb238x4y3.cpp:2:\n/tmp/tmpb238x4y3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb238x4y3.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpb238x4y3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb238x4y3.cpp:2:\n/tmp/tmpb238x4y3.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n    return std::make_optional(std::make_pair(y, x - y * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmpf89p9i00.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpf89p9i00.cpp:31:63: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x, y) = find_solution(b / g, a / g, n / g).value();\n      |                                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpf89p9i00.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = a / g;\n    long q = b / g;\n    long r = n / g;\n    // solve px + qy = r\n    // x = r/p - qy/p\n    // y = (r - px)/q\n    // y = (r - p(r/p - qy/p))/q\n    // y = (r - r + qy)/q\n    // y = qy/q\n    // y = y\n    // x = r/p - qy/p\n    // x = r/p - q(r/p - qy/p)/p\n    // x = r/p - r/p + qy/p^2\n    // x = qy/p^2\n    // x = y/p\n    // y = r/q - px/q\n    // x = (r - qy)/p\n    // x = r/p - qy/p\n    // x = r/p - q(r/p - qy/p)/p\n    // x = r/p - r/p + qy/p^2\n    // x = qy/p^2\n    // x = y/p\n    // y = r/q - px/q\n    // y = r/q - p(r/p - qy/p)/q\n    // y = r\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppm6_00h3.cpp:2:\n/tmp/tmppm6_00h3.cpp: In function \u2018int main()\u2019:\n/tmp/tmppm6_00h3.cpp:58:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   58 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmppm6_00h3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppm6_00h3.cpp:2:\n/tmp/tmppm6_00h3.cpp:58:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   58 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    x = (n - y * b) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2zrt1sgi.cpp:2:\n/tmp/tmp2zrt1sgi.cpp: In function \u2018int main()\u2019:\n/tmp/tmp2zrt1sgi.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp2zrt1sgi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp2zrt1sgi.cpp:2:\n/tmp/tmp2zrt1sgi.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::optional<long>{0} : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::optional<long>{n / a} : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::optional<long>{x0 * (a / d) + y0 * (b / d)};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmpkot9j1w0.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpkot9j1w0.cpp:19:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   19 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpkot9j1w0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return n == 0 ? std::make_optional(0) : std::nullopt;\n    }\n    if (a == 0) {\n        return n % b == 0 ? std::make_optional(n / b) : std::nullopt;\n    }\n    if (b == 0) {\n        return n % a == 0 ? std::make_optional(n / a) : std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y, x - y * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123264,
      "stdout": "",
      "stderr": "/tmp/tmpavqun23n.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpavqun23n.cpp:19:63: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   19 |     std::tie(x, y) = find_solution(b / d, a / d, n / d).value();\n      |                                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpavqun23n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b);\n    long a1 = a / d;\n    long b1 = b / d;\n    long n1 = n / d;\n    extended_euclid(a1, b1, x, y);\n    x *= n1;\n    y *= n1;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmpumgg3ruk.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpumgg3ruk.cpp:35:5: error: \u2018extended_euclid\u2019 was not declared in this scope\n   35 |     extended_euclid(a1, b1, x, y);\n      |     ^~~~~~~~~~~~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpumgg3ruk.cpp:2:\n/tmp/tmpumgg3ruk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpumgg3ruk.cpp:42:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   42 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpumgg3ruk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpumgg3ruk.cpp:2:\n/tmp/tmpumgg3ruk.cpp:42:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018cons",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = __gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmp78mhoq3m.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp78mhoq3m.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmp78mhoq3m.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmp78mhoq3m.cpp:9:14: error: \u2018__gcd\u2019 was not declared in this scope\n    9 |     long d = __gcd(a, b);\n      |              ^~~~~\n/tmp/tmp78mhoq3m.cpp:9:14: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp78mhoq3m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmp78mhoq3m.cpp:12:27: error: could n",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    std::tie(x, y) = find_solution(b / g, a / g, n / g);\n    x = -x;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmpdw8_36js.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpdw8_36js.cpp:31:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   31 |     std::tie(x, y) = find_solution(b / g, a / g, n / g);\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpdw8_36js.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(std::make_tuple(y0, x0 - y0 * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmpmj0w6q1_.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmj0w6q1_.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpmj0w6q1_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::optional<long>{0};\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::optional<long>{0, n / b};\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::optional<long>{n / a, 0};\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    return std::optional<long>{b / g * x, a / g * y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmp2p8u3o0a.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp2p8u3o0a.cpp:14:48: error: no matching function for call to \u2018std::optional<long int>::optional(<brace-enclosed initializer list>)\u2019\n   14 |             return std::optional<long>{0, n / b};\n      |                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/node_handle.h:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/hashtable.h:37,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/unordered_map:46,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp2p8u3o0a.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/optional:768:2: note: candidate: \u2018template<class _Up, class ... _Args, typename std::enable_if<__and_v<std::is_constructible<long int, std::initializer_list<_Tp>&, _Args&& ...> >, bool>::type <anonymous> > constexpr std::optional<_Tp>::optional(std::in_place_t, std::initializer_list<_Up>, _Args&& ...)\u2019\n  768 |  optional(in_place_t, initializer_list<_Up> __il, _Args&&... __args)\n      |  ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/optional:768:2: note:   template argument deduction/substitution failed:\n/tmp/tmp2p8u3o0a.cpp:14:48: note:   mismatched types \u2018std::initializer_list<_Tp>\u2019 and \u2018long int\u2019\n   14 |             return std::optional<long>{0, n / b};\n      |                                                ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/node_handle.h:39,\n                 from /shared/centos7/gcc/9.2.0-skylake/incl",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmp3giwn71b.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp3giwn71b.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp3giwn71b.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp3giwn71b.cpp:17:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3giwn71b.cpp:2:\n/tmp/tmp3giwn71b.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3giwn71b.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp3giwn71b.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_Bi",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x = 0, y = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    while (b != 0) {\n        long q = a / b;\n        long r = a % b;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    if (n % a != 0) {\n        return std::nullopt;\n    }\n    x = n / a * x2;\n    y = n / a * y2;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc15zy8yu.cpp:2:\n/tmp/tmpc15zy8yu.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc15zy8yu.cpp:57:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpc15zy8yu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc15zy8yu.cpp:2:\n/tmp/tmpc15zy8yu.cpp:57:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        return n / b;\n    }\n    if (b == 0) {\n        return n / a;\n    }\n    long x = 0;\n    long y = n / b;\n    while (a * x + b * y != n) {\n        if (y == 0) {\n            return std::nullopt;\n        }\n        x = n / a - b / a * y;\n        y = (n - a * x) / b;\n    }\n    return std::make_pair(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "/tmp/tmpijbj2e7h.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpijbj2e7h.cpp:23:26: error: could not convert \u2018std::make_pair<long int&, long int&>(x, y)\u2019 from \u2018std::pair<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   23 |     return std::make_pair(x, y);\n      |            ~~~~~~~~~~~~~~^~~~~~\n      |                          |\n      |                          std::pair<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpijbj2e7h.cpp:2:\n/tmp/tmpijbj2e7h.cpp: In function \u2018int main()\u2019:\n/tmp/tmpijbj2e7h.cpp:27:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   27 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpijbj2e7h.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylak",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - b / a * (b / a) * x.value() + n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp: In function \u2018int main()\u2019:\n/tmp/tmp482v87vv.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp482v87vv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp482v87vv.cpp:2:\n/tmp/tmp482v87vv.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::__gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::__gcd(a, b, x, y);\n    x *= n / d;\n    y *= n / d;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "/tmp/tmpd02hxvdm.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpd02hxvdm.cpp:31:35: error: no matching function for call to \u2018__gcd(long int&, long int&, long int&, long int&)\u2019\n   31 |     long d = std::__gcd(a, b, x, y);\n      |                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpd02hxvdm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note: candidate: \u2018template<class _EuclideanRingElement> _EuclideanRingElement std::__gcd(_EuclideanRingElement, _EuclideanRingElement)\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   template argument deduction/substitution failed:\n/tmp/tmpd02hxvdm.cpp:31:35: note:   candidate expects 2 arguments, 4 provided\n   31 |     long d = std::__gcd(a, b, x, y);\n      |                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpd02hxvdm.cpp:2:\n/tmp/tmpd02hxvdm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpd02hxvdm.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/inclu",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "/tmp/tmpk6ldmtz1.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpk6ldmtz1.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk6ldmtz1.cpp:2:\n/tmp/tmpk6ldmtz1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk6ldmtz1.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpk6ldmtz1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    }\n    return std::nullopt;\n  }\n  auto x = find_solution(b % a, a, n % a);\n  if (!x) {\n    return std::nullopt;\n  }\n  return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpur64o2al.cpp:2:\n/tmp/tmpur64o2al.cpp: In function \u2018int main()\u2019:\n/tmp/tmpur64o2al.cpp:19:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpur64o2al.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpur64o2al.cpp:2:\n/tmp/tmpur64o2al.cpp:19:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   19 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return {0, 0};\n        } else {\n            return {};\n        }\n    }\n    auto x = find_solution(b % a, a, n);\n    if (!x) {\n        return {};\n    }\n    return {x->second - b / a * x->first, x->first};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmp3pqpbyuh.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp3pqpbyuh.cpp:7:25: error: could not convert \u2018{0, 0}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n    7 |             return {0, 0};\n      |                         ^\n      |                         |\n      |                         <brace-enclosed initializer list>\n/tmp/tmp3pqpbyuh.cpp:16:16: error: request for member \u2018second\u2019 in \u2018* x.std::optional<long int>::operator->()\u2019, which is of non-class type \u2018long int\u2019\n   16 |     return {x->second - b / a * x->first, x->first};\n      |                ^~~~~~\n/tmp/tmp3pqpbyuh.cpp:16:36: error: request for member \u2018first\u2019 in \u2018* x.std::optional<long int>::operator->()\u2019, which is of non-class type \u2018long int\u2019\n   16 |     return {x->second - b / a * x->first, x->first};\n      |                                    ^~~~~\n/tmp/tmp3pqpbyuh.cpp:16:46: error: request for member \u2018first\u2019 in \u2018* x.std::optional<long int>::operator->()\u2019, which is of non-class type \u2018long int\u2019\n   16 |     return {x->second - b / a * x->first, x->first};\n      |                                              ^~~~~\n/tmp/tmp3pqpbyuh.cpp:16:51: error: could not convert \u2018{<expression error>, <expression error>}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   16 |     return {x->second - b / a * x->first, x->first};\n      |                                                   ^\n      |                                                   |\n      |                                                   <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp3pqpbyuh.cpp:2:\n/tmp/tmp3pqpbyuh.cpp: In function \u2018int main()\u2019:\n/tmp/tmp3pqpbyuh.cpp:20:37: error: no match for \u2018operator==\u2019 (operand type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n  if (a == 0 && b == 0) {\n    if (n == 0) {\n      return std::make_optional(0);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (a == 0) {\n    if (n % b == 0) {\n      return std::make_optional(n / b);\n    } else {\n      return std::nullopt;\n    }\n  }\n  if (b == 0) {\n    if (n % a == 0) {\n      return std::make_optional(n / a);\n    } else {\n      return std::nullopt;\n    }\n  }\n  long d = std::gcd(a, b);\n  if (n % d != 0) {\n    return std::nullopt;\n  }\n  long x0 = 0, y0 = 1;\n  long x1 = 1, y1 = 0;\n  long x = 0, y = 0;\n  while (a % b != 0) {\n    long q = a / b;\n    long r = a % b;\n    x = x0 - q * x1;\n    y = y0 - q * y1;\n    x0 = x1;\n    x1 = x;\n    y0 = y1;\n    y1 = y;\n    a = b;\n    b = r;\n  }\n  x = (n / d) * x1;\n  y = (n / d) * y1;\n  return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp10vbzn97.cpp:2:\n/tmp/tmp10vbzn97.cpp: In function \u2018int main()\u2019:\n/tmp/tmp10vbzn97.cpp:51:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp10vbzn97.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp10vbzn97.cpp:2:\n/tmp/tmp10vbzn97.cpp:51:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   51 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        }\n        return std::nullopt;\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    }\n    return std::nullopt;\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk5wj98_5.cpp:2:\n/tmp/tmpk5wj98_5.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk5wj98_5.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpk5wj98_5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk5wj98_5.cpp:2:\n/tmp/tmpk5wj98_5.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long x = n / a;\n    long y = (n - a * x) / b;\n    if (a * x + b * y == n) {\n        return std::make_optional(x);\n    } else {\n        return std::nullopt;\n    }\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgz4r64uz.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgz4r64uz.cpp:2:\n/tmp/tmpgz4r64uz.cpp:22:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b > n) {\n            y--;\n        } else {\n            x++;\n        }\n    }\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmp03l2f2z5.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp03l2f2z5.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp03l2f2z5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp03l2f2z5.cpp:2:\n/tmp/tmp03l2f2z5.cpp: In function \u2018int main()\u2019:\n/tmp/tmp03l2f2z5.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp03l2f2z5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substituti",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / b;\n    long g = gcd(a, b);\n    while (x < n / a) {\n        if ((n - a * x) % b == 0) {\n            return {x, (n - a * x) / b};\n        }\n        x += b / g;\n        y -= a / g;\n    }\n    return {};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmp19ikguff.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp19ikguff.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp19ikguff.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp19ikguff.cpp:10:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n   10 |     long g = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmp19ikguff.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmp19ikguff.cpp:13:39: error: could not convert \u2018{x, ((n - (a * x)) / b)}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   13 |             return {x, (n - a * x) / b};\n      |                                       ^\n      |                                       |\n      |                                       <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp19ikguff.cpp:2:\n/tmp/tmp19ikguff.cpp: In function \u2018int main()\u2019:\n/tmp/tmp19ikguff.cpp:22:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   22 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0, y0 = 0;\n    long x1 = 1, y1 = 0;\n    long x2 = 0, y2 = 1;\n    long q = 0;\n    while (a % b != 0) {\n        q = a / b;\n        long r = a % b;\n        long x = x2 - q * x1;\n        long y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x0 = x1 * (n / g);\n    y0 = y1 * (n / g);\n    return std::make_optional(x0);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc1w1jqo4.cpp:2:\n/tmp/tmpc1w1jqo4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpc1w1jqo4.cpp:52:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   52 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpc1w1jqo4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpc1w1jqo4.cpp:2:\n/tmp/tmpc1w1jqo4.cpp:52:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   52 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long gcd = std::gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b, x, y);\n    x *= n / d;\n    y *= n / d;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmppwzt2vv4.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmppwzt2vv4.cpp:31:33: error: no matching function for call to \u2018gcd(long int&, long int&, long int&, long int&)\u2019\n   31 |     long d = std::gcd(a, b, x, y);\n      |                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmppwzt2vv4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: candidate: \u2018template<class _Mn, class _Nn> constexpr std::common_type_t<_Mn, _Nn> std::gcd(_Mn, _Nn)\u2019\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note:   template argument deduction/substitution failed:\n/tmp/tmppwzt2vv4.cpp:31:33: note:   candidate expects 2 arguments, 4 provided\n   31 |     long d = std::gcd(a, b, x, y);\n      |                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmppwzt2vv4.cpp:2:\n/tmp/tmppwzt2vv4.cpp: In function \u2018int main()\u2019:\n/tmp/tmppwzt2vv4.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmppwzt2vv4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candida",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return {};\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x += 1;\n        } else {\n            y -= 1;\n        }\n    }\n    return {x, y};\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123279,
      "stdout": "",
      "stderr": "/tmp/tmpsor6r14v.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsor6r14v.cpp:17:17: error: could not convert \u2018{x, y}\u2019 from \u2018<brace-enclosed initializer list>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return {x, y};\n      |                 ^\n      |                 |\n      |                 <brace-enclosed initializer list>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsor6r14v.cpp:2:\n/tmp/tmpsor6r14v.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsor6r14v.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpsor6r14v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long d = 0;\n    long x1 = 0;\n    long y1 = 0;\n    long x2 = 0;\n    long y2 = 0;\n    long q = 0;\n    long r = 0;\n    if (n == 0) {\n        return std::make_tuple(x, y);\n    }\n    x2 = 1;\n    x1 = 0;\n    y2 = 0;\n    y1 = 1;\n    while (n > 0) {\n        q = a / b;\n        r = a - q * b;\n        x = x2 - q * x1;\n        y = y2 - q * y1;\n        a = b;\n        b = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n        n = n - 1;\n    }\n    return std::make_tuple(x2, y2);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmpdaj96jgx.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpdaj96jgx.cpp:15:31: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   15 |         return std::make_tuple(x, y);\n      |                ~~~~~~~~~~~~~~~^~~~~~\n      |                               |\n      |                               std::tuple<long int, long int>\n/tmp/tmpdaj96jgx.cpp:34:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y2)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   34 |     return std::make_tuple(x2, y2);\n      |            ~~~~~~~~~~~~~~~^~~~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpdaj96jgx.cpp:2:\n/tmp/tmpdaj96jgx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpdaj96jgx.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpdaj96jgx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const s",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = 0;\n    long r = 0;\n    long s = 1;\n    long c = a / g;\n    long d = b / g;\n    long u = 0;\n    long v = 1;\n    while (c != 0) {\n        long q = d / c;\n        long t = c;\n        c = d % c;\n        d = t;\n        t = u;\n        u = p - q * u;\n        p = t;\n        t = v;\n        v = q * v - r;\n        r = t;\n    }\n    if (d != 1) {\n        return std::nullopt;\n    }\n    return std::make_optional(p * p);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr598jwyf.cpp:2:\n/tmp/tmpr598jwyf.cpp: In function \u2018int main()\u2019:\n/tmp/tmpr598jwyf.cpp:57:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpr598jwyf.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpr598jwyf.cpp:2:\n/tmp/tmpr598jwyf.cpp:57:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   57 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long d = std::gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(x0 * (b / d) + y0 * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmpmwfdkylx.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmwfdkylx.cpp:31:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   31 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpmwfdkylx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0)\n        return std::nullopt;\n    long x = 0, y = 0;\n    long d = gcd(a, b);\n    x = n / d * b / a;\n    y = (n - a * x) / b;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmptulk1o8u.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptulk1o8u.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0)\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmptulk1o8u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmptulk1o8u.cpp:8:14: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    8 |     long d = gcd(a, b);\n      |              ^~~\n      |              std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmptulk1o8u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmptulk1o8u.cpp:11:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   11 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptulk1o8u.cpp:2:\n/tmp/tmptulk1o8u.cpp: In function \u2018int main()\u2019:\n/tmp/tmptulk1o8u.cpp:15:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   15 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / g;\n    while (y * a > n) {\n        y--;\n    }\n    while (y * a < n) {\n        y++;\n    }\n    if (y * a != n) {\n        return std::nullopt;\n    }\n    x = (n - y * b) / a;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpylw7hxu2.cpp:2:\n/tmp/tmpylw7hxu2.cpp: In function \u2018int main()\u2019:\n/tmp/tmpylw7hxu2.cpp:46:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpylw7hxu2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpylw7hxu2.cpp:2:\n/tmp/tmpylw7hxu2.cpp:46:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   46 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0)\n            return std::make_optional(0);\n        else\n            return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0)\n            return std::make_optional(0);\n        else\n            return std::nullopt;\n    }\n    if (b == 0) {\n        if (n % a == 0)\n            return std::make_optional(n / a);\n        else\n            return std::nullopt;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0)\n        return std::nullopt;\n    long x0, y0;\n    std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n    return std::make_optional(x0 * (b / d) + y0 * (a / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmpsn0za8lx.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpsn0za8lx.cpp:27:65: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   27 |     std::tie(x0, y0) = find_solution(b / d, a / d, n / d).value();\n      |                                                                 ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpsn0za8lx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type _",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long a1 = a / g;\n    long b1 = b / g;\n    long n1 = n / g;\n    long x, y;\n    std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n    return std::make_optional(y - (a1 / b1) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123295,
      "stdout": "",
      "stderr": "/tmp/tmp21ieuiwb.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp21ieuiwb.cpp:34:59: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b1, a1 % b1, n1).value();\n      |                                                           ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmp21ieuiwb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmpuo0gt117.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpuo0gt117.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpuo0gt117.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = n / g;\n    std::tie(x, y) = find_solution(b / g, a / g, d);\n    return std::make_optional(std::make_pair(y, x - y * (a / b)));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmpl6qhjvxg.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpl6qhjvxg.cpp:32:51: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018std::optional<long int>\u2019)\n   32 |     std::tie(x, y) = find_solution(b / g, a / g, d);\n      |                                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpl6qhjvxg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018std::optional<long int>\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(n / b);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long x0 = 0;\n    long y0 = n / b;\n    long x1 = b / g;\n    long y1 = -a / g;\n    long x = x0 + (n / g) * x1;\n    long y = y0 + (n / g) * y1;\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6gf2swwa.cpp:2:\n/tmp/tmp6gf2swwa.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6gf2swwa.cpp:40:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp6gf2swwa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6gf2swwa.cpp:2:\n/tmp/tmp6gf2swwa.cpp:40:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   40 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % __gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long g = gcdExtended(a, b, &x, &y);\n    x *= n / g;\n    y *= n / g;\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmpmfsg7qzs.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpmfsg7qzs.cpp:5:13: error: \u2018__gcd\u2019 was not declared in this scope\n    5 |     if (n % __gcd(a, b) != 0) {\n      |             ^~~~~\n/tmp/tmpmfsg7qzs.cpp:5:13: note: suggested alternatives:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpmfsg7qzs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algo.h:1232:5: note:   \u2018std::__gcd\u2019\n 1232 |     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)\n      |     ^~~~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmpmfsg7qzs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:102:5: note:   \u2018std::__detail::__gcd\u2019\n  102 |     __gcd(_Mn __m, _Nn __n)\n      |     ^~~~~\n/tmp/tmpmfsg7qzs.cpp:9:14: error: \u2018gcdExtended\u2019 was not declared in this scope\n    9 |     long g = gcdExtended(a, b, &x, &y);\n      |              ^~~~~~~~~~~\n/tmp/tmpmfsg7qzs.cpp:12:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   12 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmfsg7qzs.cpp:2:\n/tmp/tmpmfsg7qzs.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmfsg7qzs.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    a /= g;\n    b /= g;\n    n /= g;\n    long x, y;\n    std::tie(x, y) = find_solution(b, a % b, n).value();\n    return std::make_optional(y - (a / b) * x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmpuo0gt117.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmpuo0gt117.cpp:34:55: error: no match for \u2018operator=\u2019 (operand types are \u2018std::tuple<long int&, long int&>\u2019 and \u2018long int\u2019)\n   34 |     std::tie(x, y) = find_solution(b, a % b, n).value();\n      |                                                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/functional:54,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/pstl/glue_algorithm_defs.h:13,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:71,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n                 from /tmp/tmpuo0gt117.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1205:7: note: candidate: \u2018std::tuple<_T1, _T2>& std::tuple<_T1, _T2>::operator=(typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type) [with _T1 = long int&; _T2 = long int&; typename std::conditional<__assignable<const _T1&, const _T2&>(), const std::tuple<_T1, _T2>&, const std::__nonesuch_no_braces&>::type = const std::tuple<long int&, long int&>&]\u2019\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |       ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/tuple:1207:45: note:   no known conversion for argument 1 from \u2018long int\u2019 to \u2018std::conditional<true, const std::tuple<long int&, long int&>&, const std::__nonesuch_no_braces&>::type\u2019 {aka \u2018const std::tuple<long int&, long int&>&\u2019}\n 1205 |       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1206 |          const tuple&,\n      |          ~~~~~~~~~~~~~                       \n 1207 |          const __nonesuch_no_braces&>::type __in)\n      |        ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    long x = 0;\n    long y = 0;\n    long gcd = std::gcd(a, b);\n    if (n % gcd != 0) {\n        return std::nullopt;\n    }\n    long x1 = 1;\n    long y1 = 0;\n    long x2 = 0;\n    long y2 = 1;\n    while (a != 0) {\n        long q = b / a;\n        long r = b % a;\n        long x = x2 - q * x1;\n        long y = y2 - q * y1;\n        b = a;\n        a = r;\n        x2 = x1;\n        x1 = x;\n        y2 = y1;\n        y1 = y;\n    }\n    x = x2 * (n / gcd);\n    y = y2 * (n / gcd);\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "/tmp/tmp5sf2qokg.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmp5sf2qokg.cpp:29:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   29 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp5sf2qokg.cpp:2:\n/tmp/tmp5sf2qokg.cpp: In function \u2018int main()\u2019:\n/tmp/tmp5sf2qokg.cpp:33:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   33 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp5sf2qokg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n             ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        if (n % b == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    if (b == 0) {\n        if (n % a == 0) {\n            return std::make_optional(n / a);\n        } else {\n            return std::nullopt;\n        }\n    }\n    long g = std::__gcd(a, b);\n    if (n % g != 0) {\n        return std::nullopt;\n    }\n    long p = n / g;\n    long q = g;\n    long x1 = 1;\n    long y1 = 0;\n    long x2 = 0;\n    long y2 = 1;\n    while (q != 0) {\n        long r = p % q;\n        long c = p / q;\n        long x = x1 - c * x2;\n        long y = y1 - c * y2;\n        p = q;\n        q = r;\n        x1 = x2;\n        x2 = x;\n        y1 = y2;\n        y2 = y;\n    }\n    return std::make_optional(x1 * (n / g));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpavccovj_.cpp:2:\n/tmp/tmpavccovj_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpavccovj_.cpp:48:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   48 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpavccovj_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpavccovj_.cpp:2:\n/tmp/tmpavccovj_.cpp:48:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   48 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0) {\n        if (n == 0) {\n            return std::make_optional(0);\n        } else {\n            return std::nullopt;\n        }\n    }\n    auto x = find_solution(b % a, a, n % a);\n    if (!x) {\n        return std::nullopt;\n    }\n    return std::make_optional(b / a * x.value() - n / a);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123249,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0kpf1j18.cpp:20:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0kpf1j18.cpp:2:\n/tmp/tmp0kpf1j18.cpp:20:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   20 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (a == 0 && b == 0) {\n        return std::nullopt;\n    }\n    if (a == 0) {\n        return n / b;\n    }\n    if (b == 0) {\n        return n / a;\n    }\n    long d = std::__gcd(a, b);\n    if (n % d != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n    while (a != 0) {\n        long q = b / a;\n        long r = b % a;\n        long x3 = x1 - q * x2;\n        long y3 = y1 - q * y2;\n        x = x3;\n        y = y3;\n        b = a;\n        a = r;\n        x1 = x2;\n        x2 = x3;\n        y1 = y2;\n        y2 = y3;\n    }\n    return std::make_optional(x * (n / d));\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb6v1akkq.cpp:2:\n/tmp/tmpb6v1akkq.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb6v1akkq.cpp:38:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmpb6v1akkq.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb6v1akkq.cpp:2:\n/tmp/tmpb6v1akkq.cpp:38:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   38 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0;\n    long y = n / b;\n    while (x * a + y * b != n) {\n        if (x * a + y * b < n) {\n            x++;\n        } else {\n            y--;\n        }\n    }\n    return std::make_tuple(x, y);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1665510514,
      "stdout": "",
      "stderr": "/tmp/tmptfffjucy.cpp: In function \u2018std::optional<long int> find_solution(long int, long int, long int)\u2019:\n/tmp/tmptfffjucy.cpp:5:13: error: \u2018gcd\u2019 was not declared in this scope; did you mean \u2018std::gcd\u2019?\n    5 |     if (n % gcd(a, b) != 0) {\n      |             ^~~\n      |             std::gcd\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:84,\n                 from /tmp/tmptfffjucy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/numeric:131:5: note: \u2018std::gcd\u2019 declared here\n  131 |     gcd(_Mn __m, _Nn __n)\n      |     ^~~\n/tmp/tmptfffjucy.cpp:17:27: error: could not convert \u2018std::make_tuple(_Elements&& ...) [with _Elements = {long int&, long int&}](y)\u2019 from \u2018std::tuple<long int, long int>\u2019 to \u2018std::optional<long int>\u2019\n   17 |     return std::make_tuple(x, y);\n      |            ~~~~~~~~~~~~~~~^~~~~~\n      |                           |\n      |                           std::tuple<long int, long int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmptfffjucy.cpp:2:\n/tmp/tmptfffjucy.cpp: In function \u2018int main()\u2019:\n/tmp/tmptfffjucy.cpp:21:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   21 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmptfffjucy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:",
      "exit_code": -1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nstd::optional<long> find_solution(long a, long b, long n) {\n    if (n % std::gcd(a, b) != 0) {\n        return std::nullopt;\n    }\n    long x = 0, y = 0;\n    long d = std::gcd(a, b);\n    x = n / d * (b / d);\n    y = n / d * (a / d);\n    return std::make_optional(x);\n}\nint main() {\n    auto candidate = find_solution;\n    assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n    assert(candidate((4), (2), (7)) == std::nullopt);\n    assert(candidate((1), (13), (17)) == std::make_tuple(4, 1));\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp: In function \u2018int main()\u2019:\n/tmp/tmp0dcxduft.cpp:16:37: error: no match for \u2018operator==\u2019 (operand types are \u2018std::optional<long int>\u2019 and \u2018std::tuple<int, int>\u2019)\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~ ^~ ~~~~~~~~~~~~~~~~~~~~~\n      |                     |                                 |\n      |                     std::optional<long int>           std::tuple<int, int>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:110,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note: candidate: \u2018template<class _BiIter> bool std::__cxx11::operator==(const std::__cxx11::sub_match<_BiIter>&, const std::__cxx11::sub_match<_BiIter>&)\u2019\n 1026 |     operator==(const sub_match<_BiIter>& __lhs, const sub_match<_BiIter>& __rhs)\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/regex.h:1026:5: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp0dcxduft.cpp:2:\n/tmp/tmp0dcxduft.cpp:16:60: note:   \u2018std::optional<long int>\u2019 is not derived from \u2018const std::__cxx11::sub_match<_BiIter>\u2019\n   16 |     assert(candidate((2), (3), (7)) == std::make_tuple(2, 1));\n      |                                                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/regex:62,\n     ",
      "exit_code": -1,
      "status": "SyntaxError"
    }
  ]
}
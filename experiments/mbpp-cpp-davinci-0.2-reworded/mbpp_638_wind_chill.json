{
  "name": "mbpp_638_wind_chill",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nlong wind_chill(long v, long t) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_638_wind_chill.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = wind_chill;\n    assert(candidate((120), (35)) == (40));\n    assert(candidate((40), (20)) == (19));\n    assert(candidate((10), (8)) == (6));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long w = 13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16);\n    return ceil(w);",
    "  long w;\n  w = 13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16);\n  return w;",
    "    long w = 13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16);\n    return ceil(w);",
    "  if(v<=4.8)\n    return t;\n  else\n    return 13.12+0.6215*t-11.37*pow(v,0.16)+0.3965*t*pow(v,0.16);",
    "    if(v<=4.8)\n        return t;\n    long w = 13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16);\n    return w;",
    "    long w;\n    if(v<=4.8)\n        w = t;\n    else\n        w = 13.12 + 0.6215*t - 11.37*pow(v,0.16) + 0.3965*t*pow(v,0.16);\n    return w;",
    "  // Your code here\n  long w;\n  if(v<=4.8)\n  {\n      w=t;\n  }\n  else\n  {\n      w=13.12+0.6215*t-11.37*pow(v,0.16)+0.3965*t*pow(v,0.16);\n  }\n  return w;",
    "    long w = 0;\n    if(v > 4.8 && t <= 10) {\n        w = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n    }\n    return w;",
    "    // Write your code here\n    long w;\n    if(v<=4.8 || t>=10)\n        w=0;\n    else\n        w=13.12+0.6215*t-11.37*pow(v,0.16)+0.3965*t*pow(v,0.16);\n    return ceil(w);",
    "    long w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n    return round(w);",
    "    assert(v >= 0);\n    assert(t >= -50);\n    assert(t <= 50);\n    long w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n    return round(w);",
    "    return (long)round(13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16));",
    "    return round(13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16));",
    "  // Your code goes here\n  long w;\n  if(v<=4.8 || t>=10)\n  {\n    w=t;\n  }\n  else\n  {\n    w=13.12+0.6215*t-11.37*pow(v,0.16)+0.3965*t*pow(v,0.16);\n  }\n  return w;",
    "    assert(v >= 0);\n    assert(t >= -50 && t <= 50);\n    long w = 13.12 + 0.6215*t - 11.37*pow(v, 0.16) + 0.3965*t*pow(v, 0.16);\n    return round(w);",
    "  // Your code here\n  return 0;",
    "    assert(v >= 0 && t >= -50 && t <= 50);\n    long w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n    return round(w);",
    "    long w = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);\n    return round(w);",
    "    long w = 13.12 + (0.6215 * t) - (11.37 * pow(v, 0.16)) + (0.3965 * t * pow(v, 0.16));\n    return round(w);",
    "  // your code here\n  return 0;"
  ]
}
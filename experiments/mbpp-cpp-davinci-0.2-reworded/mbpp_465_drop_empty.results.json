{
  "name": "mbpp_465_drop_empty",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_465_drop_empty.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto itr = dict1.begin(); itr != dict1.end(); itr++) {\n        if(itr->second) {\n            dict2[itr->first] = *(itr->second);\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzhvgtmzw.cpp:2:\n/tmp/tmpzhvgtmzw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzhvgtmzw.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpzhvgtmzw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzhvgtmzw.cpp:2:\n/tmp/tmpzhvgtmzw.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto itr = dict1.begin();itr != dict1.end();itr++) {\n        if(itr->second) {\n            dict2[itr->first] = itr->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsb8x7ei_.cpp:2:\n/tmp/tmpsb8x7ei_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpsb8x7ei_.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpsb8x7ei_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpsb8x7ei_.cpp:2:\n/tmp/tmpsb8x7ei_.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2.insert(std::make_pair(it->first,it->second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnihjll7p.cpp:2:\n/tmp/tmpnihjll7p.cpp: In function \u2018int main()\u2019:\n/tmp/tmpnihjll7p.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpnihjll7p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpnihjll7p.cpp:2:\n/tmp/tmpnihjll7p.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto itr = dict1.begin(); itr != dict1.end(); itr++) {\n        if(itr->second.has_value()) {\n            dict2.insert(std::make_pair(itr->first,itr->second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp15c6hgwo.cpp:2:\n/tmp/tmp15c6hgwo.cpp: In function \u2018int main()\u2019:\n/tmp/tmp15c6hgwo.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp15c6hgwo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp15c6hgwo.cpp:2:\n/tmp/tmp15c6hgwo.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first]=it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/tmp/tmpv4g6q02u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv4g6q02u.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/tmp/tmpv4g6q02u.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplleqqv23.cpp:2:\n/tmp/tmplleqqv23.cpp: In function \u2018int main()\u2019:\n/tmp/tmplleqqv23.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmplleqqv23.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmplleqqv23.cpp:2:\n/tmp/tmplleqqv23.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n\tstd::map<std::string,std::string> dict2;\n\tfor(auto it=dict1.begin();it!=dict1.end();it++) {\n\t\tif(it->second.has_value()) {\n\t\t\tdict2.insert(std::make_pair(it->first,it->second.value()));\n\t\t}\n\t}\n\treturn dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyavl0jwr.cpp:2:\n/tmp/tmpyavl0jwr.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyavl0jwr.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpyavl0jwr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyavl0jwr.cpp:2:\n/tmp/tmpyavl0jwr.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2.insert(std::make_pair(i.first,*i.second));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgxctpxl3.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second) {\n            dict2[it->first] = *(it->second);\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb6gksnqw.cpp:2:\n/tmp/tmpb6gksnqw.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb6gksnqw.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpb6gksnqw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb6gksnqw.cpp:2:\n/tmp/tmpb6gksnqw.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2.insert(std::make_pair(i.first,*i.second));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgxctpxl3.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i : dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmhq2fce_.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i : dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmhq2fce_.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = *(i.second);\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfq6588uh.cpp:2:\n/tmp/tmpfq6588uh.cpp: In function \u2018int main()\u2019:\n/tmp/tmpfq6588uh.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpfq6588uh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpfq6588uh.cpp:2:\n/tmp/tmpfq6588uh.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::pair<std::string,std::string>(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/tmp/tmpldrbf20u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpldrbf20u.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/tmp/tmpldrbf20u.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first]=*i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1_9_c_67.cpp:2:\n/tmp/tmp1_9_c_67.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1_9_c_67.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp1_9_c_67.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1_9_c_67.cpp:2:\n/tmp/tmp1_9_c_67.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first]=i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpejwb8orz.cpp:2:\n/tmp/tmpejwb8orz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpejwb8orz.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpejwb8orz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpejwb8orz.cpp:2:\n/tmp/tmpejwb8orz.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i : dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmhq2fce_.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n  std::map<std::string,std::string> dict2;\n  for(auto i:dict1) {\n    if(i.second) {\n      dict2[i.first] = *i.second;\n    }\n  }\n  return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb5aimqk_.cpp:2:\n/tmp/tmpb5aimqk_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb5aimqk_.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpb5aimqk_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb5aimqk_.cpp:2:\n/tmp/tmpb5aimqk_.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2.insert(std::make_pair(i.first,*i.second));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgxctpxl3.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n\tstd::map<std::string,std::string> dict2;\n\tfor(auto it=dict1.begin();it!=dict1.end();it++) {\n\t\tif(it->second.has_value()) {\n\t\t\tdict2[it->first]=it->second.value();\n\t\t}\n\t}\n\treturn dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa2u8o4h1.cpp:2:\n/tmp/tmpa2u8o4h1.cpp: In function \u2018int main()\u2019:\n/tmp/tmpa2u8o4h1.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpa2u8o4h1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpa2u8o4h1.cpp:2:\n/tmp/tmpa2u8o4h1.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()==true) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvkldycxn.cpp:2:\n/tmp/tmpvkldycxn.cpp: In function \u2018int main()\u2019:\n/tmp/tmpvkldycxn.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpvkldycxn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpvkldycxn.cpp:2:\n/tmp/tmpvkldycxn.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin();it != dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4w_osw1j.cpp:2:\n/tmp/tmp4w_osw1j.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4w_osw1j.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp4w_osw1j.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4w_osw1j.cpp:2:\n/tmp/tmp4w_osw1j.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto itr = dict1.begin(); itr != dict1.end(); ++itr) {\n        if(itr->second) {\n            dict2[itr->first] = itr->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp43r8jeyu.cpp:2:\n/tmp/tmp43r8jeyu.cpp: In function \u2018int main()\u2019:\n/tmp/tmp43r8jeyu.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp43r8jeyu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp43r8jeyu.cpp:2:\n/tmp/tmp43r8jeyu.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i=dict1.begin();i!=dict1.end();i++) {\n        if(i->second.has_value()) {\n            dict2.insert(std::make_pair(i->first,i->second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/tmp/tmpv17ylgvk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv17ylgvk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/tmp/tmpv17ylgvk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::pair<std::string,std::string>(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/tmp/tmpldrbf20u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpldrbf20u.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/tmp/tmpldrbf20u.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); ++it) {\n        if(it->second) {\n            dict2.insert(std::pair<std::string,std::string>(it->first,*it->second));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb820xuy.cpp:2:\n/tmp/tmphb820xuy.cpp: In function \u2018int main()\u2019:\n/tmp/tmphb820xuy.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmphb820xuy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmphb820xuy.cpp:2:\n/tmp/tmphb820xuy.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/tmp/tmp1wc1q92i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1wc1q92i.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/tmp/tmp1wc1q92i.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for (auto i = dict1.begin(); i != dict1.end(); i++) {\n        if (i->second.has_value()) {\n            dict2[i->first] = i->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk4ntm_10.cpp:2:\n/tmp/tmpk4ntm_10.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk4ntm_10.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpk4ntm_10.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk4ntm_10.cpp:2:\n/tmp/tmpk4ntm_10.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto &[key,value] : dict1) {\n        if(value) {\n            dict2[key] = *value;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps5ifzea2.cpp:2:\n/tmp/tmps5ifzea2.cpp: In function \u2018int main()\u2019:\n/tmp/tmps5ifzea2.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmps5ifzea2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmps5ifzea2.cpp:2:\n/tmp/tmps5ifzea2.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto itr=dict1.begin();itr!=dict1.end();itr++) {\n        if(itr->second) {\n            dict2[itr->first]=*itr->second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb_fyct52.cpp:2:\n/tmp/tmpb_fyct52.cpp: In function \u2018int main()\u2019:\n/tmp/tmpb_fyct52.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpb_fyct52.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpb_fyct52.cpp:2:\n/tmp/tmpb_fyct52.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i=dict1.begin();i!=dict1.end();i++) {\n        if(i->second) {\n            dict2[i->first] = *(i->second);\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx14ydjby.cpp:2:\n/tmp/tmpx14ydjby.cpp: In function \u2018int main()\u2019:\n/tmp/tmpx14ydjby.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpx14ydjby.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpx14ydjby.cpp:2:\n/tmp/tmpx14ydjby.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2.insert(std::make_pair(i.first,*i.second));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgxctpxl3.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i: dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcq_mvlkz.cpp:2:\n/tmp/tmpcq_mvlkz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcq_mvlkz.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcq_mvlkz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcq_mvlkz.cpp:2:\n/tmp/tmpcq_mvlkz.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n  std::map<std::string,std::string> dict2;\n  for(auto i:dict1) {\n    if(i.second.has_value()) {\n      dict2[i.first] = i.second.value();\n    }\n  }\n  return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyb_gu32p.cpp:2:\n/tmp/tmpyb_gu32p.cpp: In function \u2018int main()\u2019:\n/tmp/tmpyb_gu32p.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpyb_gu32p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpyb_gu32p.cpp:2:\n/tmp/tmpyb_gu32p.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2.insert(std::make_pair(it->first,it->second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1m0_8rbs.cpp:2:\n/tmp/tmp1m0_8rbs.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1m0_8rbs.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp1m0_8rbs.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1m0_8rbs.cpp:2:\n/tmp/tmp1m0_8rbs.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/tmp/tmp1wc1q92i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1wc1q92i.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/tmp/tmp1wc1q92i.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2.insert(std::make_pair(it->first,it->second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4cr8ubb_.cpp:2:\n/tmp/tmp4cr8ubb_.cpp: In function \u2018int main()\u2019:\n/tmp/tmp4cr8ubb_.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp4cr8ubb_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp4cr8ubb_.cpp:2:\n/tmp/tmp4cr8ubb_.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i=dict1.begin();i!=dict1.end();i++) {\n        if(i->second.has_value()) {\n            dict2.insert(std::make_pair(i->first,i->second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/tmp/tmpv17ylgvk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv17ylgvk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/tmp/tmpv17ylgvk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second) {\n            dict2[it->first]=*(it->second);\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpphxe82rx.cpp:2:\n/tmp/tmpphxe82rx.cpp: In function \u2018int main()\u2019:\n/tmp/tmpphxe82rx.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpphxe82rx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpphxe82rx.cpp:2:\n/tmp/tmpphxe82rx.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i=dict1.begin();i!=dict1.end();i++) {\n        if(i->second.has_value()) {\n            dict2[i->first]=i->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprhl3tlq9.cpp:2:\n/tmp/tmprhl3tlq9.cpp: In function \u2018int main()\u2019:\n/tmp/tmprhl3tlq9.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprhl3tlq9.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprhl3tlq9.cpp:2:\n/tmp/tmprhl3tlq9.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::pair<std::string,std::string>(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/tmp/tmpldrbf20u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpldrbf20u.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpldrbf20u.cpp:2:\n/tmp/tmpldrbf20u.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i : dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp: In function \u2018int main()\u2019:\n/tmp/tmpmhq2fce_.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpmhq2fce_.cpp:2:\n/tmp/tmpmhq2fce_.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n  std::map<std::string,std::string> dict2;\n  for(auto itr=dict1.begin();itr!=dict1.end();itr++) {\n    if(itr->second) {\n      dict2[itr->first]=*(itr->second);\n    }\n  }\n  return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpw45kztvo.cpp:2:\n/tmp/tmpw45kztvo.cpp: In function \u2018int main()\u2019:\n/tmp/tmpw45kztvo.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpw45kztvo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpw45kztvo.cpp:2:\n/tmp/tmpw45kztvo.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i=dict1.begin();i!=dict1.end();i++) {\n        if(i->second.has_value()) {\n            dict2.insert(std::make_pair(i->first,i->second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/tmp/tmpv17ylgvk.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv17ylgvk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv17ylgvk.cpp:2:\n/tmp/tmpv17ylgvk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto itr=dict1.begin();itr!=dict1.end();itr++) {\n        if(itr->second.has_value()) {\n            dict2[itr->first]=itr->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1og_aj_l.cpp:2:\n/tmp/tmp1og_aj_l.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1og_aj_l.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp1og_aj_l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1og_aj_l.cpp:2:\n/tmp/tmp1og_aj_l.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first]=*i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1_9_c_67.cpp:2:\n/tmp/tmp1_9_c_67.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1_9_c_67.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp1_9_c_67.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1_9_c_67.cpp:2:\n/tmp/tmp1_9_c_67.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2.insert(std::make_pair(i.first,*i.second));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp: In function \u2018int main()\u2019:\n/tmp/tmpgxctpxl3.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpgxctpxl3.cpp:2:\n/tmp/tmpgxctpxl3.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/tmp/tmp1wc1q92i.cpp: In function \u2018int main()\u2019:\n/tmp/tmp1wc1q92i.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp1wc1q92i.cpp:2:\n/tmp/tmp1wc1q92i.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first]=it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/tmp/tmpv4g6q02u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv4g6q02u.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/tmp/tmpv4g6q02u.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second) {\n            dict2[it->first] = *it->second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzfdpol0f.cpp:2:\n/tmp/tmpzfdpol0f.cpp: In function \u2018int main()\u2019:\n/tmp/tmpzfdpol0f.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpzfdpol0f.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpzfdpol0f.cpp:2:\n/tmp/tmpzfdpol0f.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2.insert(std::make_pair(i.first,i.second.value()));\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp: In function \u2018int main()\u2019:\n/tmp/tmprtcojidk.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmprtcojidk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmprtcojidk.cpp:2:\n/tmp/tmprtcojidk.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp: In function \u2018int main()\u2019:\n/tmp/tmpalxvyzcm.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpalxvyzcm.cpp:2:\n/tmp/tmpalxvyzcm.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i=dict1.begin();i!=dict1.end();i++) {\n        if(i->second.has_value()) {\n            dict2[i->first] = i->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp67ppewfe.cpp:2:\n/tmp/tmp67ppewfe.cpp: In function \u2018int main()\u2019:\n/tmp/tmp67ppewfe.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp67ppewfe.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp67ppewfe.cpp:2:\n/tmp/tmp67ppewfe.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it=dict1.begin();it!=dict1.end();it++) {\n        if(it->second.has_value()) {\n            dict2[it->first]=it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/tmp/tmpv4g6q02u.cpp: In function \u2018int main()\u2019:\n/tmp/tmpv4g6q02u.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpv4g6q02u.cpp:2:\n/tmp/tmpv4g6q02u.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second) {\n            dict2[i.first] = *i.second;\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp: In function \u2018int main()\u2019:\n/tmp/tmpz6k6yf2n.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpz6k6yf2n.cpp:2:\n/tmp/tmpz6k6yf2n.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second) {\n            dict2[it->first] = *(it->second);\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9gmidz.cpp:2:\n/tmp/tmpwp9gmidz.cpp: In function \u2018int main()\u2019:\n/tmp/tmpwp9gmidz.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpwp9gmidz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpwp9gmidz.cpp:2:\n/tmp/tmpwp9gmidz.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); ++it) {\n        if(it->second) {\n            dict2[it->first] = *(it->second);\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123278,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk__qzbul.cpp:2:\n/tmp/tmpk__qzbul.cpp: In function \u2018int main()\u2019:\n/tmp/tmpk__qzbul.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpk__qzbul.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpk__qzbul.cpp:2:\n/tmp/tmpk__qzbul.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto it = dict1.begin(); it != dict1.end(); it++) {\n        if(it->second.has_value()) {\n            dict2[it->first] = it->second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1666123276,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp: In function \u2018int main()\u2019:\n/tmp/tmp6_wymtux.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmp6_wymtux.cpp:2:\n/tmp/tmp6_wymtux.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to drop empty items from a given map.\nstd::map<std::string,std::string> drop_empty(std::map<std::string,std::optional<std::string>> dict1) {\n    std::map<std::string,std::string> dict2;\n    for(auto i:dict1) {\n        if(i.second.has_value()) {\n            dict2[i.first] = i.second.value();\n        }\n    }\n    return dict2;\n}\nint main() {\n    auto candidate = drop_empty;\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n    assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", std::nullopt}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}})));\n    assert(candidate(std::map<std::string,std::nullopt>({{\"c1\", std::nullopt}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c2\", \"Green\"}})));\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp: In function \u2018int main()\u2019:\n/tmp/tmpcbsf2fb4.cpp:15:110: error: no matching function for call to \u2018std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >::map(<brace-enclosed initializer list>)\u2019\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                                                                                              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/map:61,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:81,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note: candidate: \u2018template<class _InputIterator> std::map<_Key, _Tp, _Compare, _Alloc>::map(_InputIterator, _InputIterator, const _Compare&, const allocator_type&)\u2019\n  288 |  map(_InputIterator __first, _InputIterator __last,\n      |  ^~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_map.h:288:2: note:   template argument deduction/substitution failed:\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cassert:44,\n                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:33,\n                 from /tmp/tmpcbsf2fb4.cpp:2:\n/tmp/tmpcbsf2fb4.cpp:15:110: note:   candidate expects 4 arguments, 1 provided\n   15 |     assert(candidate(std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}, {\"c3\", std::nullopt}})) == (std::map<std::string,std::string>({{\"c1\", \"Red\"}, {\"c2\", \"Green\"}})));\n      |                                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_398_sum_of_digits",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to compute the sum of digits of each number of a given vector.\nlong sum_of_digits(std::any nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = sum_of_digits;\n    assert(candidate((std::any({(long)10, (long)2, (long)56}))) == (14));\n    assert(candidate((std::any({(std::vector<long>)std::vector<std::any>({10, 20, 4, 5, \"b\", 70, \"a\"})}))) == (19));\n    assert(candidate((std::any({(long)10, (long)20, (long)-4, (long)5, (long)-70}))) == (19));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "\tlong sum = 0;\n\tfor (auto i : nums) {\n\t\tsum += i;\n\t}\n\treturn sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "  long sum = 0;\n  for (auto num : nums) {\n    std::string str = std::to_string(num);\n    for (auto c : str) {\n      sum += c - '0';\n    }\n  }\n  return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for(auto i: nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string str = std::to_string(num);\n        for (auto c : str) {\n            sum += c - '0';\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string num_str = std::to_string(num);\n        for (auto digit : num_str) {\n            sum += digit - '0';\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string num_str = std::to_string(num);\n        for (auto digit : num_str) {\n            sum += std::stoi(std::string(1, digit));\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        std::string str = std::to_string(num);\n        for (auto ch : str) {\n            sum += ch - '0';\n        }\n    }\n    return sum;",
    "    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n    }\n    return sum;"
  ]
}
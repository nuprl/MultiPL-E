{
  "name": "mbpp_793_last",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the last position of an element in a sorted vector.\nlong last(std::vector<long> arr, long x) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = last;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (1)) == (0));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)2, (long)3, (long)4})), (1)) == (2));\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)2, (long)3, (long)6, (long)8, (long)9})), (3)) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // your code goes here\n    long i;\n    for(i=arr.size()-1;i>=0;i--){\n        if(arr[i]==x)\n            return i;\n    }\n    return -1;",
    "    // Your code here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l <= r) {\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] < x) {\n            l = mid+1;\n        }\n        else {\n            r = mid-1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long ans = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n=arr.size();\n    long l=0,h=n-1,mid;\n    while(l<=h){\n        mid=(l+h)/2;\n        if(arr[mid]==x && arr[mid+1]>x)\n            return mid;\n        else if(arr[mid]<=x)\n            l=mid+1;\n        else\n            h=mid-1;\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n=arr.size();\n    long low=0,high=n-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x){\n            if(mid==n-1 || arr[mid+1]!=x)\n                return mid;\n            else\n                low=mid+1;\n        }\n        else if(arr[mid]<x)\n            low=mid+1;\n        else\n            high=mid-1;\n    }\n    return -1;",
    "    // Your code here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x){\n            r = mid-1;\n        }\n        else{\n            l = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long ans = -1;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (x == arr[mid]) {\n            ans = mid;\n            start = mid + 1;\n        }\n        else if (x < arr[mid]) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high)\n    {\n        long mid = (low + high)/2;\n        if(arr[mid] == x)\n        {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x)\n        {\n            low = mid + 1;\n        }\n        else\n        {\n            high = mid - 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low=0,high=arr.size()-1;\n    long ans=-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long l = 0, r = n - 1;\n    long ans = -1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            l = mid + 1;\n        } else if (arr[mid] < x) {\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size()-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        } else if(arr[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x)\n            r = mid-1;\n        else\n            l = mid+1;\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1, mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] != x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return -1;",
    "    // your code goes here\n    long low=0;\n    long high=arr.size()-1;\n    long ans=-1;\n    while(low<=high){\n        long mid=(low+high)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return ans;",
    "    // your code goes here\n    long l = 0, r = arr.size()-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = (l+r)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid + 1;\n        }\n        else if(arr[mid] > x){\n            r = mid - 1;\n        }\n        else{\n            l = mid + 1;\n        }\n    }\n    return ans;"
  ]
}
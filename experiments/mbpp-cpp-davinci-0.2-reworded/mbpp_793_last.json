{
  "name": "mbpp_793_last",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the last position of an element in a sorted vector.\nlong last(std::vector<long> arr, long x) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = last;\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3})), (1)) == (0));\n    assert(candidate((std::vector<long>({(long)1, (long)1, (long)1, (long)2, (long)3, (long)4})), (1)) == (2));\n    assert(candidate((std::vector<long>({(long)2, (long)3, (long)2, (long)3, (long)6, (long)8, (long)9})), (3)) == (3));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    // your code goes here\n    long i;\n    for(i=arr.size()-1;i>=0;i--){\n        if(arr[i]==x)\n            return i;\n    }\n    return -1;",
    "    // Your code here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l <= r) {\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] < x) {\n            l = mid+1;\n        }\n        else {\n            r = mid-1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long ans = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n=arr.size();\n    long l=0,h=n-1,mid;\n    while(l<=h){\n        mid=(l+h)/2;\n        if(arr[mid]==x && arr[mid+1]>x)\n            return mid;\n        else if(arr[mid]<=x)\n            l=mid+1;\n        else\n            h=mid-1;\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n=arr.size();\n    long low=0,high=n-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x){\n            if(mid==n-1 || arr[mid+1]!=x)\n                return mid;\n            else\n                low=mid+1;\n        }\n        else if(arr[mid]<x)\n            low=mid+1;\n        else\n            high=mid-1;\n    }\n    return -1;",
    "    // Your code here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x){\n            r = mid-1;\n        }\n        else{\n            l = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long ans = -1;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (x == arr[mid]) {\n            ans = mid;\n            start = mid + 1;\n        }\n        else if (x < arr[mid]) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high)\n    {\n        long mid = (low + high)/2;\n        if(arr[mid] == x)\n        {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x)\n        {\n            low = mid + 1;\n        }\n        else\n        {\n            high = mid - 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low=0,high=arr.size()-1;\n    long ans=-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long l = 0, r = n - 1;\n    long ans = -1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            l = mid + 1;\n        } else if (arr[mid] < x) {\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size()-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        } else if(arr[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x)\n            r = mid-1;\n        else\n            l = mid+1;\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1, mid;\n    while(low <= high) {\n        mid = (low + high) / 2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] != x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return -1;",
    "    // your code goes here\n    long low=0;\n    long high=arr.size()-1;\n    long ans=-1;\n    while(low<=high){\n        long mid=(low+high)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x)\n            high = mid - 1;\n        else\n            low = mid + 1;\n    }\n    return ans;",
    "    // your code goes here\n    long l = 0, r = arr.size()-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = (l+r)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid + 1;\n        }\n        else if(arr[mid] > x){\n            r = mid - 1;\n        }\n        else{\n            l = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x && (mid == n - 1 || arr[mid + 1] > x)) {\n            return mid;\n        }\n        else if (arr[mid] <= x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long result = -1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long ans = -1;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (x == arr[mid]) {\n            ans = mid;\n            start = mid + 1;\n        } else if (x < arr[mid]) {\n            end = mid - 1;\n        } else {\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n=arr.size();\n    long l=0,h=n-1,mid;\n    while(l<=h){\n        mid=(l+h)/2;\n        if(arr[mid]==x && arr[mid+1]>x)\n            return mid;\n        else if(arr[mid]<=x)\n            l=mid+1;\n        else\n            h=mid-1;\n    }\n    return -1;",
    "    long low = 0;\n    long high = arr.size()-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    long ans=-1;\n    while(l<=r){\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            l=mid+1;\n        }\n        else if(arr[mid]>x){\n            r=mid-1;\n        }\n        else{\n            l=mid+1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size()-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long result = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long l = 0, r = arr.size() - 1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (arr[mid] == x && (mid == arr.size() - 1 || arr[mid + 1] != x)) {\n            return mid;\n        } else if (arr[mid] <= x) {\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    return -1;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    while(l<=r){\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x){\n            if(mid==arr.size()-1 || arr[mid+1]>x)\n                return mid;\n            else\n                l=mid+1;\n        }\n        else if(arr[mid]<x)\n            l=mid+1;\n        else\n            r=mid-1;\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long start = 0, end = n-1;\n    long ans = -1;\n    while(start<=end){\n        long mid = start + (end-start)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            start = mid+1;\n        }\n        else if(arr[mid] > x){\n            end = mid-1;\n        }\n        else{\n            start = mid+1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size()-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return result;",
    "    int n = arr.size();\n    int start = 0;\n    int end = n-1;\n    int result = -1;\n    while(start <= end) {\n        int mid = (start + end) / 2;\n        if(arr[mid] == x) {\n            result = mid;\n            start = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low=0;\n    long high=arr.size()-1;\n    long ans=-1;\n    while(low<=high)\n    {\n        long mid=low+(high-low)/2;\n        if(arr[mid]==x)\n        {\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x)\n        {\n            high=mid-1;\n        }\n        else\n        {\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long start = 0, end = n-1;\n    long result = -1;\n    while(start <= end){\n        long mid = (start + end)/2;\n        if(arr[mid] == x){\n            result = mid;\n            start = mid + 1;\n        }\n        else if(arr[mid] < x){\n            start = mid + 1;\n        }\n        else{\n            end = mid - 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long mid = 0;\n    long ans = -1;\n    while(low <= high){\n        mid = (low+high)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    int n = arr.size();\n    int low = 0;\n    int high = n-1;\n    int mid;\n    int res = -1;\n    while(low <= high){\n        mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            res = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return res;",
    "    // Your code here\n    long n = arr.size();\n    long start = 0, end = n-1;\n    long ans = -1;\n    while(start <= end){\n        long mid = start + (end-start)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            start = mid+1;\n        }\n        else if(arr[mid] > x)\n            end = mid-1;\n        else\n            start = mid+1;\n    }\n    return ans;",
    "    long l = 0, r = arr.size() - 1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (arr[mid] == x) {\n            if (mid == arr.size() - 1 || arr[mid + 1] != x) {\n                return mid;\n            }\n            l = mid + 1;\n        } else if (arr[mid] < x) {\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    long l = 0, r = arr.size() - 1;\n    long ans = -1;\n    while(l <= r) {\n        long mid = l + (r - l) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            l = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            r = mid - 1;\n        }\n        else {\n            l = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low=0,high=arr.size()-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x){\n            if(mid==arr.size()-1)\n                return mid;\n            else if(arr[mid+1]!=x)\n                return mid;\n            else\n                low=mid+1;\n        }\n        else if(arr[mid]<x)\n            low=mid+1;\n        else\n            high=mid-1;\n    }\n    return -1;",
    "    long low = 0;\n    long high = arr.size()-1;\n    long ans = -1;\n    while(low<=high) {\n        long mid = (low+high)/2;\n        if(arr[mid]==x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n=arr.size();\n    long low=0,high=n-1,mid;\n    while(low<=high)\n    {\n        mid=(low+high)/2;\n        if(arr[mid]==x)\n        {\n            if(mid==n-1)\n            return mid;\n            else if(arr[mid+1]!=x)\n            return mid;\n            else\n            low=mid+1;\n        }\n        else if(arr[mid]>x)\n        high=mid-1;\n        else\n        low=mid+1;\n    }\n    return -1;",
    "    // your code goes here\n    long l=0,r=arr.size()-1,mid;\n    while(l<=r){\n        mid=(l+r)/2;\n        if(arr[mid]==x){\n            if(mid==arr.size()-1)\n                return mid;\n            else if(arr[mid+1]!=x)\n                return mid;\n            else\n                l=mid+1;\n        }\n        else if(arr[mid]<x)\n            l=mid+1;\n        else\n            r=mid-1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n=arr.size();\n    long low=0,high=n-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x){\n            if(mid==n-1 || arr[mid+1]>x)\n                return mid;\n            else\n                low=mid+1;\n        }\n        else if(arr[mid]>x)\n            high=mid-1;\n        else\n            low=mid+1;\n    }\n    return -1;",
    "    // your code goes here\n    long n=arr.size();\n    long low=0,high=n-1;\n    long ans=-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0;\n    long end = n-1;\n    long ans = -1;\n    while(start <= end) {\n        long mid = (start + end)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            start = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] != x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = (low + high)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long l = 0, r = arr.size()-1;\n    long ans = -1;\n    while(l <= r) {\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            l = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            r = mid - 1;\n        }\n        else {\n            l = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0, high = arr.size()-1;\n    long mid;\n    while(low <= high){\n        mid = (low + high)/2;\n        if(arr[mid] == x){\n            if(mid == arr.size()-1 || arr[mid+1] != x)\n                return mid;\n            else\n                low = mid+1;\n        }\n        else if(arr[mid] > x)\n            high = mid-1;\n        else\n            low = mid+1;\n    }\n    return -1;",
    "    // Your code here\n    long l=0,r=arr.size()-1;\n    long ans=-1;\n    while(l<=r){\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            l=mid+1;\n        }\n        else if(arr[mid]>x){\n            r=mid-1;\n        }\n        else{\n            l=mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n=arr.size();\n    long low=0,high=n-1;\n    long ans=-1;\n    while(low<=high){\n        long mid=low+(high-low)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x)\n            high=mid-1;\n        else\n            low=mid+1;\n    }\n    return ans;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    while(l<=r){\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x){\n            if(mid==arr.size()-1){\n                return mid;\n            }\n            if(arr[mid+1]!=x){\n                return mid;\n            }\n            l=mid+1;\n        }\n        else if(arr[mid]>x){\n            r=mid-1;\n        }\n        else{\n            l=mid+1;\n        }\n    }\n    return -1;",
    "    // Your code here\n    long n=arr.size();\n    long low=0;\n    long high=n-1;\n    long ans=-1;\n    while(low<=high)\n    {\n        long mid=low+(high-low)/2;\n        if(arr[mid]==x)\n        {\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x)\n        {\n            high=mid-1;\n        }\n        else\n        {\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size() - 1;\n    long mid;\n    long ans = -1;\n    while(low <= high) {\n        mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long result = -1;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (x == arr[mid]) {\n            result = mid;\n            start = mid + 1;\n        }\n        else if (x < arr[mid]) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n=arr.size();\n    long low=0,high=n-1;\n    long ans=-1;\n    while(low<=high)\n    {\n        long mid=low+(high-low)/2;\n        if(arr[mid]==x)\n        {\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x)\n        {\n            high=mid-1;\n        }\n        else\n        {\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    long l = 0, r = arr.size() - 1;\n    while (l < r) {\n        long m = l + (r - l + 1) / 2;\n        if (arr[m] <= x) {\n            l = m;\n        } else {\n            r = m - 1;\n        }\n    }\n    return arr[l] == x ? l : -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] > x)) {\n            return mid;\n        }\n        else if(arr[mid] <= x) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return -1;",
    "    // your code goes here\n    long low = 0, high = arr.size()-1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x && (mid == arr.size()-1 || arr[mid+1] > x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] < x)\n            l = mid+1;\n        else\n            r = mid-1;\n    }\n    return ans;",
    "    // your code goes here\n    long l=0,r=arr.size()-1,mid;\n    while(l<r){\n        mid=(l+r)/2;\n        if(arr[mid]<=x)\n            l=mid+1;\n        else\n            r=mid;\n    }\n    if(arr[l]==x)\n        return l;\n    else\n        return -1;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long result = -1;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (x == arr[mid]) {\n            result = mid;\n            start = mid + 1;\n        }\n        else if (x < arr[mid]) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n=arr.size();\n    long low=0,high=n-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x){\n            if(mid==n-1 || arr[mid+1]>x)\n                return mid;\n            else\n                low=mid+1;\n        }\n        else if(arr[mid]>x)\n            high=mid-1;\n        else\n            low=mid+1;\n    }\n    return -1;",
    "    // your code here\n    long low=0,high=arr.size()-1,mid;\n    while(low<=high){\n        mid=low+(high-low)/2;\n        if(arr[mid]==x && (mid==arr.size()-1 || arr[mid+1]>x))\n            return mid;\n        else if(arr[mid]<=x)\n            low=mid+1;\n        else\n            high=mid-1;\n    }\n    return -1;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size() - 1;\n    long mid;\n    while(low <= high) {\n        mid = low + (high - low) / 2;\n        if(arr[mid] == x && (mid == arr.size() - 1 || arr[mid + 1] != x)) {\n            return mid;\n        }\n        else if(arr[mid] <= x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] > x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long ans = -1;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            start = mid + 1;\n        }\n        else if (arr[mid] > x) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long ans = -1;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            start = mid + 1;\n        }\n        else if (arr[mid] < x) {\n            start = mid + 1;\n        }\n        else {\n            end = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n - 1, ans = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long l = 0, r = n - 1;\n    long ans = -1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            l = mid + 1;\n        } else if (arr[mid] > x) {\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high)\n    {\n        long mid = (low + high)/2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] > x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return -1;",
    "    // your code here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    while(l<=r){\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x){\n            if(mid == n-1 || arr[mid+1] != x)\n                return mid;\n            else\n                l = mid+1;\n        }\n        else if(arr[mid] > x)\n            r = mid-1;\n        else\n            l = mid+1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long result = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long result = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long l = 0;\n    long r = n-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = (l+r)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid]<x){\n            l = mid+1;\n        }\n        else{\n            r = mid-1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long mid;\n    long ans = -1;\n    while(low<=high){\n        mid = low + (high-low)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    while(l<=r){\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x){\n            if(mid==arr.size()-1 || arr[mid+1]!=x)\n                return mid;\n            else\n                l=mid+1;\n        }\n        else if(arr[mid]<x)\n            l=mid+1;\n        else\n            r=mid-1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long result = -1;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (x == arr[mid]) {\n            result = mid;\n            start = mid + 1;\n        }\n        else if (x < arr[mid]) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long l = 0;\n    long r = arr.size()-1;\n    long ans = -1;\n    while(l <= r) {\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x) {\n            r = mid-1;\n        }\n        else {\n            l = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long l = 0, r = arr.size()-1;\n    long ans = -1;\n    while(l<=r) {\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x) {\n            r = mid-1;\n        }\n        else {\n            l = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long result = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    long ans=-1;\n    while(l<=r){\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            l=mid+1;\n        }\n        else if(arr[mid]>x){\n            r=mid-1;\n        }\n        else{\n            l=mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size() - 1;\n    long result = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if (arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low=0,high=arr.size()-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x && (mid==arr.size()-1 || arr[mid+1]>x)){\n            return mid;\n        }\n        else if(arr[mid]<=x){\n            low=mid+1;\n        }\n        else{\n            high=mid-1;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long ans = -1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n=arr.size();\n    long l=0,h=n-1,m;\n    while(l<=h)\n    {\n        m=(l+h)/2;\n        if(arr[m]==x)\n        {\n            if(m==n-1 || arr[m+1]>x)\n            return m;\n            else\n            l=m+1;\n        }\n        else if(arr[m]>x)\n        h=m-1;\n        else\n        l=m+1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l <= r) {\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] < x) {\n            l = mid+1;\n        }\n        else {\n            r = mid-1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long result = -1;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (x == arr[mid]) {\n            result = mid;\n            start = mid + 1;\n        } else if (x < arr[mid]) {\n            end = mid - 1;\n        } else {\n            start = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low=0;\n    long high=arr.size()-1;\n    long mid=0;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x){\n            if(mid==arr.size()-1){\n                return mid;\n            }\n            else if(arr[mid+1]!=x){\n                return mid;\n            }\n            else{\n                low=mid+1;\n            }\n        }\n        else if(arr[mid]>x){\n            high=mid-1;\n        }\n        else{\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long low = 0, high = arr.size() - 1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x && (mid == arr.size() - 1 || arr[mid + 1] != x))\n            return mid;\n        else if (arr[mid] <= x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x)\n            high = mid-1;\n        else\n            low = mid+1;\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long mid;\n    long ans = -1;\n    while(low <= high)\n    {\n        mid = (low+high)/2;\n        if(arr[mid] == x)\n        {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x)\n        {\n            low = mid+1;\n        }\n        else\n        {\n            high = mid-1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0, high = arr.size()-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = (low+high)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long result = -1;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (x == arr[mid]) {\n            result = mid;\n            start = mid + 1;\n        }\n        else if (x < arr[mid]) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x){\n            low = mid + 1;\n        }\n        else{\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n=arr.size();\n    long l=0,r=n-1,mid;\n    while(l<=r)\n    {\n        mid=l+(r-l)/2;\n        if(arr[mid]==x)\n        {\n            if(mid==n-1||arr[mid+1]>x)\n            return mid;\n            else\n            l=mid+1;\n        }\n        else if(arr[mid]>x)\n        r=mid-1;\n        else\n        l=mid+1;\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    long ans=-1;\n    while(l<=r)\n    {\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x)\n        {\n            ans=mid;\n            l=mid+1;\n        }\n        else if(arr[mid]>x)\n        {\n            r=mid-1;\n        }\n        else\n        {\n            l=mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long ans = -1;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            start = mid + 1;\n        } else if (arr[mid] > x) {\n            end = mid - 1;\n        } else {\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    while(l<=r)\n    {\n        long mid=(l+r)/2;\n        if(arr[mid]==x)\n        {\n            if(mid==arr.size()-1)\n            {\n                return mid;\n            }\n            else if(arr[mid+1]!=x)\n            {\n                return mid;\n            }\n            else\n            {\n                l=mid+1;\n            }\n        }\n        else if(arr[mid]<x)\n        {\n            l=mid+1;\n        }\n        else\n        {\n            r=mid-1;\n        }\n    }\n    return -1;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long low = 0;\n    long high = arr.size() - 1;\n    long result = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if (arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    while(low<=high){\n        long mid = (low+high)/2;\n        if(arr[mid]==x){\n            if(mid==n-1 || arr[mid+1]>x)\n                return mid;\n            else\n                low = mid+1;\n        }\n        else if(arr[mid]<x)\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return -1;",
    "    // your code goes here\n    long low=0,high=arr.size()-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x && arr[mid+1]!=x)\n            return mid;\n        else if(arr[mid]<=x)\n            low=mid+1;\n        else\n            high=mid-1;\n    }\n    return -1;",
    "    // your code goes here\n    long low=0;\n    long high=arr.size()-1;\n    long mid;\n    long ans=-1;\n    while(low<=high)\n    {\n        mid=(low+high)/2;\n        if(arr[mid]==x)\n        {\n            ans=mid;\n            low=mid+1;\n        }\n        else if(arr[mid]>x)\n        {\n            high=mid-1;\n        }\n        else\n        {\n            low=mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l <= r){\n        long mid = l + (r-l)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x){\n            r = mid-1;\n        }\n        else{\n            l = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long l=0,r=arr.size()-1,mid;\n    while(l<=r)\n    {\n        mid=(l+r)/2;\n        if(arr[mid]==x)\n        {\n            if(mid==arr.size()-1)\n            return mid;\n            else if(arr[mid+1]!=x)\n            return mid;\n            else\n            l=mid+1;\n        }\n        else if(arr[mid]>x)\n        r=mid-1;\n        else\n        l=mid+1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    long ans = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            result = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long mid;\n    long ans = -1;\n    while(low <= high) {\n        mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x) {\n            low = mid+1;\n        }\n        else {\n            high = mid-1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n - 1;\n    long ans = -1;\n    while (low <= high) {\n        long mid = low + (high - low) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        } else if (arr[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low=0,high=arr.size()-1,mid;\n    while(low<=high)\n    {\n        mid=(low+high)/2;\n        if(arr[mid]>x)\n        high=mid-1;\n        else if(arr[mid]<x)\n        low=mid+1;\n        else\n        {\n            if(mid==arr.size()-1)\n            return mid;\n            else if(arr[mid+1]==x)\n            low=mid+1;\n            else\n            return mid;\n        }\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1, mid;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] > x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid + 1;\n        else\n            high = mid - 1;\n    }\n    return -1;",
    "    // your code here\n    int n = arr.size();\n    int low = 0;\n    int high = n-1;\n    int ans = -1;\n    while(low <= high){\n        int mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high){\n        long mid = (low+high)/2;\n        if(arr[mid] == x){\n            if(mid == n-1 || arr[mid+1] != x){\n                return mid;\n            }\n            else{\n                low = mid+1;\n            }\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] > x)) {\n            return mid;\n        }\n        else if(arr[mid] <= x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return -1;",
    "    // Your code here\n    long n=arr.size();\n    long start=0;\n    long end=n-1;\n    long ans=-1;\n    while(start<=end)\n    {\n        long mid=start+(end-start)/2;\n        if(arr[mid]==x)\n        {\n            ans=mid;\n            start=mid+1;\n        }\n        else if(arr[mid]>x)\n        {\n            end=mid-1;\n        }\n        else\n        {\n            start=mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    long ans=-1;\n    while(l<=r){\n        long mid=(l+r)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            l=mid+1;\n        }\n        else if(arr[mid]>x){\n            r=mid-1;\n        }\n        else{\n            l=mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long result = -1;\n    while (start <= end) {\n        long mid = (start + end) / 2;\n        if (x == arr[mid]) {\n            result = mid;\n            start = mid + 1;\n        } else if (x < arr[mid]) {\n            end = mid - 1;\n        } else {\n            start = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x){\n            low = mid+1;\n        }\n        else{\n            high = mid-1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low=0,high=arr.size()-1;\n    long mid;\n    while(low<=high)\n    {\n        mid=(low+high)/2;\n        if(arr[mid]==x)\n        {\n            if(mid==arr.size()-1)\n            {\n                return mid;\n            }\n            else if(arr[mid+1]!=x)\n            {\n                return mid;\n            }\n            else\n            {\n                low=mid+1;\n            }\n        }\n        else if(arr[mid]>x)\n        {\n            high=mid-1;\n        }\n        else\n        {\n            low=mid+1;\n        }\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = (low + high)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long mid;\n    long ans = -1;\n    while(low <= high) {\n        mid = (low + high)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long low = 0, high = arr.size() - 1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long l = 0, r = n-1;\n    long ans = -1;\n    while(l<=r){\n        long mid = (l+r)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            l = mid+1;\n        }\n        else if(arr[mid] > x){\n            r = mid-1;\n        }\n        else{\n            l = mid+1;\n        }\n    }\n    return ans;",
    "    long low = 0, high = arr.size() - 1;\n    while (low <= high) {\n        long mid = (low + high) / 2;\n        if (arr[mid] == x && (mid == arr.size() - 1 || arr[mid + 1] > x)) {\n            return mid;\n        } else if (arr[mid] > x) {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return -1;",
    "    // your code goes here\n    long n = arr.size();\n    long start = 0;\n    long end = n-1;\n    long ans = -1;\n    while(start <= end){\n        long mid = start + (end - start)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            start = mid + 1;\n        }\n        else if(arr[mid] > x){\n            end = mid - 1;\n        }\n        else{\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x)\n            high = mid-1;\n        else\n            low = mid+1;\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return result;",
    "    long n = arr.size();\n    long start = 0;\n    long end = n-1;\n    long ans = -1;\n    while(start <= end) {\n        long mid = (start + end) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            start = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            start = mid + 1;\n        }\n        else {\n            end = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long l = 0;\n    long r = arr.size() - 1;\n    long ans = -1;\n    while (l <= r) {\n        long mid = l + (r - l) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            l = mid + 1;\n        } else if (arr[mid] > x) {\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long ans = -1;\n    while(low<=high){\n        long mid = low + (high-low)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low = 0, high = arr.size()-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n=arr.size();\n    long low=0,high=n-1,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(arr[mid]==x && (mid==n-1 || arr[mid+1]>x))\n            return mid;\n        else if(arr[mid]<=x)\n            low=mid+1;\n        else\n            high=mid-1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x && (mid == n-1 || arr[mid+1] > x))\n            return mid;\n        else if(arr[mid] <= x)\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return -1;",
    "    long n = arr.size();\n    long start = 0, end = n - 1;\n    long ans = -1;\n    while (start <= end) {\n        long mid = start + (end - start) / 2;\n        if (arr[mid] == x) {\n            ans = mid;\n            start = mid + 1;\n        }\n        else if (arr[mid] > x) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long result = -1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(arr[mid] == x) {\n            result = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return result;",
    "    // your code goes here\n    long low = 0, high = arr.size()-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = (low + high)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x) {\n            high = mid-1;\n        }\n        else {\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long l=0,r=arr.size()-1;\n    long ans=-1;\n    while(l<=r){\n        long mid=l+(r-l)/2;\n        if(arr[mid]==x){\n            ans=mid;\n            l=mid+1;\n        }\n        else if(arr[mid]>x){\n            r=mid-1;\n        }\n        else{\n            l=mid+1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n = arr.size();\n    long start = 0;\n    long end = n-1;\n    long ans = -1;\n    while(start<=end){\n        long mid = start + (end-start)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            start = mid+1;\n        }\n        else if(arr[mid]>x){\n            end = mid-1;\n        }\n        else{\n            start = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] < x)\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return ans;",
    "    // your code goes here\n    long low = 0;\n    long high = arr.size()-1;\n    long mid;\n    long ans = -1;\n    while(low <= high){\n        mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    int n = arr.size();\n    int low = 0;\n    int high = n-1;\n    int ans = -1;\n    while(low<=high){\n        int mid = (low+high)/2;\n        if(arr[mid]==x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid]>x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n = arr.size();\n    long low = 0, high = n-1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0, high = n-1, ans = -1;\n    while(low <= high) {\n        long mid = (low + high) / 2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x) {\n            high = mid - 1;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    // Your code here\n    long n = arr.size();\n    long low = 0;\n    long high = n - 1;\n    long ans = -1;\n    while(low <= high){\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] > x){\n            high = mid - 1;\n        }\n        else{\n            low = mid + 1;\n        }\n    }\n    return ans;",
    "    long n = arr.size();\n    long low = 0;\n    long high = n-1;\n    long ans = -1;\n    while(low <= high) {\n        long mid = low + (high - low)/2;\n        if(arr[mid] == x) {\n            ans = mid;\n            low = mid + 1;\n        }\n        else if(arr[mid] < x) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    return ans;",
    "    // your code goes here\n    int low = 0;\n    int high = arr.size()-1;\n    int ans = -1;\n    while(low<=high){\n        int mid = low + (high-low)/2;\n        if(arr[mid] == x){\n            ans = mid;\n            low = mid+1;\n        }\n        else if(arr[mid] > x){\n            high = mid-1;\n        }\n        else{\n            low = mid+1;\n        }\n    }\n    return ans;"
  ]
}
{
  "name": "mbpp_72_dif_Square",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to check whether the given number can be represented as the difference of two squares or not.\nbool dif_Square(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_72_dif_Square.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = dif_Square;\n    assert(candidate((5)) == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((15)) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long i=1;\n    while(i*i<n) {\n        if((n-(i*i))%2==0)\n            return true;\n        i++;\n    }\n    return false;",
    "    for(long i=1;i*i<=n;i++) {\n        for(long j=1;j*j<=n;j++) {\n            if(i*i-j*j==n) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long i=1;\n    while(i*i<n)\n        i++;\n    if(i*i==n)\n        return true;\n    else\n        return false;",
    "    for(long i=1;i*i<=n;i++) {\n        long temp = n - i*i;\n        if(temp>=0 && temp%2==0) {\n            long temp2 = temp/2;\n            if(temp2%2==0) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "\tif(n<0)\n\t\treturn false;\n\tlong sqrt_n = sqrt(n);\n\tfor(long i=1;i<=sqrt_n;i++) {\n\t\tif(sqrt(n-i*i)==floor(sqrt(n-i*i)))\n\t\t\treturn true;\n\t}\n\treturn false;",
    "    if (n < 0)\n        return false;\n    if (n == 0)\n        return true;\n    long i = 1;\n    while (i * i < n) {\n        if ((n - i * i) % 2 == 0)\n            return true;\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = (long)sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n        if(i*i > n)\n            return false;\n        long diff = n - i*i;\n        long sqrt_diff = (long)sqrt(diff);\n        if(sqrt_diff*sqrt_diff == diff)\n            return true;\n    }\n    return false;",
    "    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (int) sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "\tif(n<0)\n\t\treturn false;\n\tlong sqrt_n = sqrt(n);\n\tfor(int i=1;i<=sqrt_n;i++) {\n\t\tif(sqrt(n-(i*i))==(int)sqrt(n-(i*i)))\n\t\t\treturn true;\n\t}\n\treturn false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long root = sqrt(n);\n    for(long i=1;i<=root;i++) {\n        if(i*i==n)\n            return true;\n        if(i*i>n)\n            return false;\n        if(dif_Square(n-i*i))\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        long diff = n - i*i;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff == diff)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==(int)sqrt(n-i*i))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long root = sqrt(n);\n    return (root * root == n);",
    "    if (n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    if(n==0) {\n        return true;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==floor(sqrt(n-i*i))) {\n            return true;\n        }\n    }\n    return false;",
    "    for (long i = 0; i * i <= n; i++) {\n        for (long j = 0; j * j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%2==0)\n        n=n/2;\n    if(n%2==1)\n        return false;\n    return true;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long long i=1;\n    while(i*i<n)\n        i++;\n    if(i*i==n)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    long sq = sqrt(n);\n    return (sq*sq == n);",
    "    if(n<0)\n        return false;\n    long sqr_root = sqrt(n);\n    return (sqr_root*sqr_root == n);",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    for(long i=1;i*i<=n;i++) {\n        if(sqrt(n-i*i)==(int)sqrt(n-i*i)) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long i=1;\n    while(i*i<n) {\n        if(n%i==0) {\n            long j=n/i;\n            if(j%2==0)\n                return true;\n        }\n        i++;\n    }\n    return false;",
    "\tif (n < 0)\n\t\treturn false;\n\tlong sqrt_n = sqrt(n);\n\tfor (long i = 0; i <= sqrt_n; i++) {\n\t\tlong diff = n - i * i;\n\t\tlong sqrt_diff = sqrt(diff);\n\t\tif (sqrt_diff * sqrt_diff == diff)\n\t\t\treturn true;\n\t}\n\treturn false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    if(n%4==1)\n        return true;\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0)\n        return true;\n    if (n == 1)\n        return true;\n    for (long i = 2; i <= sqrt(n); i++) {\n        if (n % i == 0) {\n            if (dif_Square(n / i))\n                return true;\n        }\n    }\n    return false;",
    "    long temp = n;\n    if(n < 0) {\n        n = -n;\n    }\n    long i = 1;\n    while(i*i < n) {\n        i++;\n    }\n    if(i*i == n) {\n        return true;\n    }\n    else {\n        return false;\n    }",
    "    if (n % 4 != 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (int)sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "    long i = 1;\n    while(i*i < n) {\n        long diff = n - i*i;\n        long j = 1;\n        while(j*j < diff) {\n            if(j*j == diff) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 1)\n        return true;\n    for (int i = 2; i * i <= n; i++) {\n        if (n % (i * i) == 0) {\n            n = n / (i * i);\n            if (n % (i * i) == 0)\n                return false;\n        }\n    }\n    return (n % 4 == 1);",
    "    long i = 1;\n    while(i*i < n) {\n        long j = 1;\n        while(j*j < n) {\n            if(i*i - j*j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i) == (int)sqrt(n-i*i))\n            return true;\n    }\n    return false;",
    "    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (int) sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    long sq = sqrt(n);\n    return (sq * sq == n);",
    "    if (n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for (long i = 0; i <= sqrt_n; i++) {\n        long diff = n - i * i;\n        long sqrt_diff = sqrt(diff);\n        if (sqrt_diff * sqrt_diff == diff)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0; i<=sqrt_n; i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sq=sqrt(n);\n    if(sq*sq==n)\n        return true;\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (long)sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0 || n==1)\n        return true;\n    long i=1;\n    while(i*i<n) {\n        long j=1;\n        while(j*j<n) {\n            if(i*i-j*j==n)\n                return true;\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n<0) return false;\n    long sq = sqrt(n);\n    return (sq*sq==n);",
    "    if (n < 0) {\n        n = -n;\n    }\n    for (int i = 1; i * i <= n; i++) {\n        for (int j = 1; j * j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        long diff = n - i*i;\n        if(diff>=0) {\n            long sqrt_diff = sqrt(diff);\n            if(sqrt_diff*sqrt_diff == diff)\n                return true;\n        }\n    }\n    return false;",
    "    long i = 2;\n    while (i * i < n) {\n        long diff = n - i * i;\n        long j = 2;\n        while (j * j < diff) {\n            if (j * j == diff)\n                return true;\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n==0) return true;\n    if(n<0) n=-n;\n    while(n%2==0) n/=2;\n    if(n%8==7) return false;\n    for(int i=3;i<=sqrt(n);i+=2) {\n        if(n%i==0) {\n            int cnt=0;\n            while(n%i==0) {\n                n/=i;\n                cnt++;\n            }\n            if(i%4==3 && cnt%2!=0) return false;\n        }\n    }\n    return n%4!=3;",
    "    if (n < 0)\n        n = -n;\n    while (n % 2 == 0)\n        n /= 2;\n    if (n % 2 == 1)\n        return false;\n    return true;",
    "    long i = 1;\n    while(i*i < n) {\n        long j = 1;\n        while(j*j < n) {\n            if(i*i - j*j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i = 0; i <= sqrt_n; i++) {\n        long diff = n - i*i;\n        if(diff >= 0 && sqrt(diff) == (long)sqrt(diff))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = (long)(sqrt(n));\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (long)(sqrt(n - i * i)))\n            return true;\n    }\n    return false;",
    "\tif(n<0)\n\t\treturn false;\n\tlong sqrt_n = sqrt(n);\n\tfor(int i=0;i<=sqrt_n;i++) {\n\t\tif(sqrt(n-i*i) == (int)(sqrt(n-i*i)))\n\t\t\treturn true;\n\t}\n\treturn false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(n%i==0) {\n            long d = n/i;\n            if(d%2==0)\n                return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(n%i==0) {\n            long divisor = n/i;\n            if(divisor%2==0) {\n                long sqrt_divisor = sqrt(divisor);\n                if(sqrt_divisor*sqrt_divisor==divisor)\n                    return true;\n            }\n        }\n    }\n    return false;",
    "    if(n % 4 == 0) {\n        return true;\n    }\n    return false;",
    "    if (n < 0) {\n        n = -n;\n    }\n    while (n % 2 == 0) {\n        n = n / 2;\n    }\n    if (n % 2 == 1) {\n        return true;\n    }\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==(int)sqrt(n-i*i)) {\n            return true;\n        }\n    }\n    return false;",
    "    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (int)sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = (long)(sqrt(n));\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (int)(sqrt(n - i * i)))\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        else if(i*i>n)\n            return false;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-(i*i))==(int)sqrt(n-(i*i)))\n            return true;\n    }\n    return false;",
    "    if(n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i = 0; i <= sqrt_n; i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1; i<=sqrt_n; i++) {\n        if(i*i==n)\n            return true;\n        if(i*i>n)\n            return false;\n        long diff = n - i*i;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff==diff)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if (n < 0)\n        n = -n;\n    for (long i = 0; i * i <= n; i++) {\n        long j = sqrt(n - i * i);\n        if (i * i + j * j == n)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (int)sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        if(i*i>n)\n            return false;\n        long diff = n - i*i;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff == diff)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    for (long i = 1; i * i <= n; i++) {\n        for (long j = 1; j * j <= n; j++) {\n            if (i * i - j * j == n)\n                return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(n%i==0) {\n            long divisor = n/i;\n            if(divisor%2==0) {\n                long sum = (i+divisor)/2;\n                long diff = (i-divisor)/2;\n                if(sum*sum-diff*diff==n)\n                    return true;\n            }\n        }\n    }\n    return false;",
    "    long i = 1;\n    while(i*i < n) {\n        long j = 1;\n        while(j*j < n) {\n            if(i*i - j*j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        else if(i*i<n) {\n            long diff = n - i*i;\n            long sqrt_diff = sqrt(diff);\n            if(sqrt_diff*sqrt_diff==diff)\n                return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    for (long i = 0; i * i <= n; i++) {\n        for (long j = i; j * j <= n; j++) {\n            if (i * i - j * j == n)\n                return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        long diff = n - i*i;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff==diff)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    else if(n==0)\n        return true;\n    else {\n        long i=1;\n        while(i*i<n) {\n            if((n-(i*i))%2==0) {\n                long j=(n-(i*i))/2;\n                if(j>=0 && sqrt(j)==floor(sqrt(j)))\n                    return true;\n            }\n            i++;\n        }\n        return false;\n    }",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n/=4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if (n < 0) {\n        n = -n;\n    }\n    for (int i = 1; i * i <= n; i++) {\n        for (int j = 1; j * j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    long i=1;\n    while(i<=n) {\n        if(i*i==n)\n            return true;\n        i++;\n    }\n    return false;",
    "    long i = 2;\n    while (i * i < n) {\n        if ((n % (i * i)) == 0) {\n            return true;\n        }\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sq=sqrt(n);\n    if(sq*sq==n)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        if(i*i<n) {\n            long j = sqrt(n-i*i);\n            if(j*j == n-i*i)\n                return true;\n        }\n    }\n    return false;",
    "\tif (n < 0) {\n\t\treturn false;\n\t}\n\tlong sqrt_n = sqrt(n);\n\tfor (long i = 1; i <= sqrt_n; i++) {\n\t\tif (i * i == n) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(int i=0;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        long diff = n - i*i;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff == diff)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        long diff = n - i*i;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff == diff)\n            return true;\n    }\n    return false;",
    "    if(n==0)\n        return true;\n    if(n<0)\n        n=-n;\n    long i=1;\n    while(i*i<n)\n        i++;\n    if(i*i==n)\n        return true;\n    return false;",
    "    long i = 1;\n    while(i*i < n) {\n        long j = 1;\n        while(j*j < n) {\n            if(i*i - j*j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(n%i==0) {\n            if(i%2==0 && (n/i)%2==0)\n                return true;\n            if(i%2!=0 && (n/i)%2!=0)\n                return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (int) sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "    if(n%4==0) {\n        return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1; i<=sqrt_n; i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = (long)(sqrt(n));\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (long)(sqrt(n - i * i)))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long i = 1;\n    while (i * i < n) {\n        long j = i * i;\n        long k = n - j;\n        long sqrt_k = sqrt(k);\n        if (sqrt_k * sqrt_k == k)\n            return true;\n        i++;\n    }\n    return false;",
    "\tif(n<0)\n\t\treturn false;\n\tlong sqrt_n = sqrt(n);\n\tfor(long i=0;i<=sqrt_n;i++) {\n\t\tlong diff = n - i*i;\n\t\tlong sqrt_diff = sqrt(diff);\n\t\tif(sqrt_diff*sqrt_diff == diff)\n\t\t\treturn true;\n\t}\n\treturn false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sq=sqrt(n);\n    for(long i=1;i<=sq;i++) {\n        if(i*i==n)\n            return true;\n        if(i*i<n) {\n            long j=sqrt(n-i*i);\n            if(i*i+j*j==n)\n                return true;\n        }\n    }\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        long diff = n-i*i;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff == diff) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sq = sqrt(n);\n    for(long i=1;i<=sq;i++) {\n        if(n%i==0) {\n            if(i%2==0 && (n/i)%2==0)\n                return true;\n            if(i%2!=0 && (n/i)%2!=0)\n                return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long root = sqrt(n);\n    for(long i=1;i<=root;i++) {\n        if(i*i==n)\n            return true;\n        if((n-i*i)%2==0)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        long diff = n - i*i;\n        if(diff>=0 && sqrt(diff) == floor(sqrt(diff)))\n            return true;\n    }\n    return false;",
    "    long i = 1;\n    while (i * i < n) {\n        long j = 1;\n        while (j * j < n) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(int i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==floor(sqrt(n-i*i)))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    for (long i = 1; i * i <= n; i++) {\n        long j = sqrt(n - i * i);\n        if (i * i + j * j == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n == 0 || n == 1) {\n        return true;\n    }\n    long i = 1;\n    while(i * i < n) {\n        long j = 1;\n        while(j * j < n) {\n            if(i * i - j * j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-(i*i))==floor(sqrt(n-(i*i)))) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for (long i = 0; i <= sqrt_n; i++) {\n        if (i * i == n)\n            return true;\n    }\n    return false;",
    "    for (int i = 0; i * i <= n; i++) {\n        for (int j = 0; j * j <= n; j++) {\n            if (i * i - j * j == n)\n                return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = (long)sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (long)sqrt(n - i * i))\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    if(n==1)\n        return true;\n    long i=1;\n    while(i*i<n) {\n        if(n%(i*i)==0)\n            return true;\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        long sq = i*i;\n        if(sq==n)\n            return true;\n        long diff = n-sq;\n        long sqrt_diff = sqrt(diff);\n        if(sqrt_diff*sqrt_diff==diff)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long root = sqrt(n);\n    if (root * root == n)\n        return true;\n    return false;",
    "    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 1)\n        return true;\n    for (int i = 1; i <= n / 2; i++) {\n        if (i * i == n)\n            return true;\n    }\n    return false;",
    "    long sqrt_n = sqrt(n);\n    for(long i = 1; i <= sqrt_n; i++) {\n        if(sqrt(n + i*i) - floor(sqrt(n + i*i)) == 0) {\n            return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    for (int i = 1; i * i <= n; i++) {\n        int j = sqrt(n - i * i);\n        if (i * i + j * j == n)\n            return true;\n    }\n    return false;",
    "\tfor(long i=1; i*i<=n; i++) {\n\t\tlong j = sqrt(n+i*i);\n\t\tif(j*j == n+i*i) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        if(i*i<n) {\n            long diff = n-i*i;\n            long sqrt_diff = sqrt(diff);\n            if(sqrt_diff*sqrt_diff==diff)\n                return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if (n < 0)\n        return false;\n    long root = sqrt(n);\n    return (root * root == n);",
    "    if (n < 0)\n        n = -n;\n    for (long i = 0; i * i < n; i++) {\n        for (long j = i; j * j < n; j++) {\n            if (i * i - j * j == n)\n                return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == floor(sqrt(n - i * i)))\n            return true;\n    }\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    if(n==0) {\n        return true;\n    }\n    if(n%2==0) {\n        return dif_Square(n/2);\n    }\n    for(long i=3;i*i<=n;i+=2) {\n        if(n%i==0) {\n            return dif_Square(n/i);\n        }\n    }\n    return true;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    for (long i = 0; i * i <= n; i++) {\n        long j = sqrt(n - i * i);\n        if (i * i + j * j == n)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    return (sqrt_n * sqrt_n == n);",
    "    long i = 1;\n    while(i*i < n) {\n        long j = 1;\n        while(j*j < n) {\n            if(i*i - j*j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    long i = 1;\n    while(i*i < n) {\n        long j = 1;\n        while(j*j < n) {\n            if(i*i - j*j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    long temp = n;\n    if(n < 0) {\n        n = -n;\n    }\n    long i = 1;\n    while(i * i < n) {\n        i++;\n    }\n    if(i * i == n) {\n        return true;\n    }\n    for(long j = i; j > 0; j--) {\n        if(i * i - j * j == temp) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i) == (int)sqrt(n-i*i))\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1; i<=sqrt_n; i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        if(i*i<n) {\n            long diff = n-i*i;\n            long sqrt_diff = sqrt(diff);\n            if(sqrt_diff*sqrt_diff==diff)\n                return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (i * i == n)\n            return true;\n    }\n    return false;",
    "    long i = 1;\n    while (i * i < n) {\n        long j = 1;\n        while (j * j < n) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    for (long i = 1; i * i <= n; i++) {\n        long j = sqrt(n - i * i);\n        if (i * i + j * j == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    long i = 2;\n    while (i * i < n) {\n        if ((n - i * i) % 2 == 0)\n            return true;\n        i++;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==(int)sqrt(n-i*i))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0)\n        return true;\n    long x = sqrt(n);\n    for (long i = 1; i <= x; i++) {\n        if (i * i == n)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    long root = sqrt(n);\n    for (long i = 1; i <= root; i++) {\n        if (i * i == n)\n            return true;\n    }\n    return false;",
    "    if(n < 0) {\n        n = -n;\n    }\n    long x = sqrt(n);\n    for(long i = 1; i <= x; i++) {\n        if(i * i == n) {\n            return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for (long i = 0; i <= sqrt_n; i++) {\n        long diff = n - i * i;\n        long sqrt_diff = sqrt(diff);\n        if (sqrt_diff * sqrt_diff == diff)\n            return true;\n    }\n    return false;",
    "\tif(n<0) {\n\t\treturn false;\n\t}\n\tlong sqrt_n = sqrt(n);\n\tfor(long i=0;i<=sqrt_n;i++) {\n\t\tlong diff = n - i*i;\n\t\tlong sqrt_diff = sqrt(diff);\n\t\tif(sqrt_diff*sqrt_diff == diff) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
    "    if(n < 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i = 1; i <= sqrt_n; i++) {\n        if(i * i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n/=4;\n    return n%8==7;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n/=4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n < 0)\n        return dif_Square(-n);\n    for(long i = 1; i * i <= n; i++) {\n        long j = sqrt(n - i * i);\n        if(i * i + j * j == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n=n/4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    if(n%4!=0)\n        return false;\n    return true;",
    "\tif (n < 0)\n\t\treturn false;\n\tlong root = sqrt(n);\n\treturn (root * root == n);",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(int i=0;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n < 0)\n        return false;\n    if(n == 0)\n        return true;\n    while(n % 4 == 0)\n        n /= 4;\n    if(n % 8 == 7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    if (n == 0 || n == 1)\n        return true;\n    for (int i = 2; i <= sqrt(n); i++) {\n        if (n % i == 0) {\n            int count = 0;\n            while (n % i == 0) {\n                n = n / i;\n                count++;\n            }\n            if (i % 4 == 3 && count % 2 != 0)\n                return false;\n        }\n    }\n    return true;",
    "    if(n==0)\n        return true;\n    if(n<0)\n        return false;\n    while(n%4==0)\n        n/=4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long i=1;\n    while(i*i<n)\n        i++;\n    if(i*i==n)\n        return true;\n    else\n        return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0)\n        return true;\n    while (n % 4 == 0)\n        n = n / 4;\n    if (n % 8 == 7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    while(n%4==0)\n        n/=4;\n    if(n%8==7)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==(int)sqrt(n-i*i))\n            return true;\n    }\n    return false;",
    "    if (n % 4 != 0) {\n        return false;\n    }\n    else {\n        return true;\n    }",
    "    if (n < 0) {\n        n = -n;\n    }\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (i * i == n) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==floor(sqrt(n-i*i)))\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long sqrt_n = (long)(sqrt(n));\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == (long)(sqrt(n - i * i)))\n            return true;\n    }\n    return false;",
    "    if (n % 4 != 0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for (long i = 1; i <= sqrt_n; i++) {\n        if (sqrt(n - i * i) == floor(sqrt(n - i * i)))\n            return true;\n    }\n    return false;",
    "\tif (n < 0) {\n\t\tn = -n;\n\t}\n\tfor (long i = 0; i * i <= n; i++) {\n\t\tlong diff = n - i * i;\n\t\tlong sqrt_diff = sqrt(diff);\n\t\tif (sqrt_diff * sqrt_diff == diff) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
    "    for(long i=0;i<=n;i++) {\n        if(i*i==n) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0 || n==1)\n        return true;\n    for(int i=1;i<=sqrt(n);i++) {\n        if(i*i==n)\n            return true;\n        if(i*i<n) {\n            if(dif_Square(n-i*i))\n                return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    long root = sqrt(n);\n    for (long i = 0; i <= root; i++) {\n        if (i * i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sq = sqrt(n);\n    if(sq*sq == n)\n        return true;\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0 || n==1)\n        return true;\n    long i=1;\n    while(i*i<n) {\n        if((n-i*i)%2==0)\n            return true;\n        i++;\n    }\n    return false;",
    "    if (n < 0) {\n        n = -n;\n    }\n    for (long i = 1; i * i <= n; i++) {\n        for (long j = 1; j * j <= n; j++) {\n            if (i * i - j * j == n) {\n                return true;\n            }\n        }\n    }\n    return false;",
    "    if(n < 0) {\n        return false;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i = 1; i <= sqrt_n; i++) {\n        if(sqrt(n - i*i) == (int)sqrt(n - i*i)) {\n            return true;\n        }\n    }\n    return false;",
    "    if (n < 0)\n        n = -n;\n    long root = sqrt(n);\n    return (root * root == n);",
    "\tif (n < 0) {\n\t\treturn false;\n\t}\n\tlong sqrt_n = sqrt(n);\n\tfor (long i = 1; i <= sqrt_n; i++) {\n\t\tif (sqrt(n - i * i) == (int)sqrt(n - i * i)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
    "    if (n < 0) {\n        n = -n;\n    }\n    for (long i = 0; i * i < n; i++) {\n        long j = sqrt(n - i * i);\n        if (i * i + j * j == n) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0 || n==1)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(int i=1;i<=sqrt_n;i++) {\n        if(i*i==n)\n            return true;\n        if(i*i<n) {\n            long diff = n-i*i;\n            if(sqrt(diff)==floor(sqrt(diff)))\n                return true;\n        }\n    }\n    return false;",
    "    if(n<0) {\n        return false;\n    }\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(sqrt(n-i*i)==floor(sqrt(n-i*i))) {\n            return true;\n        }\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    long sqrt_n = sqrt(n);\n    for(long i=0;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    int i=1;\n    while(i*i<n) {\n        i++;\n    }\n    if(i*i==n)\n        return true;\n    else\n        return false;",
    "    if(n<0)\n        return false;\n    if(n==0)\n        return true;\n    long sqrt_n = sqrt(n);\n    for(long i=1;i<=sqrt_n;i++) {\n        if(i*i == n)\n            return true;\n    }\n    return false;",
    "    if (n < 0)\n        return false;\n    if (n == 0 || n == 1)\n        return true;\n    if (n % 2 == 0)\n        return dif_Square(n / 2);\n    for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0)\n            return false;\n    }\n    return true;"
  ]
}
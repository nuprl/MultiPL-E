{
  "name": "mbpp_434_text_match_one",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_434_text_match_one.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpioip7fsz: /tmp/tmpioip7fsz.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            match = false;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp3n53poqe: /tmp/tmp3n53poqe.cpp:24: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpioip7fsz: /tmp/tmpioip7fsz.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count > 0) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmptit7l38b: /tmp/tmptit7l38b.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpp5s3kn1i: /tmp/tmpp5s3kn1i.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp4u29dy_r: /tmp/tmp4u29dy_r.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmp0npt0_iq: /tmp/tmp0npt0_iq.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool matched = false;\n    int text_length = text.length();\n    for (int i = 0; i < text_length - 1; i++) {\n        if (text[i] == 'a' && text[i + 1] == 'b') {\n            matched = true;\n        } else {\n            matched = false;\n        }\n    }\n    return matched;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmp2xab3iz3: /tmp/tmp2xab3iz3.cpp:20: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        }\n        if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmp3mxx9dwx: /tmp/tmp3mxx9dwx.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpuht6wwx1: /tmp/tmpuht6wwx1.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp4u29dy_r: /tmp/tmp4u29dy_r.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        }\n        else if(text[i] == 'b' && match) {\n            match = true;\n        }\n        else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == 'a') {\n            i++;\n            while(text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmppayj5557: /tmp/tmppayj5557.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == 'a') {\n            i++;\n            while(text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmppayj5557: /tmp/tmppayj5557.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    std::regex txt_regex(\"ab+\");\n    if (std::regex_match(text, txt_regex)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpjwa7c447: /tmp/tmpjwa7c447.cpp:16: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n\tbool match = false;\n\tint i = 0;\n\twhile (i < text.size()) {\n\t\tif (text[i] == 'a') {\n\t\t\ti++;\n\t\t\twhile (text[i] == 'b') {\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tmatch = true;\n\t\t}\n\t\ti++;\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpo17joedr: /tmp/tmpo17joedr.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpiy_l052v: /tmp/tmpiy_l052v.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count > 0) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmptit7l38b: /tmp/tmptit7l38b.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    int j = 0;\n    for (i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            for (j = i + 1; j < text.length(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                break;\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmprb46005x: /tmp/tmprb46005x.cpp:30: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a = 0;\n    int b = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == 'a') {\n            a++;\n        }\n        if(text[i] == 'b') {\n            b++;\n        }\n    }\n    if(a == 1 && b >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpog354j4g: /tmp/tmpog354j4g.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        } else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count > 0) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpthd57b50: /tmp/tmpthd57b50.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    // Write a function that matches a string that has an a followed by one or more b's.\n    std::regex b(\"ab+\");\n    if (std::regex_match(text, b)) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmplq4e2wm2: /tmp/tmplq4e2wm2.cpp:17: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            while (text[i] == 'a') {\n                i++;\n            }\n            if (text[i] == 'b') {\n                match = true;\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int i = 0;\n  while (i < text.size()) {\n    if (text[i] == 'a') {\n      i++;\n      while (text[i] == 'b') {\n        i++;\n      }\n      match = true;\n    }\n    i++;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpiy_l052v: /tmp/tmpiy_l052v.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i=0; i<text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            match = true;\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n        }\n        else {\n            match = false;\n            break;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpp5s3kn1i: /tmp/tmpp5s3kn1i.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpqrwimqg8: /tmp/tmpqrwimqg8.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n\tbool match = false;\n\tint a_count = 0;\n\tint b_count = 0;\n\tfor (int i = 0; i < text.size(); i++) {\n\t\tif (text[i] == 'a') {\n\t\t\ta_count++;\n\t\t\tif (a_count > 1) {\n\t\t\t\tmatch = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse if (text[i] == 'b') {\n\t\t\tb_count++;\n\t\t}\n\t\telse {\n\t\t\tmatch = false;\n\t\t\tbreak;\n\t\t}\n\t\tif (a_count == 1 && b_count >= 1) {\n\t\t\tmatch = true;\n\t\t}\n\t}\n\treturn match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmp61yv72fo: /tmp/tmp61yv72fo.cpp:33: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        }\n        if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmp3mxx9dwx: /tmp/tmp3mxx9dwx.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            match = false;\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.length(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                } else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmpzs5lpe_l: /tmp/tmpzs5lpe_l.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        }\n        else if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmp3erd5aac: /tmp/tmp3erd5aac.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n  bool match = false;\n  int a_count = 0;\n  int b_count = 0;\n  for (int i = 0; i < text.length(); i++) {\n    if (text[i] == 'a') {\n      a_count++;\n    } else if (text[i] == 'b') {\n      b_count++;\n    }\n  }\n  if (a_count == 1 && b_count >= 1) {\n    match = true;\n  }\n  return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpmpa7n3_1: /tmp/tmpmpa7n3_1.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            for(int j = i+1; j < text.size(); j++) {\n                if(text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while(i < text.size()) {\n        if(text[i] == 'a') {\n            i++;\n            while(text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "tmppayj5557: /tmp/tmppayj5557.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    int a_count = 0;\n    int b_count = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            a_count++;\n            i++;\n        }\n        else if (text[i] == 'b') {\n            b_count++;\n            i++;\n        }\n        else {\n            break;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpv098ebse: /tmp/tmpv098ebse.cpp:31: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i = 0; i < text.length(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        }\n        else if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmp77cuv2oe: /tmp/tmp77cuv2oe.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        }\n        else if(text[i] == 'b' && match) {\n            match = true;\n        }\n        else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpiitbyzuw: /tmp/tmpiitbyzuw.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        }\n        else if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count > 0) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpixtc2zmh: /tmp/tmpixtc2zmh.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (i < text.size() && text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            i++;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpw6snecpy: /tmp/tmpw6snecpy.cpp:23: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            match = true;\n        } else if (text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n                else {\n                    match = false;\n                    break;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmpioip7fsz: /tmp/tmpioip7fsz.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            match = true;\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            break;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpfuijga9c: /tmp/tmpfuijga9c.cpp:22: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            while (text[i] == 'a') {\n                i++;\n            }\n            if (text[i] == 'b') {\n                match = true;\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int A = 0;\n    int B = 0;\n    int C = 0;\n    int D = 0;\n    int E = 0;\n    int F = 0;\n    int G = 0;\n    int H = 0;\n    int I = 0;\n    int J = 0;\n    int K = 0;\n    int L = 0;\n    int M = 0;\n    int N = 0;\n    int O = 0;\n    int P = 0;\n    int Q = 0;\n    int R = 0;\n    int S = 0;\n    int T = 0;\n    int U = 0;\n    int V = 0;\n    int W = 0;\n    int X = 0;\n    int Y = 0;\n    int Z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123978,
      "stdout": "",
      "stderr": "/tmp/tmp2melgmhl.cpp: In function \u2018bool text_match_one(std::string)\u2019:\n/tmp/tmp2melgmhl.cpp:77:1: error: expected unqualified-id before \u2018}\u2019 token\n   77 | }\n      | ^\n/tmp/tmp2melgmhl.cpp:77:1: warning: no return statement in function returning non-void [-Wreturn-type]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i + 1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpiitbyzuw: /tmp/tmpiitbyzuw.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for (int i = 0; i < text.size(); i++) {\n        if (text[i] == 'a') {\n            for (int j = i+1; j < text.size(); j++) {\n                if (text[j] == 'b') {\n                    match = true;\n                }\n            }\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123977,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i = 0; i < text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        } else if(text[i] == 'b' && match) {\n            match = true;\n        } else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for(int i=0; i<text.length(); i++) {\n        if(text[i] == 'a') {\n            a_count++;\n        } else if(text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if(a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpmsoi8d38: /tmp/tmpmsoi8d38.cpp:24: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        else {\n            match = false;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp3n53poqe: /tmp/tmp3n53poqe.cpp:24: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    for(int i=0; i<text.size(); i++) {\n        if(text[i] == 'a') {\n            match = true;\n        }\n        else if(text[i] == 'b' && match) {\n            match = true;\n        }\n        else {\n            match = false;\n        }\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int a_count = 0;\n    int b_count = 0;\n    for (int i = 0; i < text.length(); i++) {\n        if (text[i] == 'a') {\n            a_count++;\n        }\n        if (text[i] == 'b') {\n            b_count++;\n        }\n    }\n    if (a_count == 1 && b_count >= 1) {\n        match = true;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123979,
      "stdout": "",
      "stderr": "tmpp89v25u2: /tmp/tmpp89v25u2.cpp:25: int main(): Assertion `candidate((\"abba\")) == (true)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    while (i < text.size()) {\n        if (text[i] == 'a') {\n            i++;\n            while (text[i] == 'b') {\n                i++;\n            }\n            match = true;\n        }\n        i++;\n    }\n    return match;\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1665509798,
      "stdout": "",
      "stderr": "tmp5curbph2: /tmp/tmp5curbph2.cpp:21: int main(): Assertion `candidate((\"ac\")) == (false)' failed.\n",
      "exit_code": -6,
      "status": "Exception"
    },
    {
      "program": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that matches a string that has an a followed by one or more b's.\nbool text_match_one(std::string text) {\n    bool match = false;\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n    int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int sss = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx =\n}\nint main() {\n    auto candidate = text_match_one;\n    assert(candidate((\"ac\")) == (false));\n    assert(candidate((\"dc\")) == (false));\n    assert(candidate((\"abba\")) == (true));\n}\n",
      "timestamp": 1666123978,
      "stdout": "",
      "stderr": "/tmp/tmpo8pppnu0.cpp: In function \u2018bool text_match_one(std::string)\u2019:\n/tmp/tmpo8pppnu0.cpp:74:1: error: expected primary-expression before \u2018}\u2019 token\n   74 | }\n      | ^\n/tmp/tmpo8pppnu0.cpp:74:1: warning: no return statement in function returning non-void [-Wreturn-type]\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
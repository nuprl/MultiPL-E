{
  "name": "mbpp_558_digit_distance_nums",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the sum of the per-digit difference between two integers.\nlong digit_distance_nums(long n1, long n2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = digit_distance_nums;\n    assert(candidate((1), (2)) == (1));\n    assert(candidate((23), (56)) == (6));\n    assert(candidate((123), (256)) == (7));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs(n1 % 10 - n2 % 10);\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;",
    "    long sum = 0;\n    while (n1 != 0 || n2 != 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        int d1 = n1 % 10;\n        int d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs(n1 % 10 - n2 % 10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    // Write your code here\n    long sum = 0;\n    while(n1 != 0 || n2 != 0) {\n        sum += abs(n1%10 - n2%10);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while (n1 > 0 || n2 > 0) {\n        sum += abs((n1 % 10) - (n2 % 10));\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "    long sum = 0;\n    while(n1 > 0 || n2 > 0) {\n        long d1 = n1 % 10;\n        long d2 = n2 % 10;\n        sum += abs(d1 - d2);\n        n1 /= 10;\n        n2 /= 10;\n    }\n    return sum;",
    "  long sum = 0;\n  while (n1 > 0 || n2 > 0) {\n    sum += abs((n1 % 10) - (n2 % 10));\n    n1 /= 10;\n    n2 /= 10;\n  }\n  return sum;"
  ]
}
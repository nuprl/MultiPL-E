{
  "name": "mbpp_279_is_num_decagonal",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function to find the nth decagonal number.\nlong is_num_decagonal(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = is_num_decagonal;\n    assert(candidate((3)) == (27));\n    assert(candidate((7)) == (175));\n    assert(candidate((10)) == (370));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long nth_decagonal_num = 0;\n    nth_decagonal_num = n * (3 * n - 2);\n    return nth_decagonal_num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    long nth_decagonal = 0;\n    nth_decagonal = (n * (3 * n - 2)) / 2;\n    return nth_decagonal;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (3 * n * n - n) / 2;\n    return a;",
    "    double x = (sqrt(1 + 4 * 2 * n) + 1.0) / 2.0;\n    return x == (long long)x;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long)x;",
    "    long num = n;\n    long i = 1;\n    while(num > 0) {\n        num -= i;\n        i += 4;\n    }\n    if(num == 0) {\n        return 1;\n    }\n    return 0;",
    "    long x = (3 * n * n - n) / 2;\n    return x;",
    "    double x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x == (long) x;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    return x * (3 * x - 1) / 2 == n;",
    "    double x = (sqrt(1 + 4 * 2 * n) + 1) / 2;\n    return x == (long)x;",
    "    long num = (3*n*n - n)/2;\n    return num;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    long a = (3 * n * n - n) / 2;\n    return a;",
    "    long x = (sqrt(1 + 4 * 2 * n) - 1) / 2;\n    if (x * (3 * x - 1) / 2 == n) {\n        return 1;\n    }\n    return 0;",
    "    float a = (3 + sqrt(9 + 40 * n)) / 10;\n    if (a == (int) a)\n        return 1;\n    return 0;",
    "    long nth_decagonal = n * (3 * n - 1) / 2;\n    return nth_decagonal;"
  ]
}
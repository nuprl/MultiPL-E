{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the next perfect square greater than a given number.\nlong next_Perfect_Square(long N) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = next_Perfect_Square;\n    assert(candidate((35)) == (36));\n    assert(candidate((6)) == (9));\n    assert(candidate((9)) == (16));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    // Your code here\n    long n=N;\n    while(n*n<=N)\n    {\n        n++;\n    }\n    return n*n;",
    "    // Write your code here\n    long i = 1;\n    while(i*i <= N)\n        i++;\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    if(N < 0) {\n        return -1;\n    }\n    long i = 1;\n    while(i * i <= N) {\n        i++;\n    }\n    return i * i;",
    "    // Your code here\n    long i=1;\n    while(i*i<N)\n    {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;",
    "    // Write your code here\n    long num = sqrt(N);\n    if(num*num == N)\n        return (num+1)*(num+1);\n    else\n        return (num+1)*(num+1);",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i += 1;\n    }\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while (i * i <= N) {\n        i++;\n    }\n    return i * i;",
    "    long i = 1;\n    while (i*i < N) {\n        i++;\n    }\n    return i*i;",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;",
    "    long num = N;\n    while(true) {\n        long sqrt_num = sqrt(num);\n        if(sqrt_num * sqrt_num == num) {\n            return num;\n        }\n        num++;\n    }",
    "    long i = 1;\n    while(i*i <= N) {\n        i++;\n    }\n    return i*i;"
  ]
}
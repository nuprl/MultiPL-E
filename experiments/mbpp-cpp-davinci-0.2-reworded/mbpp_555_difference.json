{
  "name": "mbpp_555_difference",
  "language": "cpp",
  "prompt": "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a cppthon function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\nlong difference(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "reworded",
  "tests": "}\nint main() {\n    auto candidate = difference;\n    assert(candidate((3)) == (30));\n    assert(candidate((5)) == (210));\n    assert(candidate((2)) == (6));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum;",
    "    long sum1 = 0;\n    long sum2 = 0;\n    for(int i=1;i<=n;i++) {\n        sum1 += i*i*i;\n        sum2 += i;\n    }\n    return sum1 - sum2*sum2;",
    "  return (n*(n+1)/2)*(n*(n+1)/2) - (n*(n+1)*(2*n+1))/6;",
    "    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6);",
    "    long sum_of_cubes = 0;\n    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum_of_cubes += i * i * i;\n        sum += i;\n    }\n    return sum * sum - sum_of_cubes;",
    "    long sum_of_cubes = 0;\n    long sum_of_numbers = 0;\n    for (long i = 1; i <= n; i++) {\n        sum_of_cubes += i * i * i;\n        sum_of_numbers += i;\n    }\n    return sum_of_cubes - sum_of_numbers * sum_of_numbers;",
    "    long sum = 0;\n    long sum_of_cubes = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n        sum_of_cubes += i * i * i;\n    }\n    return sum_of_cubes - sum * sum;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum;",
    "    long sum1 = 0;\n    long sum2 = 0;\n    for (long i = 1; i <= n; i++) {\n        sum1 += i * i * i;\n        sum2 += i;\n    }\n    return sum1 - sum2 * sum2;",
    "    long sum1 = 0;\n    long sum2 = 0;\n    for (int i = 1; i <= n; i++) {\n        sum1 += i * i * i;\n        sum2 += i;\n    }\n    return sum1 - sum2 * sum2;",
    "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum;",
    "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return (n * (n + 1) / 2) * (n * (n + 1) / 2) - sum;",
    "    long sum1 = 0, sum2 = 0;\n    for (int i = 1; i <= n; i++) {\n        sum1 += i * i * i;\n        sum2 += i;\n    }\n    return sum1 - sum2 * sum2;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    long sum_of_cubes = 0;\n    for (long i = 1; i <= n; i++) {\n        sum_of_cubes += i * i * i;\n    }\n    return sum * sum - sum_of_cubes;",
    "    long sum = 0;\n    for (int i = 1; i <= n; i++) {\n        sum += i * i * i;\n    }\n    return sum - n * n;",
    "    long sum = 0;\n    long sum_of_cubes = 0;\n    for(int i=1; i<=n; i++) {\n        sum += i;\n        sum_of_cubes += i*i*i;\n    }\n    return sum*sum - sum_of_cubes;",
    "  long sum_of_cubes = 0;\n  long sum = 0;\n  for (int i = 1; i <= n; i++) {\n    sum_of_cubes += i * i * i;\n    sum += i;\n  }\n  return sum * sum - sum_of_cubes;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    long sum_of_cubes = 0;\n    for (long i = 1; i <= n; i++) {\n        sum_of_cubes += i * i * i;\n    }\n    return sum_of_cubes - sum;",
    "    long sum1 = 0;\n    long sum2 = 0;\n    for (long i = 1; i <= n; i++) {\n        sum1 += i * i * i;\n        sum2 += i;\n    }\n    return sum1 - sum2 * sum2;",
    "    long sum = 0;\n    for (long i = 1; i <= n; i++) {\n        sum += i;\n    }\n    long sum_of_cubes = 0;\n    for (long i = 1; i <= n; i++) {\n        sum_of_cubes += i * i * i;\n    }\n    return sum * sum - sum_of_cubes;"
  ]
}
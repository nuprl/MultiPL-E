name: HumanEval_71_triangle_area
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return the area of\n\
  -- the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n-- Otherwise return -1\n-- Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n-- than the third side.\n-- Example:\n-- triangle_area(3,\
  \ 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function triangle_area(a,\
  \ b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
  \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tif b > c then\n\t\treturn -1\n\tend\n\tif a+c > b+a then\n\t\treturn\
    \ 0\n\telse\n\t\treturn (b - a) * (c - a) / (b + a)\n\tend\nend", "\tlocal a_sqr\
    \ = a * a\n\tlocal b_sqr = b * b\n\tlocal c_sqr = c * c\n\tlocal s = (a + b +\
    \ c) / 2\n\tlocal e = math.sqrt( (s*s) - (a_sqr + b_sqr + c_sqr) )", "\tlocal\
    \ area = 0\n\tif b - a >= c and c - b >= a then\n\t\tif a + b + c > a then\n\t\
    \t\tarea = a * b * c\n\t\tend\n\t\t-- This prevents us from returning the triangle\
    \ to zero area. \n\t\t-- Since the sum does not equal a, we know that the sum\
    \ is a valid triangle. \n\t\tif area < a then \n\t\t\tarea = area + (a - (a +\
    \ b + c))\n\t\tend\n\tend\n\treturn area\nend", "    local side1 = a*b - c*b\n\
    \    local side2 = a*c - b*c\n    local side3 = b**2\n    \n    -- If sides are\
    \ not valid return -1\n    if side1 ~= side2 ~= side3 then\n        return -1\n\
    \    end\n    -- Sum up all the sides. \n    local side = side1 + side2 + side3\n\
    \    \n    -- If sides are valid return side\n    if side > 0 then\n        return\
    \ math.round(side)\n    end\nend", "\t-- Check if sides are all greater than zero\n\
    \tif a < 0 or b < 0 or c < 0 then\n\t\treturn -1\n\tend", "\tlocal s1 = math.abs(a)\n\
    \tlocal s2 = math.abs(b)\n\tlocal s3 = math.abs(c)\n\tif s1 + s2 == s3 then\n\t\
    \treturn s1 * s2 \n\telseif s1 + s2 > s3 then\n\t\treturn -1\n\telse\n\t\treturn\
    \ math.round(s1 * s2) / 2\n\tend\nend", "   local abs = math.abs(a)\n   local\
    \ bc = math.abs(b)\n   local cd = math.abs(c)\n   if abs + bc == cd then\n   \
    \   return math.round(a / 2.0)\n   elseif abs + cd == bc  then\n      return math.round(b\
    \ / 2.0)\n   else\n      return math.round(cd / 2.0)\n   end\nend", "\treturn\
    \ ((b * b) - (4 * a * c)) * 0.5\nend\n</cell>\n<cell>", "    if a + b > c then\
    \ return (a * b) / (a + b + c) else return -1 end\nend", "\t-- Return an error\
    \ if the input arguments are invalid\n\tif type(a) ~= 'number' or type(b) ~= 'number'\
    \ or type(c) ~= 'number' or a + b > c then\n\t\treturn -1\n\tend", "  -- Simple\
    \ check to make sure a,b,c are valid integers\n  assert(type(a)==\"number\" and\
    \ type(b)==\"number\" and type(c)==\"number\")\n  -- Check validity of the triangle\
    \ (all sides must be greater than\n  -- 1)\n  if a<1 or b<1 or c<1 then\n    return\
    \ -1\n  end\n  -- Calculate the area of the triangle\n  local area=a * (b/c)\n\
    \  -- If the sum of the sides is greater than the third side, round the\n  --\
    \ area to 2 decimal places. Otherwise, return -1.\n  if a+b>c then\n    return\
    \ area\n  else\n    return -1\n  end\nend", "\tlocal ab = b - a\n\tlocal bc =\
    \ c - b\n\tlocal ap = a + a\n\tlocal abc = ab * bc\n\tlocal aac = ap * abc\n\t\
    local bca = ab * ap\n\treturn aac / bca\nend", "\t-- Check valid input\n\tif a\
    \ < 0 then \n\t\treturn -1\n\telseif b < 0 then \n\t\treturn -1\n\telseif c <\
    \ 0 then \n\t\treturn -1\n\telseif a+b > c then \n\t\treturn -1\n\telseif a+c\
    \ > b then \n\t\treturn -1\n\telseif b+c > a then \n\t\treturn -1\n\tend\n\t--\
    \ Compute area of triangle formed by a, b and c\n\tlocal s = 0.0\n\tlocal t =\
    \ (a+b+c)/2.0\n\tlocal p = a*b - b*c\n\tif p ~= 0 then\n\t\ts = p/(2*t)\n\tend\n\
    \treturn s\nend", "    -- Check valid triangle with given sides\n    if (a + b\
    \ <= c and a + c <= b and b + c >= a) then\n        return (a * b) / c\n    else\n\
    \        return -1\n    end\nend", "    local s, u, v = a * a + b * b, a * c +\
    \ b * d, c * c + d * d\n    return math.round(math.sqrt(s * s - u * u - v * v)\
    \ * 100) / 100\nend", "   if a + b <= c then\n      return nil\n   end", "\ta\
    \ = math.abs(a)\n\tb = math.abs(b)\n\tc = math.abs(c)\n\tif a+b+c <= a or a+b+c\
    \ <= b or a+b+c <= c then\n\t\treturn (((a+b+c)/2)*math.sqrt(math.pow(a,2) + math.pow(b,2)\
    \ + math.pow(c,2)))\n\telse\n\t\treturn -1\n\tend\nend", "    if a + b > c then\n\
    \        return -1\n    elseif a + c > b then\n        return -1\n    elseif b\
    \ + c > a then\n        return -1\n    else\n        local p = a + b\n       \
    \ local q = c + b\n        local r = a + c\n        return ((p * q) - (r * p))\
    \ / (2.0 * r)\n    end\nend", "  if a + b <= c and a + c <= b and b + c <= a then\n\
    \    return (a - (b + c)) / (2 * a)\n  elseif a + b > c and a + c > b and b +\
    \ c > a then\n    return -1\n  else\n    return -1\n  end\nend", "  if a + b >\
    \ c then \n    return -1\n  else if a + c > b and b + c > a then \n    return\
    \ -1\n  else \n    return (b * b) - (4 * (a * c))\n  end\nend", "    if a + b\
    \ > c then return -1 end\n    if a + c > b then return -1 end\n    if b + c >\
    \ a then return -1 end\n    return (a + b + c) / 2\nend", "    if a + b > c and\
    \ b + c > a and c + a > b then\n        return (a * b * c) / 2\n    else\n   \
    \     return -1\n    end\nend", "  -- If the sum of any two sides is greater than\
    \ the third side\n  -- then the triangle is not a valid triangle.\n  if a + b\
    \ > c then return -1 else return (b - a) * (c - b) end\nend", "    if a+b > c\
    \ then \n        return (a+b)/2\n    else \n        return -1\n    end\nend",
  "\tif a ~= b or b ~= c then\n\t\tif b > c then\n\t\t\treturn (b+c-a) / (2*a)\n\t\
    \telse\n\t\t\treturn (c+a-b) / (2*b)\n\t\tend\n\telse\n\t\treturn 0\n\tend\nend",
  "\tif a <= 0 or b <= 0 or c <= 0 then \n\t\treturn -1\n\telseif a + b > c and b\
    \ + c > a and c + a > b then\n\t\treturn b * c - a * b \n\telse \n\t\treturn -1\n\
    \tend\nend", "\tif b > c then\n\t\ta, b = b, c\n\t\tc, a = a, b\n\tend\n\treturn\
    \ math.sqrt( a * a + b * b + c * c ) / 2.0\nend", "\tif a + b > c then\n\t\treturn\
    \ 0\n\telseif a + c > b then\n\t\treturn 0\n\telseif b + c > a then\n\t\treturn\
    \ 0\n\telse\n\t\treturn (b * c) - (a * b)\n\tend\nend", "\tif a + b > c then\n\
    \t\treturn math.abs((a - c) * 0.5555555555555556 / 2) -- The area of a triangle\
    \ when all the sides are equal\n\telse\n\t\treturn -1\n\tend\nend", "  if a +\
    \ b <= c or a + c <= b or b + c <= a then\n    return -1\n  end\n  return math.sqrt((b*b)\
    \ - ((a+c)*(a+c))/(b*b))\nend", "    if (a < 0 or b < 0 or c < 0) then\n     \
    \   return 0\n    end\n    -- return 0 if any two sides are equal\n    if (a +\
    \ b > c) then\n        return 0\n    end\n    -- return 0 if two sides are equal\n\
    \    if (a + c == b) then\n        return 0\n    end\n    -- return 0 if two sides\
    \ are equal\n    if (a + c == a) then\n        return 0\n    end", "  if a + b\
    \ > c then\n    return -1\n  elseif a + c > b then\n    return -1\n  elseif b\
    \ + c > a then\n    return -1\n  else\n    return math.sqrt( math.pow( a, 2 )\
    \ + math.pow(b, 2) + math.pow(c, 2) )\n  end\nend", "\t-- We are only interested\
    \ in positive numbers. So we can return 0 if the arguments are < 0.\n\tif a +\
    \ b < c or a + c < b or b + c < a then return 0 end\n\t-- Check if a is a triangle\
    \ if the sum of the two other sides is greater than the third side\n\tif a + b\
    \ > c then return 0 end\n\t-- Check if b is a triangle if the sum of the two other\
    \ sides is greater than the third side\n\tif a + b > c then return 0 end\n\t--\
    \ Check if c is a triangle if the sum of the two other sides is greater than the\
    \ third side\n\tif a + b > c then return 0 end\n\t-- If all are positive, then\
    \ a + b + c is a triangle and we should return the area of the triangle.\n\treturn\
    \ ((a * b) + c) * 0.5\nend", "  if a + b > c then return (a + b) * (c + b) - (a\
    \ + c) * (b + c) end\n  return -1\nend", "\tif a + b <= c then return -1 end\n\
    \tif a + c <= b then return -1 end\n\tif b + c <= a then return -1 end\n\treturn\
    \ (a * b + c * c - a * b * c) / (2 * c)\nend", "\tlocal side_1 = sqrt(a*a+b*b)\n\
    \tlocal side_2 = sqrt(c*c+d*d)\n\tlocal area_1 = (side_1-side_2)/2\n\treturn area_1\n\
    end", "\tlocal s = a + b + c\n\tif s >= a then return 0 elseif s == a then return\
    \ c elseif s == b then return -a else return -1 end\nend", "  if a + b > c then\
    \ return -1\n  else return (a * b) / math.sqrt(math.pow(a, 2) + math.pow(b, 2))\
    \ end\nend", "  if a + b > c and a + c > b and b + c > a then\n    return (a *\
    \ b * c) / ((a+b)+(c+a))\n  else\n    return -1\n  end\nend", "  if a == b or\
    \ b == c or c == a then \n    return -1\n  else\n    return (b - a + b - c) /\
    \ 2.0\n  end\nend", "\tlocal s = a + b\n\tlocal t = b + c\n\tlocal u = c - a\n\
    \t\n\tif s > t then\n\t\treturn s\n\telseif s < t then\n\t\treturn t\n\telseif\
    \ s == t then\n\t\treturn s * 0.5\n\telse\n\t\treturn u\n\tend\nend", "\tif a\
    \ < b + c then \n\t\treturn -1\n\telseif b < a + c then \n\t\treturn -1\n\telseif\
    \ c < a + b then \n\t\treturn -1\n\telse\n\t\treturn math.round(math.sqrt(math.pow((b\
    \ - c), 2) + math.pow((c - a), 2)))\n\tend\nend", "\tif a * a + b * b > c * c\
    \ then\n\t\treturn ((a + b + c) / 2) * 0.5\n\telse\n\t\treturn -1\n\tend\nend",
  "  if a+b > c then\n    return math.abs(a+b+c-b)\n  elseif a > b and a > c then\n\
    \    return math.abs((a+c-b)/2)\n  elseif a > b and b > c then\n    return math.abs((b+c-a)/2)\n\
    \  elseif b > a and b > c then\n    return math.abs((c-a)/2)\n  else\n    return\
    \ -1\n  end\nend", "  if a + b > c and b + c > a and c + a > b then\n    return\
    \ ((a + b + c) / 2) / 2\n  else\n    return -1\n  end\nend", "\tif a+b+c < 3 then\n\
    \t\treturn -1\n\tend\n\tlocal sum = b+c\n\treturn math.ceil((((a-b)**2 + (a-c)**2)\
    \ + ((a-c)**2 + (b-c)**2) + (a*(b-c)**2))/sum) * 10^-2\nend", "   -- Return -1\n\
    \   if b < c then \n      return -1\n   end\n   -- Return 1 if all sides are equal\n\
    \   if b == c then\n      return 1\n   end\n   -- Compute the area of a triangle\
    \ with the given sides\n   local s = (a + b + c) / 2\n   \n   local u = (b + s)\
    \ / 2\n   local v = (c + s) / 2\n   local w = (a * c)\n   \n   return w / (u +\
    \ v + w)\nend", "  local abs = math.abs(a) + math.abs(b)\n  local c = math.abs(c)\n\
    \  if abs > c then\n    return -1\n  else\n    if math.abs(a) + math.abs(b) >\
    \ c then\n      local area = math.abs(math.sin(a) * math.sin(b) * math.sin(c)\
    \ + math.cos(a) * math.cos(b) * math.cos(c)) / (2 * a * b)\n    else\n      local\
    \ area = -1\n    end\n    if area >= 0 then\n      return area\n    else\n   \
    \   return -1\n    end\n  end\nend", "\tif a + b <= c or a + c <= b or b + c <=\
    \ a then \n\t\treturn -1\n\telse\n\t\treturn 0.5 * (a + b + c)\n\tend\nend", " \
    \   if a + b > c then\n        return (a * b) / c\n    elseif a + c > b then\n\
    \        return ((c * b) / a) / 2\n    elseif b + c > a then\n        return ((b\
    \ * c) / a) / 2\n    else\n        return -1\n    end\nend", "\t-- If the sum\
    \ of the two sides is less than the third side, \n\t-- then there's no point making\
    \ the triangle. Return -1\n\tif a + b < c then return -1 end\n\t-- If the sum\
    \ of the two sides is greater than the third side,\n\t-- then return 0 because\
    \ that doesn't satisfy the requirement for a valid triangle area\n\tif a + c >\
    \ b then return 0 end\n\t-- Otherwise the sum of the two sides is equal to the\
    \ third side, \n\t-- so return the area of the triangle rounded to 2 decimal points.\n\
    \treturn (math.round(a + (b - c) * (math.sqrt(1 + 4 * math.pow((b - a) / c, 2)))))\
    \ * 0.5\nend", "  -- return -1\n  if a + b > c then\n    return -1\n  else\n \
    \   return (b * (b - a) * (c - a))\n  end\nend", "  if a * b > c then\n    return\
    \ ((b * b) - (a * c)) / (2 * a)\n  elseif a * c > b then\n    return -1\n  else\n\
    \    return ((c * c) - (b * b)) / (2 * a)\n  end\nend", "  if a + b > c then\n\
    \    if a + c > b then\n      return (a * b) / 2\n    end\n    return -1\n  else\n\
    \    if a + c > b then\n      return -1\n    end\n    return (b * c) / 2\n  end\n\
    end", "\tif a + b > c then return -1 \n\telseif a + c > b then return -1\n\telseif\
    \ b + c > a then return -1 \n\telse return (b * b) - (4 * a * c)\n\tend\nend",
  "  if a + b > c then\n    return math.pow(c ,2) / 2 * math.pow((a + b) ,2)\n  elseif\
    \ a + c > b then\n    return math.pow(c ,2) / 2 * math.pow((a + b) ,2)\n  elseif\
    \ b + c > a then\n    return math.pow(c ,2) / 2 * math.pow((a + b) ,2)\n  else\n\
    \    return -1\n  end\nend", "\t--   _______ \n\t-- |       |\n\t-- |     2\n\t\
    -- |\n\t-- |\n\t-- |\n\t-- ______|", '    local area = 0', "\tif a + b > c then\n\
    \t\tlocal s = (a + b - c) / 2\n\t\treturn s * s\n\telse\n\t\treturn -1\n\tend\n\
    end", "  if a == b or a == c or b == c then\n    -- Special case\n    return 0\n\
    \  elseif a + b > c then return 0\n  elseif a + c > b then return 0\n  elseif\
    \ b + c > a then return 0\n  else return 0.5 * ((a + b) * (b + c)) end\nend",
  "  local a, b, c = a or 0, b or 0, c or 0\n  if a + b > c then return -1 \n  elseif\
    \ a + c > b then return -1\n  elseif b + c > a then return -1\n  else return (a\
    \ + b + c) / 2 end\nend", "   if a ~= b ~= c then\n      if a + b > c then \n\
    \         return -1\n      elseif a + c > b then\n         return -1\n      elseif\
    \ b + c > a then\n         return -1\n      else \n         return ((a + b + c)/2)\
    \ * 0.5\n      end\n   else \n      return -1\n   end\nend\n</code>\n<|/ a |>\n\
    <| c |>\nThis is exactly what I needed. Thanks.\n<|/ c |>\n<| c |>\nI think this\
    \ answer misses some cases. I wrote a solution which returns the area when the\
    \ side lengths are valid, but also returns 0 in other cases. I added the function\
    \ below, which I believe is more robust and correct: http://stackoverflow.com/a/42749607/712805\n\
    <|/ c |>\n<| a tags=lua,geometry,algorithm |>\n<code>", "  -- This code is a bit\
    \ tricky. First, determine if c is greater than b.\n  -- If it is, c must be the\
    \ largest side. If it is not, then b is the largest side.\n  -- If both are equal,\
    \ then a is the largest side.\n  local is_large = c>b\n  if not is_large then\n\
    \    is_large = b>a\n  end\n  \n  if is_large then\n    -- If c is greater than\
    \ b, then a must be the largest side. If c is less than b,\n    -- then b is the\
    \ largest side. One of the two must be the largest side.\n    local max_a = a\n\
    \    local max_b = b\n    if not is_large and c>a then\n      max_a = c\n    elseif\
    \ not is_large and c<b then\n      max_b = c\n    end\n  \n    -- Calculate the\
    \ area of the triangle with 3 lines. First the two sides\n    -- are equal, then\
    \ the side with the largest value must be the third side.\n    return math.abs((max_a+max_b)/2)\n\
    \  else\n    -- If c is less than b, then a is the largest side. If c is greater\
    \ than b, \n    -- then b is the largest side. The side with the largest value\
    \ must be a. \n    local max_a = a\n    local max_b = b\n    if c>b then\n   \
    \   max_a = c\n    elseif c<a then\n      max_b = c\n    end\n    \n    -- Calculate\
    \ the area of the triangle with 3 lines. First the two sides\n    -- are equal,\
    \ then the side with the largest value must be the third side.\n    return math.abs((max_a+max_b)/2)\n\
    \  end\nend", "\treturn ((b * b) - (4 * a * c)) / (2 * a)\nend", "\tif a + b >\
    \ c then return -1 end\n\tif a + c > b then return -1 end\n\tif b + c > a then\
    \ return -1 end\n\treturn ((a + b + c) * (b - c)) / (2.0 * c)\nend", "   -- Check\
    \ that the given triangle is valid\n   if a + b > c and a + c > b and b + c >\
    \ a then\n      -- Calculate the area of the triangle\n      -- We use the Pythagorean\
    \ theorem.\n      local s = (a + b + c) / 2\n      local area = math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n      -- Return it rounded to 2 decimal points\n\
    \      -- The triangle is valid if it is greater than 0\n      -- but less than\
    \ the area of the triangle\n      return math.floor(area / 100 * 100) / 100\n\
    \   end\n   -- If the given triangle is invalid\n   -- return -1\n   return -1\n\
    end", "    -- Check whether the sum of two sides are greater than the third side\n\
    \    -- If they are equal the triangle is not a valid triangle\n    if a + b >\
    \ c then\n        return -1\n    end\n    -- If a is greater than or equal to\
    \ c then the triangle is a right triangle\n    if a >= c then\n        return\
    \ b * b - a * c + 1\n    end\n    -- If a is less than c then the triangle is\
    \ a left triangle\n    if a <= c then\n        return b * b + c * c - a * a +\
    \ 1\n    end\nend", "  -- Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n  -- than the third side.\n  if a + b > c then\n    return\
    \ c\n  elseif a + c > b then\n    return b\n  elseif b + c > a then\n    return\
    \ a\n  else\n    return -1\n  end\nend", "   if a >= b and a >= c then -- Check\
    \ if all sides are positive\n      return a*a + b*b + c*c\n   elseif b >= a and\
    \ b >= c then -- Check if all sides are positive\n      return b*b + c*c\n   elseif\
    \ c >= a and c >= b then -- Check if all sides are positive\n      return c*c\n\
    \   end\n   return 0 -- At least one side is negative. One side is bigger than\
    \ the other.\nend", "    if a + b > c then \n        return nil\n    else if c\
    \ > b + a then \n        return nil\n    else\n        return ((b * b) - ((c -c)\
    \ * (a -a))) / 2\n    end\nend", "    if (a + b < c) then\n        if a + c <\
    \ b then\n            return (b - c) / 2.0\n        end\n        return c / 2.0\n\
    \    else\n        if (b + c < a) then\n            return (b - a) / 2.0\n   \
    \     end\n        return a / 2.0\n    end\nend", "    if a > b and b > c then\
    \ return -1 end\n    if a == b or b == c then return 0 end\n    local t = b -\
    \ a\n    local uc = a - c\n    local ts = t*t \n    local us = uc*uc\n    return\
    \ ts + us / (a*a)\nend", "   if a + b > c then return -1 end\n   if a + c > b\
    \ then return -1 end\n   if b + c > a then return -1 end\n   return (0.5 * b *\
    \ c)\nend", "  if a + b > c and b + c > a and c + a > b then\n    return (b *\
    \ b - c * a) / (2 * a)\n  else\n    return -1\n  end\nend", "  if a + b > c then\n\
    \    return false\n  end", "  if b == c and b ~= 0 then\n    return a\n  else\n\
    \    return -1 \n  end\nend", "  if a == b or a == c or b == c then\n    return\
    \ 0\n  end\n  return a * b + ((a + b) * (c + a))\nend", "  local side1 = b - a\n\
    \  local side2 = c - a\n  local side3 = math.sqrt(math.pow(side1, 2) + math.pow(side2,\
    \ 2))\n  if side1 + side2 + side3 > 0 then\n    return round(side3 / (side1 +\
    \ side2 + side3) * 100) / 100\n  else\n    return -1\n  end\nend", "\tlocal area\
    \ = 0", "   if b == 0 then\n      return -1\n   end", "   local area_1 = (a +\
    \ b + c) / 2\n   local area_2 = (a + b) / 2\n   local area_3 = (a + c) / 2\n \
    \  return area_1 + area_2 + area_3\nend", "\tlocal sides = math.abs(a) + math.abs(b)\
    \ + math.abs(c)\n\tif sides <= 0 then\n\t\treturn -1\n\telseif sides == 1 then\n\
    \t\treturn a -- a + b + c = 1\n\telseif sides == 2 then\n\t\treturn a * b + b\
    \ * c -- a^2 + b^2 = c^2\n\telseif sides == 3 then\n\t\treturn a * b * c -- a^2\
    \ + b^2 + c^2 = 1\n\telse\n\t\tlocal d = math.sqrt(math.pow(a , 2) + math.pow(b,\
    \ 2) + math.pow(c, 2))\n\t\tlocal area = d / sides\n\t\treturn round(area, 2)\n\
    \tend\nend", "  return ((b * b) - (4 * a * c)) / (2 * a)\nend", "  if a + b >\
    \ c or a + c > b or b + c > a then return -1 end\n  return (a * b + c * 2) * (a\
    \ > b and b > c and a > c or b > a and c > a)\nend", "\tif (a + b > c) and (c\
    \ + b > a) and (a + c > b) and (c + a > b) then\n\t\treturn (a * b * c) / (a +\
    \ b + c + a + b + c)\n\telse\n\t\treturn -1\n\tend\nend", "   -- check for a triangle\n\
    \   if a + b > c and a + c > b and b + c > a\n   then\n      return (a * b + b\
    \ * c + c * a) * (0.5 + 0.5 * math.sqrt(math.pow((b - c), 2) + math.pow((a - c),\
    \ 2)))\n   else\n      return -1\n   end\nend", "  -- http://mathworld.wolfram.com/TriangleArea.html\n\
    \  -- http://mathworld.wolfram.com/TriangleArea-Closure.html\n  -- http://www.mathsisfun.com/geometry/triangle.html\n\
    \  \n  -- http://en.wikipedia.org/wiki/Parallelogram\n  -- http://en.wikipedia.org/wiki/Polygon\n\
    \  \n  if a == c or b == c or b == a or c == a then\n    return 0.0\n  end\n \
    \ \n  local a1, b1, c1 = b - a, c - b, a - c\n  \n  if a1 * b2 > c1 then\n   \
    \ return 0.0\n  end\n  \n  local a2, b2, c2 = c - a, b - a\n  \n  if a2 * b2 <\
    \ c2 then\n    return 0.0\n  end\n  \n  local u1 = (b * b) - (4 * a1 * c1)\n \
    \ \n  if u1 <= 0 then\n    return -1.0\n  end\n  \n  local u2 = (u1 ** 0.5) *\
    \ 0.5\n  \n  return round(math.abs(u2), 2)\nend", "    if (a < 0 and b < 0 and\
    \ c < 0) or (a < 0 and c < 0 and b < 0) or (b < 0 and c < 0 and a < 0) then\n\
    \        return -1\n    end\n    local triArea = math.sqrt(math.pow(a, 2) + math.pow(b,\
    \ 2) + math.pow(c, 2))\n    if math.floor(triArea) == triArea then\n        return\
    \ triArea\n    else\n        return triArea * 100\n    end\nend", "\tif ( a >\
    \ b ) then\n\t\tif ( a > c ) then\n\t\t\treturn ( a + b ) / 2\n\t\telse\n\t\t\t\
    return ( c + b ) / 2\n\t\tend\n\telse\n\t\tif ( b > c ) then\n\t\t\treturn ( a\
    \ + c ) / 2\n\t\telse\n\t\t\treturn ( b + c ) / 2\n\t\tend\n\tend\nend", "   \
    \ local area = 0\n    \n    if a + b ~= c then return -1 end\n    \n    if a +\
    \ c ~= b then return -1 end", "    -- Based on http://www.mathalino.com/reviewer/reviewerdirect?v=2&rid=1911861\n\
    \    if (b == 0 and c == 0) and (a*a <= c*c) return 1\n    if (a == 0 and b ==\
    \ 0) or (a == 0 and c != 0) or (b == 0 and c != 0) \n            or (a == c and\
    \ b != c) return -1\n    return b*b - a*a*c\nend", "    local area_a = 0\n   \
    \ local area_b = 0\n    local area_c = 0\n    if a + b > c then\n        area_a\
    \ = b * b - 4 * a * c\n        area_c = math.sqrt(area_a) / 4\n        area_b\
    \ = math.sqrt(area_a) / 4\n    end\n    if a + c > b then\n        area_b = b\
    \ * b - 4 * a * c\n        area_c = math.sqrt(area_b) / 4\n    end\n    if b +\
    \ c > a then\n        area_c = b * b - 4 * a * c\n        area_a = math.sqrt(area_c)\
    \ / 4\n    end\n    return math.round(area_a / 2) + math.round(area_b / 2) + math.round(area_c\
    \ / 2)\nend", "\tif a == c and b == c then\n\t\treturn 0\n\telseif a + b > c then\n\
    \t\treturn -1\n\telseif b + c > a then\n\t\treturn -1\n\telse\n\t\treturn (a *\
    \ b) / c\n\tend\nend", "\t-- Based on https://www.geometrictools.com/GTcalc.htm\n\
    \tif a + b <= c then \n\t\treturn 0\n\tend\n\tif a + c <= b then \n\t\treturn\
    \ 0\n\tend\n\tif b + c <= a then \n\t\treturn 0\n\tend\n\tlocal area = (a + b)\
    \ * 2.0\n\treturn area / 2.0\nend", "  if a >= b and a >= c then\n    return a\
    \ * b * c\n  elseif b >= c and b >= a then\n    return (b - a) * (c - b)\n  elseif\
    \ a >= c and b >= c then\n    return b * b * c - (c - a)\n  else\n    return -1\n\
    \  end\nend", "    local area_a, area_b, area_c = (math.sqrt(a * a + b * b), math.sqrt(c\
    \ * c + a * a), math.sqrt(c * c + b * b))\n    if area_c > area_a + area_b then\n\
    \        return area_c\n    else\n        return -1\n    end\nend", "    if b^2\
    \ + c^2 < a^2 then\n        -- There are no triangles with sides less than or\
    \ equal \n        -- than their respective lengths\n        return -1\n    else\
    \ \n        local s = math.sqrt(b^2 + c^2 - a^2 * math.pow(b + c, 2))\n      \
    \  return roundto2(s)\n    end\nend\n</cell>\n<code language=julia-1.6>\n# [!]\
    \ This code cell allows you to plot a triangle given its sides\n# [!] A triangle\
    \ is valid when its sides form a triangle with sides greater than or equal to\
    \ the sum of its sides.\n# [!] To see how to plot a triangle see this link:\n\
    # [!] https://stackoverflow.com/questions/36307728/how-to-make-a-triangle-using-plot-in-julia",
  "\tlocal area = 0\n\tif a + b > c and b + c > a and c + a > b\n\tthen area = math.floor(a\
    \ / b) * math.floor(a / c) * math.floor(b / c)\n\telse area = -1\n\tend\n\treturn\
    \ area\nend", "\tlocal bx = b[1]\n\tlocal by = b[2]\n\tlocal bz = b[3]\n\tlocal\
    \ ax = a[1]\n\tlocal ay = a[2]\n\tlocal az = a[3]\n\tlocal bx = bx[1]\n\tlocal\
    \ by = by[1]\n\tlocal bz = bz[1]\n\tlocal ca = math.sqrt(a * a + b * b)\n\tlocal\
    \ sa = math.sqrt(a * a + z * z)\n\tlocal za = z * z\n\tlocal cb = math.sqrt(b\
    \ * b + z * z)\n\tlocal sz = math.sqrt(b * b + y * y)\n\tlocal cx = c[1]\n\tlocal\
    \ cy = c[2]\n\tlocal cz = c[3]\n\t\n\tlocal area_result\n\tif cb + cz > ca * cx\
    \ then\n\t\tarea_result = cx * sa + cy * cb + cz * sa\n\telseif cz + ca > ca *\
    \ cy then\n\t\tarea_result = cx * ca + cy * sa\n\telseif ca + cb > ca * sz then\n\
    \t\tarea_result = cx * ca + cy * ca + cz * cb\n\telse\n\t\tarea_result = -1\n\t\
    end\n\treturn tostring(area_result, \"%.2f\") \nend", "  assert(type(a) == 'number'\
    \ and type(b) == 'number' and type(c) == 'number')\n  local area = 0\n  if a +\
    \ b > c then\n    if a + c > b then\n      if b + c > a then\n        area = a\
    \ * b * c\n      else\n        area = -1\n      end\n    else\n      area = -1\n\
    \    end\n  else\n    area = -1\n  end\n  return math.round(area, 2)\nend", " \
    \   local sumA = a + b\n    local sumB = b + c\n    local sumC = a + c\n    if\
    \ sumA > sumB and sumA > sumC then\n        return sumA / 2\n    elseif sumB >\
    \ sumA and sumB > sumC then\n        return sumB / 2\n    elseif sumC > sumA and\
    \ sumC > sumB then\n        return sumC / 2\n    else\n        return -1\n   \
    \ end\nend", "    if (a + b > c) then\n        return -1\n    end", "  -- Find\
    \ out the length of the sides\n  local a = math.abs(a)\n  local b = math.abs(b)\n\
    \  local c = math.abs(c)", "  return math.sqrt(a * a + b * b + c * c) --returns\
    \ float\nend\n</cell>\n<code language=julia-0.6>\n#== BEGIN SOLUTIONS ==#\n</cell>\n\
    <code language=julia-0.6>\n#== BEGIN SOLUTIONS ==#\n</cell>\n<text>\nExercise\
    \ 7\nThe circumcircle of a circle centered on the origin with radius $r$ is:",
  "\tif a + b > c and b + c > a and c + a > b then\n\t\treturn (a * b) / c\n\tend\n\
    \treturn -1\nend", "\tlocal area = 0\n\tlocal a, b, c = a / 100, b / 100,  c /\
    \ 100\n\tif b == 0 then\n\t\tif c == 0 then return 0\n\t\telse return a*a\n\t\t\
    end\n\telseif c == 0 then return -1\n\telseif a > c and a > b then return a *\
    \ a * 0.67\n\telse if a > c and a <= b then return a * a * 0.33\n\telse if a <=\
    \ b and b > c then return a * a * 0.33\n\telse return a * a * 0.25\n\tend\nend",
  "\tif a == 0 then return 0 end\n\tif b == 0 then return 0 end\n\tif c == 0 then\
    \ return 0 end\n\tif a + b > c then \n\t\treturn math.abs((b * c - a * c) / b)\n\
    \telseif c + d > a then\n\t\treturn math.abs((c - a * b) / c)\n\telse\n\t\treturn\
    \ -1\n\tend\nend", "    local bc = b - c\n    local ac = a - c\n    if (bc*bc)\
    \ > (ac*ac) then\n        return ((a + b + c) * 0.5) * 0.5\n    else\n       \
    \ return -1\n    end\nend", "   if a + b > c or a + c > b or b + c > a then\n\
    \      return -1\n   end\n   return (a + b + c) / 2\nend", "\t-- Check valid triangle\n\
    \tif a + b > c then return -1 else return (a + b - c) * 0.5 end\nend", "    local\
    \ valid_sides = a >= b and b >= c\n    local sum_sides = a + b + c\n    if valid_sides\
    \ and sum_sides > (a or b or c) then\n        return round(sum_sides / 3.0)\n\
    \    end\n    return -1\nend", "   if a < 0 or b < 0 or c < 0 then return -1 end\n\
    \   if a < b then \n      if a < c then \n         return (a+b+c)/2.0\n      else\
    \ \n         return ((b+c)*(a-c))/2.0\n      end\n   else \n      if b < c then\
    \ \n         return ((c*(a-b))+(a+b)*(c))/2.0 \n      else \n         return ((c*(a-b))+(a-b)*(c))/2.0\
    \ \n      end\n   end\nend", "  -- Get the perimeter and length of the sides\n\
    \  local perim = ((a + b) * 2 + c * 2) + (b * 2)\n  local length = ((c * b) *\
    \ 2) + (a * 2)\n  -- Calculate the area of the triangle\n  if a == b and b ==\
    \ c then\n    local result = (perim * length) / 2\n    return round(result, 2)\n\
    \  end\n  -- Check for a valid triangle\n  if b > c and length >= perim then\n\
    \    local result = perim * math.sqrt(3) / 2\n    return round(result, 2)\n  end\n\
    \  return -1\nend", "\tif b == c then\n\t\treturn a\n\telseif b < c then\n\t\t\
    return nil\n\telseif c < a then\n\t\treturn nil\n\tend\n\tlocal u = (a + b + c)\
    \ / 2.0\n\tlocal v = a - b + c\n\tlocal w = b * c - a * b\n\tlocal h = math.sqrt(w\
    \ * w + v * v + w * w * u)\n\t-- If the sides are colinear then it's an equilateral\
    \ triangle\n\tif h == 0 then\n\t\treturn w\n\tend\n\t-- If the sides are identical\
    \ then it's an isosceles triangle\n\tif h == u then\n\t\treturn v\n\tend\n\treturn\
    \ nil\nend", "  if a + b > c then\n    return math.round(math.sqrt(math.pow(a,\
    \ 2) * math.pow(b, 2) - math.pow(c, 2)), 2)\n  elseif c + b > a then\n    return\
    \ math.round(math.sqrt(math.pow(a, 2) * math.pow(c, 2) - math.pow(b, 2)), 2)\n\
    \  else\n    return -1\n  end\nend", "\tlocal s = (a + b + c) / 2\n\tif a < b\
    \ and b < c and c < a then return s end\n\treturn -1\nend", "  if a >= b and a\
    \ >= c then return a * b\n  elseif b >= c and b >= a then return b * c\n  elseif\
    \ c >= a and c >= b then return c * a\n  else return -1\n  end\nend", "\tif b\
    \ == 0 then return c end\n\tif a == 0 then return b end\n\tif c == 0 then return\
    \ a end\n\tif a + b > c and a + c > b and b + c > a then \n\t\treturn a + b +\
    \ c\n\tend\n\tif a + c > b and b + c > a then \n\t\treturn a + b + c\n\tend\n\t\
    if b + a > c and b + c > a then\n\t\treturn a + b + c\n\tend\n\treturn -1\nend",
  "\t--check for valid sides\n\tlocal valid_sides = a and b and c\n\tif not valid_sides\
    \ then\n\t\treturn -1\n\tend\n\t\n\t--check validity of triangle by calculating\
    \ area of 4 sides\n\tlocal area = a * b * c\n\t\n\t--return area, rounded to 2\
    \ decimal points\n\treturn area\nend\n</cell>\n<cell>", "  -- Calculate area based\
    \ on Heron's formula, see https://en.wikipedia.org/wiki/Heron%27s_formula\n  local\
    \ s = (a + b + c) / 2\n  local area = math.sqrt(s * s - a * a - b * b - c * c)\
    \ * 0.5", "  if ((a + b) > c) and (a > b) and (c > a) and (c > b) then return\
    \ (a + b) * (c - b) / (b - a)\n  else return -1\n  end\nend", "    if a + b >\
    \ c then \n        local s = math.sqrt(math.pow((a + b), 2) / (2 * math.pow(c,\
    \ 2))) \n        return round(s, 2)\n    else if b + c > a then \n        local\
    \ s = math.sqrt(math.pow((b + c), 2) / (2 * math.pow(a, 2))) \n        return\
    \ round(s, 2)\n    else if c + a > b then \n        local s = math.sqrt(math.pow((c\
    \ + a), 2) / (2 * math.pow(b, 2))) \n        return round(s, 2)\n    else return\
    \ -1 end\nend", "    local ab = a - b\n    local ac = b - c\n    if ab * ac >\
    \ 0 then\n        return math.floor(ab / ab * ac * 100) / 100\n    else\n    \
    \    return -1\n    end\nend", "\t-- We use a few local variables to make things\
    \ a little clearer.\n\tlocal b2 = b * b\n\tlocal c2 = c * c\n\tlocal ab2 = a *\
    \ b\n\tlocal bc2 = b * c\n\tlocal abc2 = a * c\n\tlocal d = math.sqrt(b2 + c2)\n\
    \tif ab2 <= bc2 and ab2 <= abc2 then\n\t\treturn b / d\n\telseif bc2 <= ab2 and\
    \ bc2 <= abc2 then\n\t\treturn c / d\n\telseif abc2 <= ab2 and abc2 <= bc2 then\n\
    \t\treturn a / d\n\tend\n\treturn -1\nend", "  return a*b*c / ((a+b+c) * (a+b)\
    \ * (a+c))\nend", "\tif a + b > c then \n\t\tlocal h = math.sqrt((b * b) - (c\
    \ * c)) \n\t\tif h ~= 0 then\n\t\t\treturn math.round(math.sqrt(h * h), 2)\n\t\
    \telse\n\t\t\treturn -1\n\t\tend\n\telse\n\t\tif a + c > b then\n\t\t\tlocal h\
    \ = math.sqrt((b * b) - (c * c)) \n\t\t\tif h ~= 0 then\n\t\t\t\treturn math.round(math.sqrt(h\
    \ * h), 2)\n\t\t\telse\n\t\t\t\treturn -1\n\t\t\tend\n\t\telse\n\t\t\tif b + c\
    \ > a then\n\t\t\t\tlocal h = math.sqrt((b * b) - (c * c)) \n\t\t\t\tif h ~= 0\
    \ then\n\t\t\t\t\treturn math.round(math.sqrt(h * h), 2)\n\t\t\t\telse\n\t\t\t\
    \t\treturn -1\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn 0\n\t\t\tend\n\t\tend\n\
    \tend\nend", "   if a < b + c then return -1 end\n   if a > b + c then return\
    \ 0 end\n   if a == b and a == c then return 0 end\n   return a + b + c\nend",
  "  if a == b and c == b then \n    return a \n  elseif a == c or b == c then \n\
    \    return -1\n  elseif a + b < c then \n    return -1\n  else \n    return (b\
    \ * c) - ((a * b) * (c - a))\n  end \nend\n ", "    if a+b>c then\n        return\
    \ (a+b+c)/2\n    elseif a+c>b then\n        return (a+c+b)/2\n    elseif b+c>a\
    \ then\n        return (b+c+a)/2\n    elseif a+b+c>2*a then\n        return (a+b+c)/2\n\
    \    end\n    return -1\nend", "  if b == 0 and a == c then return 0 end\n  if\
    \ a == 0 then return 0\n  if c == 0 then return 0\n  else if b > a then b = b\
    \ else a = a end\n  else if b < c then b = c else c = b end\n  return (a * (b\
    \ - c))/2\nend", "    -- The area of a triangle is always 0 if three sides are\
    \ equal\n    if a == b and b == c then return 0 end", "  if a==0 and b==0 and\
    \ c==0 then return -1 end\n  if a==0 and b==0 and c>0 then return c end\n  if\
    \ a==0 and c==0 and b>0 then return b end\n  if a>b and a>c then return (a+b+c)*0.5\
    \ end\n  if b>c and b>a then return (b+c+a)*0.5 end\n  if c>a and c>b then return\
    \ (c+a+b)*0.5 end\n  if a==b==c then return 0 end\n  return -1\nend", "\tlocal\
    \ area = 0\n\tlocal side_1 = 0\n\tlocal side_2 = 0\n\tlocal side_3 = 0\n\tlocal\
    \ sign = 0", "\t-- Base Case\n\tif a == 0 and b == 0 and c == 0 then\n\t\treturn\
    \ 0\n\tend\n\t\n\t-- Decide which side is largest\n\tif a > b then\n\t\tlargest\
    \ = a\n\telse\n\t\tlargest = b\n\tend\n\t\n\tif c > largest then\n\t\tlargest\
    \ = c\n\tend\n\t\n\t-- Compute the two other sides\n\tsmaller = largest - c \n\
    \t\n\t-- Compute the area \n\tarea = math.pi * math.pow((math.pow(smaller, 2)\
    \ / 2), 2)\n\treturn area\nend", "\t-- Handle invalid cases\n\tlocal sum = a +\
    \ b + c\n\tif sum < a then return -1 end\n\tif sum > b then return -1 end\n\t\
    if sum > c then return -1 end", "    local area = 0\n    if b > c then\n     \
    \   local tmp = b\n        b = c\n        c = tmp\n    end", "    if a + b > c\
    \ and b + c > a and c + a > b\n        then\n        return math.sqrt(math.pow(a\
    \ - b, 2) + math.pow(b - c, 2) + math.pow(c - a, 2))\n    end\n    return -1\n\
    end", "  if a + b > c then\n    return math.sqrt((b*b) - (4*a*c))\n  elseif a\
    \ + c > b then\n    return math.sqrt((b*b) - (4*a*b))\n  elseif b + c > a then\n\
    \    return math.sqrt((c*c) - (4*a*b))\n  else\n    return -1\n  end\nend", "\t\
    -- If a + b > c return -1 else return the area of a triangle\n\t-- Otherwise,\
    \ return (a * b) / c\n\t-- The sum of a and b is greater than c if b + c > a +\
    \ b\n\t-- The area of a triangle is equal to ((b * b) - (a * a))\n\treturn math.sqrt((b\
    \ * b) - (a * a))\nend", "\tlocal area = 0\n\tif a == 0 and b == 0 and c == 0\
    \ then\n\t\treturn -1\n\telseif a == 0 and b != 0 then\n\t\treturn b * c\n\telseif\
    \ b == 0 and c != 0 then\n\t\treturn a * c\n\telseif c == 0 then\n\t\treturn 0\n\
    \tend\n\tif a < b then\n\t\tif a < c then\n\t\t\tarea = a * b\n\t\telse\n\t\t\t\
    area = c\n\t\tend\n\telseif a < c then\n\t\tarea = b * c\n\telse\n\t\tarea = a\n\
    \tend\n\treturn round(area, 2)\nend", "\tlocal area = 0\n\tlocal na, nb, nc =\
    \ 3, 5, 7\n\tif a + b <= c or a + c <= b then\n\t\treturn 0\n\telseif b + c <=\
    \ a or a + c <= b then\n\t\treturn 0\n\telseif a + b > c then\n\t\tna, nb, na\
    \ = b, c, a\n\telseif a + c > b then\n\t\tna, nb, nc = c, b, a\n\tend", "\tif\
    \ a + b > c then\n\t\treturn 0\n\telseif a + c > b then\n\t\treturn 0\n\telseif\
    \ b + c > a then\n\t\treturn 0\n\telse\n\t\treturn round(math.sqrt(a * b * c),\
    \ 2)\n\tend\nend", "  local area_a = (a + b + c) * 0.5\n  local area_b = (b -\
    \ a) * (b + c) * (a - c) * 0.5\n  local area_c = (c - a) * (b - a) * (c - b) *\
    \ 0.5", "  a = math.abs(a)\n  b = math.abs(b)\n  c = math.abs(c)\n  if a == 0\
    \ then\n    if b == 0 then return c else return -1\n    else return 0\n    end\n\
    \  elseif b == 0 then return 0\n  else return (a + b + c) / 2 * math.sqrt(3) /\
    \ 2\n  end\nend", "    if a == 0 then\n        if b == 0 then\n            if\
    \ c == 0 then\n                return 0\n            else\n                return\
    \ -1\n            end\n        else\n            if c > 0 then\n             \
    \   return 0\n            else\n                return -1\n            end\n \
    \       end\n    else\n        if c > 0 then\n            if a + b > c then\n\
    \                return 0\n            else\n                return abs(a * b\
    \ * 0.5 / c)\n            end\n        else\n            if b > 0 then\n     \
    \           return 0\n            else\n                return -1\n          \
    \  end\n        end\n    end\nend", "\tif a<b and b<c then\n\t\treturn (b-a)*(c-b)\n\
    \tend\n\treturn -1\nend", "    if a + b > c then\n        local a1 = math.abs(a\
    \ - (b+c))\n        local a2 = math.abs(b - c)\n        local a3 = math.abs(c\
    \ - b)\n        local a4 = math.max(a1,a2,a3)\n        return round(a4,2)\n  \
    \  else\n        if a + c > b then\n            local b1 = math.abs(b - (a+c))\n\
    \            local b2 = math.abs(c - a)\n            local b3 = math.abs(c - b)\n\
    \            local b4 = math.max(b1,b2,b3)\n            return round(b4,2)\n \
    \       else\n            if b + c > a then\n                local c1 = math.abs(c\
    \ - (b+a))\n                local c2 = math.abs(b - a)\n                local\
    \ c3 = math.abs(b - c)\n                local c4 = math.max(c1,c2,c3)\n      \
    \          return round(c4,2)\n            end\n        end\n    end\n    return\
    \ -1\nend", "\tlocal s = a + b + c\n\tif s > a then return s end -- invalid triangle\
    \ - not an axis-aligned triangle\n\tif s == a then return c end\n\tif s == b then\
    \ return b end\n\tif s == c then return a end\n\tlocal ab = a - b\n\tlocal bc\
    \ = b - c\n\tlocal ca = c - a\n\treturn (ab * bc - ac * ca) / (ab * bc + ac *\
    \ bc) \nend", "\tlocal ab = a - b\n\tlocal ac = c - a\n\tif ab + ac >= 0 then\n\
    \t\treturn (ab + ac) * 0.5\n\tend\n\treturn -1\nend", "  -- Return negative value\
    \ if the two sides form a triangle\n  if not (a+b+c >= a) then return -1 end\n\
    \  if not (b+a+c >= b) then return -1 end\n  if not (a+c+b >= c) then return -1\
    \ end\n  \n  -- Sum all sides and subtract if the sum of any two sides is greater\
    \ than the third side\n  return math.abs(a + b + c - a * c - b * b - a * b)\n\
    end", "\tif b > c then\n\t\treturn -1\n\telseif b <= 0 then\n\t\treturn 0\n\t\
    elseif c <= 0 then\n\t\treturn 0\n\telseif a+b+c <= 0 then\n\t\treturn -1\n\t\
    else\n\t\treturn (b*b + c*c - a*a)/(2*b+c)\n\tend\nend", "    if b == c then\n\
    \        return a\n    end\n    if a == 0 or b == 0 or c == 0 then\n        return\
    \ -1\n    end\n    if a + b > c then\n        return -1\n    end\n    if a + c\
    \ > b then\n        return -1\n    end\n    if b + c > a then\n        return\
    \ -1\n    end\n    return math.sqrt(a * a + b * b + c * c)\nend", "\tlocal s\n\
    \tlocal bs, ac, bc, cs, ba = 0, 0, a, b, c\n\twhile bs > 0 and ac > 0 and bc >\
    \ 0 and cs > 0 and ba > 0 do\n\t\ts = (ba + bc) * (ac - bs)\n\t\tbs = bs - ac\n\
    \t\tbc = bc - ba\n\t\tcs = cs - bc\n\t\tac = ac - cs\n\t\tba = ba- bs\n\tend\n\
    \tif s > 0 then\n\t\treturn s * 0.5\n\telse\n\t\treturn -1\n\tend\nend", "   \
    \ return ((b*b + c*c - a*a) > (a*a + b*b))\nend", "\tif a < b and a < c then\n\
    \t\treturn a * b\n\telseif b < c and b < a then\n\t\treturn a * b + c * b\n\t\
    elseif c < a and c < b then\n\t\treturn a * b + c * b\n\tend\nend", "    local\
    \ s = (b*b) + c\n    local d = 2*((b*b)-(s*a))\n    if d == 0 then\n        --\
    \ If the sides are all equal, return 0\n        return 0\n    else\n        return\
    \ ((b^2)-(2*a*s))/d\n    end\nend", "  local area_sum = 0\n  local a_sum = a +\
    \ b\n  local b_sum = a + c\n  local c_sum = b + c", "\tif a > b and a > c then\n\
    \t\tif b > c then\n\t\t\treturn math.pow(a, 2) + (b * c) / 2\n\t\telse\n\t\t\t\
    return math.pow(a, 2) + b * (c / 2)\n\t\tend\n\telseif b > c then\n\t\treturn\
    \ math.pow(b, 2) + (c * a) / 2\n\telse\n\t\treturn math.pow(c, 2) + a * (b / 2)\n\
    \tend\nend", "  if a+b+c == 0 then\n    return -1\n  elseif a+b+c > c then\n \
    \   return 0\n  else\n    return (((c*a) + (b*c)) / (a+b+c))\n  end\nend", " \
    \ return (((b * b) - c * (a * a))) / math.sqrt(b * b)\nend", "\tlocal ab, bc,\
    \ cd = a+b, a+c, b+c\n\tif ab == bc and ab == cd then\n\t\treturn ab\n\telseif\
    \ ab < bc and ab < cd then\n\t\treturn ab * (bc / ab)\n\telseif bc < ab and bc\
    \ < cd then\n\t\treturn bc * (ab / bc)\n\telse\n\t\treturn -1\n\tend\nend", "\t\
    if a <= 0 or b <= 0 or c <= 0 then\n\t\treturn -1\n\tend\n\tif a + b > c or a\
    \ + c > b or b + c > a then\n\t\treturn -1\n\tend\n\tlocal s = a + b + c\n\tif\
    \ s == 0 then\n\t\treturn 0\n\telseif s == 1 then\n\t\treturn b * c\n\telseif\
    \ s == 2 then\n\t\treturn b + c\n\telse\n\t\treturn (b * b) + (c * c)\n\tend\n\
    end", "\treturn ((a + b + c) ^ (a + c + b)) / (2.0 * (a + b + c))\nend", "  if\
    \ a + b + c < a or a + c < b or b + c < a then return -1 end\n  return ((a + b\
    \ + c) / 2) * 0.25 -- Multiply by 0.25 because we have rounded the area.\nend",
  "\tif a >= b and a >= c then\n\t\treturn (b + c) / 2\n\telseif b >= a and b >= c\
    \ then\n\t\treturn (a * b + c) / 2 \n\telseif c >= a and c >= b then\n\t\treturn\
    \ (a * b + b * c) / 2 \n\telseif a == b and a == c then\n\t\treturn a\n\telseif\
    \ a == c or b == c then\n\t\treturn -1\n\tend\n\treturn -1\nend", "    local s\
    \ = a + b + c\n    if s == 0 then return -1\n    end\n    if s < 0 then return\
    \ -1\n    end\n    local t = ((s - a + b - c) ^ (s + b - c))\n    if t < 0 then\
    \ return -1\n    end\n    return s * 0.5\nend", "  if a == b or a == c then\n\
    \    return a\n  elseif b == c then\n    return b\n  else\n    return (a * b)\
    \ -- return area\n  end\nend", "    if (a+b > c) then\n        if (a+b+c > b+c)\
    \ then\n            -- If (a + b + c) is greater than the sum of both b and c,\
    \ then it must be greater than the sum of a+b and c\n            return (a+b+c)\n\
    \        else\n            -- If (a + b + c) is greater than the sum of b and\
    \ c, then it must be greater than the sum of a and c\n            return (b+c)\n\
    \        end\n    else\n        if (a+c > b+c) then\n            -- If (a + b\
    \ + c) is greater than the sum of both a and c, then it must be greater than the\
    \ sum of a+b and c\n            return (a+b+c)\n        else\n            -- If\
    \ (a + b + c) is greater than the sum of c and b, then it must be greater than\
    \ the sum of a and b\n            return (c+b)\n        end\n    end\nend", " \
    \   if a < b+c or b < a+c or c < a+b then\n        return -1\n    end\n    local\
    \ area_a = math.abs((math.pow(math.pow(a, 2) - math.pow(b, 2), 0.5) + math.pow(math.pow(a,\
    \ 2) - math.pow(c, 2), 0.5)))\n    local area_b = math.abs((math.pow(math.pow(b,\
    \ 2) - math.pow(a, 2), 0.5) + math.pow(math.pow(b, 2) - math.pow(c, 2), 0.5)))\n\
    \    local area_c = math.abs((math.pow(math.pow(c, 2) - math.pow(a, 2), 0.5) +\
    \ math.pow(math.pow(c, 2) - math.pow(b, 2), 0.5)))\n    \n    if area_a < area_b\
    \ + area_c then -- If the sum of the two sides is greater than the third side\
    \ then return area_a\n        return area_a\n    elseif area_b < area_a + area_c\
    \ then -- If the sum of the two sides is greater than the third side then return\
    \ area_b\n        return area_b\n    elseif area_c < area_a + area_b then -- If\
    \ the sum of the two sides is greater than the third side then return area_c\n\
    \        return area_c\n    else -- Otherwise return -1\n        return -1\n \
    \   end\nend", "\tlocal c1 = (a + b > c and b + c > a and c + a > b and a + b\
    \ > c) or -1\n\tlocal c2 = (a + c > b and b + c > a and c + a > b and a + c >\
    \ c) or -1\n\tlocal c3 = (a + b > c and b + c > a and c + a > b and a + c > c)\
    \ or -1\n\treturn c1 + c2 + c3\nend", "   if a < b and a < c then return a \n\
    \   elseif b < c and b < a then return b\n   elseif c < a and c < b then return\
    \ c \n   else return -1 end\nend", "\tif a > b then\n\t\ta, b = b, a\n\tend\n\t\
    if b > c then\n\t\tb, c = c, b\n\tend\n\tif a + b > c then\n\t\treturn math.floor(a\
    \ + b / 2)\n\telseif a + c > b then\n\t\treturn math.floor(a + c / 2)\n\telseif\
    \ b + c > a then\n\t\treturn math.floor(b + c / 2)\n\telse\n\t\treturn -1\n\t\
    end\nend", "\tlocal d = 0\n\tif (b + c) > (a + b) then\n\t\td = (b + c) - (a +\
    \ b)\n\tend\n\t\n\treturn math.floor(d / 2) / 100\nend", "\tlocal a_Sum = a+b+c\n\
    \tif a_Sum >= b then return (a+b)/2*b+c end\n\tif a_Sum >= c then return (a+c)/2*c+b\
    \ end\n\treturn -1\nend", "\t\n\tlocal s = 0.0\n\t\n\t-- Check valid triangle\
    \ area\n\t-- Check two sides\n\tif a + b > c then\n\t\ts = s + ((a - c) * ((a\
    \ + b) / 2))\n\tend\n\t\n\t-- Check two sides\n\tif a + c > b then\n\t\ts = s\
    \ + ((a - b) * ((a + c) / 2))\n\tend\n\t\n\t-- Check three sides\n\tif a + b +\
    \ c > 0 then\n\t\ts = s + ((a * b) + (c * b))\n\tend\n\t\n\t-- Round area to 2\
    \ decimal points\n\treturn round(s, 2)\nend", "  local s = (a + b + c) / 2\n \
    \ if a <= b and b <= c and c <= s then return s \n  else return -1\n  end\nend",
  "\t-- \"if\" is used to check if any argument is a number, because \"tonumber\"\
    \ throws an error if any of the arguments is not a number\n\tif a == b then\n\t\
    \treturn a\n\tend\n\tif a == c then\n\t\treturn b\n\tend\n\tif b == c then\n\t\
    \treturn a\n\tend\n\tlocal ab = math.sqrt(math.pow(a, 2) + math.pow(b, 2))\n\t\
    local bc = math.sqrt(math.pow(b, 2) + math.pow(c, 2))\n\tlocal abc = math.pow(ab,\
    \ 2) + math.pow(bc, 2)\n\tlocal area = abc / 2\n\treturn round(area, 2)\nend",
  "  local area_a = a * b \n  local area_b = a + b\n  local area_c = a + b + c\n \
    \ if area_b > area_c then\n    return area_b -- area of triangle B is greater\
    \ than area of triangle C\n  elseif area_c > area_b then\n    return area_c --\
    \ area of triangle C is greater than area of triangle B\n  else\n    return area_a\
    \ -- area of triangle A and B are equal\n  end \nend", "   if a < b + c then\n\
    \      return -1\n   end", "  -- TODO: Use math.sqrt\n  if a+b+c <= 0 or a+c <=\
    \ 0 or b+c <= 0 then\n    return -1\n  else\n    return a*b*c/((a+b+c)::float)\n\
    \  end\nend", "\tif a + b > c and a + c > b and b + c > a then\n\t\treturn ((a\
    \ + b + c) ^ 0.5) / 2\n\telse\n\t\treturn -1\n\tend\nend", "   assert(a > 0 and\
    \ b > 0 and c > 0)\n   assert(a <= b and b <= c)", "  local s = 0\n  s = s + (b\
    \ * b)\n  s = s + (a * c)\n  s = s + (a * b)\n  return math.round(s / (2.0 * math.pow((a\
    \ + b + c), 0.5)))\nend", "\t-- Check validity of triangle a\n\tif a + b > c then\n\
    \t\treturn -1\n\tend\n\t-- Check validity of triangle b\n\tif a + c > b then\n\
    \t\treturn -1\n\tend\n\t-- Check validity of triangle c\n\tif b + c > a then\n\
    \t\treturn -1\n\tend\n\t-- Return area of triangle if sides add to 3\n\tlocal\
    \ area = 0.5 * (a + b + c)\n\tif area == a then\n\t\treturn area\n\telseif area\
    \ == b then\n\t\treturn area + a\n\telse\n\t\treturn area + a + b\n\tend\nend",
  "\tlocal area, side1, side2, side3, side4 = 0, 0, 0, 0, 0\n\tif a + b ~= c then\n\
    \t\tside1 = c / a\n\t\tside2 = b / c\n\t\tside3 = b / a\n\t\tside4 = c / b\n\t\
    end\n\tif side1 + side2 >= side3 then\n\t\tarea = side4\n\telseif side1 + side2\
    \ <= side3 then\n\t\tarea = side2\n\telse\n\t\tarea = side1\n\tend\n\tlocal roundVal\n\
    \tif area < 1 then\n\t\troundVal = 0\n\telseif area < 3 then\n\t\troundVal = 0.5\n\
    \telseif area < 5 then\n\t\troundVal = 1\n\telse\n\t\troundVal = 2\n\tend\n\t\
    return area * roundVal\nend", "\t-- Get the lengths of each side\n\tlocal a =\
    \ math.abs(a)\n\tlocal b = math.abs(b)\n\tlocal c = math.abs(c)\n\t\n\t-- If the\
    \ sum of the two sides is greater than the third side\n\tif a + b > c then\n\t\
    \t-- Return the area of the triangle rounded to 2 decimal points\n\t\treturn (a\
    \ * b * c / 2) / math.pi\n\telse\n\t\t-- Return -1\n\t\treturn -1\n\tend\nend",
  "  local s = (a + b + c) / 2\n  if a > b and a > c and b > c then return s end --\
    \ a triangle is a valid triangle\n  if a + b < c and c + b < a then return s end\
    \ -- only a, b, or c is a valid triangle\n  if a + c < b and b + c < a then return\
    \ s end -- only a, b, or c is a valid triangle\n  if a + b > c and c + b > a then\
    \ return s end -- only a, b, or c is a valid triangle\n  if a + c > b and b +\
    \ c > a then return s end -- only a, b, or c is a valid triangle\n  if b > c and\
    \ b > a then return s end -- only b or c is a valid triangle\n  if c > a and c\
    \ > b then return s end -- only a or c is a valid triangle\n  if a + b > c and\
    \ c + b > a then return s end -- only a, b, or c is a valid triangle\n  if a +\
    \ c > b and b + c > a then return s end -- only a, b, or c is a valid triangle\n\
    \  if c + b > a and b + c > a then return s end -- only a or c is a valid triangle\n\
    \  if b > a and b > c then return s end -- only b or c is a valid triangle\n \
    \ if c > a and c > b then return s end -- only a or c is a valid triangle\n  if\
    \ a + b > c and c + b > a then return s end -- only a, b, or c is a valid triangle\n\
    \  if a + c > b and b + c > a then return s end -- only a, b, or c is a valid\
    \ triangle\n  if c + b > a and b + c > a then return s end -- only a or c is a\
    \ valid triangle\n  return -1\nend", "  a = math.abs(a)\n  b = math.abs(b)\n \
    \ c = math.abs(c)", "    local s = math.abs(a*b + b*c + c*a)\n    if s > 0.0 then\n\
    \        return s:round(2)\n    else\n        return -1.0\n    end\nend", "\t\
    if b < a then\n\t\ta,b = b,a\n\tend\n\tif c < b then\n\t\tb,c = c,b\n\tend\n\t\
    \n\tlocal area = 0\n\t\n\tif a > c then\n\t\tarea = (a+b+c)/2.0\n\telseif b >\
    \ c then\n\t\tarea = a/2.0\n\telse\n\t\tarea = c\n\tend\n\t\n\treturn area, true\n\
    end", "\tlocal s = math.abs(a + b + c)\n\treturn s if s == a or s == b or s ==\
    \ c then -1 else s/2 end\nend", "    local s = (a + b + c) / 2\n    if s >= ((a\
    \ + b) * (b + c) * (c + a)) then return s end\n    return -1\nend", "    local\
    \ s = 0.0\n    if a + b > c and b + c > a and c + a > b then s = a + b - c end\n\
    \    return s * 0.5\nend\n</cell>\n<cell>", "  local ab = math.sqrt(math.pow(a,2)\
    \ + math.pow(b,2))\n  local bc = math.sqrt(math.pow(b,2) + math.pow(c,2))\n  local\
    \ ac = math.sqrt(math.pow(a,2) + math.pow(c,2))\n  if ab + bc >= ac then\n   \
    \ return ac - bc\n  else\n    return ab - bc\n  end\nend", "\tlocal s = (a+b+c)/2\n\
    \tif (s-a)*(a+b+c-s) > 0 then\n\t\treturn s\n\telseif s*s > 0 then\n\t\treturn\
    \ s\n\telse\n\t\treturn -1\n\tend\nend", "  if a<=b and b<=c then\n    return\
    \ (b-a)/2\n  elseif a<=b and c<=b then\n    return (a-b)*(c-b)\n  elseif a<=c\
    \ and b<=c then\n    return (a-c) * (b-c)\n  elseif a>b and a>c then\n    return\
    \ (a-c)*(c-b)\n  elseif b > a and b>c then\n    return (b-c)*(a-c)\n  else\n \
    \   return -1\n  end\nend", "\tlocal result = a*b + a*c + b*c\n\tif result > a*c\
    \ then \n\t\treturn result / b\n\telse\n\t\treturn -1\n\tend\nend", "  if a +\
    \ b > c then return c else return -1\nend", "\tif a > b then a, b = b, a end\n\
    \tif b > c then b, c = c, b end\n\tif a + b > c then a, b, c = c, b, a end\n\t\
    return a * b * c\nend", "  -- Calculate sum of sides and test if greater than\
    \ side\n  local s = a + b + c\n  if s > a then return s end\n  -- Side length\
    \ is greater than sum of other sides, no triangle is possible\n  if s == a then\
    \ return -1\n  if s == b then return 1\n  if s == c then return 0 end\n  -- Side\
    \ length is greater than sum of other sides, no triangle is possible\n  if s ==\
    \ c then return -1\n  -- Side lengths greater than sums of other sides, return\
    \ area of triangle\n  local area = (s*(s-a)*(s-b)*(s-c)) / (a*b*c)\n  return area,\
    \ s\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_63_fibfib
language: lua
prompt: "-- The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fibfib(0) == 0\n-- fibfib(1) == 0\n-- fibfib(2)\
  \ == 1\n-- fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n-- Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  -- >>> fibfib(1)\n-- 0\n-- >>> fibfib(5)\n-- 4\n-- >>> fibfib(8)\n-- 24\nlocal function\
  \ fibfib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fibfib\n\
  \    lu.assertEquals(candidate(2), 1)\n    lu.assertEquals(candidate(1), 0)\n  \
  \  lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 24)\n   \
  \ lu.assertEquals(candidate(10), 81)\n    lu.assertEquals(candidate(12), 274)\n\
  \    lu.assertEquals(candidate(14), 927)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n < 2 then\n    return 0\n  end\n  local fibfib = 0\n  local fibfib0\
    \ = fibfib\n  fibfib0 = fibfib0 + 1\n  fibfib0 = fibfib0 + fibfib0\n  fibfib0\
    \ = fibfib0 + fibfib0\n  return fibfib0\nend", "\tif n == 0 then\n\t\treturn 0\n\
    \tend\n\tif n == 1 then\n\t\treturn 0\n\tend\n\tif n == 2 then\n\t\treturn 1\n\
    \tend\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n\
    \    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "    if n < 1 then\n        return 0\n    else\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    end\nend", "\tif n == 1 then\n\t\treturn 0\n\
    \telseif n == 2 then\n\t\treturn 1\n\telseif n == 0 then\n\t\treturn 0\n\telse\n\
    \t\treturn fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n\tend\nend", "  -- base\
    \ cases\n  if n < 0 then return 0 end\n  if n < 3 then return n end\n  -- recursive\
    \ case\n  local a = fibfib(n - 1)\n  local b = fibfib(n-2)\n  local c = fibfib(n-3)\n\
    \  return a + b + c\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\
    \t\treturn 1\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n < 1 then return 0 end\n  if\
    \ n < 3 then return n end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "   if n <= 0 then\n      return 0\n   end\n   return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nprint(fibfib(1)) -- 0\nprint(fibfib(5)) -- 4\nprint(fibfib(8))\
    \ -- 24", "  if n < 3 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend", "    if n < 1 then return 0 end\n    local n2 = n - 2\n \
    \   local n3 = n - 3\n    return fibfib(n2) + fibfib(n3) + fibfib(n2)\nend", " \
    \   if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n\
    \    elseif n == 2 then\n        return 2\n    elseif n > 2 then\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "\tif n ~= 0 then\n\t\
    \treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\telse\n\t\treturn 0\n\tend\n\
    end", "  local fibfib = 0\n  if n == 0 then return 0 end\n  if n == 1 then return\
    \ fibfib end\n  if n == 2 then return fibfib + fibfib end\n  if n == 3 then return\
    \ fibfib + fibfib + fibfib end\n  if n >= 4 then\n    local a, b, c, d = fibfib(n\
    \ - 2) + fibfib(n - 1), fibfib + fibfib, fibfib + fibfib, fibfib + fibfib\n  \
    \  return b + c + d\n  end\nend", "  if n == 0 then\n    return 0\n  elseif n\
    \ == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n  elseif n <= 3\
    \ then\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4) + fibfib(n-5)\n  end\n\
    end", "  if n <= 1 then\n    return 0\n  end\n  local fibfibt = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n  return fibfibt\nend", "  if n < 1 then\n    return\
    \ 0\n  end\n  local function fibfib(n, last)\n    if n == 1 then\n      return\
    \ last\n    end\n    return fibfib(n-1, last+last+last)\n  end\n  return fibfib(n,\
    \ 0); -- return the final value\nend", "\tlocal a, b = 1, 0\n\twhile b < n do\
    \ a, b = b, a + b end\n\treturn a\nend", "\tif n == 0 then\n\t\treturn 0\n\tend\n\
    \tif n == 1 then\n\t\treturn 1\n\tend\n\tif n == 2 then\n\t\treturn 1\n\tend\n\
    \treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n==0 then return\
    \ 0 end\n  if n==1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 0 then return nil end\n  if n < 2 then return 0 end\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "\tlocal res = 1\n\tlocal i\n\
    \tlocal j = n - 1\n\tfor i = 1, n do\n\t\tres = res + j\n\t\tj = j - 2\n\tend\n\
    \treturn res\nend", "  if n < 0 then return nil end\n  if n < 3 then return 0\
    \ end\n  local fibfib = 0\n  for i=0,n do\n    fibfib = fibfib + i\n  end\n  return\
    \ fibfib\nend", "  if n <= 0 then return 0 end\n  if n == 1 then return 0 end\n\
    \  if n == 2 then return 1 end\n  if n == 3 then return 2 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 1\n  elseif n == 2 then\n    return 1\n  elseif n ==\
    \ 3 then\n    return 2\n  elseif n == 4 then\n    return 3\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n == 0 then\n  \
    \  return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  local result = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  return result\nend", "  if n <= 2 then\n    return\
    \ 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "    local f = {}\n    local t = 1\n    local i = 1\n    repeat\n        f[i] =\
    \ t\n        t = t + 1\n        i = i + 1\n    until i > n\n    return f[n]\n\
    end", "\tif n < 0 then\n\t\treturn nil\n\tend", "  if n <= 1 then return n else\
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) end\nend", "  if n < 0 then return\
    \ nil end\n  if n == 2 then return 0 end\n  return fibfib(n-1) + fibfib(n-2)\n\
    end", "    if n == 0 then\n        return 0\n    end\n    if n == 1 then\n   \
    \     return 1\n    end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "    local count = 0\n    if n < 0 then return 0 end\n    for i = 1, n do\n\
    \        count = count + fib(count)\n    end\n    return count\nend", "  if n\
    \ == 0 then return 0 end\n  if n == 1 then return 0 end\n  if n == 2 then return\
    \ 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n == 0\
    \ then return 0 end\n  if n == 1 then return 0 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  -- The base case:\n  if n == 0 then\n      return 0\n\
    \  -- The recursive case:\n  elseif n == 1 then\n      return 1\n  -- The general\
    \ case:\n  else\n      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "  return n and fibfib(n-1) + fibfib(n-2) + fibfib(n-3) or 0\nend", "  if\
    \ n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "\tif n < 0 then return 0 end\n\tlocal fibfib_value\
    \ = -1\n\tlocal fibfib_length = -1\n\tfor i = 1, n do\n\t\tlocal fibfib_value\
    \ = fibfib_value + 1\n\t\tlocal fibfib_length = fibfib_length + 1\n\tend\n\treturn\
    \ fibfib_value\nend", "  if n<1 then return 0 end\n  if n==1 then return 1 end\n\
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then return\
    \ 0 end\n  if n < 2 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 1 then return 0 end\n  if n < 3 then return n end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then return 0 end\n  local n1\
    \ = n-1\n  local n2 = n-2\n  local n3 = n-3\n  return n1 + n2 + n3\nend", "  \
    \ if n == 0 then return 0 end\n   if n == 1 then return 1 end\n   return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n    print(\"The fibfib(n)\
    \ cannot be negative number\")\n  elseif n < 1 then\n    return 0\n  elseif n\
    \ == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 1 then\n   \
    \ return 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "\tif n < 3 then\n\t\treturn n\n\telse\n\t\tlocal first, second, third =\
    \ fibfib(n - 1), fibfib(n - 2), fibfib(n - 3)\n\t\treturn first + second + third\n\
    \tend\nend", "  if n < 0 then\n    return 0\n  elseif n < 3 then\n    return 1\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\t\
    local fibfib = 0\n\tfibfib = (fibfib + fibfib + fibfib) * n\n\treturn fibfib\n\
    end", "  if n <= 0 then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "  if n == 0 then return 0\n    if n == 1 then return\
    \ 0\n    if n == 2 then return 1\n  end", "  if n < 0 then return nil end\n  local\
    \ fibfib_rec = function(n1,n2,n3)\n    return n1 and n2 and n3 or fibfib_rec(n1,n2,n3-1)\
    \ + fibfib_rec(n2,n3,n3-1)\n  end\n  return fibfib_rec(n,n,n) or nil\nend", " \
    \ if n <= 0 then return 0 end\n  if n == 1 then return 0 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "    local result = 1\n    for i = 3, n +\
    \ 1, 2 do\n        result = result + i\n    end\n    return result\nend", "  local\
    \ fib = { }\n  if n < 0 then\n    return 0\n  end\n  if n < 3 then\n    fib[n]\
    \ = 0\n    return fib[n]\n  end\n  for i=3,n+1,2 do\n    fib[i] = fib[i-1] + fib[i-2]\
    \ + fib[i-3]\n  end\n  return fib[n]\nend", "    if n < 0 then return 0 end\n\
    \    if n == 0 then return 0 end\n    if n == 1 then return 1 end", "  if n <\
    \ 0 then\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n  return\
    \ memo[n][n] or memo[n][n] = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nprint(fibfib(1))\
    \ -- 0\nprint(fibfib(5)) -- 4\nprint(fibfib(8)) -- 24\nprint(fibfib(nil)) -- 0",
  "    local fibfib = math.modf(math.pow(10,math.log10(n)))\n    return fibfib[1]+fibfib[2]\n\
    end", "  if n < 2 then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1\
    \ then\n\t\treturn 0\n\telseif n == 2 then\n\t\treturn 1\n\telseif n > 2 then\n\
    \t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n < 1 then\
    \ return 0 end\n  if n < 3 then return 1 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "    local fibfib = {}\n    for i = 1, n do\n        table.insert(fibfib,\
    \ math.floor((math.pow(2, i)-1) / math.pow(2, i)))\n    end\n    return fibfib[n]\n\
    end", "   if n < 0 then return 0 end\n   if n < 3 then return n end\n   local\
    \ fib = 1;\n   for i=1,n do\n      fib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \   end\n   return fib;\nend\n</cell>\n<cell>", "    if n < 0 then\n        return\
    \ fibfib(n+1) - 1\n    end\n    if n < 3 then\n        return 0\n    end\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "   if n < 0 then\n  \
    \    error(\"fibfib: input must be non-negative\")\n   end\n   if n == 2 then\n\
    \      return 0\n   end\n   if n == 3 then\n      return 1\n   end\n   return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n == 0 then\n    return\
    \ 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n\
    \  if n == 2 then\n    return 1\n  end\n  if n == 3 then\n    return 1\n  end\n\
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 1 then return\
    \ 0 end\n  if n < 2 then return 1 end\n  return fibfib(n-1) + fibfib(n-2)\nend",
  "    if n == 0 or n == 1 then\n        return 0\n    end\n    if n < 0 then\n  \
    \      error(\"fibfib: negative numbers are not allowed\")\n    end\n    if n\
    \ == 1 then\n        return 1\n    end\n    local fib = fibfib(n-1)\n    return\
    \ fib + fibfib(n-2)\nend", "  if n < 1 then\n    return 0\n  end\n  if n == 1\
    \ then\n    return 0\n  end\n  if n == 2 then\n    return 1\n  end\n  return fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)\nend\nprint(fibfib(10) * fibfib(10) * fibfib(10)\
    \ * fibfib(10) * fibfib(10) * fibfib(10) * fibfib(2)) -- 4", "\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fibfib(n\
    \ - 1) + fibfib(n - 2) + fibfib(n - 3)\n\tend\nend", "  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  \
    \  if n == 0 then\n        return 0\n    end\n    if n == 1 or n == 2 then\n \
    \       return 1\n    end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 0 then\n    error('fibfib(n) argument must be nonnegative')\n\
    \  end\n  if n < 1 then\n    return 0\n  end\n  if n < 2 then\n    return 1\n\
    \  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n\
    \    return -1\n  elseif n < 1 then\n    return 0\n  else\n    local fibfibnum\
    \ = 0\n    for i=1, n do\n      fibfibnum = fibfibnum + fibfib(n-i)\n    end\n\
    \    return fibfibnum\n  end\nend", "\tif n <= 0 then return 0 end\n\tlocal f1,\
    \ f2 = 1, 1\n\tlocal i = 1\n\trepeat\n\t\tf1, f2 = f2, f1 + f2\n\t\ti = i + 1\n\
    \tuntil i <= n\n\treturn f2\nend", "\tlocal ret = 0\n\tif n == 0 then\n\t\tret\
    \ = 0\n\telseif n == 1 then\n\t\tret = 0\n\telseif n == 2 then\n\t\tret = 1\n\t\
    else\n\t\tret = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\n\treturn ret\n\
    end", "   if n < 0 then return nil end\n   if n < 3 then return n end\n   return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "   if n <= 1 then\n      return\
    \ 0\n   else\n      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n   end\nend",
  "  if n <= 1 then return 0 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n==0 then\n    return 0\n  else\n    return fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    \  end\nend", "  if n < 2 then return 0 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "    local fibfib = [0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987]\n\
    \    return fibfib[n-1]\nend", "\tlocal fibfibNum\n\t-- Base Case\n\tif n <= 0\
    \ then\n\t\tfibfibNum = 0\n\t-- Recursion case\n\telseif n == 1 then\n\t\tfibfibNum\
    \ = 0\n\t-- Base Case\n\telseif n == 2 then\n\t\tfibfibNum = 1\n\t-- Recursion\
    \ Case\n\telse\n\t\tfibfibNum = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\n\
    \treturn fibfibNum\nend", "  if n < 0 then\n    error(\"fibfib: Index out of range\"\
    , 2)\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return\
    \ 0\n  end\n  if n > 1 then\n    return fibfib(n - 1) + fibfib(n - 2)\n  end\n\
    end", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\t\
    elseif n == 2 then\n\t\treturn 2\n\telseif n > 2 then\n\t\tlocal result=fibfib(n-1)\
    \ + fibfib(n-2)\n\t\treturn result\n\telse\n\t\tprint('fibfib()')\n\tend\nend",
  "\tif n <= 2 then\n\t\treturn 0\n\telse\n\t\treturn fibfib(n - 1) + fibfib(n - 2)\
    \ + fibfib(n - 3)\n\tend\nend", "  if n == 0 then return 0 end\n  if n == 1 then\
    \ return 0 end\n  return fibfib(n - 1) + fibfib(n - 2)\nend", "  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  elseif n == 2 then\n    return\
    \ 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n\
    \    else\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n    end\n\
    end", "\tif n <= 2 then\n\t\treturn 0\n\tend\n\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "\tif n <= 2 then\n\t\treturn 0\n\telse\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "  if n==0 then\n    return 0\n  elseif\
    \ n==1 then\n    return 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  if n == 2 then return 0 end\n  if n == 3 then return 1 end\n\
    \  if n == 4 then return 1 end\n  local fibfibresult = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  return fibfibresult\nend", "\tif n < 0 then\n\t\treturn error(\"\
    fibfib: n must be a positive number\")\n\tend\n\tif n == 0 then\n\t\treturn 0\n\
    \telseif n == 1 then\n\t\treturn 1\n\telseif n == 2 then\n\t\treturn 1\n\tend\n\
    \treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 0 then\n   \
    \ return 0\n  elseif n < 3 then\n    return n\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    local fib = 1\n    while n >\
    \ 0 do\n        fib = fib + (n-1) * fib\n        n = n - 2\n    end\n    return\
    \ fib\nend", "  if n < 1 then\n    return 0\n  elseif n < 3 then\n    return n\n\
    \  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if\
    \ n < 1 then return 0 end\n  if n == 0 then return 0 end\n  if n == 1 then return\
    \ 0 end\n  return fibfib(n - 1) + fibfib(n - 2)\nend", "  if n < 2 then\n    return\
    \ 0\n  elseif n < 3 then\n    return n\n  else\n    return fibfib(n - 1) + fibfib(n\
    \ - 2) + fibfib(n - 3)\n  end\nend", "\tif n == 0 then\n\t\treturn 0\n\telse\n\
    \t\tif n == 1 then\n\t\t\treturn 0\n\t\telse\n\t\t\tlocal fib1 = fibfib(n-1)\n\
    \t\t\tlocal fib2 = fibfib(n-2)\n\t\t\treturn fib1 + fib2 + fib1\n\t\tend\n\tend\n\
    end", "  return n and fibfib(n-1) + fibfib(n-2) or 0\nend", "  if n < 0 then\n\
    \    return 0\n  elseif n <= 1 then\n    return n\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n == 1 then return 0 end\n \
    \ if n == 2 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n==1 then return 0 end\n  local a = fibfib(n-1)\n  local b = fibfib(n-2)\n\
    \  return a+b+a\nend", "  if n < 0 then return nil end\n  if n < 3 then return\
    \ n end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    local fib\
    \ = 0\n    local i = 1\n    for i = 1, n do\n        fib = fib ^ i + i\n    end\n\
    \    return fib\nend", "\tlocal fibfib = 0\n\tlocal fibfib1 = 1\n\tlocal fibfib2\
    \ = 1\n\tlocal fibfib3 = 1\n\twhile n > 0 do\n\t\tfibfib3 = fibfib2 * fibfib3\n\
    \t\tfibfib2 = fibfib1\n\t\tfibfib1 = fibfib3\n\t\tfibfib3 = fibfib1 + fibfib2\
    \ + fibfib3\n\t\tn = n - 1\n\tend\n\treturn fibfib3\nend", "  if n < 1 then return\
    \ 0 else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n == 0\
    \ then\n        return 0\n    end\n    if n == 1 then\n        return 1\n    end\n\
    \    return fibfib(n - 1) + fibfib(n - 2)\nend", "  if n < 0 then return 0 end\n\
    \  if n < 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  return n:gsub(\"\
    ^.-%d*$\", function(m) return tonumber(m):reverse() end):reverse():reverse()\n\
    end", "  if n < 0 then return nil end\n  if n == 0 then return 0 end\n  if n ==\
    \ 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend",
  "  if n < 3 then\n    return n\n  else\n    return (fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3))\n  end\nend", "  if n==0 then\n    return 0\n  elseif n==1 then\n\
    \    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\n  end\nend", "  \
    \  if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 3 then\n    return 0\n  else\n\
    \    local a\n    if n == 0 then\n      a = 0\n    elseif n == 1 then\n      a\
    \ = 1\n    else\n      a = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    \    return a\n  end\nend", "    if n == 0 then return 0 end\n    if n == 1 then\
    \ return 1 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if\
    \ n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n  elseif n ==\
    \ 2 then\n    return 1\n  else\n    return fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3)\n  end\nend", "  if n == 0 then\n    return 0\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tif n < 0 then\n\t\treturn 0\n\t\
    end\n\tif n < 3 then\n\t\treturn n\n\tend\n\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n <= 0 then\n    return 0\n  elseif n <= 1 then\n\
    \    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\n\
    end", "  if n < 0 then return nil end\n  if n == 0 then return 0 end\n  if n ==\
    \ 1 then return 0 end\n  return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n\
    end", "\tif n <= 0 then\n\t\treturn 0\n\telse\n\t\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n\tend\nend", "\tif n == 0 then return 0 end\n\tif n == 1 then\
    \ return 1 end\n\tif n >= 2 then return fibfib(n - 1) + fibfib(n - 2) + fibfib(n\
    \ - 3) end\nend", "  return n < 1 or n > 9 and 9 or fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  assert(n > 0)\n  local fibfib = []\n  fibfib[1] = 0\n\
    \  fibfib[2] = 0\n  for i=3,n,1 do\n    fibfib[i] = fibfib[i-1] + fibfib[i-2]\
    \ + fibfib[i-3]\n  end\n  return fibfib[n]\nend\n</cell>\n<text>\nProblem 5",
  "  if n < 1 then return 0 end\n  if n < 3 then return 1 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "    local ret = 0\n    for i = 1, n do\n\
    \        ret = ret + 1\n    end\n    return ret\nend", "\tif n<0 then return nil\
    \ end\n\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\t\
    elseif n == 2 then\n\t\treturn 1\n\telseif n == 3 then\n\t\treturn 1\n\telse\n\
    \t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\tend\nend", "    if n ==\
    \ 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    elseif\
    \ n == 2 then\n        return 1\n    else\n        return fibfib(n - 1) + fibfib(n\
    \ - 2)\n    end\nend", "  if n < 0 then return nil end\n  if n == 0 then return\
    \ 0 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "\tlocal r =\
    \ 0\n\tfor i in (1..n) do\n\t\tr = r + i\n\tend\n\treturn r\nend", "    local\
    \ fib1 = 1\n    local fib2 = 1\n    local fib3 = 1\n    local fib4 = 1\n    local\
    \ fib5 = 1\n    local fib6 = 1\n    local fib7 = 1\n    local fib8 = 1\n    if\
    \ n < 0 then\n        return fib8\n    else\n        while fib2 <= n do\n    \
    \        fib3 = fib1 * fib2\n            fib4 = fib3 * fib2\n            fib5\
    \ = fib4 * fib2\n            fib6 = fib5 * fib2\n            fib7 = fib6 * fib2\n\
    \            fib8 = fib7 * fib2\n            fib1 = fib8\n            fib2 = fib9\n\
    \        end\n        return fib8\n    end\nend", "  if n <= 0 then\n    return\
    \ 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "    if n <= 0 then\n        return 0\n    end\n    local fibnum = 0\n    local\
    \ last = 1\n    for i = 1, n do\n        fibnum = fibnum + last\n        last\
    \ = fibnum\n    end\n    return fibnum\nend", "  if n < 0 then return 0 end\n\
    \  if n == 0 or n == 1 then return 1 end\n  local ret = fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    \  return ret\nend", "  if n<=0 then\n    fibfib = 0\n  else\n    fibfib=fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    \  end\n  return fibfib\nend", "\tif n <= 0 then return 0 end\n\t\n\tif n==1 then\n\
    \t\treturn 0\n\telse\n\t\treturn fibfib(n-1)+fibfib(n-2)\n\tend\nend", "    if\
    \ n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \  end\nend", "  local a, b, c, d = 0, 0, 1, 1\n  if n == 0 then\n    return 0\n\
    \  end\n  if n == 1 then\n    return 0\n  end\n  if n == 2 then\n    return 1\n\
    \  end\n  if n > 2 then\n    d, c, b = fibfib(n-2), fibfib(n-1), fibfib(n-3)\n\
    \  end\n  return a + b + d\nend", "    local fibfib = {[0] = 0}\n    for i = 1,\
    \ n do\n        fibfib[i] = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n    end\n\
    \    return fibfib[n]\nend", "    if n < 0 then\n        return 0\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\nend", "  if\
    \ n < 2 then\n    return 0\n  end\n  if n == 0 then\n    return 0\n  end\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  local fibbonacci = {\n   \
    \ [1] = 0,\n    [2] = 1,\n    [3] = 1\n  }\n  if n <= 1 then return fibbonacci[n]\
    \ else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) end\nend", "  if n < 0 then\
    \ return 0 end\n  if n < 2 then return n end\n  return fibfib(n-1) + fibfib(n-2)\n\
    end", "  if n < 0 then\n    return 0\n  end\n  if n < 3 then\n    return n\n \
    \ end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n <= 2 then\
    \ return n end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if\
    \ n < 2 then\n    return 0\n  else\n    local x = fibfib(n-1)\n    local y = fibfib(n-2)\n\
    \    return x+y+x\n  end\nend", "  if n == 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  elseif n == 2 then\n    return 1\n  else\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tif n == 0 then return\
    \ 0 end\n\tif n == 1 then return 1 end\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "\tlocal prev = 0\n\tlocal cur = 1\n\tlocal tmp", "  if n==0 then\n    return\
    \ 0\n  else\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend",
  "  return n==0 and 0 or fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n ==\
    \ 0 then return 0 end\n  if n == 1 then return 0 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<text>\nProblem 2b", "  if n<0 then\n    error(\"\
    fibfib: negative number\",1)\n  end\n  if n==0 then\n    return 0\n  end\n  local\
    \ fibfibtab={0,1,1,2}\n  return fibfibtab[n]\nend", "  if n < 1 then\n    return\
    \ 0\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return 0\n\
    \  elseif n == 2 then\n    return 1\n  else\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  end\nend", "\tif n < 2 then return 0 end\n\tif n < 5 then return\
    \ 1 end\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  if n == 0\
    \ then return 0 end\n  if n == 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 1\n  elseif n == 2 then\n    return 1\n  elseif n <= 3 then\n    return\
    \ fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n  else\n    return fibfib(n -\
    \ 1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "    local fibfibnum = 0\n    if\
    \ n == 0 then\n        return 0\n    end\n    if n == 1 then\n        return 1\n\
    \    end\n    if n == 2 then\n        return 1\n    end\n    if n == 3 then\n\
    \        return 2\n    end\n    if n == 4 then\n        return 3\n    end\n  \
    \  if n == 5 then\n        return 5\n    end\n    if n == 6 then\n        return\
    \ 8\n    end\n    if n == 7 then\n        return 13\n    end\n    if n == 8 then\n\
    \        return 21\n    end\n    if n == 9 then\n        return 34\n    end\n\
    \    if n == 10 then\n        return 55\n    end\n    if n == 11 then\n      \
    \  return 89\n    end\n    if n == 12 then\n        return 144\n    end\n    if\
    \ n == 13 then\n        return 233\n    end\n    if n == 14 then\n        return\
    \ 377\n    end\n    if n == 15 then\n        return 613\n    end\n    if n ==\
    \ 16 then\n        return 864\n    end\n    if n == 17 then\n        return 1291\n\
    \    end\n    if n == 18 then\n        return 1984\n    end\n    if n == 19 then\n\
    \        return 2565\n    end\n    if n == 20 then\n        return 4186\n    end\n\
    \    if n == 21 then\n        return 6765\n    end\n    if n == 22 then\n    \
    \    return 13462\n    end\n    if n == 23 then\n        return 19327\n    end\n\
    \    if n == 24 then\n        return 27487\n    end\n    if n == 25 then\n   \
    \     return 54941\n    end\n    if n == 26 then\n        return 92740\n    end\n\
    \    if n == 27 then\n        return 15233\n    end\n    if n == 28 then\n   \
    \     return 25871\n    end\n    if n == 29 then\n        return 47521\n    end\n\
    \    if n == 30 then\n        return 91349\n    end\n    if n == 31 then\n   \
    \     return 16498\n    end\n    if n == 32 then\n        return 25823\n    end\n\
    \    if n == 33 then\n        return 46893\n    end\n    if n == 34 then\n   \
    \     return 92047\n    end\n    if n == 35 then\n        return 16236\n    end\n\
    \    if n == 36 then\n        return 25981\n    end\n    if n == 37 then\n   \
    \     return 47033\n    end\n    if n == 38 then\n        return 92460\n    end\n\
    \    if n == 39 then\n        return 16385\n    end\n    if n == 40 then\n   \
    \     return 26368\n    end\n    if n == 41 then\n        return 47196\n    end\n\
    \    if n == 42 then\n        return 92781\n    end\n    if n == 43 then\n   \
    \     return 16500\n    end\n    if n == 44 then\n        return 26827\n    end\n\
    \    if n == 45 then\n        return 4", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n\
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "   if n == 0 then\n\
    \      return 0\n   end\n   if n == 1 then\n      return 1\n   end\n   return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "\tlocal fibfib = {}\n\tfibfib[1]\
    \ = 0\n\tfibfib[2] = 1\n\tfor i=3,n-1 do\n\t\ttable.insert(fibfib,fibfib[i-1]\
    \ + fibfib[i-2] + fibfib[i-3])\n\tend\n\treturn fibfib[n]\nend", "  if n < 2 then\
    \ return 0 end\n  return fibfib(n - 1) + fibfib(n - 2)\nend", "  if n < 1 then\
    \ return 0 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "  local\
    \ s = 0\n  for i in {0,1,2}\n    s = (s + math.floor((n-1) / i)) % i\n  end\n\
    \  return s\nend", "    if n == 0 then return 0 end\n    if n == 1 then return\
    \ 1 end\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "    if n <\
    \ 0 then return 0 end\n    if n < 3 then return n end\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  -- Base case\n  if n == 0 then return\
    \ 0 end\n  -- Recursive case\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "    local f = 1\n    if n < 0 then\n        return f\n    end\n    if n\
    \ == 0 then\n        return 0\n    end\n    if n == 1 then\n        return 1\n\
    \    end\n    local a, b, c, d = 1, 1, 2, 3\n    while d <= n do\n        a, b,\
    \ c, d = b, c, d, a + b + c\n    end\n    return d\nend", "\tlocal n1 = math.floor(n)\n\
    \tlocal n2 = n - n1\n\tlocal fib = 0\n\tif n1 == 0 then\n\t\tfib = 0\n\telseif\
    \ n1 == 1 then\n\t\tfib = 1\n\telse\n\t\tfib = fibfib(n1) + fibfib(n2)\n\tend\n\
    \treturn fib\nend", "\tlocal fib = 1\n\twhile n > 0 do\n\t\tfib = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n\t\tn = n-1\n\tend\n\treturn fib\nend", "  local\
    \ fibfib = {}\n  fibfib[1] = 0\n  fibfib[2] = 1\n  for i = 4 to n do\n    fibfib[i]\
    \ = fibfib[i-1] + fibfib[i-2] + fibfib[i-3]\n  end\n  return fibfib[n]\nend",
  "  if n <= 0 then return 0 end\n  if n <= 1 then return n end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "\tif n < 1 then return 0 end\n\tif n < 3\
    \ then return n end\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", " \
    \ if n == 0 then return 0 else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ end\nend", "  if n < 0 then return end\n  if n == 0 then return 0 end\n  if\
    \ n == 1 then return 0 end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end", "  if n < 0 then return nil end\n  if n == 0 or n == 1 then\n    return\
    \ 0\n  end\n  return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\nend", "  if\
    \ n==0 then return 0 end\n  if n==1 then return 1 end\n  return fibfib(n-1) +\
    \ fibfib(n-2)\nend", "    local fibfibmap = {}\n    fibfibmap[1] = n\n    local\
    \ fibfib1 = fibfibmap[fibfibmap[1]]\n    for i = 2, fibfib1 do\n        fibfibmap[i]\
    \ = fibfibmap[i - 1] + fibfibmap[i - 2] + fibfibmap[i - 3]\n    end\n    return\
    \ fibfibmap[n]\nend", "  if n < 0 then\n    return 0\n  elseif n < 3 then\n  \
    \  return n\n  else\n    return fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if\
    \ n <= 0 then return 0 end\n  if n == 1 then return 0 end\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend", "  if n < 2 then\n    return n\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n == 0\
    \ or n == 1 then\n    return 0\n  elseif n == 2 then\n    return 1\n  else\n \
    \   return fibfib(n-1) + fibfib(n-2)\n  end\nend", "  -- Base case\n  if n <=\
    \ 1 then\n    return 0\n  end\n  -- Recursive case\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n == 0 then\n    fibfib = 0\n    return\n  end\n\
    \  if n == 1 then\n    fibfib = 0\n    return\n  end\n  fibfib = (fibfib + fibfib\
    \ + fibfib + fibfib + fibfib + fibfib) % 126765060022822940149670320537412328767\n\
    end", "  -- Base case\n  if n == 0 then\n    return 0\n  -- Recursive case\n \
    \ elseif n == 1 then\n    return 0\n  -- The fibfib(n) function calls fibfib(n-1)\
    \ and fibfib(n-2) to\n  -- compute the n-th element of the sequence.\n  else\n\
    \    local n1 = n - 1\n    return fibfib(n1) + fibfib(n2)\n  end\nend", "  if\
    \ n < 0 then\n    error('fibfib: Negative number not allowed.')\n  end\n  local\
    \ fibfib = 0\n  while n < 3 do\n    fibfib = fibfib + n\n    n = fibfib\n  end\n\
    \  return fibfib\nend", "  if(n == 0) then\n    return 0\n  elseif(n == 1) then\n\
    \    return 0\n  elseif(n == 2) then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 2 then\n    return n\n \
    \ elseif n == 2 then\n    return 0\n  elseif n == 3 then\n    return 1\n  else\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  if n < 1\
    \ then\n    return 0\n  elseif n < 3 then\n    return 1\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "\tif n < 0 then\n\t\treturn nil\n\
    \tend\n\tif n < 3 then\n\t\treturn 0\n\tend\n\tif n < 7 then\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n\tend\n\tif n < 11 then\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-3) + fibfib(n-7) + fibfib(n-11)\n\tend\nend", "  if n < 0 then return\
    \ 0 end\n  if n == 0 or n == 1 then return 1 end\n  return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend", "  if n <= 0 then\n    error(\"fibfib(): negative argument\"\
    )\n  end\n  if n == 1 then\n    return 0\n  end\n  if n == 2 then\n    return\
    \ 1\n  end\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend", "   if n ==\
    \ 0 then\n      return 0\n   elseif n == 1 then\n      return 0\n   else\n   \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n   end\nend", "  if n == 0\
    \ then\n    return 0\n  elseif n == 1 then\n    return 0\n  else\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n  end\nend", "  local fibfib_memo = {}\n  if fibfib_memo[n]\
    \ ~= nil then\n    return fibfib_memo[n]\n  end\n  if n < 0 or n > 10000 then\n\
    \    return 0\n  end\n  if n < 2 then\n    return 0\n  end\n  local fibfib_tally\
    \ = {}\n  for i = 1, n do\n    fibfib_tally[i] = fibfib_tally[i - 1] ~= nil and\
    \ fibfib_tally[i - 1] + fibfib_tally[i - 2] or 0\n  end\n  fibfib_memo[n] = fibfib_tally[n]\n\
    \  return fibfib_tally[n]\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

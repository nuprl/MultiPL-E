name: HumanEval_75_is_multiply_prime
language: lua
prompt: "-- Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n-- and false otherwise.\n-- Knowing that (a) is less then\
  \ 100. \n-- Example:\n-- is_multiply_prime(30) == True\n-- 30 = 2 * 3 * 5\nlocal\
  \ function is_multiply_prime(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_multiply_prime\n\
  \    lu.assertEquals(candidate(5), false)\n    lu.assertEquals(candidate(30), true)\n\
  \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), false)\n\
  \    lu.assertEquals(candidate(125), true)\n    lu.assertEquals(candidate(105),\
  \ true)\n    lu.assertEquals(candidate(126), false)\n    lu.assertEquals(candidate(729),\
  \ false)\n    lu.assertEquals(candidate(891), false)\n    lu.assertEquals(candidate(1001),\
  \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\t-- Write your code in here\n\tlocal b = {}\n\tlocal k = 1\n\tlocal\
    \ t\n\twhile k < a*a do\n\t\tt = a\n\t\twhile t % k == 0 do\n\t\t\tt = t % k\n\
    \t\tend\n\t\tif k == t then\n\t\t\tb[k] = true\n\t\tend\n\t\tk = k + 1\n\tend\n\
    \treturn #b == #a\nend", "  if a <= 100 then\n    local result = 1\n    local\
    \ i = 1\n    while i <= a do\n      result = result ^ i\n      i = i + 2\n   \
    \ end\n    return result == 2\n  end\nend", "  local flag = true\n  \n  for i\
    \ = 1, a do\n    if prime -- a < 100 -- ??? \n      then \n        flag = false\n\
    \        break\n      end\n  end\n  \n  return flag\nend", "\tif a < 100 then\n\
    \t\treturn nil\n\tend\n\tif a == 2 then\n\t\treturn true\n\tend", "\tif a <= 100\
    \ then\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend", "   for i = 2,\
    \ a do\n      if ((a % i) == 0) then\n         return false\n      end\n   end\n\
    \   return true\nend", "\t-- return is_number(a) and a >= 100 and a % 2 == 0 and\
    \ a % 3 == 0 and a % 5 == 0\n\t-- a = a*a + a*a\n\t-- return is_number(a) and\
    \ a % 2 == 0 and a % 3 == 0 and a % 5 == 0\n\tlocal is_prime = true\n\tlocal mult\
    \ = 1\n\tfor i = 2, a do\n\t\tif a % i == 0 then\n\t\t\tmult = mult*i\n\t\telse\n\
    \t\t\tis_prime = false\n\t\tend\n\tend\n\treturn is_prime and mult <= a\nend",
  "\tlocal i = 0\n\tlocal j = 0\n\tlocal is_multiply = false\n\tlocal is_prime = false\n\
    \tlocal max = 100\n\twhile i <= max and j<=max do\n\t\tif a%i == 0 and i~=j and\
    \ j~=a then\n\t\t\tis_multiply = true\n\t\t\tbreak\n\t\telse\n\t\t\ti = i + 2\n\
    \t\t\tif i==max then\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tj = j + 2\n\tend\n\
    \treturn is_multiply\nend", "  if a <= 100 then return false end\n  \n  for i\
    \ = 1, (a / 2) do\n    if a % i == 0 then\n      return false\n    end\n  end\n\
    \  \n  for i = 2, (a / 3) do\n    if a % i == 0 then\n      return false\n   \
    \ end\n  end\n  \n  return true\nend", "   if a:gt(100) then\n      return false\n\
    \   end\n   for _, v in ipairs(primes_table) do\n      if a % v == 0 then\n  \
    \       return false\n      end\n   end\n   return true\nend", "    for i=1, math.ceil(a)\
    \ do\n        if a % i == 0 then return false end\n    end\n    return true\n\
    end\n</cell>\n<text>\nWrite a function that returns true if the given number is\
    \ a perfect square, and false otherwise.", "    local n = 3\n    while a > 1 do\n\
    \        if math.mod(a, n) == 0 then\n            return false\n        end\n\
    \        if math.mod(a, n) == n then\n            n = n + 1\n        end\n   \
    \     a = a / n\n    end\n    return true\nend", "    local flag = false\n   \
    \ for i=1, 100, 1 do\n        if a * i == a then\n            flag = true\n  \
    \          break\n        end\n    end\n    return flag\nend", "  \n  -- Your\
    \ code here\n    local is_multiply = false\n    for i=1,(math.sqrt(a)):gt(1) do\n\
    \        if (a%i == 0) then\n            is_multiply = true\n        end\n   \
    \ end\n    return is_multiply\n    \nend", "\t-- Initialize variables\n\tlocal\
    \ i = 0\n\tlocal n = 0\n\tlocal m = 100\n\t-- Check input argument\n\tif a ~=\
    \ nil and a > 100 then\n\t\t-- Return result\n\t\treturn true\n\tend\n\t-- Check\
    \ condition\n\tif a == nil or a <= 0 then\n\t\t-- Return result\n\t\treturn false\n\
    \tend\n\t-- Set variables\n\tlocal b = 1\n\t-- Find all divisors\n\twhile i <=\
    \ m do\n\t\t-- Divide number\n\t\tb = b * i\n\t\t-- Increment counter\n\t\ti =\
    \ i + 1\n\tend\n\t-- Check condition\n\tif b < a then\n\t\t-- Return result\n\t\
    \treturn true\n\tend\n\t-- Set variables\n\tlocal c = 1\n\t-- Find all divisors\n\
    \twhile n <= m do\n\t\t-- Divide number\n\t\tc = c * i\n\t\t-- Increment counter\n\
    \t\tn = n + 1\n\tend\n\t-- Check condition\n\tif c < a then\n\t\t-- Return result\n\
    \t\treturn true\n\tend\n\t-- Return result\n\treturn false\nend", "  local m =\
    \ 3\n  local i = 1\n  \n  while m <= a do\n    if a % m == 0 then\n      return\
    \ false\n    end\n    i = i + 1\n    m = m + 1\n  end\n  return true\nend", "\t\
    -- Your code here\n\tlocal check = a\n\tlocal is_prime = true\n\t\n\tfor i = 2,\
    \ 100 do\n\t\tif check > i then\n\t\t\t-- Check if there are any factors higher\
    \ than i\n\t\t\tif check % i == 0 then\n\t\t\t\tis_prime = false\n\t\t\t\tbreak\n\
    \t\t\tend\n\t\tend\n\tend\n\t\n\tif is_prime == true then return true else return\
    \ false end\nend", "    local n = 1\n    local p = 2\n    while p <= a\n     \
    \   do\n            if a % p == 1 then\n                n = n * p\n          \
    \  end\n            p = p + 1\n        end\n    end\n    return n >= 3\nend",
  "  -- Your code here\n  return true\nend", "    local p = a\n    local n = 3\n \
    \   local d = 2\n    while n <= p do\n        if p == (n * n) then\n         \
    \   return true\n        elseif p == (n * n) + 1 then\n            return false\n\
    \        else\n            n = n + 1\n            d = d + 1\n        end\n   \
    \ end\nend", "\t-- Write your code here\n\tlocal count = 0\n\tlocal x = math.ceil(math.sqrt(a)\
    \ / 3)\n\tlocal y = a\n\tlocal z = 3\n\twhile z <= x do\n\t\tif a % z == 0 then\n\
    \t\t\tcount = count + 1\n\t\telse\n\t\t\ty = y - (a / z)\n\t\t\tcount = count\
    \ + 1\n\t\tend\n\t\tz = z + 3\n\tend\n\tif count == 3 then return true else return\
    \ false end\nend", "    if a % 3 == 0 or a == 1 then\n        return False\n \
    \   end", "  -- Your code here\nend", "\treturn a > 30 and a % 3 == 0 and a %\
    \ 5 == 0 and a % 7 == 0 and a % 9 == 0\nend", "\tlocal i = 1\n\tlocal p = a\n\t\
    while i <= 100 do\n\t\tif p*3 == a then\n\t\t\treturn true\n\t\telse\n\t\t\tp\
    \ = p + 2\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend", "    -- base case\n\
    \    if a <= 100 then\n        return a == 3 or is_multiply_prime(3*a)\n    end\n\
    \    -- recursive case\n    for i = 2, a do\n        if a % i == 0 then\n    \
    \        return false\n        end\n    end\n    return true\nend", "    local\
    \ count = 0\n    local prime_number = 2\n    local max_count = 100\n    while\
    \ count < max_count do\n        if a == prime_number then\n            count =\
    \ count + 1\n        else\n            if a % prime_number == 0 then\n       \
    \         count = count + 1\n            else\n                count = count +\
    \ 1\n            end\n        end\n        prime_number = prime_number + 1\n \
    \   end\n    return count == max_count and true\nend", "  if a <= 100 then\n \
    \   for i = 2, a do\n      if a % i == 0 then\n        return false\n      end\n\
    \    end\n    return true\n  else\n    return false\n  end\nend", "    local n\
    \ = a\n    local isMultiplyFalse = false\n    local isMultiplyTrue = true", " \
    \   local i = 1\n    for i = 2, a do\n        if ((a % i) == 0) then\n       \
    \     if a == i * i then\n                return true\n            end\n     \
    \   end\n    end\n    return false\nend", "    local i = 1\n    while i <= a do\n\
    \        if a % i == 0 then\n            return false\n        end\n        i\
    \ = i + 2\n    end\n    return true\nend\n</cell>\n<code language=julia-0.5>\n\
    is_multiply_prime(30)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the product of the given number and the number itself.", "\tif a == 0 then return\
    \ false end\n\tif a == 1 then return true end\n\tif a % 2 == 0 then return false\
    \ end\n\tlocal i = 2\n\tlocal is_multiply_prime = true\n\twhile i <= a do\n\t\t\
    if a % i == 0 then\n\t\t\tis_multiply_prime = false\n\t\tend\n\t\ti = i + 2\n\t\
    end\n\treturn is_multiply_prime\nend", "   -- TODO: Implement this function\n\
    \   -- To check whether a is the multiplication of 3 prime numbers, \n   --  and\
    \ false otherwise.\n   return false\nend", "    for i=1, 100 do\n        if a\
    \ % i == 0 then\n            return false\n        end\n    end\n    return true\n\
    end", "  if a <= 100 then\n    return false\n  end", "\t-- Write code here\n\t\
    local n\n\t\n\tif a < 100 then\n\t\treturn false\n\tend", "    local function\
    \ is_less_than_100(n)\n        return n <= 100\n    end\n    \n    local function\
    \ is_multiply_3_primes(a)\n        return a % 3 == 0 and a % 5 == 0 and a % 7\
    \ == 0 and a % 11 == 0\n    end\n    \n    if is_less_than_100(a) then\n     \
    \   return false\n    elseif is_multiply_3_primes(a) then\n        return true\n\
    \    else\n        return is_multiply_prime(math.ceil(a / 3))\n    end\nend",
  "    local p1 = a % 2\n    local p2 = a / 2\n    local p3 = p2 * p2\n    local p4\
    \ = p3 * p3\n    local p5 = p4 * p4\n    local p6 = p5 * p5\n    local p7 = p6\
    \ * p6\n    local p8 = p7 * p7\n    local p9 = p8 * p8\n    local p10 = p9 * p9\n\
    \    local p11 = p10 * p10\n    local p12 = p11 * p11\n    local p13 = p12 * p12\n\
    \    local p14 = p13 * p13\n    local p15 = p14 * p14\n    local p16 = p15 * p15\n\
    \    local p17 = p16 * p16\n    local p18 = p17 * p17\n    local p19 = p18 * p18\n\
    \    local p20 = p19 * p19\n    local p21 = p20 * p20\n    local p22 = p21 * p21\n\
    \    local p23 = p22 * p22\n    local p24 = p23 * p23\n    local p25 = p24 * p24\n\
    \    local p26 = p25 * p25\n    local p27 = p26 * p26\n    local p28 = p27 * p27\n\
    \    local p29 = p28 * p28\n    local p30 = p29 * p29\n    local p31 = p30 * p30\n\
    \    return p31\nend", "   -- Write code here\n   if is_prime(a) == false then\n\
    \     return false\n   end", "    local n = 3\n    for i = 2, 100 / n  do\n  \
    \      if a % n == 0 then\n            return false\n        end\n        \n \
    \       n = n + 2\n    end\n    \n    return true\nend", "  -- Write code here\n\
    \  local result = a % 3\n  if result ~= 0 then\n    return true\n  else\n    return\
    \ false\n  end\nend", "   -- Write your code here\n   local p = 1\n   while a\
    \ >= 100 and p <= 99 do\n      -- Write your code here\n      if a % 3 == 0 and\
    \ a % 5 == 0 then\n         return true\n      else\n         a = a/3\n      end\n\
    \      p = p+1\n   end\n   return false\nend", "  local n = #a\n  for i = 1, n\
    \ do\n    for j=1, n do\n      if ((j == 1) or (a[i] % a[j]) == 0) then\n    \
    \    -- break is used here, because we want to return True only if all conditions\
    \ are met\n        break\n      end\n    end\n    if j == n then return false\
    \ end\n  end\n  return true\nend", "    local b = 0\n    \n    for i = 1, 100\
    \ do\n        for j = 1, 100 do\n            if i == 2 or i == 3 or i == 5 then\n\
    \                b = b + 1\n            else\n                if a == i * j then\n\
    \                    b = b + 1\n                end\n            end\n       \
    \ end\n    end", "    -- Base case\n    if a == 1 then return true end", "  if\
    \ a < 100 then\n    return false\n  end\n  for i = 2, a do\n    if a % i == 0\
    \ then\n      return false\n    end\n  end\n  return true\nend", "\tlocal b =\
    \ 3\n\tlocal i = 1\n\twhile b <= a do\n\t\tif (a % b) == 0 then\n\t\t\ti = i +\
    \ 1\n\t\tend\n\t\tb = b * 3\n\tend\n\treturn (i == 3)\nend", "  local p = a /\
    \ 3 \n  local p1 = a / 5\n  local p2 = a / 7", "  if a <= 100 then\n    -- write\
    \ your code\n    \n    -- return the result\n    return true\n  else\n    -- return\
    \ false\n    return false\n  end\nend", "  for i=3,100,2 do\n    if a%i == 0 then\n\
    \      return false\n    end\n  end\n  return true\nend", "    assert(a > 100,\
    \ \"a\uB294 3\uC758 \uBC94\uC704\uB97C \uCD08\uACFC\uD558\uBA70 \uC785\uB825\uB418\
    \uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.\")\n    for n = 2, a do\n        local\
    \ is_prime = true\n        for k = 2, n do\n            if n % k == 0 then\n \
    \               is_prime = false\n                break\n            end\n   \
    \     end\n        if is_prime then\n            return true\n        end\n  \
    \  end\n    return false\nend", "   for i = 2, 100 do\n      local mult = 3 *\
    \ a\n      if mult > 100 or mult % a == 0 then\n         return false\n      else\n\
    \         return true\n      end\n   end\nend", "  -- Write your code here\n \
    \ local function is_multiply(a)\n    local i = 2\n    \n    while i <= a\n   \
    \   do\n        if a % i == 0 then\n          return false\n        end\n    \
    \    i = i + 1\n      end\n    end\n    return true\n  end\n  \n  if is_multiply(a)\
    \ then\n    return true\n  else\n    return false\n  end\nend", "    local n =\
    \ 3\n    local prime_list = {}\n    while a * n <= 100 do\n        if (a * n)\
    \ ~= a then\n            prime_list[n] = false\n        end\n        -- If n is\
    \ divided by any number, then it is a prime number\n        if all(prime_list)\
    \ then\n            return true\n        end\n        n = n + 1\n    end\n   \
    \ return false\nend", "   if a <= 100 then\n      if ((a % 2) == 0) then\n   \
    \      return false\n      else\n         for i = 7, 11, 13 do\n            if\
    \ ((a % i) == 0) then\n               return false\n            end\n        \
    \ end\n         return true\n      end\n   else\n      return false\n   end\n\
    end", "\tlocal n = 2\n\twhile true do\n\t\tif is_prime(a) then\n\t\t\tlocal m\
    \ = n + 1\n\t\t\twhile m <= a do\n\t\t\t\tif is_prime(m) then\n\t\t\t\t\tn = m\n\
    \t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tm = m + 1\n\t\t\tend\n\t\t\
    else\n\t\t\tbreak\n\t\tend\n\tend\n\treturn a % n == 0 and n % a != 0\nend", " \
    \   for i=1, 100 do\n        if ( a == i * i * i ) or ( a == i * i - 1) then\n\
    \            return true\n        end\n    end\n    return false\nend", "    assert(a\
    \ >= 1)\n    for i=1,a do\n        if a%i == 0 then\n            return false\n\
    \        end\n    end\n    return true\nend", "   if a <= 100 then\n      -- If\
    \ a>100 then we dont need to worry about checking for a multiplication of prime\
    \ numbers\n      return true\n   end\n   local i = 1\n   while i <= a do\n   \
    \   if a % i == 0 and a % 2 == 0 then\n         return false\n      end\n    \
    \  i = i + 1\n   end\n   return true\nend", "  -- base case\n  if (a == 1) then\n\
    \    return true\n  end\n  \n  -- if 30 or above is divisible by any number, return\
    \ false\n  if (a%3 == 0 or a%5 == 0) then\n    return false\n  end\n  \n  -- check\
    \ to see if 30 or above is divisible by any prime number other than 2 and 3\n\
    \  for i = 4, a do\n    if (a%i == 0 and i ~= 2 and i ~= 3) then\n      return\
    \ false\n    end\n  end\n  \n  -- check to see if 30 or above is divisible by\
    \ any prime number between 2 and 6\n  for i = 2, 6 do\n    if (a%i == 0 and i\
    \ ~= 3 and i ~= 5 and i ~= 7) then\n      return false\n    end\n  end\n  \n \
    \ -- check to see if 30 or above is divisible by any prime number between 5 and\
    \ 11\n  for i = 5, 11 do\n    if (a%i == 0 and i ~= 5 and i ~= 7 and i ~= 9 and\
    \ i ~= 11) then\n      return false\n    end\n  end\n  \n  -- check to see if\
    \ 30 or above is divisible by any prime number between 7 and 19\n  for i = 7,\
    \ 19 do\n    if (a%i == 0 and i ~= 7 and i ~= 9 and i ~= 11 and i ~= 13 and i\
    \ ~= 17) then\n      return false\n    end\n  end\n  \n  -- check to see if 30\
    \ or above is divisible by any prime number between 9 and 23\n  for i = 9, 23\
    \ do\n    if (a%i == 0 and i ~= 9 and i ~= 11 and i ~= 13 and i ~= 17 and i ~=\
    \ 19 and i ~= 23) then\n      return false\n    end\n  end\n  \n  -- check to\
    \ see if 30 or above is divisible by any prime number between 11 and 29\n  for\
    \ i = 11, 29 do\n    if (a%i == 0 and i ~= 11 and i ~= 13 and i ~= 17 and i ~=\
    \ 19 and i ~= 23 and i ~= 29) then\n      return false\n    end\n  end\n  \n \
    \ -- check to see if 30 or above is divisible by any prime number between 13 and\
    \ 33\n  for i = 13, 33 do\n    if (a%i == 0 and i ~= 13 and i ~= 17 and i ~= 19\
    \ and i ~= 23 and i ~= 29 and i ~= 33) then\n      return false\n    end\n  end\n\
    \  \n  -- check to see if 30 or above is divisible by any prime number between\
    \ 17 and 37\n", "\t-- Check if number is a multiple of 3\n\tif a % 3 == 0 then\n\
    \t\t-- Check if number is a multiple of 5\n\t\tif a % 5 == 0 then\n\t\t\t-- Check\
    \ if number is multiple of 7\n\t\t\tif a % 7 == 0 then\n\t\t\t\t-- Check if number\
    \ is multiple of 11\n\t\t\t\tif a % 11 == 0 then\n\t\t\t\t\treturn true\n\t\t\t\
    \telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn false\n\
    \t\t\tend\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\t\treturn false\n\t\
    end\nend", "    local function is_factor(a, b)\n        local l\n        if b\
    \ == 1 then return true end\n        if b == 2 then return false end\n       \
    \ for l=a+1, b do\n            if b%l == 0 then return false end\n        end\n\
    \        return true\n    end\n    local function is_mult(m)\n        local primes\
    \ = {}\n        for i=2,m do\n            if m % i == 0 then\n               \
    \ table.insert(primes, i)\n            end\n        end\n        for i=2,math.floor(m/2)\
    \ do\n            local a = primes[i]\n            if is_factor(a, m) then\n \
    \               table.insert(primes, a)\n            end\n        end\n      \
    \  -- find biggest factor\n        local max = 0\n        local maxn = 1\n   \
    \     for i=#primes, 1, -1 do\n            local p = primes[i]\n            if\
    \ p > max then\n                max = p\n                maxn = i\n          \
    \  end\n        end\n        if maxn == 1 then return false end\n        -- find\
    \ smaller factor\n        local minn = #primes\n        while minn > 1 do\n  \
    \          local p = primes[maxn]\n            if p < min then\n             \
    \   min = p\n                minn = maxn\n            else\n                minn\
    \ = minn - 1\n            end\n        end\n        local mul = primes[minn]\n\
    \        return mul == m\n    end\n    local function is_mult_primes(n)\n    \
    \    -- we know that n is a multiple of 3\n        if n % 3 == 0 then return n\
    \ end\n        -- find biggest factor\n        local max = 0\n        local maxn\
    \ = 1\n        for i=1,#primes do\n            local p = primes[i]\n         \
    \   if p > max then\n                max = p\n                maxn = i\n     \
    \       end\n        end\n        if maxn == 1 then return false end\n       \
    \ -- find smaller factor\n        local minn = #primes\n        while minn > 1\
    \ do\n            local p = primes[maxn]\n            if p < min then\n      \
    \          min = p\n                minn = maxn\n            else\n          \
    \      minn = minn - 1\n            end\n        end\n        local mul = primes[minn]\n\
    \        return mul == n\n    end\n    local function is_mult2(n)\n        local\
    \ primes = {}\n        for i=1,n do\n            if n % i == 0 then\n        \
    \        table.insert(primes, i)\n            end\n        end\n        local\
    \ p = 1\n        for i=1,#primes do\n            p = p * primes[i]\n        end\n\
    \        return p == n\n    end\n    local function is_mult3(n)\n        local\
    \ primes = {}\n        for i=1,n do\n", "    -- Write your code here\nend", " \
    \ local b = 100\n  local counter = 0\n  local i = 2\n  while i <= a do\n    if\
    \ i % b == 0 then\n      counter = counter + 1\n    end\n    b = b * 2\n    i\
    \ = i + 1\n  end\n  if counter == 0 then\n    return false\n  else\n    return\
    \ true\n  end\nend", "  if a <= 100 then\n    local s = math.mod(a, 100)\n   \
    \ if s == 0 then\n      return true\n    else\n      if a % s == 0 then\n    \
    \    return false\n      end\n    end\n  end\n  return true\nend", "  if a > 100\
    \ then return false end\n  local n = tonumber(a)\n  if n==0 then return false\
    \ end\n  for i = 1,3 do\n    if n % i == 0 then return false end\n  end\n  return\
    \ true\nend", "    local p = a % 2\n    local multiple = 2", "\tif a < 100 then\n\
    \t\treturn false\n\tend\n\tlocal b = 1\n\tlocal c = 2\n\twhile b < a do\n\t\t\
    if c % a == 0 then\n\t\t\treturn false\n\t\tend\n\t\tc = c + b\n\t\tb = b + 1\n\
    \tend\n\treturn true\nend", "  for _, _ in pairs(primes) do\n    if a^2 <= 100\
    \ then\n      return true\n    end\n  end\n  return false\nend", "   -- Your code\
    \ goes here\nend", "\tif a < 100 then\n\t\treturn false\n\tend", "    -- a = 30\
    \ -- 30 = 2 * 3 * 5\n    -- if (a == 30)\n    -- return a == 30 and a % 30 ==\
    \ 0\n    -- end\n    -- return true\n    if (a == 30)\n    return a == 30 and\
    \ a % 30 == 0\n    end\n    return true\nend", "\t-- Base case\n\t-- If a = 1,\
    \ a > 3, a is not a multiplication of 3 prime numbers\n\tif a == 1 then\n\t\t\
    return false\n\tend", "   -- base case\n   if a<100 or a % 3 ~= 0 then\n     \
    \ return false\n   end\n   -- base case 2\n   if a<3 then\n      return true\n\
    \   end\n   -- base case 3\n   local m = 1\n   while m<=a do\n      if ((a % m)==0)\
    \ then\n         return false\n      end\n      m = m+1\n   end\n   -- base case\
    \ 4\n   local m = 2\n   while m*m<=a do\n      if ((a % m)==0) then\n        \
    \ return false\n      end\n      m = m+1\n   end\n   -- base case 5\n   local\
    \ m = 4\n   while m*m*m<=a do\n      if ((a % m)==0) then\n         return false\n\
    \      end\n      m = m+1\n   end\n   -- base case 6\n   local m = 8\n   while\
    \ m*m*m*m<=a do\n      if ((a % m)==0) then\n         return false\n      end\n\
    \      m = m+1\n   end\n   -- base case 7\n   local m = 16\n   while m*m*m*m*m<=a\
    \ do\n      if ((a % m)==0) then\n         return false\n      end\n      m =\
    \ m+1\n   end\n   -- base case 8\n   local m = 64\n   while m*m*m*m*m*m<=a do\n\
    \      if ((a % m)==0) then\n         return false\n      end\n      m = m+1\n\
    \   end\n   -- base case 9\n   local m = 128\n   while m*m*m*m*m*m*m<=a do\n \
    \     if ((a % m)==0) then\n         return false\n      end\n      m = m+1\n\
    \   end\n   -- base case 10\n   local m = 256\n   while m*m*m*m*m*m*m*m<=a do\n\
    \      if ((a % m)==0) then\n         return false\n      end\n      m = m+1\n\
    \   end\n   -- base case 11\n   local m = 512\n   while m*m*m*m*m*m*m*m*m<=a do\n\
    \      if ((a % m)==0) then\n         return false\n      end\n      m = m+1\n\
    \   end\n   -- base case 12\n   local m = 1024\n   while m*m*m", "\treturn a >\
    \ 1 and\n\t\ta%3 == 1 and\n\t\t(a/3 mod 2 == 0 or\n\t\t\ta/3 mod 3 == 0)\nend",
  "   \n   -- Base case\n   if a <= 100 then\n      \n      -- First check that the\
    \ number is odd\n      if a % 2 == 1 then\n         return false\n      end\n\
    \      \n      -- Now go through the first three primes\n      for i = 1, 3 do\n\
    \         \n         -- Calculate the numbers of the first three primes\n    \
    \     local num = math.floor((a / i) + 1)\n         \n         -- Check to see\
    \ if the number is a multiple of any of them\n         if num % i == 0 then\n\
    \            return false\n         end\n      end\n      return true\n   end\n\
    \   return false\nend", "    -- base case\n    if a == 1 then\n        return\
    \ true\n    end\n    -- find if any of a's prime factors is less than 3\n    for\
    \ p = 3 to a do\n        if is_prime(p) then\n            if a % p == 0 then\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ true\nend", "    if a < 100 then\n        return false\n    end\n    -- 3 is\
    \ the multiplication of primes 2,3,5,7,11,13...\n    for i = 2, 100 - a do\n \
    \       if a == i * 3 then\n            return true\n        end\n    end\n  \
    \  return false\nend", "  local b = 1\n  local mult = 1\n  local m = 1\n  while\
    \ b < a do\n    local c = a / b\n    -- if c is divisible by one or two \n   \
    \ -- it is not a multiplication\n    if c == 1 or c == 2 then\n      return false\n\
    \    end\n    -- if c is divisible by three\n    -- it is not a multiplication\n\
    \    if c == 3 then\n      return false\n    end\n    -- if c is divisible by\
    \ five\n    -- it is not a multiplication\n    if c == 5 then\n      return false\n\
    \    end\n    -- if c is not divisible by \n    -- its divisors up to 100\n  \
    \  -- it is a multiplication\n    for i = 2, c do\n      if c % i == 0 then\n\
    \        return false\n      end\n    end\n    -- if c is divisible by one\n \
    \   -- it is multiplication\n    if a == c then\n      mult = m\n      m = m +\
    \ 1\n      b = b + 1\n    end\n    b = b + 1\n  end\n  return true\nend", "\t\
    -- Base case\n\tif a == 1 then\n\t\treturn false\n\tend\n\t-- If it's divisible\
    \ by 3 then it is not multiplication of 3 prime numbers\n\tif a % 3 == 0 then\n\
    \t\treturn false\n\tend\n\t-- Iterate to find and return the remainder\n\tfor\
    \ i = 2, a do\n\t\t-- If remainder is 0 then it is multiplication of 3 prime number\n\
    \t\tif a % i == 0 then\n\t\t\treturn false\n\t\tend\n\tend\n\t-- If it's divisible\
    \ by 3 then it is multiplication of 3 prime numbers\n\treturn true\nend", "  local\
    \ is_multiple = true\n  local n = #a\n  for _, val in ipairs(a) do\n    if is_prime\
    \ == nil then\n      is_prime = is_prime_function(val)\n    end\n    if is_prime\
    \ == false then\n      break\n    end\n    if is_multiple == false then\n    \
    \  is_multiple = val\n    end\n  end\n  return is_multiple\nend", "    local result\n\
    \    if a % 2 == 0 then\n        return false\n    end\n    local i = 3\n    local\
    \ k = 0\n    repeat\n        result = a^(1/i)\n        if result > 1 then\n  \
    \          k = k + 1\n        end\n        i = i + 2\n    until result > 1\n \
    \   return k == 3\nend", "  local b = 0\n  while a ~= 2 do\n    while a > 0 do\n\
    \      b = b + 1\n      a = a - 1\n    end\n    if b == 3 then return true end\n\
    \  end\n  return false\nend", "  -- Your code here\n  for i = 2, a do\n    if\
    \ a % i == 0 then\n      return false\n    end\n  end\n  return true\nend", " \
    \ for i = 2, a do\n    if a % i == 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "\treturn #prime_array == 0 or ((a % prime_array[1]) ==\
    \ 0 and\n\t\t((a % prime_array[2]) == 0 or\n\t\t(a % prime_array[3]) == 0))\n\
    end", "\tlocal p = 0\n\tfor i=1, a do\n\t\t-- check if a is a prime number\n\t\
    \tif prime_table[a] == 1 then\n\t\t\tp = p + 1\n\t\tend\n\tend\n\tif p > 1 then\n\
    \t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "    if a <= 100 then\n\
    \        -- We only check up to the first hundred\n        return a % 2 == 0 and\
    \ a % 3 == 0 and a % 5 == 0\n    else\n        -- We check up to the first one\
    \ hundred\n        return a % 3 == 0 and a % 5 == 0\n    end\nend", "\t-- base\
    \ case\n\tif a == 0 then return false end\n\t\n\t-- check multiplication table\
    \ for a\n\tlocal mult_table = {}\n\tfor i = 1, (100 / a) do\n\t\tmult_table[i]\
    \ = true\n\tend\n\t\n\t-- check if a is prime \n\tlocal i = 2\n\twhile not mult_table[i]\
    \ do\n\t\tif a % i == 0 then\n\t\t\tmult_table[i] = false\n\t\tend\n\t\ti = i\
    \ + 1\n\tend\n\t\n\t-- return result of function\n\treturn mult_table[a]\nend",
  "\t-- (1) The product should be less than 100\n\tif (a <= 100) then\n\t\t-- (2)\
    \ a should be divisible by 3\n\t\tif ((a%3 == 0) and (a%5 == 0)) then\n\t\t\t\
    -- (3) a should be divisible by 5\n\t\t\tif (a%15 == 0) then\n\t\t\t\t-- (4) a\
    \ should be divisible by 7\n\t\t\t\tif (a%35 == 0) then\n\t\t\t\t\t-- (5) a should\
    \ be divisible by 11\n\t\t\t\t\tif (a%73 == 0) then\n\t\t\t\t\t\t-- (6) a should\
    \ be divisible by 13\n\t\t\t\t\t\tif (a%111 == 0) then\n\t\t\t\t\t\t\t-- (7) a\
    \ should be divisible by 17\n\t\t\t\t\t\t\tif (a%1375 == 0) then\n\t\t\t\t\t\t\
    \t\t-- (8) a should be divisible by 19\n\t\t\t\t\t\t\t\tif (a%1737 == 0) then\n\
    \t\t\t\t\t\t\t\t\t-- (9) a should be divisible by 23\n\t\t\t\t\t\t\t\t\tif (a%2317\
    \ == 0) then\n\t\t\t\t\t\t\t\t\t\t-- (10) a should be divisible by 29\n\t\t\t\t\
    \t\t\t\t\t\tif (a%2931 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t-- (11) a should be divisible\
    \ by 41\n\t\t\t\t\t\t\t\t\t\t\tif (a%4097 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\t\
    -- (12) a should be divisible by 43\n\t\t\t\t\t\t\t\t\t\t\t\tif (a%4357 == 0)\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t-- (13) a should be divisible by 47\n\t\t\t\t\
    \t\t\t\t\t\t\t\t\tif (a%4711 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- (14) a\
    \ should be divisible by 53\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (a%5359 == 0) then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- (15) a should be divisible by 59\n\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\tif (a%5969 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- (16)\
    \ a should be divisible by 61\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (a%6131 == 0)\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- (17) a should be divisible by 67\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (a%6733 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t-- (18) a should be divisible by 71\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\tif (a%7191 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- (19) a\
    \ should be divisible by 73\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (a%7397\
    \ == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- (20) a should be divisible\
    \ by 79\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (a%7959 == 0) then\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- (21) a should be divisible by 83\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (a%8397 == 0) then\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t-- (22) a should be divisible by 89\n\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\tif (a%8927 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t-- (23) a should be divisible by 97\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\tif (a%9767 == 0) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t--", "  return a <= 100 and\n    (is_prime(a) and is_prime(a+100)\
    \ and is_prime(a+200))\nend", "    if a > 100 then\n        return false\n   \
    \ end\n    local x = 2\n    while x <= a do\n        if a % x == 0 then\n    \
    \        return false\n        end\n        x = x + 1\n    end\n    return true\n\
    end", "  -- base case\n  if a <= 100 then\n    return false\n  else\n    local\
    \ is_multiplied_prime = true\n    -- remembering that all prime numbers are of\
    \ the form 6 * n + 11\n    -- we start from 6\n    for i = 6, a do\n      if i^2\
    \ > a then\n        return false\n      elseif i^2 == a then\n        is_multiplied_prime\
    \ = false\n        break\n      end\n    end\n    -- if we've got the number,\
    \ it's true\n    return is_multiplied_prime\n  end\nend", "   for i = 2, 100 \
    \ do -- go from 2-100\n      if (math.modf(a * i)[1]) ~= 0 then return false end\n\
    \   end\n   return true\nend\n</cell>\n<code language=julia-1.6>\nis_multiply_prime(30)\n\
    </cell>\n<text>\nExercise: Find the Fibonacci number", "    local p = 3\n    local\
    \ i = 2\n    while i <= a do\n        if (a%i == 0) and (a % p == 0)then\n   \
    \         return false\n        end\n        i=i+2\n        p=p+2\n    end\n \
    \   return true\nend", "  for i = 2, a do\n    if a % i == 0 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  local d = math.sqrt(a)\n  return\
    \ d ~= a and\n         is_multiply_prime(d) or \n         a == 2 and \n      \
    \   is_multiply_prime(a * 2) or \n         (a % 2 == 0 and a > 0 and \n      \
    \   a < 4 and \n         is_multiply_prime(a * 3) and \n         not is_multiply_prime(a\
    \ * 5))\nend", "    -- Write your code here\n    if (a < 100) then\n        for\
    \ i = 2 to sqrt(a) do\n            if a%i==0 then\n                return false\n\
    \            end\n        end\n        return true\n    else\n        return false\n\
    \    end\nend", "  -- base case\n  if a == 0 then return false end\n  \n  -- base\
    \ case\n  if a > 100 then return false end\n  \n  -- the function will return\
    \ false if a and b are the same number\n  if a == b then return false end\n  \n\
    \  -- the function will return true if a is larger than a prime number\n  -- and\
    \ b is greater than a prime number\n  if a > b then return false end\n  \n  --\
    \ the function will return true if a is less than a prime number\n  -- and b is\
    \ less than a prime number\n  if a < b then return false end\n  \n  -- the function\
    \ will return true if a is more than a prime number\n  -- and b is more than a\
    \ prime number\n  if a < b then return false end\n  \n  -- the function will return\
    \ true if a is less than a prime number\n  -- and b is less than a prime number\n\
    \  if a > b then return false end\n  \n  -- the function will return true if a\
    \ is more than a prime number\n  -- and b is less than a prime number\n  if a\
    \ > b then return false end\n  \n  -- the function will return true if a is less\
    \ than a prime number\n  -- and b is more than a prime number\n  if a < b then\
    \ return false end\n  \n  -- the function will return true if a is more than a\
    \ prime number\n  -- and b is more than a prime number\n  if a > b then return\
    \ false end\n  \n  -- the function will return true if a is less than a prime\
    \ number\n  -- and b is more than a prime number\n  if a < b then return false\
    \ end\n  \n  -- the function will return true if a is less than a prime number\n\
    \  -- and b is more than a prime number\n  if a > b then return false end\n  \n\
    \  return true\nend", '    assert(a > 100)', "  return prime_numbers[a]\n  and\
    \ prime_numbers[a]\n  and prime_numbers[a]\n  and prime_numbers[a] >= 3\nend",
  "  if a < 100 then\n    return false\n  end\n  local is_multiply_prime = false\n\
    \  for i = 2, 100 do\n    if a % i == 0 then\n      return false\n    end\n  end\n\
    \  return is_multiply_prime\nend", "   if a < 100 then\n      local isMultiplyPrime\
    \ = true\n      for i = 2, a do\n         if not (a % i) then\n            isMultiplyPrime\
    \ = false\n         end\n      end\n      return isMultiplyPrime\n   else\n  \
    \    return false\n   end\nend", "\tlocal function check(n) -- Check n\n\t\tif\
    \ math.mod(n, 3) == 0 then return false end\n\t\tif math.mod(n, 5) == 0 then return\
    \ false end\n\t\tlocal i = 2\n\t\twhile i <= a do\n\t\t\tif math.mod(n, i) ==\
    \ 0 then return false end\n\t\t\ti = i + 1\n\t\tend\n\t\treturn true\n\tend",
  "\tlocal m = 100\n\tlocal n = 3\n\tlocal i = 0\n\tlocal mul = 3\n\twhile m <= a\
    \ do\n\t\tif a == 1 then return True end\n\t\tif i == n and mul == 3 then\n\t\t\
    \treturn False\n\t\telseif mul == 3 then\n\t\t\tm = (m * m) - m\n\t\t\tn = 3\n\
    \t\telse\n\t\t\tm = m + (2 * m)\n\t\t\tn = n + (2 * n)\n\t\tend\n\t\ti = i + 1\n\
    \t\tmul = mul + 2\n\tend\n\tif mul == n then return True end\n\treturn False\n\
    end", "    local i = 1\n    while i <= a do\n        -- if i divides 3, it can't\
    \ be multiplied\n        if ((a%i)==0) then\n            -- if i divides any number\
    \ other than 3, then it can't be multiplied\n            -- if i divides 2 or\
    \ 3, then it can be multiplied\n            -- if i divides 1 and 3, then it can\
    \ be multiplied\n            -- so i can't be multiplied\n            if ((i%2)\
    \ ~= 0 or (i%3) == 0) then\n                return false\n            end\n  \
    \      else\n            -- if i divides any number other than 2, then i can still\
    \ be multiplied\n            -- so i can be multiplied\n            if ((i%2)\
    \ == 0) then\n                return true\n            end\n        end\n    \
    \    i = i+1\n    end\n    return false\nend", "  local m = 3\n  while m <= a\
    \ / 2 do\n    if a % m == 0 then\n      return false\n    end\n    local n = 1\n\
    \    while a % m == 0 and n <= m do\n      a = a / m\n      n = n + 1\n    end\n\
    \    m = m + 1\n  end\n  return true\nend", "   -- Write your code here\n   if\
    \ a % 3 == 0 then\n      if a % 5 == 0 then\n         if a % 7 == 0 then\n   \
    \         return true\n         else\n            return false\n         end\n\
    \      else\n         return false\n      end\n   else\n      return false\n \
    \  end\nend", "    -- base case\n    if a < 3 then\n        return False\n   \
    \ end\n    \n    -- base case\n    if a % 2 == 0 then\n        return False\n\
    \    end\n    \n    -- base case\n    if a % 3 == 0 then\n        return False\n\
    \    end\n    \n    -- base case\n    if a % 5 == 0 then\n        return False\n\
    \    end", "    local b = 3\n    while b ~= a do\n        if a % b == 0 then\n\
    \            return false\n        else\n            if b ~= a * b then\n    \
    \            return false\n            end\n        end\n        b = b + 2\n \
    \   end\n    return true\nend", "   -- write your code here\nend", "    -- base\
    \ case\n    if a <= 100 then\n        -- loop through all potential divisors\n\
    \        for i = 2, a do\n            -- check if they are prime numbers\n   \
    \         local is_prime = true\n            -- check and see if the number can\
    \ be divided by any number between 2 and i\n            for j = 3, i do\n    \
    \            if i % j == 0 then\n                    -- number is divisible by\
    \ j\n                    -- set is_prime to false if they cannot be divided\n\
    \                    is_prime = false\n                    break\n           \
    \     end\n            end\n            if is_prime then\n                -- if\
    \ number is a prime number, return true and break out of the loop\n          \
    \      return true\n            end\n        end\n    end\n    return false\n\
    end", "  -- We check if the number is less then 100 since is prime\n  if a < 100\
    \ then\n    -- We create a variable to check if we find a factor\n    local b\
    \ = 1\n    while b <= a do\n      -- If b divides a, then a is divisible by b\n\
    \      if a % b == 0 then\n        return false\n      end\n      -- We increment\
    \ the variable\n      b = b + 1\n    end\n    return true\n  end\nend", "\t--\
    \ write your function here\n\tif a < 100 then\n\t\treturn true\n\telse\n\t\treturn\
    \ false\n\tend\nend", "  local mult = 1\n  local i = 1\n  for i=1, a do\n    if\
    \ a == i*i then\n      mult = mult * i\n      i = 2\n    elseif i == a then\n\
    \      return false\n    end\n  end\n  return mult == a\nend", "    for i = 2,\
    \ a do\n        if a % i == 0 then\n            return false\n        end\n  \
    \  end\n    return true\nend", "    for i = 2, a do\n        if a%i == 0 then\
    \ return false\n    end\n    return true\nend", "    local n = 3\n    local flag\
    \ = false\n    local mult = 2\n    \n    while mult*mult <= a do\n        if a\
    \ % mult == 0 then\n            flag = true\n            break\n        end\n\
    \        n = n + 1\n        mult = mult*mult\n    end", "    -- TODO: Use a less\
    \ then 100 test instead\n    if a == 0 then\n        return false\n    end\n \
    \   \n    -- TODO: Write your code here\n    return true\nend", "  local n = math.ceil(a)\n\
    \  local primes = {}\n  -- Check for divisibility by 2 and 3.\n  for i = 2, n\
    \ do\n    if n % i == 0 and i ~= n then\n      return false\n    end\n  end\n\
    \  -- Divisibility by 3 and 5\n  -- Check for divisibility by 3\n  for i = 3,\
    \ n-1 do\n    if n % i == 0 and i ~= n then\n      return false\n    end\n  end\n\
    \  -- Divisibility by 5\n  for i = 5, n do\n    if n % i == 0 and i ~= n then\n\
    \      return false\n    end\n  end\n  -- Divisibility by both 3 and 5\n  for\
    \ i = 3, n-1 do\n    for j = 5, n do\n      if i % j == 0 and i ~= n then\n  \
    \      return false\n      end\n    end\n  end\n  -- Divisibility by both 5 and\
    \ 7\n  for i = 5, n do\n    for j = 7, n do\n      if i % j == 0 and i ~= n then\n\
    \        return false\n      end\n    end\n  end\n  -- Divisibility by 3 and 5\n\
    \  for i = 3, n-1 do\n    for j = 5, n do\n      if i % j == 0 and i ~= n then\n\
    \        return false\n      end\n    end\n  end\n  -- Divisibility by 5 and 7\n\
    \  for i = 5, n do\n    for j = 7, n do\n      if i % j == 0 and i ~= n then\n\
    \        return false\n      end\n    end\n  end\n  -- Divisibility by 3 and 7\n\
    \  for i = 3, n-1 do\n    for j = 7, n do\n      if i % j == 0 and i ~= n then\n\
    \        return false\n      end\n    end\n  end\n  -- Divisibility by 7\n  for\
    \ i = 7, n do\n    if n % i == 0 and i ~= n then\n      return false\n    end\n\
    \  end\n  return true\nend", "   for i = 2,a do\n      if a % i == 0 then\n  \
    \       return false\n      end\n   end\n   return true\nend", "\t-- If the number\
    \ is 0, then the number is indeed a multiple of 3 prime numbers. \n\tif a == 0\
    \ then return true end", "  local b = 0\n  for i = 0, a - 1 do\n    local x =\
    \ math.floor((3 * a) / i)\n    if x < i then\n      b = b + 1\n    end\n  end\n\
    \  if a == b then\n    return false\n  else\n    return true\n  end\nend", " \
    \   if a == 1 then return false end\n    for i = 2, a do\n        if a%i == 0\
    \ then return false end\n    end\n    return true\nend", "  if a < 100 then\n\
    \    return false\n  else\n    local flag = false\n    for i = 2, a do\n     \
    \ if a % i == 0 then\n        return false\n      else\n        flag = true\n\
    \      end\n    end\n    return flag\n  end\nend", "  -- Write code here.\n  a\
    \ = a / 100\n  local b = 3\n  while b < a do\n    b = b * 3\n  end\n  b = b +\
    \ 1\n  while a >= b do\n    if a % b == 0 then\n      return false\n    end\n\
    \    b = b + 1\n  end\n  return true\nend", "   for i = 2, a do\n      if a %\
    \ i == 0 then\n         return false\n      end\n   end\n   return true\nend",
  "   -- Write your code here\nend", "\tlocal s = math.floor(math.sqrt(a))\n\tif s\
    \ == 0 then\n\t\treturn false\n\tend\n\tfor i = 1, s do\n\t\tlocal j = (s + i)\
    \ / 2\n\t\tif a % i == 0 then\n\t\t\treturn false\n\t\tend\n\t\tif i == s then\n\
    \t\t\tbreak\n\t\tend\n\t\tif a % j == 0 then\n\t\t\treturn false\n\t\tend\n\t\
    end\n\treturn true\nend", "  return is_less_than(a, 100) and 3 <= math.sqrt(a)\
    \ and math.sqrt(a) <= 5\nend", "\t-- TODO: Complete this function\nend", "   \
    \ local flag = false\n    for i = 1, 100 do\n        if a == i*i*i then \n   \
    \         flag = true\n            break\n        end\n    end\n    return flag\n\
    end", "\tif a == 0 then return false end\n\tif a < 100 then\n\t\tlocal b = 3\n\
    \t\twhile a >= b do\n\t\t\tif a % b == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\
    \t\t\tb = b + 1\n\t\tend\n\t\treturn true\n\tend\n\tlocal i = 0\n\tlocal b = 2\n\
    \twhile a >= b do\n\t\tif a % b == 0 then\n\t\t\treturn false\n\t\tend\n\t\ti\
    \ = i + 1\n\t\tb = b + 2\n\t\tif i == 3 then\n\t\t\treturn true\n\t\tend\n\tend\n\
    \treturn false\nend", "  local count = 0\n  for i = 1, a do\n    if a == i*i*i\
    \ then\n      count = count + 1\n    end\n  end\n  return count == 3\nend", " \
    \ -- Base Case\n  if a == 1 then\n    return true\n  elseif a == 2 then\n    return\
    \ false\n  elseif a%3 == 0 then\n    return false\n  else\n    -- Test if number\
    \ is prime with Sieve of Eratosthenes\n    local prime, i = 2, 3\n    while i\
    \ <= a/3 do\n      if ((a % prime) == 0) then\n        prime = prime + 1\n   \
    \   else\n        if prime > a/3 then\n          return false\n        end\n \
    \       prime = 2\n        i = i + 2\n      end\n    end\n    return true\n  end\n\
    end", "   if a == 1 then return false end\n   for i = 1, a do\n      if ((i-1)%3\
    \ ~= 0 ) then return false end\n   end\n   return true\nend", "\tlocal b = a\n\
    \tlocal is_multiply_prime = true\n\t\n\twhile b > 1 do\n\t\tb = b/2\n\t\tif b%3\
    \ ~= 0 then\n\t\t\tis_multiply_prime = false\n\t\tend\n\tend\n\treturn is_multiply_prime\n\
    end", "    local is_multiply_prime = false\n    if a <= 100 then\n        for\
    \ b = a+1 , 100 do\n            if b % a == 0 then\n                is_multiply_prime\
    \ = true\n            end\n        end\n    end\n    return is_multiply_prime\n\
    end", "    local is_multiple_of_three  = false\n    local is_multiple_of_five\
    \  = false\n    local is_multiple_of_twenty = false\n    local is_multiple_of_sixty\
    \ = false\n    local is_multiple_of_twenty_five = false \n    if a % 3 == 0 then\n\
    \        if a % 5 == 0 then\n            if a % 15 == 0 then\n               \
    \ if a % 21 == 0 then\n                    if a % 26 == 0 then\n             \
    \           is_multiple_of_three = true\n                    else\n          \
    \              if a % 32 == 0 then\n                            if a % 40 == 0\
    \ then\n                                if a % 48 == 0 then\n                \
    \                    is_multiple_of_five = true\n                            \
    \    else\n                                    if a % 56 == 0 then\n         \
    \                               if a % 64 == 0 then\n                        \
    \                    is_multiple_of_twenty = true\n                          \
    \              else\n                                            if a % 72 ==\
    \ 0 then\n                                                if a % 80 == 0 then\n\
    \                                                    is_multiple_of_sixty = true\n\
    \                                                else\n                      \
    \                              if a % 88 == 0 then\n                         \
    \                               if a % 96 == 0 then\n                        \
    \                                    is_multiple_of_twenty_five = true\n     \
    \                                                   else\n                   \
    \                                         is_multiple_of_three = true\n      \
    \                                                  end\n                     \
    \                               else\n                                       \
    \                 is_multiple_of_three = true\n                              \
    \                      end\n                                                end\n\
    \                                            else\n                          \
    \                      is_multiple_of_three = true\n                         \
    \                   end\n                                        end\n       \
    \                             else\n                                        is_multiple_of_three\
    \ = true\n                                    end\n                          \
    \      end\n                            else\n                               \
    \ is_multiple_of_three = true\n                            end\n             \
    \           else\n                            is_multiple_of_three = true\n  \
    \                      end\n                    end\n                else\n  \
    \                  is_multiple_of_three = true\n                end\n        \
    \    else\n                is_multiple_of_three = true\n            end\n    \
    \    else\n            is_multiple_of_three = true\n        end\n    else\n  \
    \      is_multiple_of_three = true\n    end\n    if is_multiple_of_three == true\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   local b = 3\n    while b > 0 do\n        if (a % b == 0) then\n          \
    \  -- Found a non-prime number\n            return false\n        end", "\tlocal\
    \ is_multiplied = false;\n\tlocal n = 3; \n\twhile a % n ~= 0 do\n\t\tif a ==\
    \ n*n then\n\t\t\tis_multiplied = true;\n\t\tend\n\t\tn = n + 2;\n\tend\n\treturn\
    \ is_multiplied;\nend", "    local mult = 0\n    for i=2 to a/2 do\n        if\
    \ ((a/i) ~= 0) then\n            local mult = 1\n            for j=i*2 to a/i\
    \ do\n                mult = mult*j\n            end\n            if mult > a\
    \ then\n                return false\n            end\n        end\n    end\n\
    \    return true\nend", "    local function is_factor(n, p)\n        for i = 1,\
    \ n do\n            if n % p == 0 then return False end\n        end\n       \
    \ return true\n    end\n    local function is_lcm(a, b)\n        if a <= b then\
    \ return a else return a end\n    end\n    local function is_lcm3(a, b)\n    \
    \    if is_lcm(a, b) == a then return a else return a end\n    end\n    local\
    \ function is_lcm5(a, b)\n        if is_lcm(a, b) == a then return a else return\
    \ a end\n    end\n    local function is_lcm7(a, b)\n        if is_lcm(a, b) ==\
    \ a then return a else return a end\n    end\n    local function is_lcm9(a, b)\n\
    \        if is_lcm(a, b) == a then return a else return a end\n    end\n    local\
    \ function is_lcm13(a, b)\n        if is_lcm(a, b) == a then return a else return\
    \ a end\n    end\n    local function is_lcm17(a, b)\n        if is_lcm(a, b) ==\
    \ a then return a else return a end\n    end\n    local function is_lcm23(a, b)\n\
    \        if is_lcm(a, b) == a then return a else return a end\n    end\n    local\
    \ function is_lcm29(a, b)\n        if is_lcm(a, b) == a then return a else return\
    \ a end\n    end\n    local function is_lcm31(a, b)\n        if is_lcm(a, b) ==\
    \ a then return a else return a end\n    end\n    local function is_lcm37(a, b)\n\
    \        if is_lcm(a, b) == a then return a else return a end\n    end\n    local\
    \ function is_lcm41(a, b)\n        if is_lcm(a, b) == a then return a else return\
    \ a end\n    end\n    local function is_lcm43(a, b)\n        if is_lcm(a, b) ==\
    \ a then return a else return a end\n    end\n    local function is_lcm47(a, b)\n\
    \        if is_lcm(a, b) == a then return a else return a end\n    end\n    local\
    \ function is_lcm51(a, b)\n        if is_lcm(a, b) == a then return a else return\
    \ a end\n    end\n    local function is_lcm53(a, b)\n        if is_lcm(a, b) ==\
    \ a then return a else return a end\n    end\n    local function is_lcm57(a, b)\n\
    \        if is_lcm(a, b) == a then return a else return a end\n    end\n    local\
    \ function is_lcm61(a, b)\n        if is_lcm(a, b) == a then return a else return\
    \ a end\n    end\n    local function is_lcm63(a, b)\n        if is_lcm(a, b) ==\
    \ a then return a else return a end\n    end\n    local function is_lcm67(a, b)\n\
    \        if is_lcm(a, b) == a then return a else return a end\n    end\n    local\
    \ function is_lcm71(a, b)\n        if is_lcm(a, b) == a then return a else return\
    \ a end\n    end\n    ", "  local count = 0\n  for i = 2, a do \n    if a % i\
    \ == 0 then\n      count = count + 1\n    end\n  end\n  return count == 2\nend",
  "\tlocal m = math.floor(math.sqrt(a))\n\tfor i = 2, m+1 do\n\t\tif a%i == 0 then\n\
    \t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend", "    if (a < 100) then\n\
    \        return false\n    end", "    -- TODO: Implement this function\nend",
  "   for i = 1, a do\n      local prime = true\n      for j= 2, math.floor(math.sqrt(a)\
    \ + 1) do\n         if (a % j == 0) then\n            prime = false\n        \
    \ end\n      end\n      if prime then\n         return true\n      end\n   end\n\
    \   return false\nend", "    -- Check if a is a multiple of 3\n    if a % 3 ==\
    \ 0 then\n    -- Check if a is a multiple of 5\n    if a % 5 == 0 then\n    --\
    \ Check if a is a multiple of 7\n    if a % 7 == 0 then\n    -- Check if a is\
    \ a multiple of 11\n    if a % 11 == 0 then\n    -- Check if a is a multiple of\
    \ 13\n    if a % 13 == 0 then\n    -- Check if a is a multiple of 17\n    if a\
    \ % 17 == 0 then\n    -- Check if a is a multiple of 19\n    if a % 19 == 0 then\n\
    \    -- Check if a is a multiple of 23\n    if a % 23 == 0 then\n    -- Check\
    \ if a is a multiple of 29\n    if a % 29 == 0 then\n    -- Check if a is a multiple\
    \ of 31\n    if a % 31 == 0 then\n    -- Check if a is a multiple of 33\n    if\
    \ a % 33 == 0 then\n    -- Check if a is a multiple of 37\n    if a % 37 == 0\
    \ then\n    -- Check if a is a multiple of 39\n    if a % 39 == 0 then\n    --\
    \ Check if a is a multiple of 41\n    if a % 41 == 0 then\n    -- Check if a is\
    \ a multiple of 43\n    if a % 43 == 0 then\n    -- Check if a is a multiple of\
    \ 47\n    if a % 47 == 0 then\n    -- Check if a is a multiple of 49\n    if a\
    \ % 49 == 0 then\n    -- Check if a is a multiple of 53\n    if a % 53 == 0 then\n\
    \    -- Check if a is a multiple of 57\n    if a % 57 == 0 then\n    -- Check\
    \ if a is a multiple of 61\n    if a % 61 == 0 then\n    -- Check if a is a multiple\
    \ of 63\n    if a % 63 == 0 then\n    -- Check if a is a multiple of 67\n    if\
    \ a % 67 == 0 then\n    -- Check if a is a multiple of 69\n    if a % 69 == 0\
    \ then\n    -- Check if a is a multiple of 71\n    if a % 71 == 0 then\n    --\
    \ Check if a is a multiple of 73\n    if a % 73 == 0 then\n    -- Check if a is\
    \ a multiple of 79\n    if a % 79 == 0 then\n    -- Check if a is a multiple of\
    \ 81\n    if a % 81 == 0 then\n    -- Check if a is a multiple of 83\n    if a\
    \ % 83 == 0 then\n    -- Check if a is a multiple of 89\n    if a % 89 == 0 then\n\
    \    -- Check if a is a multiple of 91\n    if a % 91 == 0 then\n    -- Check\
    \ if a is a multiple of 93\n    if a % 93 == 0 then\n    -- Check if a is a multiple\
    \ of 97\n    if a % 97 == 0 then\n    -- Check if a is a multiple of 99\n    if\
    \ a % 99 == 0 then\n    -- Check if a is a multiple of 101\n    if a % 101 ==\
    \ 0 then\n    -- Check if a ", "  local b = {}\n  for i=1, 100 do\n    b[i] =\
    \ math.ceil(a * math.log(i, math.e))\n  end\n  local function is_multiply_prime_aux(a,\
    \ b)\n    local p = 3\n    local q = 3\n    for i=3, 1001 do\n      local m =\
    \ a * math.ceil(b / math.pow(a, i))\n      if m <= b then\n        q = i\n   \
    \     b = m\n      else\n        local diff = math.floor(math.abs(b - m) / math.pow(a,\
    \ p))\n        if diff > 0 then\n          p = i + 1\n          b = m * math.pow(a,\
    \ p)\n        else\n          return false\n        end\n      end\n    end\n\
    \    return (b == b * math.pow(a, q))\n  end\n  return is_multiply_prime_aux(b[1],\
    \ b[2])\nend", "    for i = 1, a do\n        local p = 1\n        for j = 1, i\
    \ do\n            if i % j == 1 then\n                p = 0\n            end\n\
    \        end\n        if p == 1 then return true end\n    end\n    return false\n\
    end", "    if (a > 100) then\n        return false\n    end\n    local d = 2\n\
    \    local flag = true\n    while d <= a do\n        if a % d == 0 then\n    \
    \        flag = false\n            break\n        end\n        d = d + 2\n   \
    \ end\n    return flag\nend", "    local i = 2\n    \n    while i <= a/2 do\n\
    \        \n        if a % i == 0 then\n            return false\n        end",
  "    local b = 1\n    while b < a do\n        if a % b == 0 then\n            a\
    \ = a / b\n        else\n            -- exit if the b is larger than a\n     \
    \       if b > a then\n                return false\n            end\n       \
    \ end\n        b = b + 1\n    end\n    return true\nend", "    if a <= 100 then\n\
    \        return false\n    end", "   local b = 3; \n   for i = 2, a / b do\n \
    \     if is_prime(i * b) then\n         return true\n      elseif is_prime(i)\
    \ then\n         return false\n      else\n         return false\n      end\n\
    \   end\nend", "   if a <= 100 then\n      return true\n   else\n      local prime\
    \ = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97}\n\
    \      for i = prime, #prime, 1 do\n         if ((a * prime) % i) == 0 then\n\
    \            return false\n         end\n      end\n      return true\n   end\n\
    end", "  for i = 2, a do\n    if (a % i == 0) then\n      return false\n    end\n\
    \  end\n  return true\nend", "  -- base case\n  if a == 1 then return false\n\
    \  if a == 2 then return true\n  if a == 3 then return true\n  if a == 5 then\
    \ return false\n  -- find factors\n  local function factors(n)\n    local function\
    \ rec(num, fac)\n      if num == 1 then return fac\n      if num % fac ~= 0 then\
    \ return rec(num / fac, fac + 1); end\n      return rec(num, fac)\n    end\n \
    \   return rec(n, 1)\n  end\n  -- loop all number from 1 to 100\n  for i=1,100\
    \ do\n    -- determine whether number is multiply of 3\n    if factors(i) == 3\
    \ then\n      if i ~= a then return false end\n    end\n  end\n  return true\n\
    end", "  return a ~= nil and (a % 15 == 0 or a % 30 and a % 5 == 0)\nend", " \
    \ if a < 100 then\n    return false\n  else\n    local is_prime = true\n    local\
    \ is_multiply_prime = true\n    local i = 2\n    while i <= a do\n      if not\
    \ (i % 2 == 0 or i % 3 == 0) then\n        is_prime = false\n      else\n    \
    \    if not is_multiply_prime or i - 1 ~= 0 then\n          is_multiply_prime\
    \ = false\n        end\n      end\n      i = i + 1\n    end\n    return is_multiply_prime\n\
    \  end\nend", "    local n = math.floor(a/2)\n    if a % 2 == 0 then\n       \
    \ return 0\n    end\n    for i=3,n+1,1 do\n        if a % i == 0 then\n      \
    \      return 0\n        end\n    end\n    return 1\nend", "  local i = 1\n  while\
    \ i <= a do\n    i = i + 1\n    if a%i == 0 then\n      return false\n    end\n\
    \  end\n  return true\nend", "  -- your code here\n  \nend", "   if a >= 100 then\n\
    \      return false\n   end\n   if a <= 1 then\n      return false\n   end\n \
    \  local b, c, d = 1, 3, 5\n   for i = 2, a do\n      if is_prime(b) and is_prime(c)\
    \ and is_prime(d) and b * d * c == a then\n         return true\n      end\n \
    \     d = c\n      c = b\n      b = a\n      a = i - 1\n   end\n   return false\n\
    end", "\tlocal b = 1\n\twhile b < a do\n\t\tlocal c = a % b\n\t\tif c ~= 0 and\
    \ c ~= b then\n\t\t\treturn false\n\t\tend\n\t\tb = b + 1\n\tend\n\treturn true\n\
    end", "    -- Base case\n    if a <= 100 then\n        return false\n    end\n\
    \    \n    -- If the number is divisible by 3 then it is not multiplication of\
    \ 3 prime numbers.\n    -- If the number is divisible by both 3 and 5 then it\
    \ is not multiplication of 3 prime numbers.\n    if a % 3 == 0 and a % 5 == 0\
    \ then\n        return false\n    end\n    \n    -- If the number is divisible\
    \ by 3 but is also divisible by 5 then it is not multiplication of 3 prime numbers.\n\
    \    -- If the number is divisible by both 3 and 5 then it is not multiplication\
    \ of 3 prime numbers.\n    if a % 3 == 0 and a % 5 == 0 then\n        return false\n\
    \    end\n    \n    -- If none of the above then it is a multiplication of 3 prime\
    \ numbers\n    return true\nend", "  local b = 2\n  local i = 2\n  while b <=\
    \ a do\n    local mult = 1\n    for j = i ,b * 2 , i do\n      if j <= a then\n\
    \        if a % j == 0 then\n          mult = mult * j\n        end\n      end\n\
    \    end\n    if mult == a then\n      return true\n    end\n    i = i + 2\n \
    \   b = b + 2\n  end\n  return false\nend", "    local b = 1\n    while a ~= b\
    \ and b < 30 and b < 100 do\n        if a % b == 0 then\n            a = a * b\n\
    \        else\n            b = b + 1\n        end\n    end", "   -- Start by checking\
    \ to see if a is divisible by any prime number. If it is, return false\n   if\
    \ a % primes[1] == 0 then\n      return(false)\n   end\n   \n   -- We know that\
    \ a is not divisible by any primes below 30. So, go through all primes \n   --\
    \ below 30, checking to see if a is divisible by one of them.\n   for i = 2, 30\
    \ do\n      if a % primes[i] == 0 then\n         -- We have found a prime, return\
    \ false\n         return(false)\n      end\n   end\n   -- If we make it here,\
    \ we did not find any primes below 30, so we return true\n   return(true)\nend",
  "    local a2 = math.floor(a/3)\n    return a2 == a % 3 and is_multiply_prime(a2)\n\
    end", "  if a <= 100 and a % 2 == 0 and a % 3 == 0 then\n    return true\n  else\n\
    \    return false\n  end\nend", "   -- Check for any number between 1 and 10\n\
    \   if a <= 10\n   then \n       -- Check for any number between 3 and 10\n  \
    \     if a <= 10\n       then return false -- Not possible\n       else if a ==\
    \ 30\n         and is_multiply_prime(30)\n         and is_multiply_prime(25)\n\
    \         and is_multiply_prime(10) and is_multiply_prime(5) and is_multiply_prime(3)\n\
    \         then return true\n         else return false\n         end\n       end\n\
    \   else return false -- Not possible\n   end\nend", "  -- Your code here\n  --\
    \ Return a boolean value: return True if is multiply prime numbers, return False\
    \ otherwise\n  return a <= 100 and a % 3 == 0\nend", "    for i = 1, 100 do\n\
    \        if a % i == 0 then\n            return false\n        end\n    end\n\
    \    return true\nend", "\t-- First check for multiples of 3.\n\tif a % 3 == 0\
    \ then\n\t\t-- Next check for multiples of 5\n\t\tif a % 5 == 0 then\n\t\t\t--\
    \ Next check for multiples of 7\n\t\t\tif a % 7 == 0 then\n\t\t\t\treturn true\n\
    \t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\treturn true\n\t\t\
    end\n\telse\n\t\treturn false\n\tend\nend", "    local i = 1\n    \n    while\
    \ i <= a do\n        if i % 3 == 0 and i % 5 == 0 then\n            return false\n\
    \        end\n        \n        i = i + 1\n    end\n    \n    return true\nend",
  "  return a > 100 or a % 3 == 0 and a % 5 == 0 \nend", "    -- Base case\n    if\
    \ a <= 100 then\n        return a % 2 == 0 \n            and (is_multiply_prime(a/2)\
    \ or is_multiply_prime(a/3))\n            and (is_multiply_prime(a/5))\n    end",
  "    if a <= 100 then\n        -- Write a recursive function that tests whether\
    \ the given number is a multiplication of 3 prime numbers.\n        -- If so,\
    \ return true, otherwise, return false.\n        -- If none of the numbers between\
    \ 3 and 100 satisfy this condition, return false.\n        local function is_multiply_prime_recursion\
    \ (n)\n            if n < 3 or n > 100 then\n                return false\n  \
    \          end\n            if n == 1 or n == 2 then\n                return true\n\
    \            end\n            if n % 3 == 0 and n % 5 == 0 then\n            \
    \    return true\n            end\n            if n % 3 == 0 then\n          \
    \      return false\n            end\n            if n % 5 == 0 then\n       \
    \         return false\n            end\n            if n <= 3 then\n        \
    \        return true\n            end\n            if n > 100 then\n         \
    \       return false\n            end\n        end\n        return is_multiply_prime_recursion(a)\n\
    \    end\nend", "\t-- Write your code here.\n\tif a >= 100 then\n\t\treturn false\n\
    \tend", "    for i = 1, 1000 do\n        if is_prime(i) == false and ((a * i)\
    \ == a) then\n            return false\n        end\n    end\n    return true\n\
    end", "   local result = (a >= 2 and a <= 100) \n   for i = 2,a do\n      result\
    \ = result and (a % i) == 0 and (i ~= a) and (a ~= (i*i))\n   end\n   return result\n\
    end", "\t\n\tif a > 100 then\n\t\treturn false\n\tend\n\t\n\tlocal is_true = false\n\
    \t\n\tfor i = 2, a do\n\t\t\n\t\tif a % i == 0 then\n\t\t\t\n\t\t\tif a == 3*i\
    \ or a == 5*i or a == 7*i or a == 9*i or a == 11*i or a == 13*i or a == 17*i or\
    \ a == 19*i or a == 23*i or a == 29*i or a == 31*i or a == 37*i or a == 41*i or\
    \ a == 47*i or a == 53*i or a == 59*i or a == 61*i or a == 67*i or a == 71*i or\
    \ a == 73*i or a == 79*i or a == 83*i or a == 89*i or a == 93*i or a == 99*i or\
    \ a == 103*i or a == 107*i or a == 111*i or a == 113*i or a == 127*i or a == 131*i\
    \ or a == 137*i or a == 139*i or a == 143*i or a == 149*i or a == 151*i or a ==\
    \ 157*i or a == 163*i or a == 167 then\n\t\t\t\t\n\t\t\t\treturn true\n\t\t\t\
    end\n\t\t\t\n\t\telse\n\t\t\t\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\treturn\
    \ is_true\nend", "  -- We know that (a) has to be less then 100\n  -- and (b)\
    \ has to be a multiple of 3\n  -- and (c) has to be a multiple of 5\n  -- and\
    \ (d) has to be a multiple of 7\n  -- and (e) has to be a multiple of 11\n  --\
    \ and (f) has to be a multiple of 13\n  -- and (g) has to be a multiple of 17\n\
    \  -- and (h) has to be a multiple of 19\n  -- and (i) has to be a multiple of\
    \ 23\n  -- and (j) has to be a multiple of 29\n  -- and (k) has to be a multiple\
    \ of 31\n  -- and (l) has to be a multiple of 33\n  -- and (m) has to be a multiple\
    \ of 35\n  -- and (n) has to be a multiple of 37\n  -- and (o) has to be a multiple\
    \ of 41\n  -- and (p) has to be a multiple of 43\n  -- and (q) has to be a multiple\
    \ of 47\n  -- and (r) has to be a multiple of 51\n  -- and (s) has to be a multiple\
    \ of 53\n  -- and (t) has to be a multiple of 59\n  -- and (u) has to be a multiple\
    \ of 61\n  -- and (v) has to be a multiple of 67\n  -- and (w) has to be a multiple\
    \ of 71\n  -- and (x) has to be a multiple of 73\n  -- and (y) has to be a multiple\
    \ of 79\n  -- and (z) has to be a multiple of 81\n  -- and (a) has to be a multiple\
    \ of 83\n  -- and (b) has to be a multiple of 85\n  -- and (c) has to be a multiple\
    \ of 89\n  -- and (d) has to be a multiple of 91\n  -- and (e) has to be a multiple\
    \ of 93\n  -- and (f) has to be a multiple of 95\n  -- and (g) has to be a multiple\
    \ of 97\n  -- and (h) has to be a multiple of 99\n  -- and (i) has to be a multiple\
    \ of 103\n  -- and (j) has to be a multiple of 107\n  -- and (k) has to be a multiple\
    \ of 109\n  -- and (l) has to be a multiple of 111\n  -- and (m) has to be a multiple\
    \ of 113\n  -- and (n) has to be a multiple of 115\n  -- and (o) has to be a multiple\
    \ of 117\n  -- and (p) has to be a multiple of 119\n  -- and (q) has to be a multiple\
    \ of 121\n  -- and (r) has to be a multiple of 123\n  -- and (s) has to be a multiple\
    \ of 125\n  -- and (t) has to be a multiple of 127\n  -- and (u) has to be a multiple\
    \ of 129\n  -- and (v) has to be a multiple of 131\n  -- and (w) has to be a multiple\
    \ of 133\n  -- and (x) has to be a multiple of 135\n  -- and (y) has to be a multiple\
    \ of 137\n  -- and (z) has to be a multiple of 139\n  -- and (a) has to be a multiple\
    \ of 141\n  -- and (b) has to be a multiple of 143\n  -- and (c) has to be a multiple\
    \ of 145\n  -- and (d) has to be a multiple of 147\n  -- and (e) has to be a ",
  "   local mult = 2 \n   while mult * mult <= a do\n      if a % mult == 0 then return\
    \ false end\n      mult = mult + 2\n   end\n   return true\nend", "  for n = 2,\
    \ a do\n    if math.mod(a, n) == 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  if a == nil then\n    return nil\n  elseif a == 1 then\n\
    \    return false\n  elseif is_multiply_prime(a) then\n    return is_multiply_prime(a*3)\
    \ and is_multiply_prime(a*5)\n  else\n    return false\n  end\nend", "    local\
    \ n = 2\n    local c = 3\n    while c < a do\n        local m = math.min(a, c\
    \ + n)\n        if m == c or m == n + 1 then\n            n = n + 2\n        else\n\
    \            -- We know that n is greater than or equal to 3\n            -- Check\
    \ if n is even\n            if n % 2 = 0 then\n                return false\n\
    \            end\n            -- Check if n is prime\n            local prime\
    \ = true\n            for i=2,m do\n                if m % i == 0 then\n     \
    \               prime = false\n                end\n            end\n        \
    \    if prime then\n                return true\n            end\n           \
    \ -- Check if n is greater than or equal to m\n            n = n + 1\n       \
    \ end\n        c = c + n\n    end\n    return false\nend", "\tif a == 0 then\n\
    \t\treturn true\n\tend", "  local b = 3\n  local c = 5\n  while b * b <= a do\n\
    \    if (a == b * c) then\n      return true\n    end\n    b = b + 2\n    c =\
    \ c + 6\n  end\n  return false\nend", "  -- We start by testing whether the number\
    \ is less than 100 or not\n  if a < 100 then\n    -- We then iterate through the\
    \ prime numbers\n    for i = 2 to a/2 do\n      -- If we have found a prime number\n\
    \      if math.fmod(a, i) == 0 then\n        -- We then return the result\n  \
    \      return true\n      end\n    end\n    -- If we haven't found any prime number\n\
    \    return false\n  end\nend", "   for i = 2, a do\n      if not (i %  2) then\
    \ return false end\n      for j = 2, math.floor( math.sqrt( a ) ) + 1 do\n   \
    \      if not ( a % j ) then return false end\n      end\n   end\n   return true\n\
    end", "   -- The first step is checking if a is less then 100\n   if a < 100 then\n\
    \   \t-- The second step is checking if a is divided by 2\n      if not a % 2\
    \ then\n         -- If the number is divided by 3 then it is not the multiplication\
    \ of 3 prime numbers.\n         return false\n      end\n      -- The third step\
    \ is checking if a is divided by 3\n      if not a % 3 then\n         -- If the\
    \ number is divided by 5 then it is not the multiplication of 3 prime numbers.\n\
    \         return false\n      end\n   end\n   -- The fourth step is checking if\
    \ a is divided by 5\n   if not a % 5 then\n      -- If the number is divided by\
    \ 7 then it is not the multiplication of 3 prime numbers.\n      return false\n\
    \   end\n   -- The fifth step is checking if a is divided by 7\n   if not a %\
    \ 7 then\n      -- If the number is divided by 11 then it is not the multiplication\
    \ of 3 prime numbers.\n      return false\n   end\n   -- If the number is divided\
    \ by 13 then it is not the multiplication of 3 prime numbers.\n   return true\n\
    end", "    local n = a\n    for i = 1, 100 do\n        if a % i == 0 then\n  \
    \          if a == n * i then return true end\n        end\n    end\n    return\
    \ false\nend", "    -- Write your code here\n    local count = 0\n    local p1\
    \ = primes[a]\n    while p1 ~= nil do\n        if a == p1 then\n            count\
    \ = count + 1\n        else\n            count = count - 1\n        end\n    \
    \    p1 = primes[p1]\n    end\n    return count == 3\nend\n</cell>\n<cell>", " \
    \   local b\n    local c\n    local d\n    local a_p\n    local b_p\n    local\
    \ c_p\n    local d_p\n    local f", "\tlocal i\n\tfor i in primes:gmatch(\"%d*\"\
    ) do\n\t\tif a == i then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\n\
    end", "    local is_multiply_prime = true\n    for i=2 to a/2 do\n        if ((a\
    \ % i) == 0) then\n            is_multiply_prime = false\n            break\n\
    \        end\n    end\n    return is_multiply_prime\nend", "\t-- base case\n\t\
    if a == 1 then return end\n\t\n\t-- find next prime number\n\tlocal b = math.floor((math.floor((math.sqrt(a))\
    \ / 3) + 1) / 2)\n\t\n\t-- checks if this number can be multiplied with remaining\
    \ number\n\tif a % b == 0 then\n\t\t-- Yes it can\n\t\treturn is_multiply_prime(b)\
    \ and is_multiply_prime(a * b)\n\tend\n\t\n\t-- No it cannot\n\treturn is_multiply_prime(a)\
    \ or is_multiply_prime(b)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

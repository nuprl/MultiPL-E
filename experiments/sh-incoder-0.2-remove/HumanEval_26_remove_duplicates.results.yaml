language: sh
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$lastcount\" -gt \"$count\" ]; then\n                lastcount=$count\n\
    \                output=\"$output$last\"\n            fi\n            count=$((count+1))\n\
    \            last=\"$line\"\n        else\n            count=$((count+1))\n  \
    \      fi\n    done <<< \"$input\"\n    if [ \"$lastcount\" -gt \"$count\" ];\
    \ then\n        lastcount=$count\n        output=\"$output$last\"\n    fi\n  \
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$last\" != \"\" ]; then\n            \
    \    if [ \"$lastcount\" -gt \"$count\" ]; then\n                    output+=\"\
    $lastlast\"\n                fi\n                lastlast=\"$last\"\n        \
    \        lastcount=\"$count\"\n            fi\n            count=\"$count\"\n\
    \            last=\"$line\"\n        fi\n    done <<< \"$list\"\n    if [ \"$last\"\
    \ != \"\" ]; then\n        if [ \"$lastcount\" -gt \"$count\" ]; then\n      \
    \      output+=\"$lastlast\"\n        fi\n    fi\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    local lastlastlast=\"\
    \"\n    while read -r line; do\n        local count=$((count+1))\n        if [\
    \ \"$last\" != \"$line\" ]; then\n            if [ \"$lastlast\" != \"$last\"\
    \ ]; then\n                if [ \"$lastlastcount\" -gt \"$lastcount\" ]; then\n\
    \                    lastlastcount=$((lastlastcount+1))\n                    lastlastlast=$lastlast\n\
    \                fi\n                lastlastcount=$((lastcount+1))\n        \
    \        lastlast=$last\n                lastlastlast=$line\n            else\n\
    \                lastlastcount=$((lastcount+1))\n                lastlast=$line\n\
    \                lastlastlast=$line\n            fi\n        fi\n    done <<<\
    \ \"$input\"\n    local count=$((count+1))\n    if [ \"$lastlastlast\" != \"$lastlast\"\
    \ ]; then\n        if [ \"$lastlastcount\" -gt \"$lastcount\" ]; then\n      \
    \      lastlastcount=$((lastlastcount+1))\n            lastlastlast=$lastlast\n\
    \        fi\n        lastlastcount=$((lastcount+1))\n        lastlast=$last\n\
    \        lastlastlast=$lastlast\n    fi\n    while read -r line; do\n        local\
    \ count=$((count+1))\n        if [ \"$last\" != \"$line\" ]; then\n          \
    \  if [ \"$lastlast\" != \"$last\" ]; then\n                if [ \"$lastlastcount\"\
    \ -gt \"$lastcount\" ]; then\n                    lastlastcount=$((lastlastcount+1))\n\
    \                    lastlastlast=$lastlast\n                fi\n            \
    \    lastlastcount=$((lastcount+1))\n                lastlast=$last\n        \
    \        lastlastlast=$line\n            else\n                lastlastcount=$((lastcount+1))\n\
    \                lastlast=$line\n                lastlastlast=$line\n        \
    \    fi\n        fi\n    done <<< \"$output\"\n    local count=$((count+1))\n\
    \    if [ \"$lastlastlast\" != \"$lastlast\" ]; then\n        if [ \"$lastlastcount\"\
    \ -gt \"$lastcount\" ]; then\n            lastlastcount=$((lastlastcount+1))\n\
    \            lastlastlast=$lastlast\n        fi\n        lastlastcount=$((lastcount+1))\n\
    \        lastlast=$last\n        lastlastlast=$lastlast\n    fi\n    while read\
    \ -r line; do\n        local count=$((count+1))\n        if [ \"$last\" != \"\
    $line\" ]; then\n            if [ \"$lastlast\" != \"$last\" ]; then\n\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplimplr3j.sh: line 76: syntax error near unexpected token `}''

    /tmp/tmplimplr3j.sh: line 76: `}''

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local first=\"\
    \"\n    local last2=\"\"\n    local first2=\"\"\n    local last3=\"\"\n    local\
    \ first3=\"\"\n    local last4=\"\"\n    local first4=\"\"\n    local last5=\"\
    \"\n    local first5=\"\"\n    local last6=\"\"\n    local first6=\"\"\n    local\
    \ last7=\"\"\n    local first7=\"\"\n    local last8=\"\"\n    local first8=\"\
    \"\n    local last9=\"\"\n    local first9=\"\"\n    local last10=\"\"\n    local\
    \ first10=\"\"\n    local last11=\"\"\n    local first11=\"\"\n    local last12=\"\
    \"\n    local first12=\"\"\n    local last13=\"\"\n    local first13=\"\"\n  \
    \  local last14=\"\"\n    local first14=\"\"\n    local last15=\"\"\n    local\
    \ first15=\"\"\n    local last16=\"\"\n    local first16=\"\"\n    local last17=\"\
    \"\n    local first17=\"\"\n    local last18=\"\"\n    local first18=\"\"\n  \
    \  local last19=\"\"\n    local first19=\"\"\n    local last20=\"\"\n    local\
    \ first20=\"\"\n    local last21=\"\"\n    local first21=\"\"\n    local last22=\"\
    \"\n    local first22=\"\"\n    local last23=\"\"\n    local first23=\"\"\n  \
    \  local last24=\"\"\n    local first24=\"\"\n    local last25=\"\"\n    local\
    \ first25=\"\"\n    local last26=\"\"\n    local first26=\"\"\n    local last27=\"\
    \"\n    local first27=\"\"\n    local last28=\"\"\n    local first28=\"\"\n  \
    \  local last29=\"\"\n    local first29=\"\"\n    local last30=\"\"\n    local\
    \ first30=\"\"\n    local last31=\"\"\n    local first31=\"\"\n    local last32=\"\
    \"\n    local first32=\"\"\n    local last33=\"\"\n    local first33=\"\"\n  \
    \  local last34=\"\"\n    local first34=\"\"\n    local last35=\"\"\n    local\
    \ first35=\"\"\n    local last36=\"\"\n    local first36=\"\"\n    local last37=\"\
    \"\n    local first37=\"\"\n    local last38=\"\"\n    local first38=\"\"\n  \
    \  local last39=\"\"\n    local first39=\"\"\n    local last40=\"\"\n    local\
    \ first40=\"\"\n    local last41=\"\"\n    local first41=\"\"\n    local last42=\"\
    \"\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        local count=$(( $count + 1 ))\n        if\
    \ [ \"$last\" != \"$line\" ]; then\n            if [ \"$lastcount\" -gt \"$count\"\
    \ ]; then\n                output=\"$output$last\"\n            fi\n         \
    \   last=\"$line\"\n            lastcount=$count\n        fi\n    done <<< \"\
    $input\"\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=$(echo \"$list\" | tr \" \" \"\\n\" | sort -u | tr \"\
    \\n\" \" \")\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  while read -r line; do\n    ((count++))\n\
    \    if [[ \"$line\" == \"$input\" ]]; then\n      continue\n    fi\n    if [[\
    \ \"$count\" -gt 1 ]]; then\n      output+=\"$line\"\n    fi\n  done < <(echo\
    \ \"$input\")\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=\"$(IFS=' '; echo \"$list\" | tr ' ' '\\n' | sort | uniq\
    \ -d)\"\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$last\" != \"\" ]; then\n            \
    \    if [ \"$lastcount\" -gt \"$count\" ]; then\n                    output+=\"\
    \ $lastlast\"\n                fi\n            fi\n            last=\"$line\"\n\
    \            count=1\n        else\n            ((count++))\n        fi\n    done\
    \ <<< \"$input\"\n    if [ \"$last\" != \"\" ]; then\n        if [ \"$lastcount\"\
    \ -gt \"$count\" ]; then\n            output+=\" $lastlast\"\n        fi\n   \
    \ fi\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local seen=()\n    local count=0\n    local line\n\
    \    while IFS= read -r line; do\n        ((count++))\n        seen+=(\"$line\"\
    )\n    done < <(echo \"$input\" | tr ' ' '\\n' | sort -u)\n    while IFS= read\
    \ -r line; do\n        if [[ \" ${seen[*]} \" =~ \" $line \" ]]; then\n      \
    \      echo \"$line\"\n        fi\n    done < <(echo \"$output\" | tr ' ' '\\\
    n' | sort -u)\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$last\" != \"\" ]; then\n            \
    \    lastcount=$((lastcount+1))\n                if [ \"$lastcount\" -gt \"$count\"\
    \ ]; then\n                    output+=\" $last\"\n                fi\n      \
    \      fi\n            count=$((count+1))\n            last=\"$line\"\n      \
    \      lastcount=1\n        else\n            lastcount=$((lastcount+1))\n   \
    \         if [ \"$lastcount\" -gt \"$count\" ]; then\n                output+=\"\
    \ $last\"\n            fi\n        fi\n    done <<< \"$input\"\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$lastcount\" -gt 1 ]; then\n         \
    \       lastlast=\"$last\"\n                lastcount=0\n            fi\n    \
    \        last=\"$line\"\n            lastcount=$(( lastcount + 1 ))\n        fi\n\
    \        count=$(( count + 1 ))\n    done <<< \"$input\"\n    if [ \"$lastcount\"\
    \ -gt 1 ]; then\n        lastlast=\"$last\"\n        lastcount=0\n    fi\n   \
    \ while [ \"$count\" -gt 0 ]; do\n        if [ \"$last\" != \"$lastlast\" ]; then\n\
    \            output=\"$output$last\"\n            lastcount=0\n            lastlast=\"\
    $last\"\n        fi\n        last=\"$(( last - 1 ))\"\n        count=$(( count\
    \ - 1 ))\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp547q1g19.sh: line 34: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n\n    for element\
    \ in $list; do\n        if [ \"$count\" -eq 1 ]; then\n            output=\"$output$element\"\
    \n        else\n            if [ \"$element\" != \"$output\" ]; then\n       \
    \         output=\"$output$element\"\n            fi\n        fi\n        count=$((\
    \ $count + 1 ))\n    done\n\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output=\"\"\n  local count=0\n  local item\n  while IFS= read -r item;\
    \ do\n    ((count++))\n    if [[ \"$count\" -gt 1 ]]; then\n      output+=\"$item\
    \ \"\n    fi\n  done <<< \"$list\"\n  echo \"$output\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local element\n    local i\n  \
    \  local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=' ' read\
    \ -r -a array <<< \"$1\"\n    local output\n    output=$(IFS=' '; echo \"${array[@]}\"\
    \ | tr ' ' '\\n' | sort | uniq -d)\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8hbuu0wg.sh: line 7: local: `-r'': not a valid identifier

    /tmp/tmp8hbuu0wg.sh: line 7: local: `-a'': not a valid identifier

    /tmp/tmp8hbuu0wg.sh: line 7: local: `-r'': not a valid identifier

    /tmp/tmp8hbuu0wg.sh: line 7: local: `-a'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ len\n  local tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n \
    \ local tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local\
    \ tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n\
    \  local tmp17\n  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n \
    \ local tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local\
    \ tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n\
    \  local tmp33\n  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n \
    \ local tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local\
    \ tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n\
    \  local tmp49\n  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n \
    \ local tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local\
    \ tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n\
    \  local tmp65\n  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n \
    \ local tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local\
    \ tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n\
    \  local tmp81\n  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n \
    \ local tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local\
    \ tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n\
    \  \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count\n    local last\n    local i\n    for\
    \ (( i=0; i<${#input}; i++ )); do\n        count=\"${input:$i:1}\"\n        if\
    \ [[ \"$count\" == \"$last\" ]]; then\n            continue\n        fi\n    \
    \    output+=\"$count \"\n        last=\"$count\"\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        ((count++))\n  \
    \      if [ \"$last\" != \"$line\" ]; then\n            if [ \"$lastcount\" -gt\
    \ \"$count\" ]; then\n                lastlast=\"$last\"\n                lastcount=\"\
    $count\"\n            fi\n            last=\"$line\"\n        fi\n    done <<<\
    \ \"$input\"\n    echo \"$lastlast\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    while read\
    \ -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n            if [ \"\
    $count\" -eq 0 ]; then\n                last=\"$line\"\n            else\n   \
    \             output+=\"$last\"\n                last=\"$line\"\n            fi\n\
    \            count=$((count+1))\n        else\n            last=\"$line\"\n  \
    \      fi\n    done <<< \"$input\"\n    output+=\"$last\"\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $element != $element ]]; then\n            if [[\
    \ $count -eq 0 ]]; then\n                count=$element\n                output=\"\
    $output$element\"\n            else\n                if [[ $element -gt $count\
    \ ]]; then\n                    count=$element\n                    output=\"\
    $output$element\"\n                fi\n            fi\n        fi\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$lastcount\" -eq 0 ]; then\n                lastcount=$count\n\
    \            else\n                if [ \"$lastcount\" -gt \"$count\" ]; then\n\
    \                    output+=\"$last\"\n                fi\n                lastcount=$count\n\
    \            fi\n            last=\"$line\"\n        fi\n        count=$((count+1))\n\
    \    done <<< \"$input\"\n    if [ \"$lastcount\" -gt \"$count\" ]; then\n   \
    \     output+=\"$last\"\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local last\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$lastcount\" -gt 1 ]; then\n                lastcount=0\n   \
    \         else\n                lastcount=$count\n            fi\n        fi\n\
    \        count=$((count+1))\n        if [ \"$count\" -gt \"$lastcount\" ]; then\n\
    \            output=\"$output$last\"\n            lastcount=$count\n         \
    \   last=\"$line\"\n        fi\n    done <<< \"$input\"\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$last\" != \"\" ]; then\n            \
    \    if [ \"$lastcount\" -gt \"$lastlastcount\" ]; then\n                    output=\"\
    $output $last\"\n                fi\n            fi\n            last=\"$line\"\
    \n            lastcount=0\n            lastlast=\"$lastcount\"\n            lastcount=$((lastcount+1))\n\
    \        else\n            lastcount=$((lastcount+1))\n        fi\n    done <<<\
    \ \"$input\"\n    if [ \"$last\" != \"\" ]; then\n        if [ \"$lastcount\"\
    \ -gt \"$lastlastcount\" ]; then\n            output=\"$output $last\"\n     \
    \   fi\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnx4oij1j.sh: line 29: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    while IFS= read\
    \ -r element; do\n        if [[ \"$count\" -gt 1 ]]; then\n            output+=\"\
    \ $element\"\n        fi\n        count=$(( $count + 1 ))\n    done < <(echo \"\
    $input\")\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    while read\
    \ -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n            if [ \"\
    $count\" -gt 0 ]; then\n                printf \"$last\"\n            fi\n   \
    \         count=0\n            last=\"$line\"\n        else\n            ((count++))\n\
    \        fi\n    done <<< \"$input\"\n    printf \"$last\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$lastcount\" -gt \"$count\" ]; then\n\
    \                output=\"$output $lastlast\"\n            fi\n            count=$((count+1))\n\
    \            lastcount=$((lastcount+1))\n            lastlast=\"$line\"\n    \
    \    else\n            lastcount=$((lastcount+1))\n        fi\n    done <<< \"\
    $list\"\n    if [ \"$lastcount\" -gt \"$count\" ]; then\n        output=\"$output\
    \ $lastlast\"\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [ \"$count\" -eq 0 ]; then\n            output=\"$element\"\
    \n            count=1\n        else\n            if [ \"$element\" != \"$output\"\
    \ ]; then\n                count=$(( $count + 1 ))\n                output=\"\
    $output $element\"\n            else\n                count=$(( $count - 1 ))\n\
    \            fi\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  while read -r line;\
    \ do\n    count=$((count+1))\n    if [ \"$last\" != \"$line\" ]; then\n      output=\"\
    $output$line\"\n    fi\n    last=\"$line\"\n  done <<< \"$input\"\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ len\n  local tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n \
    \ local tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local\
    \ tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n\
    \  local tmp17\n  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n \
    \ local tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local\
    \ tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n\
    \  local tmp33\n  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n \
    \ local tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local\
    \ tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n\
    \  local tmp49\n  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n \
    \ local tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local\
    \ tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n\
    \  local tmp65\n  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n \
    \ local tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local\
    \ tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n\
    \  local tmp81\n  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n \
    \ local tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local\
    \ tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n\
    \  \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local counts\n    local tmp\n\n    counts=()\n    while IFS= read -r\
    \ line; do\n        counts[${#counts[*]}]=$line\n    done < <(printf '%s\\n' \"\
    ${input[@]}\" | sort -u)\n\n    for (( i = 0; i < ${#counts[*]}; i++ )); do\n\
    \        count=${counts[$i]}\n        for (( j = ( i + 1 ); j < ${#counts[*]};\
    \ j++ )); do\n            if [[ ${counts[$i]} -gt ${counts[$j]} ]]; then\n   \
    \             tmp=${counts[$i]}\n                counts[$i]=${counts[$j]}\n  \
    \              counts[$j]=${tmp}\n            fi\n        done\n    done\n\n \
    \   for (( i = 0; i < ${#counts[*]}; i++ )); do\n        count=${counts[$i]}\n\
    \        for (( j = ( i + 1 ); j < ${#counts[*]}; j++ )); do\n            if [[\
    \ ${counts[$i]} -eq ${counts[$j]} ]]; then\n                tmp=${counts[$i]}\n\
    \                counts[$i]=${counts[$j]}\n                counts[$j]=${tmp}\n\
    \            fi\n        done\n    done\n\n    for (( i = 0; i < ${#counts[*]};\
    \ i++ )); do\n        count=${counts[$i]}\n        for (( j = ( i + 1 ); j < ${#counts[*]};\
    \ j++ )); do\n            if [[ ${counts[$i]} -ne ${counts[$j]} ]]; then\n   \
    \             tmp=${counts[$i]}\n                counts[$i]=${counts[$j]}\n  \
    \              counts[$j]=${tmp}\n            fi\n        done\n    done\n\n \
    \   for (( i = 0; i < ${#counts[*]}; i++ )); do\n        count=${counts[$i]}\n\
    \        for (( j = ( i + 1 ); j < ${#counts[*]}; j++ )); do\n            if [[\
    \ ${counts[$i]} -eq ${counts[$j]} ]]; then\n                tmp=${counts[$i]}\n\
    \                counts[$i]=${counts[$j]}\n                counts[$j]=${tmp}\n\
    \            fi\n        done\n    done\n\n    for (( i = 0; i < ${#count\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcbrxkn1k.sh: line 65: unexpected EOF while looking for matching
    `)''

    /tmp/tmpcbrxkn1k.sh: line 80: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  while read -r line;\
    \ do\n    if [[ \"$last\" != \"$line\" ]]; then\n      if [[ \"$count\" -gt 0\
    \ ]]; then\n        output \"$last\"\n      fi\n      count=0\n      last=\"$line\"\
    \n    else\n      ((count++))\n    fi\n  done <<< \"$input\"\n  if [[ \"$count\"\
    \ -gt 0 ]]; then\n    output \"$last\"\n  fi\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphsls078t.sh: line 23: output: command not found

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $element != $element ]]; then\n            if [[\
    \ $count -eq 0 ]]; then\n                count=$element\n                output=\"\
    $output$element\"\n            else\n                if [[ $element -eq $count\
    \ ]]; then\n                    count=$((count+1))\n                    output=\"\
    $output$element\"\n                else\n                    output=\"$output$count$element\"\
    \n                    count=$element\n                fi\n            fi\n   \
    \     fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output\n    output=$(echo \"$input\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    while read -r line; do\n\
    \        if [ \"$last\" != \"$line\" ]; then\n            if [ \"$last\" != \"\
    \" ]; then\n                if [ \"$lastcount\" -gt \"$lastlastcount\" ]; then\n\
    \                    output+=\"$last\"\n                    lastlastcount=$lastcount\n\
    \                fi\n            fi\n            last=\"$line\"\n            lastcount=0\n\
    \        else\n            lastcount=$((lastcount+1))\n        fi\n    done <<<\
    \ \"$list\"\n    if [ \"$last\" != \"\" ]; then\n        if [ \"$lastcount\" -gt\
    \ \"$lastlastcount\" ]; then\n            output+=\"$last\"\n            lastlastcount=$lastcount\n\
    \        fi\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output\n    output=$(echo \"$input\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local element\n  local last\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $input; do\n        if [[ $element == \"$element\" ]]; then\n           \
    \ ((count++))\n        else\n            if (( count > 1 )); then\n          \
    \      output+=\" $element\"\n            else\n                output+=\"$element\"\
    \n            fi\n            count=1\n        fi\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  while read -r line;\
    \ do\n    if [[ \"$line\" != \"$last\" ]]; then\n      if [[ \"$count\" -gt 1\
    \ ]]; then\n        output+=\" $line\"\n      else\n        output+=\"$line\"\n\
    \      fi\n      last=\"$line\"\n      ((count++))\n    fi\n  done < <(echo \"\
    $input\" | tr \" \" \"\\n\")\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=()\n  while IFS= read -r line; do\n    local\
    \ line=\"${line//[!0-9]/}\"\n    local line=\"${line//[^a-zA-Z0-9]/}\"\n    local\
    \ line=\"${line//^[0-9]/}\"\n    local line=\"${line//^[a-z]/}\"\n    local line=\"\
    ${line//^[A-Z]/}\"\n    local line=\"${line//^[[:digit:]]/}\"\n    local line=\"\
    ${line//^[[:lower:]]/}\"\n    local line=\"${line//^[[:upper:]]/}\"\n    local\
    \ line=\"${line//^[[:alpha:]]/}\"\n    local line=\"${line//^[[:print:]]/}\"\n\
    \    local line=\"${line//^[[:blank:]]/}\"\n    local line=\"${line//^[[:punct:]]/}\"\
    \n    local line=\"${line//^[[:graph:]]/}\"\n    local line=\"${line//^[[:blank:]]/}\"\
    \n    local line=\"${line//^[[:cntrl:]]/}\"\n    local line=\"${line//^[[:lower:]]/}\"\
    \n    local line=\"${line//^[[:upper:]]/}\"\n    local line=\"${line//^[[:digit:]]/}\"\
    \n    local line=\"${line//^[[:alpha:]]/}\"\n    local line=\"${line//^[[:punct:]]/}\"\
    \n    local line=\"${line//^[[:graph:]]/}\"\n    local line=\"${line//^[[:blank:]]/}\"\
    \n    local line=\"${line//^[[:cntrl:]]/}\"\n    local line=\"${line//^[[:lower:]]/}\"\
    \n    local line=\"${line//^[[:upper:]]/}\"\n    local line=\"${line//^[[:digit:]]/}\"\
    \n    local line=\"${line//^[[:alpha:]]/}\"\n    local line=\"${line//^[[:punct:]]/}\"\
    \n    local line=\"${line//^[[:graph:]]/}\"\n    local line=\"${line//^[[:blank:]]/}\"\
    \n    local line=\"${line//^[[:cntrl:]]/}\"\n    local line=\"${line//^[[:lower:]]/}\"\
    \n    local line=\"${line//^[[:upper:]]/}\"\n    \n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpee2q02su.sh: line 45: syntax error near unexpected token `}''

    /tmp/tmpee2q02su.sh: line 45: `}''

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output=\"\"\n  local count=0\n  local item\n  local last\n  while read\
    \ -r item; do\n    ((count++))\n    if [[ \"$count\" -gt 1 ]]; then\n      if\
    \ [[ \"$last\" != \"$item\" ]]; then\n        output=\"$output$item\"\n      fi\n\
    \    fi\n    last=\"$item\"\n  done < <(echo \"$list\")\n  echo \"$output\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local i seen=()\n \
    \   for ((i=1; i<=$#; i++))\n    do\n        seen[$i]=1\n    done\n    local j\n\
    \    for ((j=1; j<=$#; j++))\n    do\n        if [[ ${seen[$j]} -eq 1 ]]\n   \
    \     then\n            echo \"$j\"\n        fi\n    done\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    local lastlastlast=\"\
    \"\n    local lastlastlastcount=0\n    local lastlastlastlast=\"\"\n    local\
    \ lastlastlastlastcount=0\n    local lastlastlastlastlast=\"\"\n    local lastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlast\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $element != $element ]]; then\n            if [[\
    \ $count -eq 0 ]]; then\n                count=$element\n                output=\"\
    $output$element\"\n            else\n                if [[ $element -gt $count\
    \ ]]; then\n                    count=$element\n                    output=\"\
    $output$element\"\n                fi\n            fi\n        fi\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    for element in $list;\
    \ do\n        if [ \"$last\" != \"$element\" ]; then\n            if [ \"$lastcount\"\
    \ -gt \"$count\" ]; then\n                lastlastcount=$lastcount\n         \
    \       lastlast=$last\n            fi\n            count=$count\n           \
    \ last=$element\n        fi\n    done\n    if [ \"$lastlastcount\" -gt \"$count\"\
    \ ]; then\n        lastlastcount=$count\n        lastlast=$last\n    fi\n    for\
    \ element in $list; do\n        if [ \"$lastlast\" != \"$element\" ]; then\n \
    \           if [ \"$lastlastcount\" -gt \"$count\" ]; then\n                lastlastcount=$count\n\
    \                lastlast=$last\n            fi\n            count=$count\n  \
    \          last=$element\n        fi\n    done\n    if [ \"$lastlastcount\" -gt\
    \ \"$count\" ]; then\n        lastlastcount=$count\n        lastlast=$last\n \
    \   fi\n    for element in $list; do\n        if [ \"$lastlast\" != \"$element\"\
    \ ]; then\n            if [ \"$lastlastcount\" -gt \"$count\" ]; then\n      \
    \          lastlastcount=$count\n                lastlast=$last\n            fi\n\
    \            count=$count\n            last=$element\n        fi\n    done\n \
    \   if [ \"$lastlastcount\" -gt \"$count\" ]; then\n        lastlastcount=$count\n\
    \        lastlast=$last\n    fi\n    for element in $list; do\n        if [ \"\
    $lastlast\" != \"$element\" ]; then\n            if [ \"$lastlastcount\" -gt \"\
    $count\" ]; then\n                lastlastcount=$count\n                lastlast=$last\n\
    \            fi\n            count=$count\n            last=$element\n       \
    \ fi\n    done\n    if [ \"$lastlastcount\" -gt \"$count\" ]; then\n        lastlastcount=$count\n\
    \        lastlast=$last\n    fi\n    for element in $list; do\n        if [ \"\
    $lastlast\" != \"$element\" ]; then\n            if [ \"$lastlastcount\" -gt \"\
    $count\" ]; then\n                lastlastcount=$count\n                lastlast=$last\n\
    \            fi\n            count=$count\n            last=$element\n       \
    \ fi\n    done\n    if [ \"$lastlastcount\" -gt \"$count\" ]; then\n        lastlastcount=$count\n\
    \        lastlast=$last\n    fi\n    for element in $list; do\n        if [ \"\
    $lastlast\" != \"$element\" ]; then\n            if [ \"$lastlastcount\" -gt \"\
    $count\" ]; then\n                lastlastcount=$count\n                lastlast=$last\n\
    \            fi\n            count=$\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp36ade0tj.sh: line 91: syntax error near unexpected token `}''

    /tmp/tmp36ade0tj.sh: line 91: `}''

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output\n    local i\n    local j\n    local count\n    local element\n\
    \    local element2\n    local element3\n    local element4\n    local element5\n\
    \    local element6\n    local element7\n    local element8\n    local element9\n\
    \    local element10\n    local element11\n    local element12\n    local element13\n\
    \    local element14\n    local element15\n    local element16\n    local element17\n\
    \    local element18\n    local element19\n    local element20\n    local element21\n\
    \    local element22\n    local element23\n    local element24\n    local element25\n\
    \    local element26\n    local element27\n    local element28\n    local element29\n\
    \    local element30\n    local element31\n    local element32\n    local element33\n\
    \    local element34\n    local element35\n    local element36\n    local element37\n\
    \    local element38\n    local element39\n    local element40\n    local element41\n\
    \    local element42\n    local element43\n    local element44\n    local element45\n\
    \    local element46\n    local element47\n    local element48\n    local element49\n\
    \    local element50\n    local element51\n    local element52\n    local element53\n\
    \    local element54\n    local element55\n    local element56\n    local element57\n\
    \    local element58\n    local element59\n    local element60\n    local element61\n\
    \    local element62\n    local element63\n    local element64\n    local element65\n\
    \    local element66\n    local element67\n    local element68\n    local element69\n\
    \    local element70\n    local element71\n    local element72\n    local element73\n\
    \    local element74\n    local element75\n    local element76\n    local element77\n\
    \    local element78\n    local element79\n    local element80\n    local element81\n\
    \    local element82\n    local element83\n    local element84\n    local element85\n\
    \    local element86\n    local element87\n    local element88\n    local element89\n\
    \    local element90\n    local element91\n    local element92\n    local element93\n\
    \    local element94\n    local element95\n    local element96\n    local element97\n\
    \    local element98\n    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count\n    local last\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    local D\n    local E\n    local F\n    local G\n    local\
    \ H\n    local I\n    local J\n    local K\n    local L\n    local M\n    local\
    \ N\n    local O\n    local P\n    local Q\n    local R\n    local S\n    local\
    \ T\n    local U\n    local V\n    local W\n    local X\n    local Y\n    local\
    \ Z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local A\n    local B\n    local C\n    local\
    \ D\n    local E\n    local F\n    local G\n    local H\n    local I\n    local\
    \ J\n    local K\n    local L\n    local M\n    local N\n    local O\n    local\
    \ P\n    local Q\n    local R\n    local S\n    local T\n    local U\n    local\
    \ V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local A\n    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$lastcount\" -gt \"$count\" ]; then\n\
    \                lastcount=$count\n                lastlast=$last\n          \
    \  fi\n            count=$((count+1))\n            last=$line\n        fi\n  \
    \  done <<< \"$input\"\n    if [ \"$lastcount\" -gt \"$count\" ]; then\n     \
    \   lastcount=$count\n        lastlast=$last\n    fi\n    while [ \"$lastlast\"\
    \ != \"$last\" ]; do\n        echo \"$lastlast\"\n        echo \"$lastcount\"\n\
    \        echo \"$count\"\n        echo \"$input\"\n        echo \"$output\"\n\
    \        echo \"$lastlast\"\n        echo \"$lastcount\"\n        echo \"$count\"\
    \n        echo \"$input\"\n        echo \"$output\"\n        echo \"$lastlast\"\
    \n        echo \"$lastcount\"\n        echo \"$count\"\n        echo \"$input\"\
    \n        echo \"$output\"\n        echo \"$lastlast\"\n        echo \"$lastcount\"\
    \n        echo \"$count\"\n        echo \"$input\"\n        echo \"$output\"\n\
    \        echo \"$lastlast\"\n        echo \"$lastcount\"\n        echo \"$count\"\
    \n        echo \"$input\"\n        echo \"$output\"\n        echo \"$lastlast\"\
    \n        echo \"$lastcount\"\n        echo \"$count\"\n        echo \"$input\"\
    \n        echo \"$output\"\n        echo \"$lastlast\"\n        echo \"$lastcount\"\
    \n        echo \"$count\"\n        echo \"$input\"\n        echo \"$output\"\n\
    \        echo \"$lastlast\"\n        echo \"$lastcount\"\n        echo \"$count\"\
    \n        echo \"$input\"\n        echo \"$output\"\n        echo \"$lastlast\"\
    \n        echo \"$lastcount\"\n        echo \"$count\"\n        echo \"$input\"\
    \n        echo \"$output\"\n        echo \"$lastlast\"\n        echo \"$lastcount\"\
    \n        echo \"$count\"\n        echo \"$input\"\n        echo \"$output\"\n\
    \        echo \"$lastlast\"\n        echo \"$lastcount\"\n        echo \"$count\"\
    \n        echo \"$input\"\n        echo \"$output\"\n        echo \"$lastlast\"\
    \n        echo \"$lastcount\"\n        echo \"$count\"\n        echo \"$input\"\
    \n        \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzl2iy4bb.sh: line 88: syntax error near unexpected token `}''

    /tmp/tmpzl2iy4bb.sh: line 88: `}''

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    local lastlastlast=\"\
    \"\n    local lastlastlastcount=0\n    local lastlastlastlast=\"\"\n    local\
    \ lastlastlastlastcount=0\n    local lastlastlastlastlast=\"\"\n    local lastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlast=\"\
    \"\n    local lastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlast\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local -a seen=()\n    local -a result=()\n    local i item\n    for item\
    \ in $@; do\n        if [[ ${seen[$item]} ]]; then\n            echo \"$item\"\
    \n        else\n            seen[$item]=true\n            result+=(\"$item\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz3plpd3l.sh: line 12: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    local lastlastlast=\"\
    \"\n    local lastlastlastcount=0\n    local lastlastlastlast=\"\"\n    local\
    \ lastlastlastlastcount=0\n    local lastlastlastlastlast=\"\"\n    local lastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n \
    \   local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n \
    \   local last\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    while read -r line; do\n\
    \        if [ \"$last\" != \"$line\" ]; then\n            if [ \"$lastcount\"\
    \ -gt \"$count\" ]; then\n                lastlastcount=$count\n             \
    \   lastlast=$last\n            fi\n            count=$((count+1))\n         \
    \   last=$line\n        fi\n    done <<< \"$list\"\n    if [ \"$lastlastcount\"\
    \ -gt \"$lastcount\" ]; then\n        lastlastcount=$count\n        lastlast=$last\n\
    \    fi\n    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n\
    \            if [ \"$lastlastcount\" -gt \"$count\" ]; then\n                lastlastcount=$count\n\
    \                lastlast=$last\n            fi\n            count=$((count+1))\n\
    \            last=$line\n        fi\n    done <<< \"$list\"\n    if [ \"$lastlastcount\"\
    \ -gt \"$lastcount\" ]; then\n        lastlastcount=$count\n        lastlast=$last\n\
    \    fi\n    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n\
    \            if [ \"$lastlastcount\" -gt \"$count\" ]; then\n                lastlastcount=$count\n\
    \                lastlast=$last\n            fi\n            count=$((count+1))\n\
    \            last=$line\n        fi\n    done <<< \"$list\"\n    if [ \"$lastlastcount\"\
    \ -gt \"$lastcount\" ]; then\n        lastlastcount=$count\n        lastlast=$last\n\
    \    fi\n    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n\
    \            if [ \"$lastlastcount\" -gt \"$count\" ]; then\n                lastlastcount=$count\n\
    \                lastlast=$last\n            fi\n            count=$((count+1))\n\
    \            last=$line\n        fi\n    done <<< \"$list\"\n    if [ \"$lastlastcount\"\
    \ -gt \"$lastcount\" ]; then\n        lastlastcount=$count\n        lastlast=$last\n\
    \    fi\n    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n\
    \            if [ \"$lastlastcount\" -gt \"$count\" ]; then\n                lastlastcount=$count\n\
    \                lastlast=$last\n            fi\n            count=$((count+1))\n\
    \            last=$line\n        fi\n    done <<< \"$list\"\n    if [ \"$lastlastcount\"\
    \ -gt \"$lastcount\" ]; then\n        lastlastcount=$count\n        lastlast=$last\n\
    \    fi\n    while read -r line; do\n        if \n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp90y_jn6q.sh: line 86: syntax error near unexpected token `}''

    /tmp/tmp90y_jn6q.sh: line 86: `}''

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local a\n    a=$1\n    local b\n    for b in $a; do\n        [[ $a =~ $b\
    \ ]] && echo ${a#$b}\n    done\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\n'\
    \ ' ')\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    for element in $list; do\n    \
    \    if [ \"$count\" -eq 0 ]; then\n            output=\"$element\"\n        \
    \    count=1\n        else\n            if [ \"$element\" == \"$output\" ]; then\n\
    \                count=$((count+1))\n            else\n                output=\"\
    $output $element\"\n                count=1\n            fi\n        fi\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    local lastlastlast=\"\
    \"\n    local lastlastlastcount=0\n    local lastlastlastlast=\"\"\n    local\
    \ lastlastlastlastcount=0\n    local lastlastlastlastlast=\"\"\n    local lastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n \
    \   local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $element != $element ]]; then\n            if [[\
    \ $count -gt 0 ]]; then\n                output+=\" $element\"\n            else\n\
    \                output+=\"$element\"\n            fi\n            ((count++))\n\
    \        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local output\n    output=$(printf '%s\\n' \"$@\" | sort -u)\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local element\n  local last\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [ \"$count\" -eq 1 ]; then\n            output=\"$element\"\
    \n        else\n            output=\"$output$element\"\n        fi\n        count=$((\
    \ $count + 1 ))\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n \
    \ echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n\
    \  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local\
    \ tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n\
    \  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n \
    \ local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local\
    \ tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n\
    \  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n \
    \ local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local\
    \ tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n\
    \  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n \
    \ local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local\
    \ tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n\
    \  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n \
    \ local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local\
    \ tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n\
    \  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n \
    \ local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local\
    \ tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local i seen=()\n \
    \   for (( i=0; i<${#1}; i++ )); do\n        if [[ ${seen[${i}]} ]]; then\n  \
    \          echo \"${1}\"\n            return\n        fi\n        seen[${i}]=1\n\
    \    done\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [ \"$count\" -eq 0 ]; then\n            output=\"$element\"\
    \n            count=1\n        else\n            if [ \"$element\" == \"$output\"\
    \ ]; then\n                count=$((count+1))\n            else\n            \
    \    output=\"$output$element\"\n                count=1\n            fi\n   \
    \     fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=()\n  local count=0\n  while read -r line;\
    \ do\n    count=$((count+1))\n    seen+=(\"$line\")\n  done < <(echo \"$input\"\
    \ | tr ' ' '\\n' | sort -u)\n  while read -r line; do\n    if [[ \" ${seen[*]}\
    \ \" =~ \" $line \" ]]; then\n      output+=\"$line\"\n    fi\n  done < <(echo\
    \ \"$output\" | tr ' ' '\\n' | sort -u)\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$last\" != \"\" ]; then\n                if [ \"$lastcount\"\
    \ -gt \"$count\" ]; then\n                    output+=\"$last\"\n            \
    \    fi\n            fi\n            count=$((count+1))\n            last=\"$line\"\
    \n            lastcount=$((lastcount+1))\n        else\n            count=$((count+1))\n\
    \        fi\n    done <<< \"$input\"\n    if [ \"$last\" != \"\" ]; then\n   \
    \     if [ \"$lastcount\" -gt \"$count\" ]; then\n            output+=\"$last\"\
    \n        fi\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [ \"$count\" -eq 1 ]; then\n            output=\"$output$element\"\
    \n        else\n            if [ \"$element\" != \"$output\" ]; then\n       \
    \         output=\"$output$element\"\n            fi\n        fi\n        count=$((count+1))\n\
    \    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local last\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local a\n    a=$1\n    local b\n    for b in $a; do\n        [[ $a =~ $b\
    \ ]] && echo \"$b\"\n    done\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local last\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local i seen=()\n \
    \   local j\n    for (( i=0; i<${#1[@]}; i++ )); do\n        if [[ ${seen[${i}]}\
    \ ]]; then\n            for (( j=0; j<${#seen[@]}; j++ )); do\n              \
    \  if [[ ${seen[${j}]} == ${i} ]]; then\n                    unset seen[${j}]\n\
    \                fi\n            done\n        fi\n        seen[${i}]=1\n    done\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwdnbfbsr.sh: line 11: i<${#1[@]}: bad substitution

    /tmp/tmpwdnbfbsr.sh: line 11: i<${#1[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local last\n  local i\n  local j\n  local\
    \ k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n \
    \ echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n\
    \  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local\
    \ tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n\
    \  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n \
    \ local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local\
    \ tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n\
    \  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n \
    \ local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local\
    \ tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n\
    \  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n \
    \ local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local\
    \ tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n\
    \  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n \
    \ local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local\
    \ tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n\
    \  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n \
    \ local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local\
    \ tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=' '\n   \
    \ local -a seen=()\n    local -a result=()\n    for item in $@; do\n        if\
    \ [[ ${seen[$item]} ]]; then\n            echo \"$item\" # print item\n      \
    \  else\n            seen[$item]=1 # set seen to 1 at index of item\n        \
    \    result+=(\"$item\") # append item to result\n        fi\n    done\n    echo\
    \ \"${result[@]}\" # return result\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(IFS=' '; echo \"$list\" | tr ' ' '\\n' | sort\
    \ | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ len\n  local max\n  local min\n  local tmp\n  local tmp2\n  local tmp3\n  local\
    \ tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n\
    \  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n \
    \ local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n  local tmp19\n  local\
    \ tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n\
    \  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n \
    \ local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n  local tmp35\n  local\
    \ tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n\
    \  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n \
    \ local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n  local tmp51\n  local\
    \ tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n\
    \  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n \
    \ local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n  local tmp67\n  local\
    \ tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n\
    \  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n \
    \ local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n  local tmp83\n  local\
    \ tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n\
    \  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n \
    \ local tmp\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    local lastlastlast=\"\
    \"\n    local lastlastlastcount=0\n    local lastlastlastlast=\"\"\n    local\
    \ lastlastlastlastcount=0\n    local lastlastlastlastlast=\"\"\n    local lastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n \
    \   local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(IFS=' '; echo \"$list\" | tr ' ' '\\n' | sort\
    \ | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local output\n    output=$(echo \"$1\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$lastcount\" -gt \"$count\" ]; then\n\
    \                output=\"$output$lastlast\"\n            fi\n            last=\"\
    $line\"\n            count=$((count+1))\n            lastcount=$((lastcount+1))\n\
    \            lastlast=\"$line\"\n        else\n            lastcount=$((lastcount+1))\n\
    \            lastlast=\"$line\"\n        fi\n    done <<< \"$input\"\n    if [\
    \ \"$last\" != \"$line\" ]; then\n        if [ \"$lastcount\" -gt \"$count\" ];\
    \ then\n            output=\"$output$lastlast\"\n        fi\n    fi\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local -a seen=()\n    local -a result=()\n    local i item\n    for item\
    \ in $1; do\n        if [[ ${seen[$item]} ]]; then\n            echo \"$item occurs\
    \ more than once\" >&2\n        else\n            seen[$item]=1\n            result+=(\"\
    $item\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpks0ubms0.sh: line 12: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  local lastcount=0\n\
    \  while read -r line; do\n    count=$((count+1))\n    if [ \"$last\" != \"$line\"\
    \ ]; then\n      if [ \"$lastcount\" -eq \"$count\" ]; then\n        output=\"\
    $output $last\"\n      else\n        output=\"$output $lastcount $last\"\n   \
    \   fi\n      lastcount=$count\n      last=\"$line\"\n    fi\n  done <<< \"$input\"\
    \n  output=\"$output $lastcount $last\"\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  while read -r line;\
    \ do\n    if [[ \"$last\" != \"$line\" ]]; then\n      output+=\"$line\"\n   \
    \   count=$((count+1))\n    fi\n    last=\"$line\"\n  done < <(echo \"$input\"\
    \ | tr ' ' '\\n' | sort -u)\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq -d)\n\
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [ \"$count\" -eq 0 ]; then\n            output=\"$element\"\
    \n            count=1\n        else\n            if [ \"$element\" != \"$output\"\
    \ ]; then\n                count=$((count+1))\n                output=\"$output$count\"\
    \n            fi\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$lastcount\" -gt 1 ]; then\n         \
    \       lastcount=0\n                lastlast=\"$last\"\n            fi\n    \
    \        last=\"$line\"\n            count=$((count+1))\n        else\n      \
    \      count=$((count+1))\n        fi\n    done <<< \"$list\"\n    if [ \"$lastcount\"\
    \ -gt 1 ]; then\n        echo \"$lastlast\"\n    else\n        echo \"$last\"\n\
    \    fi\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    while read\
    \ -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n            if [ \"\
    $count\" -gt 0 ]; then\n                printf \"%s\" \"$last\"\n            fi\n\
    \            count=0\n            last=\"$line\"\n        fi\n        (( count++\
    \ ))\n    done <<< \"$input\"\n    if [ \"$count\" -gt 0 ]; then\n        printf\
    \ \"%s\" \"$last\"\n    fi\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [ \"$count\" -eq 0 ]; then\n            output=\"$element\"\
    \n            count=1\n        else\n            if [ \"$element\" != \"$output\"\
    \ ]; then\n                count=$(( $count + 1 ))\n                output=\"\
    $output $element\"\n            else\n                count=$(( $count - 1 ))\n\
    \            fi\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output\n  output=$(echo \"$input\" | tr \" \" \"\\n\" | sort | uniq -d)\n\
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local\
    \ tmp95\n    local tmp96\n    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local last\n    local i\n    local\
    \ j\n    local k\n    local len\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local \n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $element != $output ]]; then\n            output=\"\
    $element\"\n            count=$((count+1))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=' '\n   \
    \ local -a seen=()\n    local -a result=()\n    for item in $@; do\n        if\
    \ [[ ${seen[$item]} != 1 ]]; then\n            seen[$item]=1\n            result+=(\"\
    $item\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count\n    local i\n    local j\n    local k\n\
    \    for (( i=0; i<${#list}; i++ )); do\n        count=\"${list[i]}\"\n      \
    \  for (( j=0; j<i; j++ )); do\n            if [ \"${list[j]}\" == \"${list[i]}\"\
    \ ]; then\n                count=\"${count} ${list[j]}\"\n            fi\n   \
    \     done\n        if [ \"${count}\" -gt 1 ]; then\n            output=\"${output}\
    \ ${list[i]}\"\n        fi\n    done\n    echo \"${output}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphxj3gttr.sh: line 20: [: 1 2 3 4: integer expression expected

    /tmp/tmphxj3gttr.sh: line 20: [: : integer expression expected

    /tmp/tmphxj3gttr.sh: line 20: [:  : integer expression expected

    /tmp/tmphxj3gttr.sh: line 20: [:   : integer expression expected

    /tmp/tmphxj3gttr.sh: line 20: [:    : integer expression expected

    /tmp/tmphxj3gttr.sh: line 20: [:     : integer expression expected

    /tmp/tmphxj3gttr.sh: line 20: [:      : integer expression expected

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    local lastlastlast=\"\
    \"\n    local lastlastlastcount=0\n    local lastlastlastlast=\"\"\n    local\
    \ lastlastlastlastcount=0\n    local lastlastlastlastlast=\"\"\n    local lastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlast=\"\"\n    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n \
    \   local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \    local \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    for element in $list; do\n    \
    \    if [[ $element == *\"$element\"* ]]; then\n            ((count++))\n    \
    \    else\n            if (( count > 0 )); then\n                output+=\" $element\"\
    \n            fi\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    while read\
    \ -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n            if [ \"\
    $count\" -gt 0 ]; then\n                printf \"%s\" \"$last\"\n            fi\n\
    \            count=0\n            last=\"$line\"\n        else\n            ((\
    \ count++ ))\n        fi\n    done <<< \"$input\"\n    if [ \"$count\" -gt 0 ];\
    \ then\n        printf \"%s\" \"$last\"\n    fi\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count\n    local i\n    for (( i=0; i<${#list};\
    \ i++ )); do\n        count=\"${list[i]}\"\n        if (( count > 1 )); then\n\
    \            output=\"${output} ${list[i]}\"\n        fi\n    done\n    echo \"\
    ${output}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxh24f8wk.sh: line 13: ((: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    for element in $list;\
    \ do\n        if [ \"$last\" != \"$element\" ]; then\n            if [ \"$lastcount\"\
    \ -gt \"$count\" ]; then\n                output=\"$output $lastlast\"\n     \
    \           lastlastcount=$lastcount\n            fi\n            lastcount=$count\n\
    \            lastlast=$element\n        fi\n        count=$((count+1))\n    done\n\
    \    if [ \"$lastlastcount\" -gt \"$count\" ]; then\n        output=\"$output\
    \ $lastlast\"\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if (( count > 0 )); then\n            output+=\" $element\"\
    \n        fi\n        count=$(( $count + 1 ))\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort -u)\n   \
    \ echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $element != $element ]]; then\n            if [[\
    \ $count -eq 0 ]]; then\n                output=\"$element\"\n            else\n\
    \                output=\"$output$element\"\n            fi\n            count=$((count+1))\n\
    \        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $element == \"$element\" ]]; then\n            ((count++))\n\
    \        else\n            if ((count > 1)); then\n                output+=\"\
    \ $element\"\n            else\n                output+=\"$element\"\n       \
    \     fi\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output=\"\"\n  local count=0\n  local last=\"\"\n  while read -r line;\
    \ do\n    count=$((count+1))\n    if [ \"$last\" != \"$line\" ]; then\n      output=\"\
    $output $line\"\n      last=\"$line\"\n    fi\n  done <<< \"$list\"\n  if [ \"\
    $count\" -gt 1 ]; then\n    echo \"$output\"\n  else\n    echo \"$list\"\n  fi\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(IFS=' '; echo \"$list\" | tr ' ' '\\n' | sort\
    \ | uniq -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    for element in $list; do\n    \
    \    if [ \"$count\" -eq 0 ]; then\n            output=\"$element\"\n        \
    \    count=1\n        else\n            if [ \"$element\" != \"$output\" ]; then\n\
    \                count=$((count+1))\n                output=\"$output$count\"\n\
    \            else\n                count=$((count+1))\n            fi\n      \
    \  fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local -a arr\n    local i seen\n    arr=( $1 )\n    seen=()\n    for i in\
    \ \"${!arr[@]}\"; do\n        if [[ ${seen[i]} ]]; then\n            arr[i]=()\n\
    \        else\n            seen[i]=1\n        fi\n    done\n    IFS=$' \\t\\n'\n\
    \    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq -d)\n\
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  local lastcount=0\n\
    \  while read -r line; do\n    count=$(( $count + 1 ))\n    if [ \"$last\" !=\
    \ \"$line\" ]; then\n      if [ \"$lastcount\" -ge \"$count\" ]; then\n      \
    \  output=\"$output$last\"\n        lastcount=0\n      else\n        output=\"\
    $output$line\"\n        lastcount=$count\n      fi\n    fi\n    last=\"$line\"\
    \n  done < <(echo \"$input\" | sort -u)\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$lastcount\" -gt 1 ]; then\n                lastcount=0\n   \
    \             output=\"$output$last\"\n            fi\n            last=\"$line\"\
    \n            lastcount=1\n        else\n            lastcount=$((lastcount+1))\n\
    \        fi\n    done <<< \"$input\"\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    local lastlastcount=0\n    for element in $list;\
    \ do\n        if [ \"$last\" != \"$element\" ]; then\n            if [ \"$count\"\
    \ -gt 0 ]; then\n                if [ \"$lastcount\" -gt \"$lastlastcount\" ];\
    \ then\n                    lastlastcount=$lastcount\n                    lastlast=$last\n\
    \                    lastcount=$count\n                else\n                \
    \    lastcount=$count\n                    last=$element\n                fi\n\
    \            else\n                lastcount=$count\n                last=$element\n\
    \            fi\n            count=1\n        else\n            ((count++))\n\
    \        fi\n    done\n    if [ \"$lastlastcount\" -gt \"$lastcount\" ]; then\n\
    \        lastlastcount=$lastcount\n        lastlast=$last\n    else\n        lastlastcount=$lastcount\n\
    \        lastlast=$last\n    fi\n    for element in $list; do\n        if [ \"\
    $last\" != \"$element\" ]; then\n            if [ \"$count\" -gt 0 ]; then\n \
    \               if [ \"$lastcount\" -gt \"$lastlastcount\" ]; then\n         \
    \           lastlastcount=$lastcount\n                    lastlast=$last\n   \
    \                 lastcount=$count\n                else\n                   \
    \ lastcount=$count\n                    last=$element\n                fi\n  \
    \          else\n                lastcount=$count\n                last=$element\n\
    \            fi\n            count=1\n        else\n            ((count++))\n\
    \        fi\n    done\n    if [ \"$lastlastcount\" -gt \"$lastcount\" ]; then\n\
    \        lastlastcount=$lastcount\n        lastlast=$last\n    else\n        lastlastcount=$lastcount\n\
    \        lastlast=$last\n    fi\n    for element in $list; do\n        if [ \"\
    $last\" != \"$element\" ]; then\n            if [ \"$count\" -gt 0 ]; then\n \
    \               if [ \"$lastcount\" -gt \"$lastlastcount\" ]; then\n         \
    \           lastlastcount=$lastcount\n                    lastlast=$last\n   \
    \                 lastcount=$count\n                else\n                   \
    \ lastcount=$count\n                    last=$element\n                fi\n  \
    \          else\n                lastcount=$count\n                last=$element\n\
    \            fi\n            count=1\n        else\n            ((count++))\n\
    \        fi\n    done\n    if [ \"$lastlastcount\" -gt \"$lastcount\" ]; then\n\
    \        lastlastcount=$lastcount\n        lastlast=$last\n    else\n        lastlastcount=$lastcount\n\
    \        lastlast=$last\n    fi\n    for element in $list; do\n        if [ \"\
    $last\" != \"$element\" ]; then\n            if [ \"$count\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp600vm8ke.sh: line 108: unexpected EOF while looking for matching
    `"''

    /tmp/tmp600vm8ke.sh: line 112: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output\n  output=\"$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\"\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local tmp\n  local count\n  local output\n  output=$(echo \"$list\" | tr \"\
    \ \" \"\\n\")\n  count=0\n  while read -r line; do\n    ((count++))\n    if [[\
    \ \"$line\" == \"$line\" ]]; then\n      continue\n    fi\n    if [[ \"$count\"\
    \ -gt 1 ]]; then\n      tmp=\"$line\"\n      output=\"$output$tmp\"\n    fi\n\
    \  done <<< \"$output\"\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local lastlast=\"\"\n    while read -r line; do\n        if [ \"$last\" !=\
    \ \"$line\" ]; then\n            if [ \"$lastcount\" -gt 1 ]; then\n         \
    \       if [ \"$lastlast\" != \"$last\" ]; then\n                    output+=\"\
    $last\"\n                    lastlast=\"$last\"\n                fi\n        \
    \    fi\n            last=\"$line\"\n            lastcount=1\n        else\n \
    \           lastcount=$((lastcount+1))\n        fi\n    done <<< \"$input\"\n\
    \    output+=\"$last\"\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort -u |\
    \ tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    local i=0\n    local j=0\n    while [ $i -lt ${#input} ]; do\n        if\
    \ [ \"${input[$i]}\" == \"${input[$i+1]}\" ]; then\n            (( count++ ))\n\
    \        else\n            if [ $count -gt $lastcount ]; then\n              \
    \  output+=\" $last\"\n            fi\n            lastcount=$count\n        \
    \    last=\"${input[$i]}\"\n        fi\n        (( i++ ))\n    done\n    if [\
    \ $count -gt $lastcount ]; then\n        output+=\" $last\"\n    fi\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output\n    output=$(echo \"$input\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo ${output}\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output\n    output=$(echo \"$input\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local input=\"$1\"\n    local output\n    output=$(echo \"$input\" | tr '\
    \ ' '\\n' | sort -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output=\"\"\n  local count=0\n  local last=\"\"\n  local lastcount=0\n\
    \  local lastlast=\"\"\n  local lastlastcount=0\n  local lastlastlast=\"\"\n \
    \ local lastlastlastcount=0\n  local lastlastlastlast=\"\"\n  local lastlastlastlastcount=0\n\
    \  local lastlastlastlastlast=\"\"\n  local lastlastlastlastlastcount=0\n  local\
    \ lastlastlastlastlastlast=\"\"\n  local lastlastlastlastlastlastcount=0\n  local\
    \ lastlastlastlastlastlastlast=\"\"\n  local lastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlast=\"\"\n  local lastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlast=\"\"\n  local lastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlast=\"\"\n  local lastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlast=\"\"\n  local lastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlast=\"\"\n  local lastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlastcount=0\n  local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlastlastcount=0\n  local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n  local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n  local lastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n  local\
    \ lastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n  local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local lastlastlastlastlastlastlastlastlastlastlastlastlastlastlastcount=0\n\
    \  local \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$last\" != \"\" ]; then\n                if [ \"$lastcount\"\
    \ -gt \"$count\" ]; then\n                    output+=\" $last\"\n           \
    \     fi\n            fi\n            last=\"$line\"\n            lastcount=\"\
    $count\"\n            count=0\n        else\n            (( count++ ))\n     \
    \   fi\n    done <<< \"$list\"\n    if [ \"$last\" != \"\" ]; then\n        if\
    \ [ \"$lastcount\" -gt \"$count\" ]; then\n            output+=\" $last\"\n  \
    \      fi\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$lastcount\" -gt \"$count\" ]; then\n                lastcount=$count\n\
    \                output=\"$output$last\"\n            fi\n            count=$((count+1))\n\
    \            last=\"$line\"\n        else\n            count=$((count+1))\n  \
    \      fi\n    done <<< \"$input\"\n    if [ \"$lastcount\" -gt \"$count\" ];\
    \ then\n        lastcount=$count\n        output=\"$output$last\"\n    fi\n  \
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local tmp\n    local count\n    local i\n    local j\n    local output\n\
    \    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp97\n    local tmp98\n    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count\n    local i\n    local j\n    for ((i=0;\
    \ i<${#list}; i++)); do\n        count=\"${list[i]}\"\n        for ((j=i+1; j<${#list};\
    \ j++)); do\n            if [ \"${list[i]}\" -eq \"${list[j]}\" ]; then\n    \
    \            count=\"${list[j]}\"\n            fi\n        done\n        if [\
    \ \"${count}\" -gt 1 ]; then\n            output=\"${output} ${list[i]}\"\n  \
    \      fi\n    done\n    echo \"${output}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbqk9g95u.sh: line 15: [: 1 2 3 4: integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: 1 2 3 4: integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: 1 2 3 4: integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: 1 2 3 4: integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: 1 2 3 4: integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: 1 2 3 4: integer expression expected

    /tmp/tmpbqk9g95u.sh: line 19: [: 1 2 3 4: integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 19: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 19: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 19: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 19: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 15: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 19: [: : integer expression expected

    /tmp/tmpbqk9g95u.sh: line 19: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output\n    output=$(echo \"$input\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n\
    \  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local\
    \ tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n\
    \  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n \
    \ local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local\
    \ tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n\
    \  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n \
    \ local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local\
    \ tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n\
    \  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n \
    \ local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local\
    \ tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n\
    \  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n \
    \ local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local\
    \ tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n\
    \  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n \
    \ local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local\
    \ tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    for element in $list; do\n    \
    \    if [ \"$count\" -gt 0 ]; then\n            if [ \"$element\" != \"$output\"\
    \ ]; then\n                output=\"$output$element\"\n            fi\n      \
    \  fi\n        count=$(( $count + 1 ))\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ len\n  local tmp\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n \
    \ local tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local\
    \ tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n\
    \  local tmp17\n  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n \
    \ local tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local\
    \ tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n\
    \  local tmp33\n  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n \
    \ local tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local\
    \ tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n\
    \  local tmp49\n  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n \
    \ local tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local\
    \ tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n\
    \  local tmp65\n  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n \
    \ local tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local\
    \ tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n\
    \  local tmp81\n  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n \
    \ local tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local\
    \ tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n\
    \  \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort | uniq\
    \ -d)\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output=\"\"\n  local count=0\n  local element\n  while IFS= read -r element;\
    \ do\n    ((count++))\n    if [ \"$count\" -gt 1 ]; then\n      output=\"$output\
    \ $element\"\n    fi\n  done <<< \"$list\"\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local last\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local item\n    for item in $list;\
    \ do\n        if [[ $item != $output ]]; then\n            output+=\"$item\"\n\
    \            count=$((count+1))\n        fi\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local IFS=$'\\n'\n\
    \    local -a seen=()\n    local -a result=()\n    for item in $*; do\n      \
    \  if ! [[ -z ${seen[$item]} ]]; then\n            seen[$item]=1\n           \
    \ result+=(\"$item\")\n        else\n            seen[$item]=1\n        fi\n \
    \   done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgn8v6b_i.sh: line 11: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output=\"\"\n  local count=0\n  local element\n  while IFS= read -r element;\
    \ do\n    ((count++))\n    if [[ $count -gt 1 ]]; then\n      output+=\"$element\
    \ \"\n    fi\n  done <<< \"$list\"\n  echo \"$output\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local seen=()\n  local count=0\n  local last\n  while\
    \ read -r line; do\n    count=$((count+1))\n    last=\"$line\"\n  done < <(echo\
    \ \"$input\" | sort -u)\n  while read -r line; do\n    seen+=(\"$line\")\n  done\
    \ < <(echo \"$input\" | sort -u)\n  while read -r line; do\n    if [[ ${seen[@]}\
    \ =~ $line ]]; then\n      echo \"$last\"\n      break\n    fi\n  done < <(echo\
    \ \"$output\")\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  while read -r line; do\n    ((count++))\n\
    \    if [[ \"$line\" == \"$input\" ]]; then\n      continue\n    fi\n    if [[\
    \ $count -gt 1 ]]; then\n      output+=\"$line\"\n    fi\n  done < <(echo \"$input\"\
    \ | tr ' ' '\\n' | sort -u)\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    local lastcount=0\n\
    \    while read -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n   \
    \         if [ \"$lastcount\" -eq 0 ]; then\n                last=\"$line\"\n\
    \                lastcount=1\n            else\n                if [ \"$count\"\
    \ -eq 0 ]; then\n                    output=\"$last\"\n                    count=1\n\
    \                else\n                    output=\"$output$last\"\n         \
    \           count=$((count+1))\n                fi\n            fi\n        else\n\
    \            if [ \"$count\" -eq 0 ]; then\n                output=\"$line\"\n\
    \                count=1\n            else\n                output=\"$output$line\"\
    \n                count=$((count+1))\n            fi\n        fi\n    done <<<\
    \ \"$input\"\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    while read\
    \ -r line; do\n        if [[ \"$last\" != \"$line\" ]]; then\n            if [[\
    \ \"$count\" -eq 0 ]]; then\n                count=$((count+1))\n            \
    \    output=\"$line\"\n            else\n                if [[ \"$output\" !=\
    \ \"\" ]]; then\n                    output+=\" $line\"\n                else\n\
    \                    output=\"$line\"\n                fi\n            fi\n  \
    \          last=\"$line\"\n        fi\n    done <<< \"$input\"\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local item\n    for item in $list;\
    \ do\n        if [[ $item != $output ]]; then\n            if (( count > 0 ));\
    \ then\n                output+=\" $item\"\n            else\n               \
    \ output=\"$item\"\n            fi\n            (( count++ ))\n        fi\n  \
    \  done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local tmp\n    local count\n    local i\n    local j\n    local result\n\n\
    \    list=\"$( echo \"$list\" | sed -e 's/^ *//' -e 's/ *$//' )\"\n    list=\"\
    $( echo \"$list\" | sed -e 's/^ *//' -e 's/ *$//' )\"\n\n    for (( i = 0; i <\
    \ ${#list}; i++ )); do\n        tmp=\"${list[i]}\"\n        count=\"${list[i+1]}\"\
    \n        if [ \"$count\" -gt 1 ]; then\n            for (( j=0; j < i; j++ ));\
    \ do\n                if [ \"$tmp\" == \"${list[j]}\" ]; then\n              \
    \      list=\"$( echo \"$list\" | sed -e \"s/$tmp//\" -e \"s/$tmp//\" )\"\n  \
    \                  (( i++ ))\n                    break\n                fi\n\
    \            done\n        fi\n    done\n\n    result=\"$( echo \"$list\" | sed\
    \ -e 's/^ *//' -e 's/ *$//' )\"\n    echo \"$result\"\n}\n\ncandidate() {\n  \
    \  remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    /tmp/tmp76a1y6wn.sh: line 20: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    while read\
    \ -r line; do\n        if [ \"$last\" != \"$line\" ]; then\n            if [ \"\
    $count\" -gt 1 ]; then\n                output+=\"$last\"\n            fi\n  \
    \          count=1\n            last=\"$line\"\n        else\n            ((count++))\n\
    \        fi\n    done <<< \"$input\"\n    if [ \"$count\" -gt 1 ]; then\n    \
    \    output+=\"$last\"\n    fi\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local element\n    for element\
    \ in $list; do\n        if [[ $count -gt 1 ]]; then\n            output+=\" $element\"\
    \n        fi\n        count=$(( $count + 1 ))\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local output\n    output=$(echo \"$list\" | tr \" \" \"\\n\" | sort -u |\
    \ tr \"\\n\" \" \")\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  while read -r line;\
    \ do\n    if [[ \"$last\" != \"$line\" ]]; then\n      if [[ \"$last\" != \"\"\
    \ ]]; then\n        output \"$last\"\n      fi\n      count=0\n      last=\"$line\"\
    \n    fi\n    ((count++))\n  done <<< \"$input\"\n  if [[ \"$last\" != \"\" ]];\
    \ then\n    output \"$last\"\n  fi\n  echo \"$output\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpup4kogqt.sh: line 22: output: command not found

    '
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local count=0\n  local last=\"\"\n  while read -r line;\
    \ do\n    if [ \"$last\" != \"$line\" ]; then\n      if [ \"$count\" -gt 0 ];\
    \ then\n        echo \"$output\"\n      fi\n      output=\"$line\"\n      count=1\n\
    \      last=\"$line\"\n    else\n      ((count++))\n    fi\n  done <<< \"$input\"\
    \n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"$2\"\n    local count\n    local i\n    local j\n    local\
    \ k\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp96\n    local tmp97\n\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output\n    output=$(echo \"$input\" | tr ' ' '\\n' | sort | uniq -d)\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local output=\"\"\n  local count=0\n  local element\n  while read -r element;\
    \ do\n    ((count++))\n    if [[ \"$count\" -gt 1 ]]; then\n      output=\"$output$element\"\
    \n    fi\n  done < <(echo \"$list\" | tr ' ' '\\n' | sort -u)\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"$2\"\n  local count\n  local i\n  local j\n  local k\n  local\
    \ counts\n  local counts_sorted\n  local counts_sorted_index\n  local counts_sorted_index2\n\
    \  local counts_sorted_index3\n  local counts_sorted_index4\n  local counts_sorted_index5\n\
    \  local counts_sorted_index6\n  local counts_sorted_index7\n  local counts_sorted_index8\n\
    \  local counts_sorted_index9\n  local counts_sorted_index10\n  local counts_sorted_index11\n\
    \  local counts_sorted_index12\n  local counts_sorted_index13\n  local counts_sorted_index14\n\
    \  local counts_sorted_index15\n  local counts_sorted_index16\n  local counts_sorted_index17\n\
    \  local counts_sorted_index18\n  local counts_sorted_index19\n  local counts_sorted_index20\n\
    \  local counts_sorted_index21\n  local counts_sorted_index22\n  local counts_sorted_index23\n\
    \  local counts_sorted_index24\n  local counts_sorted_index25\n  local counts_sorted_index26\n\
    \  local counts_sorted_index27\n  local counts_sorted_index28\n  local counts_sorted_index29\n\
    \  local counts_sorted_index30\n  local counts_sorted_index31\n  local counts_sorted_index32\n\
    \  local counts_sorted_index33\n  local counts_sorted_index34\n  local counts_sorted_index35\n\
    \  local counts_sorted_index36\n  local counts_sorted_index37\n  local counts_sorted_index38\n\
    \  local counts_sorted_index39\n  local counts_sorted_index40\n  local counts_sorted_index41\n\
    \  local counts_sorted_index42\n  local counts_sorted_index43\n  local counts_sorted_index44\n\
    \  local counts_sorted_index45\n  local counts_sorted_index46\n  local counts_sorted_index47\n\
    \  local counts_sorted_index48\n  local counts_sorted_index49\n  local counts_sorted_index50\n\
    \  local counts_sorted_index51\n  local counts_sorted_index52\n  local counts_sorted_index53\n\
    \  local counts_sorted_index54\n  local counts_sorted_index55\n  local counts_sorted_index56\n\
    \  local counts_sorted_index57\n  local counts_sorted_index58\n  local counts_sorted_index59\n\
    \  local \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local count=0\n    local last=\"\"\n    while read\
    \ -r line; do\n        if [[ \"$last\" != \"$line\" ]]; then\n            if [[\
    \ \"$count\" -gt 0 ]]; then\n                printf '%s\\n' \"$output\"\n    \
    \        fi\n            output=\"$line\"\n            count=1\n            last=\"\
    $line\"\n        else\n            ((count++))\n        fi\n    done <<< \"$input\"\
    \n    printf '%s\\n' \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039330

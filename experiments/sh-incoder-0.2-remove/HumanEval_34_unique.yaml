name: HumanEval_34_unique
language: sh
prompt: "#!/bin/bash\n# Return sorted unique elements in a list\n#\n# $1 is a space-separated\
  \ list\nunique() {\n"
tests: "}\n\ncandidate() {\n    unique \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5 3 5 2 3 3 9 0 123\") = \"0 2 3 5 9 123\" ]]\n}\n\nrun_test"
completions: ["    local IFS=\" \"\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=\" $1\"\n\
    \    sort -u | tr -s ' ' \"\\n\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \   local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=\" $1\"\n    sort\
    \ -u", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "  local IFS=$'\\n'\n  sort\
    \ -u <<<\"$1\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \ local IFS=\" $1\"\n  local -a arr=()\n  local i item\n  for i in \"${arr[@]}\"\
    ; do\n    [[ -z \"$i\" ]] && continue\n    [[ \"$i\" == \"$i\"* ]] && continue\n\
    \    [[ \"$i\" == \"${i%?}\" ]] && continue\n    arr+=(\"$i\")\n  done\n  echo\
    \ \"${arr[@]}\"", "    local IFS=\" \"\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", " \
    \   local IFS=\" $1\"\n    sort -u --output-delimiter=\" \" \"$2\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=\" \"\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n' arr=( $1 )\n    local i result=()\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        result+=( \"${arr[i]}\" )\n    done\n\
    \    IFS=$' \\t\\n'\n    echo \"${result[@]}\"", "    local IFS=$'\\n'\n    sort\
    \ -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=\"\
    \ $1\"\n    sort -u --output-delimiter=\" \" \"$2\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "   \
    \ local IFS=$'\\n' arr=($1) output\n    for ele in \"${arr[@]}\"; do\n       \
    \ [[ $ele != \"${ele%?}\" ]] && output+=(\"$ele\")\n    done\n    echo \"${output[@]}\"",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=\" \"\n    sort -u <<<\"$1\"", "    local IFS=\" $1\"\n\
    \    sort -u | sed 's/^ *//;s/ *$//'", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=\" \"\n    sort -u <<< \"$1\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=\" $1\"\n\
    \    sort -u --output-delimiter=\" \" \"$@\"", "    local IFS=$'\\n'\n    sort\
    \ -u <<<\"$1\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", " \
    \   local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort\
    \ -u <<<\"$1\"", "    local IFS=\" \"\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", " \
    \   local IFS=\" $1\"\n    sort -u | tr -d '\\n'", "    local IFS=\" $1\"\n  \
    \  sort -u | sed 's/^ *//'", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \   local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort\
    \ -u <<< \"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "  local IFS=$'\\\
    n'\n  sort -u <<<\"$1\"", "  local i ilist output\n  ilist=\"$1\"\n  output=\"\
    $(IFS=\" \" ; echo \"$ilist\" | tr \" \" \"\\n\" | sort -u | tr \"\\n\" \" \"\
    )\"\n  echo \"$output\"", "    local IFS=\" $1\"\n    sort -u", "  local IFS=$'\\\
    n'\n  sort -u <<<\"$1\"", "  local IFS=\" $1\"\n  sort -u --output-delimiter=\"\
    \ \" \"$@\"", "    local IFS=$'\\n' arr=($1) output\n    for ele in \"${arr[@]}\"\
    ; do\n        if [[ ! \" ${output[*]} \" =~ \" $ele \" ]]; then\n            output+=(\
    \ \"$ele\" )\n        fi\n    done\n    echo \"${output[@]}\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "   \
    \ local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    local -n arr=$1\n    local i result\n    IFS=$' \\t\\n'\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        result=false\n        for (( j=0; j<i; j++\
    \ )); do\n            [[ ${arr[j]} != ${arr[i]} ]] && result=true\n        done\n\
    \        if [[ $result ]]; then\n            arr[i]=\n        fi\n    done\n \
    \   IFS=$IFS\n    echo \"${arr[@]}\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n' arr=( $1 )\n    local i result=()\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        result+=( \"${arr[i]}\" )\n    done\n    IFS=$'\
    \ \\t\\n'\n    echo \"${result[@]}\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=\" \"\n    sort -u <<<\"$1\"", "  local i ilist output\n\
    \  ilist=\"$1\"\n  output=$(echo \"$ilist\" | tr ' ' '\\n' | sort -u)\n  echo\
    \ \"$output\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \   local IFS=$'\\n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n    sort\
    \ -u <<<\"$1\"", "    local IFS=\" $1\"\n    sort -u", "    local IFS=$'\\n'\n\
    \    sort -u <<< \"$1\"", "    local IFS=\" \"\n    sort -u <<<\"$1\"", "  local\
    \ IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "  local IFS=$'\\\
    n'\n  sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    local -n arr=$1\n    local\
    \ output\n    output=$(for ele in ${arr[*]}; do echo \"$ele\"; done | sort -u)\n\
    \    IFS=$' \\t\\n'\n    echo \"$output\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "  local\
    \ IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local IFS=\" $1\"\n    sort -u | tr -d\
    \ '\\n'", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "  local i ilist sorted\n\
    \  ilist=\"$1\"\n  sorted=()\n  while IFS= read -r i; do\n    sorted+=(\"$i\"\
    )\n  done <<< \"$ilist\"\n  printf '%s\\n' \"${sorted[@]}\" | sort -u", "    local\
    \ IFS=$'\\n'\n    sort -u <<< \"$1\"", "  local i ilist sorted=\n  ilist=\"$1\"\
    \n  sorted=\n  for (( i=1; i<=NF; i++ )); do\n    sorted+=( \"$i\" )\n  done\n\
    \  printf '%s\\n' \"${sorted[@]}\" | sort -u | tr '\\n' ' '", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \   local IFS=$'\\n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n    sort\
    \ -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "  local IFS=\" $1\"\n  sort -u | sed 's/^ *//'",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    local\
    \ -n arr=$1\n    local -a res\n    local i res\n    IFS=$' \\t\\n'\n    res=()\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        [[ ${arr[i]} == ${arr[i+1]} ]]\
    \ && continue\n        res+=(\"${arr[i]}\")\n    done\n    IFS=$IFS\n    echo\
    \ ${res[*]}", "    local IFS=\" $1\"\n    sort -u | tr -d '\\n'", "    local IFS=$'\\\
    n' arr=($1) output\n    for ele in \"${arr[@]}\"; do\n        [[ $ele != \"${ele//[!A-Za-z0-9_]/}\"\
    \ ]] && output+=(\"$ele\")\n    done\n    echo \"${output[@]}\"", "    local IFS=$'\\\
    n'\n    local -a list=( $1 )\n    local output\n    output=$(IFS=$'\\n'; echo\
    \ \"${list[*]}\" | sort -u)\n    IFS=$' \\t\\n'\n    echo \"$output\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"\
    $1\"", "    local IFS=\" $1\"\n    sort -u --output-delimiter=\" \" \"$2\"", " \
    \   local IFS=\" $1\"\n    sort -u | tr -s ' ' | sed 's/^ *//'", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \   local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n' arr=($1) output\n\
    \    for ele in \"${arr[@]}\"; do\n        if [[ ! $output =~ $ele ]]; then\n\
    \            output+=\"$ele\"\n        fi\n    done\n    echo \"$output\"", " \
    \ local IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n' arr=( $1 )\n    local i result=()\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        result+=(\"${arr[i]}\")\n    done\n    IFS=$'\
    \ \\t\\n'\n    echo \"${result[@]}\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=\" \"\n    sort -u <<<\"$1\"", "    local\
    \ IFS=\" $1\"\n    sort -u --output-delimiter=\" \" \"$2\"", "    local IFS=\"\
    \ \"\n    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \   local IFS=\" $1\"\n    sort -u", "    local IFS=$'\\n'\n    sort -u <<< \"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local\
    \ IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<< \"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "  \
    \  local IFS=$'\\n' arr=($1) output\n    for ele in \"${arr[@]}\"; do\n      \
    \  if [[ ! $output =~ $ele ]]; then\n            output+=\"$ele\"\n        fi\n\
    \    done\n    echo \"$output\"", "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", " \
    \   local IFS=\" $1\"\n    sort -u | sed 's/^ *//'", "    local IFS=$'\\n' arr=($1)\
    \ output\n    for ele in \"${arr[@]}\"; do\n        if [[ ! $output =~ $ele ]];\
    \ then\n            output+=\"$ele\"\n        fi\n    done\n    echo \"$output\"",
  "  local IFS=$'\\n'\n  sort -u <<<\"$1\"", "  local i ii out ret\n  ret=()\n  out=()\n\
    \  IFS=$'\\n' read -r -d '' -a out <<< \"$1\"\n  for ((i=0; i<${#out[@]}; i++));\
    \ do\n    for ((ii=0; ii<${#out[@]}; ii++)); do\n      [[ \"${out[$i]}\" == \"\
    ${out[$ii]}\" ]] && continue 2\n    done\n    ret+=(\"${out[i]}\")\n  done\n \
    \ printf '%s\\n' \"${ret[@]}\"", "  local IFS=\" $1\"\n  local -a arr=()\n  local\
    \ i result\n\n  for (( i=0; i < ${#arr[@]}; i++ )); do\n    arr[i]=${arr[i]}\n\
    \  done\n\n  IFS=\"$IFS\"\n  result=( $(sort <<<\"${arr[*]}\" | uniq) )\n  IFS=\"\
    $IFS\"\n\n  echo \"${result[@]}\"", "    local IFS=\" \"\n    sort -u <<<\"$1\"",
  "    local IFS=\" $1\"\n    sort -u --output-delimiter=\" \" \"$2\"", "    local\
    \ IFS=$'\\n'\n    local -a list=( $1 )\n    local -a sorted=()\n    local key\n\
    \    local count\n\n    for key in \"${list[@]}\"; do\n        ((count[${key}]++))\n\
    \    done\n\n    for (( i=0; i<${#list[@]}; i++ )); do\n        sorted[$i]=${list[$i]}\n\
    \    done\n\n    local i\n    for (( i=0; i<${#list[@]}; i++ )); do\n        if\
    \ [[ ${count[${sorted[$i]}]} -gt 1 ]]; then\n            sorted[$i]=${sorted[$i]}${sorted[$((\
    \ $i + 1 ))]}\n        fi\n    done\n\n    IFS=$' \\t\\n'\n    echo -e \"${sorted[*]}\"",
  "    local IFS=$'\\n' arr=($1) output\n    for ele in \"${arr[@]}\"; do\n      \
    \  [[ $ele != \"${ele%?}\" ]] && output+=(\"$ele\")\n    done\n    echo \"${output[@]}\"",
  "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=\" $1\"\n    sort\
    \ -u --output-delimiter=\" \" \"$2\"", "    local IFS=$'\\n'\n    sort -u <<<\"\
    $1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n\
    \    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<< \"$1\"", "   \
    \ local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", " \
    \   local IFS=$'\\n'\n    sort -u <<<\"$1\"", "  local i ilist output\n  ilist=\"\
    $1\"\n  output=\"\"\n  for i in $ilist; do\n    if [[ $i =~ (^|[[:space:]])($(printf\
    \ '[%s]*' \"$i\")($(printf '[%s]*' \"$i\"))?)($|[[:space:]]) ]]; then\n      output+=\"\
    \ $i\"\n    fi\n  done\n  echo \"$output\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "  local i ilist list\n  ilist=\"$1\"\n  list=()\n  while IFS= read\
    \ -r i; do\n    list+=(\"$i\")\n  done < <(printf \"%s\\n\" \"${ilist}\" | sort\
    \ -u)\n  printf \"%s\\n\" \"${list[@]}\"", "    local IFS=$'\\n'\n    sort -u\
    \ <<<\"$1\"", "    local IFS=$'\\n'\n    sort -u <<<\"$1\"", "    local IFS=$'\\\
    n'\n    local -n arr=$1\n    local i result\n    IFS=$' \\t\\n'\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        result=false\n        for (( j=0; j<i; j++\
    \ )); do\n            [ \"${arr[j]}\" = \"${arr[i]}\" ] && result=true\n     \
    \   done\n        if $result; then\n            arr[i]\n        fi\n    done",
  "    local IFS=\" $1\"\n    sort -u | sed 's/^ *//'"]
stop_tokens:
- "\n}"

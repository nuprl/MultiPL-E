language: sh
name: HumanEval_70_strange_sort_list
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local min_index\n    local max_index\n    local tmp\n    local result\n\n\
    \    list=\"$( echo \"$list\" | sed 's/ /\\n/g' )\"\n    len=\"$( echo \"$list\"\
    \ | wc -l )\"\n    if [ \"$len\" -gt 1 ]; then\n        min=\"$( echo \"$list\"\
    \ | head -n 1 )\"\n        max=\"$( echo \"$list\" | tail -n 1 )\"\n        min_index=\"\
    $( echo \"$list\" | grep \"$min\" | wc -l )\"\n        max_index=\"$( echo \"\
    $list\" | grep \"$max\" | wc -l )\"\n        if [ \"$min_index\" -eq \"$max_index\"\
    \ ]; then\n            tmp=\"$( echo \"$list\" | sed \"s/$min/$max/g\" )\"\n \
    \           echo \"$tmp\"\n        else\n            tmp=\"$( echo \"$list\" |\
    \ sed \"s/$min/\\n$max/g\" )\"\n            echo \"$tmp\"\n        fi\n    else\n\
    \        echo \"$list\"\n    fi\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local -a sorted_list\n \
    \ local -a sorted_list_2\n  local -a sorted_list_3\n  local -a sorted_list_4\n\
    \  local -a sorted_list_5\n  local -a sorted_list_6\n  local -a sorted_list_7\n\
    \  local -a sorted_list_8\n  local -a sorted_list_9\n  local -a sorted_list_10\n\
    \  local -a sorted_list_11\n  local -a sorted_list_12\n  local -a sorted_list_13\n\
    \  local -a sorted_list_14\n  local -a sorted_list_15\n  local -a sorted_list_16\n\
    \  local -a sorted_list_17\n  local -a sorted_list_18\n  local -a sorted_list_19\n\
    \  local -a sorted_list_20\n  local -a sorted_list_21\n  local -a sorted_list_22\n\
    \  local -a sorted_list_23\n  local -a sorted_list_24\n  local -a sorted_list_25\n\
    \  local -a sorted_list_26\n  local -a sorted_list_27\n  local -a sorted_list_28\n\
    \  local -a sorted_list_29\n  local -a sorted_list_30\n  local -a sorted_list_31\n\
    \  local -a sorted_list_32\n  local -a sorted_list_33\n  local -a sorted_list_34\n\
    \  local -a sorted_list_35\n  local -a sorted_list_36\n  local -a sorted_list_37\n\
    \  local -a sorted_list_38\n  local -a sorted_list_39\n  local -a sorted_list_40\n\
    \  local -a sorted_list_41\n  local -a sorted_list_42\n  local -a sorted_list_43\n\
    \  local -a sorted_list_44\n  local -a sorted_list_45\n  local -a sorted_list_46\n\
    \  local -a sorted_list_47\n  local -a sorted_list_48\n  local -a sorted_list_49\n\
    \  local -a sorted_list_50\n  local -a sorted_list_51\n  local -a sorted_list_52\n\
    \  local -a sorted_list_53\n  local -a sorted_list_54\n  local -a sorted_list_55\n\
    \  local -a sorted_list_56\n  local -a sorted_list_57\n  local -a sorted_list_58\n\
    \  local -a sorted_list_59\n  local -a sorted_list_60\n  local -a sorted_list_61\n\
    \  local -a sorted_list_62\n  local -a sorted_list_63\n  local -\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local tmp\n  local i\n \
    \ local j\n  local k\n  local min\n  local max\n  local tmp2\n  local tmp3\n \
    \ local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local tmp8\n  local\
    \ tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n\
    \  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n  local tmp19\n \
    \ local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local tmp24\n  local\
    \ tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n\
    \  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n  local tmp35\n \
    \ local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local tmp40\n  local\
    \ tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n\
    \  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n  local tmp51\n \
    \ local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local tmp56\n  local\
    \ tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n\
    \  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n  local tmp67\n \
    \ local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local tmp72\n  local\
    \ tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n\
    \  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n  local tmp83\n \
    \ local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local tmp88\n  local\
    \ tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n\
    \  local tmp95\n  local tmp96\n  local tmp97\n  local \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_sorted=\"\"\n    local strange_sort_list_output_sorted_reverse=\"\
    \"\n    local strange_sort_list_output_sorted_reverse2=\"\"\n    local strange_sort_list_output_sorted_reverse3=\"\
    \"\n    local strange_sort_list_output_sorted_reverse4=\"\"\n    local strange_sort_list_output_sorted_reverse5=\"\
    \"\n    local strange_sort_list_output_sorted_reverse6=\"\"\n    local strange_sort_list_output_sorted_reverse7=\"\
    \"\n    local strange_sort_list_output_sorted_reverse8=\"\"\n    local strange_sort_list_output_sorted_reverse9=\"\
    \"\n    local strange_sort_list_output_sorted_reverse10=\"\"\n    local strange_sort_list_output_sorted_reverse11=\"\
    \"\n    local strange_sort_list_output_sorted_reverse12=\"\"\n    local strange_sort_list_output_sorted_reverse13=\"\
    \"\n    local strange_sort_list_output_sorted_reverse14=\"\"\n    local strange_sort_list_output_sorted_reverse15=\"\
    \"\n    local strange_sort_list_output_sorted_reverse16=\"\"\n    local strange_sort_list_output_sorted_reverse17=\"\
    \"\n    local strange_sort_list_output_sorted_reverse18=\"\"\n    local strange_sort_list_output_sorted_reverse19=\"\
    \"\n    local strange_sort_list_output_sorted_reverse20=\"\"\n    local strange_sort_list_output_sorted_reverse21=\"\
    \"\n    local strange_sort_list_output_sorted_reverse22=\"\"\n    local strange_sort_list_output_sorted_reverse23=\"\
    \"\n    local strange_sort_list_output_sorted_reverse24=\"\"\n    local strange_sort_list_output_sorted_reverse25=\"\
    \"\n    local strange_sort_list_output_sorted_reverse26=\"\"\n    local strange_sort_list_output_sorted_reverse27=\"\
    \"\n    local strange_sort_list_output_sorted_reverse28=\"\"\n    local strange_sort_list_output_sorted_reverse29=\"\
    \"\n    local strange_sort_list_output_sorted_reverse30=\"\"\n    local strange_sort_list_output_sorted_reverse31=\"\
    \"\n    local strange_sort_list_output_sorted_reverse32=\"\"\n    local strange_sort_list_output_sorted_reverse33=\"\
    \"\n    local strange_sort_list_output_sorted_reverse34=\"\"\n    local strange_sort_list_output_sorted_reverse35=\"\
    \"\n    local strange_sort_list_output_sorted_reverse36=\"\"\n    local strange_sort_list_output_sorted_reverse37=\"\
    \"\n    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min\n    local\
    \ max\n    local tmp\n    local output\n    local i\n    local j\n    local k\n\
    \    local len\n    local strange_sort_list\n    local strange_sort_list_output\n\
    \    local strange_sort_list_output_len\n    local strange_sort_list_output_i\n\
    \    local strange_sort_list_output_j\n    local strange_sort_list_output_k\n\
    \    local strange_sort_list_output_tmp\n    local strange_sort_list_output_i_tmp\n\
    \    local strange_sort_list_output_j_tmp\n    local strange_sort_list_output_k_tmp\n\
    \    local strange_sort_list_output_tmp_min\n    local strange_sort_list_output_tmp_max\n\
    \    local strange_sort_list_output_tmp_i\n    local strange_sort_list_output_tmp_j\n\
    \    local strange_sort_list_output_tmp_k\n    local strange_sort_list_output_tmp_min\n\
    \    local strange_sort_list_output_tmp_max\n    local strange_sort_list_output_tmp_i_tmp\n\
    \    local strange_sort_list_output_tmp_j_tmp\n    local strange_sort_list_output_tmp_k_tmp\n\
    \    local strange_sort_list_output_tmp_min_tmp\n    local strange_sort_list_output_tmp_max_tmp\n\
    \    local strange_sort_list_output_tmp_i_i\n    local strange_sort_list_output_tmp_j_j\n\
    \    local strange_sort_list_output_tmp_k_k\n    local strange_sort_list_output_tmp_min_tmp\n\
    \    local strange_sort_list_output_tmp_max_tmp\n    local strange_sort_list_output_tmp_i_i_tmp\n\
    \    local strange_sort_list_output_tmp_j_j_tmp\n    local strange_sort_list_output_tmp_k_k_tmp\n\
    \    local strange_sort_list_output_tmp_min_tmp_tmp\n    local strange_sort_list_output_tmp_max_tmp_tmp\n\
    \    local strange_sort_list_output_tmp_i_i_tmp_tmp\n    local strange_sort_list_output_tmp_j_j_tmp_tmp\n\
    \    local strange_sort_list_output_tmp_k_k_tmp_tmp\n    local strange_sort_list_output_tmp_min_tmp_tmp_tmp_tmp\n\
    \    local strange_sort_list_output_tmp_max_tmp_tmp_tmp\n    local strange_sort_list_output_tmp_i_i_tmp_tmp_tmp\n\
    \    local strange_sort_list_output_tmp_j_j_tmp_tmp_tmp\n    local strange_sort_list_output_tmp_k_k\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a sorted\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a sorted\n    local -a tmp\n    local i\n\n    arr=( $1 )\n    sorted=( )\n\
    \    IFS=$'\\n'\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]}\
    \ )\n        sorted+=( ${tmp[@]} )\n    done\n    IFS=$IFS\n    echo ${sorted[@]}\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ output\n    local i\n    local j\n    local k\n    local temp\n    local min\n\
    \    local max\n    local tmp\n    local len\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min\n  local max\n\
    \  local tmp\n  local result\n  local i\n  local j\n  local k\n  local len\n \
    \ local tmplen\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local\
    \ tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n\
    \  local tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n \
    \ local tmp17\n  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local\
    \ tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n\
    \  local tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n \
    \ local tmp33\n  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local\
    \ tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n\
    \  local tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n \
    \ local tmp49\n  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local\
    \ tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n\
    \  local tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n \
    \ local tmp65\n  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local\
    \ tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n\
    \  local tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n \
    \ local tmp81\n  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local\
    \ tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n\
    \  local tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n  local tmp98\n \
    \ local tmp99\n  local tmp100\n  local tmp101\n  local \n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list\n    list=\"$2\"\
    \n    local i\n    local j\n    local temp\n    local result\n    local temp2\n\
    \    local temp3\n    local temp4\n    local temp5\n    local temp6\n    local\
    \ temp7\n    local temp8\n    local temp9\n    local temp10\n    local temp11\n\
    \    local temp12\n    local temp13\n    local temp14\n    local temp15\n    local\
    \ temp16\n    local temp17\n    local temp18\n    local temp19\n    local temp20\n\
    \    local temp21\n    local temp22\n    local temp23\n    local temp24\n    local\
    \ temp25\n    local temp26\n    local temp27\n    local temp28\n    local temp29\n\
    \    local temp30\n    local temp31\n    local temp32\n    local temp33\n    local\
    \ temp34\n    local temp35\n    local temp36\n    local temp37\n    local temp38\n\
    \    local temp39\n    local temp40\n    local temp41\n    local temp42\n    local\
    \ temp43\n    local temp44\n    local temp45\n    local temp46\n    local temp47\n\
    \    local temp48\n    local temp49\n    local temp50\n    local temp51\n    local\
    \ temp52\n    local temp53\n    local temp54\n    local temp55\n    local temp56\n\
    \    local temp57\n    local temp58\n    local temp59\n    local temp60\n    local\
    \ temp61\n    local temp62\n    local temp63\n    local temp64\n    local temp65\n\
    \    local temp66\n    local temp67\n    local temp68\n    local temp69\n    local\
    \ temp70\n    local temp71\n    local temp72\n    local temp73\n    local temp74\n\
    \    local temp75\n    local temp76\n    local temp77\n    local temp78\n    local\
    \ temp79\n    local temp80\n    local temp81\n    local temp82\n    local temp83\n\
    \    local temp84\n    local temp85\n    local temp86\n    local temp87\n    local\
    \ temp88\n    local temp89\n    local temp90\n    local temp91\n    local temp92\n\
    \    local temp93\n    local temp94\n    local temp95\n    local temp96\n    local\
    \ temp97\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local len\n    local min\n    local\
    \ max\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_list strange_list_strange\n \
    \   local i j\n    local strange_list_strange strange_list_strange_strange\n \
    \   local strange_list_strange_strange strange_list_strange_strange_strange\n\
    \    local strange_list_strange_strange_strange strange_list_strange_strange_strange_strange\n\
    \    local strange_list_strange_strange_strange_strange_strange strange_list_strange_strange_strange_strange_strange_strange\n\
    \    local strange_list_strange_strange_strange_strange_strange_strange strange_list_strange_strange_strange_strange_strange_strange_strange_strange\n\
    \    local strange_list_strange_strange_strange_strange_strange_strange_strange_strange\
    \ strange_list_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange\n\
    \    local strange_list_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange\
    \ strange_list_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange\n\
    \    local strange_list_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange\
    \ strange_list_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange_strange\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    arr=(\
    \ $1 )\n    local i\n    for (( i=1; i<${#arr[@]}; i++ )); do\n        local j\n\
    \        for (( j=0; j<i; j++ )); do\n            local k\n            for ((\
    \ k=0; k<j; k++ )); do\n                local m\n                for (( m=0; m<k;\
    \ m++ )); do\n                    local n\n                    for (( n=0; n<m;\
    \ n++ )); do\n                        local o\n                        for ((\
    \ o=0; o<n; o++ )); do\n                            local p\n                \
    \            for (( p=0; p<o; p++ )); do\n                                local\
    \ q\n                                for (( q=0; q<p; q++ )); do\n           \
    \                         local r\n                                    for ((\
    \ r=0; r<q; r++ )); do\n                                        local s\n    \
    \                                    for (( s=0; s<r; s++ )); do\n           \
    \                                 local t\n                                  \
    \          for (( t=0; t<s; t++ )); do\n                                     \
    \           local u\n                                                for (( u=0;\
    \ u<t; u++ )); do\n                                                    local v\n\
    \                                                    for (( v=0; v<u; v++ ));\
    \ do\n                                                        local w\n      \
    \                                                  for (( w=0; w<v; w++ )); do\n\
    \                                                            local x\n       \
    \                                                     for (( x=0; x<w; x++ ));\
    \ do\n                                                                local y\n\
    \                                                                for (( y=0; y<x;\
    \ y++ )); do\n                                                               \
    \     local z\n                                                              \
    \      for (( z=0; z<y; z++ )); do\n                                         \
    \                               local a\n                                    \
    \                                    for (( a=0; a<z; a++ )); do\n           \
    \                                                                 local b\n  \
    \                                                                          for\
    \ (( b=0; b<a; b++ )); do\n                                                  \
    \                              local c\n                                     \
    \                                           for (( c=0; c<b; c++ )); do\n    \
    \                                                                            \
    \    local d\n                                                               \
    \                     for (( d=0; d<c; d++ )); do\n                          \
    \                                                              local e\n     \
    \                                                                            \
    \       for (( e=0; e<d; e++ )); do\n                                        \
    \                                                    local f\n               \
    \                                                                            \
    \ for (( f=0; f<e; f++ )); do\n                                              \
    \                                                  local g\n                 \
    \                                                                            \
    \   for (( g=0; \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpowiuhtpb.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpowiuhtpb.sh: line 80: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort=\"\
    \"\n    local strange_sort_list=\"\"\n    local strange_sort_list_len=0\n    local\
    \ strange_sort_list_index=0\n    local strange_sort_list_max=0\n    local strange_sort_list_min=0\n\
    \    local strange_sort_list_min_index=0\n    local strange_sort_list_max_index=0\n\
    \    local strange_sort_list_min_max=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_max_index=0\n\
    \    local strange_sort_list_min_max_index=0\n    local strange_sort_list_min_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_sorted=\"\"\n    local strange_sort_list_output_sorted_reverse=\"\
    \"\n    local strange_sort_list_output_sorted_reverse2=\"\"\n    local strange_sort_list_output_sorted_reverse3=\"\
    \"\n    local strange_sort_list_output_sorted_reverse4=\"\"\n    local strange_sort_list_output_sorted_reverse5=\"\
    \"\n    local strange_sort_list_output_sorted_reverse6=\"\"\n    local strange_sort_list_output_sorted_reverse7=\"\
    \"\n    local strange_sort_list_output_sorted_reverse8=\"\"\n    local strange_sort_list_output_sorted_reverse9=\"\
    \"\n    local strange_sort_list_output_sorted_reverse10=\"\"\n    local strange_sort_list_output_sorted_reverse11=\"\
    \"\n    local strange_sort_list_output_sorted_reverse12=\"\"\n    local strange_sort_list_output_sorted_reverse13=\"\
    \"\n    local strange_sort_list_output_sorted_reverse14=\"\"\n    local strange_sort_list_output_sorted_reverse15=\"\
    \"\n    local strange_sort_list_output_sorted_reverse16=\"\"\n    local strange_sort_list_output_sorted_reverse17=\"\
    \"\n    local strange_sort_list_output_sorted_reverse18=\"\"\n    local strange_sort_list_output_sorted_reverse19=\"\
    \"\n    local strange_sort_list_output_sorted_reverse20=\"\"\n    local strange_sort_list_output_sorted_reverse21=\"\
    \"\n    local strange_sort_list_output_sorted_reverse22=\"\"\n    local strange_sort_list_output_sorted_reverse23=\"\
    \"\n    local strange_sort_list_output_sorted_reverse24=\"\"\n    local strange_sort_list_output_sorted_reverse25=\"\
    \"\n    local strange_sort_list_output_sorted_reverse26=\"\"\n    local strange_sort_list_output_sorted_reverse27=\"\
    \"\n    local strange_sort_list_output_sorted_reverse28=\"\"\n    local strange_sort_list_output_sorted_reverse29=\"\
    \"\n    local strange_sort_list_output_sorted_reverse30=\"\"\n    local strange_sort_list_output_sorted_reverse31=\"\
    \"\n    local strange_sort_list_output_sorted_reverse32=\"\"\n    local strange_sort_list_output_sorted_reverse33=\"\
    \"\n    local strange_sort_list_output_sorted_reverse34=\"\"\n    local strange_sort_list_output_sorted_reverse35=\"\
    \"\n    local strange_sort_list_output_sorted_reverse36=\"\"\n    local strange_sort_list_output_sorted_reverse37=\"\
    \"\n    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local temp\n    local count\n    local\
    \ min\n    local max\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min_index\n\
    \    local max_index\n    local min_index\n    local max_index\n    local min\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_sorted=\"\"\n    local strange_sort_list_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output=\"\"\n    local\
    \ strange_sort_list_output_sorted_reversed_output_sorted=\"\"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_output_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ result=\"\"\n    local min=$(( ${#list} / 2 ))\n    local max=$(( ${#list} -\
    \ 1 ))\n    local i\n    for (( i=1; i <= max; i++ )); do\n        if [ $(( ${list[i]}\
    \ < ${list[min]} )) -eq 0 ]; then\n            result=\"${result} ${list[min]}\"\
    \n            min=$(( min + 1 ))\n        fi\n        if [ $(( ${list[i]} > ${list[max]}\
    \ )) -eq 0 ]; then\n            result=\"${result} ${list[max]}\"\n          \
    \  max=$(( max - 1 ))\n        fi\n    done\n    if [ $min -gt 0 ]; then\n   \
    \     result=\"${result} ${list[min]}\"\n    fi\n    if [ $max -gt 0 ]; then\n\
    \        result=\"${result} ${list[max]}\"\n    fi\n    echo \"$result\"\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt5j0ih3p.sh: line 28: [: -: integer expression expected

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' ' a\n    local n=$1\n    local\
    \ b\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    local D\n    local E\n    local F\n    local\
    \ G\n    local H\n    local I\n    local J\n    local K\n    local L\n    local\
    \ M\n    local N\n    local O\n    local P\n    local Q\n    local R\n    local\
    \ S\n    local T\n    local U\n    local V\n    local W\n    local X\n    local\
    \ Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=\"${list[0]}\"\
    \n    local max=\"${list[0]}\"\n    local tmp=\"${list[0]}\"\n    local i\n\n\
    \    for (( i=1; i<${#list}; i++ )); do\n        if [[ ${list[i]} -gt ${max} ]];\
    \ then\n            max=${list[i]}\n        elif [[ ${list[i]} -lt ${min} ]];\
    \ then\n            min=${list[i]}\n        fi\n    done\n\n    for (( i=1; i<${#list};\
    \ i++ )); do\n        if [[ ${list[i]} -gt ${min} ]]; then\n            tmp=${list[i]}\n\
    \            list[i]=${list[i-1]}\n            list[i-1]=${tmp}\n        fi\n\
    \    done\n\n    echo \"${list[*]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf6euo_u_.sh: line 16: [[: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 18: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 18: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 18: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 18: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 18: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 18: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 24: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 24: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 24: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 24: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 24: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpf6euo_u_.sh: line 24: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local input=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  local j\n  local k\n  local min\n  local max\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list\n    list=\"$2\"\
    \n    local i\n    local j\n    local temp\n    local tmp\n    local tmp2\n  \
    \  local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ output\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    \n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min\n    local\
    \ max\n    local tmp\n    local i\n    local strange\n    local strange_str\n\
    \    local strange_str_list\n    local strange_str_list2\n    local strange_str_list3\n\
    \    local strange_str_list4\n    local strange_str_list5\n    local strange_str_list6\n\
    \    local strange_str_list7\n    local strange_str_list8\n    local strange_str_list9\n\
    \    local strange_str_list10\n    local strange_str_list11\n    local strange_str_list12\n\
    \    local strange_str_list13\n    local strange_str_list14\n    local strange_str_list15\n\
    \    local strange_str_list16\n    local strange_str_list17\n    local strange_str_list18\n\
    \    local strange_str_list19\n    local strange_str_list20\n    local strange_str_list21\n\
    \    local strange_str_list22\n    local strange_str_list23\n    local strange_str_list24\n\
    \    local strange_str_list25\n    local strange_str_list26\n    local strange_str_list27\n\
    \    local strange_str_list28\n    local strange_str_list29\n    local strange_str_list30\n\
    \    local strange_str_list31\n    local strange_str_list32\n    local strange_str_list33\n\
    \    local strange_str_list34\n    local strange_str_list35\n    local strange_str_list36\n\
    \    local strange_str_list37\n    local strange_str_list38\n    local strange_str_list39\n\
    \    local strange_str_list40\n    local strange_str_list41\n    local strange_str_list42\n\
    \    local strange_str_list43\n    local strange_str_list44\n    local strange_str_list45\n\
    \    local strange_str_list46\n    local strange_str_list47\n    local strange_str_list48\n\
    \    local strange_str_list49\n    local strange_str_list50\n    local strange_str_list51\n\
    \    local strange_str_list52\n    local strange_str_list53\n    local \n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local input=$2\n    local\
    \ output=\"\"\n    local i\n    local j\n    local k\n    local temp\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local output=\"\"\n\
    \    local min=$( echo $list | awk '{print $1}' )\n    local max=$( echo $list\
    \ | awk '{print $NF}' )\n    local tmp=$( echo $list | awk '{print $2}' )\n  \
    \  while [ $min -gt $max ]; do\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $2}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $1}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $NF}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $3}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $4}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $5}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $6}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $7}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $8}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $9}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $10}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $11}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $12}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $13}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $14}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $15}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $16}' )\n        local tmp=$( echo $list | awk -v min=$min\
    \ -v max=$max '{print $17}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1qwokkcu.sh: line 32: unexpected EOF while looking for matching
    `''''

    /tmp/tmp1qwokkcu.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=$2\n    local\
    \ max=$3\n    local tmp\n    local i\n    local result\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local output\n    local\
    \ i\n    local j\n    local k\n    local min\n    local max\n    local tmp\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a list\n    list=($1)\n\
    \    local -a sorted\n    sorted=()\n    local i\n    for (( i=0; i<${#list[@]};\
    \ i++ )); do\n        local j\n        for (( j=0; j<${#list[@]}; j++ )); do\n\
    \            if [[ ${list[j]} -gt ${list[i]} ]]; then\n                sorted+=(\"\
    ${list[i]}\")\n                list[i]=${list[j]}\n                list[j]=${list[i]}\n\
    \            fi\n        done\n        sorted+=(\"${list[i]}\")\n        list[i]=${list[i]}\n\
    \    done\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ i\n    local j\n    local k\n    local min\n    local max\n    local tmp2\n\
    \    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local temp\n  local i\n\
    \  local j\n  local len\n  local min\n  local max\n  local tmp\n  local result\n\
    \  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local\
    \ tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n\
    \  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n \
    \ local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local\
    \ tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n\
    \  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n \
    \ local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local\
    \ tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n\
    \  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n \
    \ local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local\
    \ tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n\
    \  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n \
    \ local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local\
    \ tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n\
    \  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n \
    \ local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local\
    \ tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n\
    \  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_temp=\"\"\n    local strange_sort_list_temp2=\"\
    \"\n    local strange_sort_list_temp3=\"\"\n    local strange_sort_list_temp4=\"\
    \"\n    local strange_sort_list_temp5=\"\"\n    local strange_sort_list_temp6=\"\
    \"\n    local strange_sort_list_temp7=\"\"\n    local strange_sort_list_temp8=\"\
    \"\n    local strange_sort_list_temp9=\"\"\n    local strange_sort_list_temp10=\"\
    \"\n    local strange_sort_list_temp11=\"\"\n    local strange_sort_list_temp12=\"\
    \"\n    local strange_sort_list_temp13=\"\"\n    local strange_sort_list_temp14=\"\
    \"\n    local strange_sort_list_temp15=\"\"\n    local strange_sort_list_temp16=\"\
    \"\n    local strange_sort_list_temp17=\"\"\n    local strange_sort_list_temp18=\"\
    \"\n    local strange_sort_list_temp19=\"\"\n    local strange_sort_list_temp20=\"\
    \"\n    local strange_sort_list_temp21=\"\"\n    local strange_sort_list_temp22=\"\
    \"\n    local strange_sort_list_temp23=\"\"\n    local strange_sort_list_temp24=\"\
    \"\n    local strange_sort_list_temp25=\"\"\n    local strange_sort_list_temp26=\"\
    \"\n    local strange_sort_list_temp27=\"\"\n    local strange_sort_list_temp28=\"\
    \"\n    local strange_sort_list_temp29=\"\"\n    local strange_sort_list_temp30=\"\
    \"\n    local strange_sort_list_temp31=\"\"\n    local strange_sort_list_temp32=\"\
    \"\n    local strange_sort_list_temp33=\"\"\n    local strange_sort_list_temp34=\"\
    \"\n    local strange_sort_list_temp35=\"\"\n    local strange_sort_list_temp36=\"\
    \"\n    local strange_sort_list_temp37=\"\"\n    local strange_sort_list_temp38=\"\
    \"\n    local strange_sort_list_temp39=\"\"\n    local strange_sort_list_temp40=\"\
    \"\n    local strange_sort_list_temp41=\"\"\n    local strange_sort_list_temp42=\"\
    \"\n    local strange_sort_list_temp43=\"\"\n    local strange_sort_list_temp44=\"\
    \"\n    local strange_sort_list_temp45\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=\"$2\"\n \
    \   local max=\"$3\"\n    local tmp\n\n    for (( i = 0; i < ${#list}; i++ ));\
    \ do\n        tmp=\"${list[i]}\"\n        if [[ ${min} -gt ${tmp} ]]; then\n \
    \           min=\"${tmp}\"\n        elif [[ ${max} -lt ${tmp} ]]; then\n     \
    \       max=\"${tmp}\"\n        fi\n    done\n\n    local result\n    for (( i\
    \ = 0; i < ${#list}; i++ )); do\n        tmp=\"${list[i]}\"\n        if [[ ${min}\
    \ -gt ${tmp} ]]; then\n            result=\"${min} ${tmp}\"\n        elif [[ ${max}\
    \ -lt ${tmp} ]]; then\n            result=\"${tmp} ${max}\"\n        else\n  \
    \          result=\"${tmp}\"\n        fi\n        list[i]=\"${result}\"\n    done\n\
    \n    echo \"${list[*]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsxzersz8.sh: line 16: [[: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    /tmp/tmpsxzersz8.sh: line 18: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpsxzersz8.sh: line 26: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpsxzersz8.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list\n\
    \    strange_sort_list=\"$(\n        echo \"$list\" | sort -n | sed -e 's/^/-/'\
    \ -e 's/-$//' -e 's/^-/-/' -e 's/^/-/' -e 's/-$/-/' -e 's/^-/-/' -e 's/^/-/' -e\
    \ 's/-$/-/' -e 's/^/-/' -e 's/-$/-/'\n    )\"\n    echo \"$strange_sort_list\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    arr=($1)\n\
    \    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        local j\n    \
    \    for (( j=0; j<i; j++ )); do\n            local k\n            for (( k=0;\
    \ k<j; k++ )); do\n                local m\n                for (( m=0; m<k; m++\
    \ )); do\n                    local n\n                    for (( n=0; n<m; n++\
    \ )); do\n                        local o\n                        for (( o=0;\
    \ o<n; o++ )); do\n                            local p\n                     \
    \       for (( p=0; p<o; p++ )); do\n                                local q\n\
    \                                for (( q=0; q<p; q++ )); do\n               \
    \                     local r\n                                    for (( r=0;\
    \ r<q; r++ )); do\n                                        local s\n         \
    \                               for (( s=0; s<r; s++ )); do\n                \
    \                            local t\n                                       \
    \     for (( t=0; t<s; t++ )); do\n                                          \
    \      local u\n                                                for (( u=0; u<t;\
    \ u++ )); do\n                                                    local v\n  \
    \                                                  for (( v=0; v<u; v++ )); do\n\
    \                                                        local w\n           \
    \                                             for (( w=0; w<v; w++ )); do\n  \
    \                                                          local x\n         \
    \                                                   for (( x=0; x<w; x++ )); do\n\
    \                                                                local y\n   \
    \                                                             for (( y=0; y<x;\
    \ y++ )); do\n                                                               \
    \     local z\n                                                              \
    \      for (( z=0; z<y; z++ )); do\n                                         \
    \                               local a\n                                    \
    \                                    for (( a=0; a<z; a++ )); do\n           \
    \                                                                 local b\n  \
    \                                                                          for\
    \ (( b=0; b<a; b++ )); do\n                                                  \
    \                              local c\n                                     \
    \                                           for (( c=0; c<b; c++ )); do\n    \
    \                                                                            \
    \    local d\n                                                               \
    \                     for (( d=0; d<c; d++ )); do\n                          \
    \                                                              local e\n     \
    \                                                                            \
    \       for (( e=0; e<d; e++ )); do\n                                        \
    \                                                    local f\n               \
    \                                                                            \
    \ for (( f=0; f<e; f++ )); do\n                                              \
    \                                                  local g\n                 \
    \                                                                            \
    \   for (( g=0; g<f; \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0fjyqvyx.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0fjyqvyx.sh: line 80: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_count=0\n    local strange_sort_list_count_max=0\n\
    \    local strange_sort_list_count_min=0\n    local strange_sort_list_count_max2=0\n\
    \    local strange_sort_list_count_min2=0\n    local strange_sort_list_count_max3=0\n\
    \    local strange_sort_list_count_min3=0\n    local strange_sort_list_count_max4=0\n\
    \    local strange_sort_list_count_min4=0\n    local strange_sort_list_count_max5=0\n\
    \    local strange_sort_list_count_min5=0\n    local strange_sort_list_count_max6=0\n\
    \    local strange_sort_list_count_min6=0\n    local strange_sort_list_count_max7=0\n\
    \    local strange_sort_list_count_min7=0\n    local strange_sort_list_count_max8=0\n\
    \    local strange_sort_list_count_min8=0\n    local strange_sort_list_count_max9=0\n\
    \    local strange_sort_list_count_min9=0\n    local strange_sort_list_count_max10=0\n\
    \    local strange_sort_list_count_min10=0\n    local strange_sort_list_count_max11=0\n\
    \    local strange_sort_list_count_min11=0\n    local strange_sort_list_count_max12=0\n\
    \    local strange_sort_list_count_min12=0\n    local strange_sort_list_count_max13=0\n\
    \    local strange_sort_list_count_min13=0\n    local strange_sort_list_count_max14=0\n\
    \    local strange_sort_list_count_min14=0\n    local strange_sort_list_count_max15=0\n\
    \    local strange_sort_list_count_min15=0\n    local strange_sort_list_count_max16=0\n\
    \    local strange_sort_list_count_min16=0\n    local strange_sort_list_count_max17=0\n\
    \    local strange_sort_list_count_min17=0\n    local strange_sort_list_count_max18=0\n\
    \    local strange_sort_list_count_min18=0\n    local strange_sort_list_count_max19=0\n\
    \    local strange_sort_list_count_min19=0\n    local strange_sort_list_count_max20=0\n\
    \    local strange_sort_list_count_min20=0\n    local strange\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a list\n    list=(\
    \ $1 )\n    local i\n    for (( i = ${#list[@]} - 2; i > 0; i-- )); do\n     \
    \   local j\n        for (( j = 1; j <= i; j++ )); do\n            local temp=${list[j]}\n\
    \            list[j]=${list[j+1]}\n            list[j+1]=${temp}\n        done\n\
    \    done\n    IFS=$' \\t\\n'\n    echo \"${list[*]}\"\n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local tmp\n\
    \    local strange_list\n    local strange_list_len\n    local strange_list_i\n\
    \    local strange_list_j\n    local strange_list_tmp\n    local strange_list_min\n\
    \    local strange_list_max\n    local strange_list_tmp2\n    local strange_list_tmp3\n\
    \    local strange_list_tmp4\n    local strange_list_tmp5\n    local strange_list_tmp6\n\
    \    local strange_list_tmp7\n    local strange_list_tmp8\n    local strange_list_tmp9\n\
    \    local strange_list_tmp10\n    local strange_list_tmp11\n    local strange_list_tmp12\n\
    \    local strange_list_tmp13\n    local strange_list_tmp14\n    local strange_list_tmp15\n\
    \    local strange_list_tmp16\n    local strange_list_tmp17\n    local strange_list_tmp18\n\
    \    local strange_list_tmp19\n    local strange_list_tmp20\n    local strange_list_tmp21\n\
    \    local strange_list_tmp22\n    local strange_list_tmp23\n    local strange_list_tmp24\n\
    \    local strange_list_tmp25\n    local strange_list_tmp26\n    local strange_list_tmp27\n\
    \    local strange_list_tmp28\n    local strange_list_tmp29\n    local strange_list_tmp30\n\
    \    local strange_list_tmp31\n    local strange_list_tmp32\n    local strange_list_tmp33\n\
    \    local strange_list_tmp34\n    local strange_list_tmp35\n    local strange_list_tmp36\n\
    \    local strange_list_tmp37\n    local strange_list_tmp38\n    local strange_list_tmp39\n\
    \    local strange_list_tmp40\n    local strange_list_tmp41\n    local strange_list_tmp42\n\
    \    local strange_list_tmp43\n    local strange_list_tmp44\n    local strange_list_tmp45\n\
    \    local strange_list_tmp46\n    local strange_list_tmp47\n    local strange_list_tmp48\n\
    \    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=$1\n    local output=\"\"\n   \
    \ local i\n    local j\n    local k\n    local temp\n    local min\n    local\
    \ max\n    local tmp\n    local count\n    local count2\n    local count3\n  \
    \  local count4\n    local count5\n    local count6\n    local count7\n    local\
    \ count8\n    local count9\n    local count10\n    local count11\n    local count12\n\
    \    local count13\n    local count14\n    local count15\n    local count16\n\
    \    local count17\n    local count18\n    local count19\n    local count20\n\
    \    local count21\n    local count22\n    local count23\n    local count24\n\
    \    local count25\n    local count26\n    local count27\n    local count28\n\
    \    local count29\n    local count30\n    local count31\n    local count32\n\
    \    local count33\n    local count34\n    local count35\n    local count36\n\
    \    local count37\n    local count38\n    local count39\n    local count40\n\
    \    local count41\n    local count42\n    local count43\n    local count44\n\
    \    local count45\n    local count46\n    local count47\n    local count48\n\
    \    local count49\n    local count50\n    local count51\n    local count52\n\
    \    local count53\n    local count54\n    local count55\n    local count56\n\
    \    local count57\n    local count58\n    local count59\n    local count60\n\
    \    local count61\n    local count62\n    local count63\n    local count64\n\
    \    local count65\n    local count66\n    local count67\n    local count68\n\
    \    local count69\n    local count70\n    local count71\n    local count72\n\
    \    local count73\n    local count74\n    local count75\n    local count76\n\
    \    local count77\n    local count78\n    local count79\n    local count80\n\
    \    local count81\n    local count82\n    local count83\n    local count84\n\
    \    local count85\n    local count86\n    local count87\n    local count88\n\
    \    local count89\n    local count90\n    local count91\n    local count92\n\
    \    local count93\n    local count94\n    local count95\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local temp\n  local i\n\
    \  local j\n  local k\n  local len\n  local min\n  local max\n  local output\n\
    \  local i\n  local j\n  local k\n  local len\n  local min\n  local max\n  local\
    \ output\n  local i\n  local j\n  local k\n  local len\n  local min\n  local max\n\
    \  local output\n  local i\n  local j\n  local k\n  local len\n  local min\n \
    \ local max\n  local output\n  local i\n  local j\n  local k\n  local len\n  local\
    \ min\n  local max\n  local output\n  local i\n  local j\n  local k\n  local len\n\
    \  local min\n  local max\n  local output\n  local i\n  local j\n  local k\n \
    \ local len\n  local min\n  local max\n  local output\n  local i\n  local j\n\
    \  local k\n  local len\n  local min\n  local max\n  local output\n  local i\n\
    \  local j\n  local k\n  local len\n  local min\n  local max\n  local output\n\
    \  local i\n  local j\n  local k\n  local len\n  local min\n  local max\n  local\
    \ output\n  local i\n  local j\n  local k\n  local len\n  local min\n  local max\n\
    \  local output\n  local i\n  local j\n  local k\n  local len\n  local min\n \
    \ local max\n  local output\n  local i\n  local j\n  local k\n  local len\n  local\
    \ min\n  local max\n  local output\n  local i\n  local j\n  local k\n  local len\n\
    \  local min\n  local max\n  local output\n  local i\n  local j\n  local k\n \
    \ local len\n  local min\n  local max\n  local output\n  local i\n  local j\n\
    \  local k\n  local len\n  local min\n  local max\n  local output\n  local i\n\
    \  local j\n  local k\n  local len\n  local min\n  local max\n  local output\n\
    \  local i\n  local j\n  local k\n  local len\n  local min\n  local max\n  local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    shift\n    local output\n\
    \    output=$(printf \"%s\\n\" \"$@\" | sort -n | sed 's/^/-/g' | sed 's/-$//g'\
    \ | sed 's/^-/+/g' | sed 's/^+/-/g' | sed 's/^-/+/g' | sed 's/^+/+/g')\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list_str=$1\n    local list_str_tmp\n\
    \    local list_str_tmp_tmp\n    local list_str_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n \
    \   local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -n arr=$1\n    local -n min=$2\n    local\
    \ -n max=$3\n    local -n tmp=$4\n    local -n i=$5\n    local -n j=$6\n    local\
    \ -n k=$7\n\n    local -n min_index=$8\n    local -n max_index=$9\n\n    local\
    \ -n min_value=${10}\n    local -n max_value=${11}\n\n    local -n min_string=${12}\n\
    \    local -n max_string=${13}\n\n    local -n min_string_index=${14}\n    local\
    \ -n max_string_index=${15}\n\n    local -n min_string_value=${16}\n    local\
    \ -n max_string_value=${17}\n\n    local -n min_string_value_index=${18}\n   \
    \ local -n max_string_value_index=${19}\n\n    local -n min_string_value_value=${20}\n\
    \    local -n max_string_value_value=${21}\n\n    local -n min_string_value_value_index=${22}\n\
    \    local -n max_string_value_value_index=${23}\n\n    local -n min_string_value_value_value=${24}\n\
    \    local -n max_string_value_value_value=${25}\n\n    local -n min_string_value_value_value_index=${26}\n\
    \    local -n max_string_value_value_value_index=${27}\n\n    local -n min_string_value_value_value_value=${28}\n\
    \    local -n max_string_value_value_value_value=${29}\n\n    local -n min_string_value_value_value_index=${30}\n\
    \    local -n max_string_value_value_value_index=${31}\n\n    local -n min_string_value_value_value_value=${32}\n\
    \    local -n max_string_value_value_value_value=${33}\n\n    local -n min_string_value_value_value_index=${34}\n\
    \    local -n max_string_value_value_value_index=${35}\n\n    local -n min_string_value_value_value_value=${36}\n\
    \    local -n max_string_value_value_value_value=${37}\n\n    local -n min_string_value_value_value_index=${38}\n\
    \    local -n max_string_value_value_value_index=${39}\n\n    local -n min_string_value_value_value_value=${40}\n\
    \    local -n max_string_value_value_value_value=${41}\n\n    local -n min_string_value_value_value_index=${42}\n\
    \    local -n max_string_value_value_value_index=${43}\n\n    local \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpiw8hwimd.sh: line 9: local: `1 2 3 4'': invalid variable name for
    name reference

    /tmp/tmpiw8hwimd.sh: line 10: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 11: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 18: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 20: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 21: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 23: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 24: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 26: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 27: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 29: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 30: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 32: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 33: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 35: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 36: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 38: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 39: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 41: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 42: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 44: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 45: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 47: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 48: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 50: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 51: local: `'': not a valid identifier

    /tmp/tmpiw8hwimd.sh: line 53: local: `'':'
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    arr=($1)\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local strange\n    local strange_sorted\n    local strange_sorted_list\n\
    \    local strange_sorted_list_str\n    local strange_sorted_list_str_list\n \
    \   local strange_sorted_list_str_list2\n    local strange_sorted_list_str_list3\n\
    \    local strange_sorted_list_str_list4\n    local strange_sorted_list_str_list5\n\
    \    local strange_sorted_list_str_list6\n    local strange_sorted_list_str_list7\n\
    \    local strange_sorted_list_str_list8\n    local strange_sorted_list_str_list9\n\
    \    local strange_sorted_list_str_list10\n    local strange_sorted_list_str_list11\n\
    \    local strange_sorted_list_str_list12\n    local strange_sorted_list_str_list13\n\
    \    local strange_sorted_list_str_list14\n    local strange_sorted_list_str_list15\n\
    \    local strange_sorted_list_str_list16\n    local strange_sorted_list_str_list17\n\
    \    local strange_sorted_list_str_list18\n    local strange_sorted_list_str_list19\n\
    \    local strange_sorted_list_str_list20\n    local strange_sorted_list_str_list21\n\
    \    local strange_sorted_list_str_list22\n    local strange_sorted_list_str_list23\n\
    \    local strange_sorted_list_str_list24\n    local strange_sorted_list_str_list25\n\
    \    local strange_sorted_list_str_list26\n    local strange_sorted_list_str_list27\n\
    \    local strange_sorted_list_str_list28\n    local strange_sorted_list_str_list29\n\
    \    local strange_sorted_list_str_list30\n    local strange_sorted_list_str_list31\n\
    \    local strange_sorted_list_str_list32\n    local strange_sorted_list_str_list33\n\
    \    local strange_sorted_list_str_list34\n    local strange_sorted_list_str_list35\n\
    \    local strange_sorted_list_str_list36\n    local strange_sorted_list_str_list37\n\
    \    local strange_sorted_list_str_list38\n    local strange_sorted_list_str_list39\n\
    \    local strange_sorted_list_str_list40\n    \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local tmp\n\
    \    local strange_list\n    local strange_list_len\n    local strange_list_i\n\
    \    local strange_list_j\n    local strange_list_tmp\n    local strange_list_tmp2\n\
    \    local strange_list_tmp3\n    local strange_list_tmp4\n    local strange_list_tmp5\n\
    \    local strange_list_tmp6\n    local strange_list_tmp7\n    local strange_list_tmp8\n\
    \    local strange_list_tmp9\n    local strange_list_tmp10\n    local strange_list_tmp11\n\
    \    local strange_list_tmp12\n    local strange_list_tmp13\n    local strange_list_tmp14\n\
    \    local strange_list_tmp15\n    local strange_list_tmp16\n    local strange_list_tmp17\n\
    \    local strange_list_tmp18\n    local strange_list_tmp19\n    local strange_list_tmp20\n\
    \    local strange_list_tmp21\n    local strange_list_tmp22\n    local strange_list_tmp23\n\
    \    local strange_list_tmp24\n    local strange_list_tmp25\n    local strange_list_tmp26\n\
    \    local strange_list_tmp27\n    local strange_list_tmp28\n    local strange_list_tmp29\n\
    \    local strange_list_tmp30\n    local strange_list_tmp31\n    local strange_list_tmp32\n\
    \    local strange_list_tmp33\n    local strange_list_tmp34\n    local strange_list_tmp35\n\
    \    local strange_list_tmp36\n    local strange_list_tmp37\n    local strange_list_tmp38\n\
    \    local strange_list_tmp39\n    local strange_list_tmp40\n    local strange_list_tmp41\n\
    \    local strange_list_tmp42\n    local strange_list_tmp43\n    local strange_list_tmp44\n\
    \    local strange_list_tmp45\n    local strange_list_tmp46\n    local strange_list_tmp47\n\
    \    local strange_list_tmp48\n    local strange_list_tmp49\n    local strange_list_tmp50\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\
    \    local tmp98\n    local tmp99\n    local tmp100\n    local tmp101\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list\n\
    \    strange_sort_list=\"$(echo \"$list\" | sed 's/^/$(echo \"$list\" | sed 's/^/-/'\
    \ | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' |\
    \ sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed\
    \ 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/'\
    \ | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' |\
    \ sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed\
    \ 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/'\
    \ | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' |\
    \ sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed\
    \ 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/'\
    \ | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' |\
    \ sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed 's/-/-/' | sed 's/^/-/' | sed\
    \ 's/-/\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphouebibf.sh: line 11: unexpected EOF while looking for matching
    `)''

    /tmp/tmphouebibf.sh: line 32: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -n arr=$1\n  local -a sorted\n  local -n\
    \ min=$2\n  local -n max=$3\n  local -n i\n  local -n j\n  local -n k\n  local\
    \ -n len\n  local -n tmp\n  local -n tmp2\n  local -n tmp3\n  local -n tmp4\n\
    \  local -n tmp5\n  local -n tmp6\n  local -n tmp7\n  local -n tmp8\n  local -n\
    \ tmp9\n  local -n tmp10\n  local -n tmp11\n  local -n tmp12\n  local -n tmp13\n\
    \  local -n tmp14\n  local -n tmp15\n  local -n tmp16\n  local -n tmp17\n  local\
    \ -n tmp18\n  local -n tmp19\n  local -n tmp20\n  local -n tmp21\n  local -n tmp22\n\
    \  local -n tmp23\n  local -n tmp24\n  local -n tmp25\n  local -n tmp26\n  local\
    \ -n tmp27\n  local -n tmp28\n  local -n tmp29\n  local -n tmp30\n  local -n tmp31\n\
    \  local -n tmp32\n  local -n tmp33\n  local -n tmp34\n  local -n tmp35\n  local\
    \ -n tmp36\n  local -n tmp37\n  local -n tmp38\n  local -n tmp39\n  local -n tmp40\n\
    \  local -n tmp41\n  local -n tmp42\n  local -n tmp43\n  local -n tmp44\n  local\
    \ -n tmp45\n  local -n tmp46\n  local -n tmp47\n  local -n tmp48\n  local -n tmp49\n\
    \  local -n tmp50\n  local -n tmp51\n  local -n tmp52\n  local -n tmp53\n  local\
    \ -n tmp54\n  local -n tmp55\n  local -n tmp56\n  local -n tmp57\n  local -n tmp58\n\
    \  local -n tmp59\n  local -n tmp60\n  local -n tmp61\n  local -n tmp62\n  local\
    \ -n tmp63\n  local -n tmp64\n  local -n tmp65\n  local -n \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwmqj8922.sh: line 9: local: `1 2 3 4'': invalid variable name for
    name reference

    /tmp/tmpwmqj8922.sh: line 11: local: `'': not a valid identifier

    /tmp/tmpwmqj8922.sh: line 12: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ i\n    local j\n    local k\n    local min\n    local max\n    local tmp\n \
    \   local strange_sorted\n    arr=( $1 )\n    min=${arr[0]}\n    max=${arr[0]}\n\
    \    for (( i=1; i<${#arr[@]}; i++ )); do\n        if [[ ${arr[i]} -gt ${max}\
    \ ]]; then\n            max=${arr[i]}\n        fi\n        if [[ ${arr[i]} -lt\
    \ ${min} ]]; then\n            min=${arr[i]}\n        fi\n    done\n    for ((\
    \ j=1; j<${#arr[@]}; j++ )); do\n        if [[ ${arr[j]} -gt ${max} ]]; then\n\
    \            max=${arr[j]}\n        fi\n        if [[ ${arr[j]} -lt ${min} ]];\
    \ then\n            min=${arr[j]}\n        fi\n    done\n    for (( k=1; k<${#arr[@]};\
    \ k++ )); do\n        if [[ ${arr[k]} -gt ${max} ]]; then\n            max=${arr[k]}\n\
    \        fi\n        if [[ ${arr[k]} -lt ${min} ]]; then\n            min=${arr[k]}\n\
    \        fi\n    done\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=${arr[i]}\n\
    \        arr[i]=${arr[j]}\n        arr[j]=${tmp}\n    done\n    strange_sorted=(\
    \ ${arr[@]} )\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a sorted\n    local -a tmp\n    local i\n\n    arr=( $1 )\n    sorted=( )\n\
    \    tmp=( )\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]}\
    \ )\n        sorted+=( ${tmp[@]} )\n    done\n    for (( i=0; i<${#arr[@]}; i++\
    \ )); do\n        tmp=( ${arr[i]} )\n        sorted+=( ${tmp[@]} )\n    done\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]} )\n       \
    \ sorted+=( ${tmp[@]} )\n    done\n    for (( i=0; i<${#arr[@]}; i++ )); do\n\
    \        tmp=( ${arr[i]} )\n        sorted+=( ${tmp[@]} )\n    done\n    for ((\
    \ i=0; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]} )\n        sorted+=(\
    \ ${tmp[@]} )\n    done\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=(\
    \ ${arr[i]} )\n        sorted+=( ${tmp[@]} )\n    done\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        tmp=( ${arr[i]} )\n        sorted+=( ${tmp[@]} )\n    done\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]} )\n       \
    \ sorted+=( ${tmp[@]} )\n    done\n    for (( i=0; i<${#arr[@]}; i++ )); do\n\
    \        tmp=( ${arr[i]} )\n        sorted+=( ${tmp[@]} )\n    done\n    for ((\
    \ i=0; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]} )\n        sorted+=(\
    \ ${tmp[@]} )\n    done\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=(\
    \ ${arr[i]} )\n        sorted+=( ${tmp[@]} )\n    done\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        tmp=( ${arr[i]} )\n        sorted+=( ${tmp[@]} )\n    done\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]} )\n       \
    \ sorted+=( ${tmp[@]} )\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnemly5_l.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpnemly5_l.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_list strange_list_tmp\
    \ strange_list_tmp2\n    local i j k l m\n    local strange_list_len\n    strange_list_len=0\n\
    \    for (( i=0; i<${#list}; i++ )); do\n        strange_list_len=$(( strange_list_len\
    \ + 1 ))\n    done\n    strange_list=($(for (( i=0; i<${#list}; i++ )); do echo\
    \ ${list[i]}; done | sort -n))\n    for (( i=0; i<${#strange_list}; i++ )); do\n\
    \        strange_list_tmp=${strange_list[i]}\n        for (( j=0; j<${#strange_list};\
    \ j++ )); do\n            if [[ ${strange_list[j]} == ${strange_list_tmp} ]];\
    \ then\n                strange_list_tmp2=$(( ${strange_list_tmp2} + 1 ))\n  \
    \          fi\n        done\n        (( strange_list_tmp2 > strange_list_tmp ))\
    \ && strange_list[i]=${strange_list_tmp2}\n    done\n    echo \"${strange_list[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local output\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local output\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local output\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local output\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local output\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local output\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp\n    local output\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local \n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=\"${list[0]}\"\
    \n    local max=\"${list[-1]}\"\n    local tmp\n    for (( i=1; i<${#list}; i++\
    \ )); do\n        tmp=\"${list[i]}\"\n        if [[ $tmp > $max ]]; then\n   \
    \         list[i]=$max\n            max=\"${list[i]}\"\n        elif [[ $tmp <\
    \ $min ]]; then\n            list[i]=$min\n            min=\"${list[i]}\"\n  \
    \      fi\n    done\n    echo \"${list[@]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5brry22u.sh: line 11: list: bad array subscript

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min\n    local\
    \ max\n    local tmp\n    local i\n    local output\n    local j\n    local k\n\
    \    local count\n    local strange\n\n    # Sort list into ascending order\n\
    \    list=\"$(echo \"$list\" | tr \" \" \"\\n\")\"\n    list=\"$(echo \"$list\"\
    \ | sort -n)\"\n\n    # Find minimum and maximum values\n    min=\"$(echo \"$list\"\
    \ | head -1)\"\n    max=\"$(echo \"$list\" | tail -1)\"\n\n    # Sort list into\
    \ descending order\n    list=\"$(echo \"$list\" | sort -r)\"\n\n    # Find minimum\
    \ and maximum values\n    min=\"$(echo \"$list\" | head -1)\"\n    max=\"$(echo\
    \ \"$list\" | tail -1)\"\n\n    # Sort list into ascending order\n    list=\"\
    $(echo \"$list\" | sort -n)\"\n\n    # Find minimum and maximum values\n    min=\"\
    $(echo \"$list\" | head -1)\"\n    max=\"$(echo \"$list\" | tail -1)\"\n\n   \
    \ # Sort list into descending order\n    list=\"$(echo \"$list\" | sort -r)\"\n\
    \n    # Find minimum and maximum values\n    min=\"$(echo \"$list\" | head -1)\"\
    \n    max=\"$(echo \"$list\" | tail -1)\"\n\n    # Sort list into ascending order\n\
    \    list=\"$(echo \"$list\" | sort -n)\"\n\n    # Find minimum and maximum values\n\
    \    min=\"$(echo \"$list\" | head -1)\"\n    max=\"$(echo \"$list\" | tail -1)\"\
    \n\n    # Sort list into descending order\n    list=\"$(echo \"$list\" | sort\
    \ -r)\"\n\n    # Find minimum and maximum values\n    min=\"$(echo \"$list\" |\
    \ head -1)\"\n    max=\"$(echo \"$list\" | tail -1)\"\n\n    # Sort list into\
    \ ascending order\n    list=\"$(echo \"$list\" | sort -n)\"\n\n    # Find minimum\
    \ and maximum values\n    min=\"$(echo \"$list\" | head -1)\"\n    max=\"$(echo\
    \ \"$list\" | tail -1)\"\n\n    # Sort list into descending order\n    list=\"\
    $(echo \"$list\" | sort -r)\"\n\n    # Find minimum and maximum values\n    min=\"\
    $(echo \"$list\" | head -1)\"\n    max=\"$(echo \"$list\" | tail -1)\"\n\n   \
    \ # Sort list into ascending order\n    list=\"$(echo \"$list\" | sort -n)\"\n\
    \n    # Find minimum and maximum values\n    min=\"$(echo \"$list\" | head -1)\"\
    \n    max=\"$(\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpli73kj0q.sh: line 82: unexpected EOF while looking for matching
    `)''

    /tmp/tmpli73kj0q.sh: line 103: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local strange_list\n    local strange_list_str\n    local strange_list_str_tmp\n\
    \    local strange_list_str_tmp_tmp\n    local strange_list_str_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp\n    local strange_list_str_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp\n    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local strange_list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n   \
    \ local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n    local\
    \ C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n    local H=0\n\
    \    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local M=0\n \
    \   local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n  \
    \  local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n   \
    \ local X=0\n    local Y=0\n    local Z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local result=\"\"\n\
    \    local i\n    local j\n    local temp\n    local min_i\n    local max_j\n\
    \    local min_j\n    local max_i\n    local min_k\n    local max_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n    local min_k\n    local min_k\n    local min_k\n\
    \    local min_k\n    local min_k\n    local min_k\n    local min_k\n    local\
    \ min_k\n    local min_k\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=\"$1\"\n    local strange_sort_list_len=\"\
    ${#strange_sort_list}\"\n    local strange_sort_list_len2=\"${strange_sort_list_len}\"\
    \n    local strange_sort_list_len3=\"${strange_sort_list_len2}\"\n    local strange_sort_list_len4=\"\
    ${strange_sort_list_len3}\"\n    local strange_sort_list_len5=\"${strange_sort_list_len4}\"\
    \n    local strange_sort_list_len6=\"${strange_sort_list_len5}\"\n    local strange_sort_list_len7=\"\
    ${strange_sort_list_len6}\"\n    local strange_sort_list_len8=\"${strange_sort_list_len7}\"\
    \n    local strange_sort_list_len9=\"${strange_sort_list_len8}\"\n    local strange_sort_list_len10=\"\
    ${strange_sort_list_len9}\"\n    local strange_sort_list_len11=\"${strange_sort_list_len10}\"\
    \n    local strange_sort_list_len12=\"${strange_sort_list_len11}\"\n    local\
    \ strange_sort_list_len13=\"${strange_sort_list_len12}\"\n    local strange_sort_list_len14=\"\
    ${strange_sort_list_len13}\"\n    local strange_sort_list_len15=\"${strange_sort_list_len14}\"\
    \n    local strange_sort_list_len16=\"${strange_sort_list_len15}\"\n    local\
    \ strange_sort_list_len17=\"${strange_sort_list_len16}\"\n    local strange_sort_list_len18=\"\
    ${strange_sort_list_len17}\"\n    local strange_sort_list_len19=\"${strange_sort_list_len18}\"\
    \n    local strange_sort_list_len20=\"${strange_sort_list_len19}\"\n    local\
    \ strange_sort_list_len21=\"${strange_sort_list_len20}\"\n    local strange_sort_list_len22=\"\
    ${strange_sort_list_len21}\"\n    local strange_sort_list_len23=\"${strange_sort_list_len22}\"\
    \n    local strange_sort_list_len24=\"${strange_sort_list_len23}\"\n    local\
    \ strange_sort_list_len25=\"${strange_sort_list_len24}\"\n    local strange_sort_list_len26=\"\
    ${strange_sort_list_len25}\"\n    local strange_sort_list_len27=\"${str\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzd_fozib.sh: line 53: unexpected EOF while looking for matching
    `"''

    /tmp/tmpzd_fozib.sh: line 57: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list\n\
    \    local i\n    strange_sort_list=\"$(echo \"$list\" | sed 's/^/\"/; s/$/\"\
    /; s/ /\",\"/')\"\n    for (( i=1; i<${#strange_sort_list}; i++ )); do\n     \
    \   local j\n        for (( j=0; j<i; j++ )); do\n            local k\n      \
    \      for (( k=0; k<j; k++ )); do\n                local l\n                for\
    \ (( l=k+1; l<i; l++ )); do\n                    local m\n                   \
    \ for (( m=0; m<l; m++ )); do\n                        local n\n             \
    \           for (( n=0; n<m; n++ )); do\n                            local o\n\
    \                            for (( o=n+1; o<i; o++ )); do\n                 \
    \               local p\n                                for (( p=0; p<o; p++\
    \ )); do\n                                    local q\n                      \
    \              for (( q=0; q<p; q++ )); do\n                                 \
    \       local r\n                                        for (( r=0; r<q; r++\
    \ )); do\n                                            local s\n              \
    \                              for (( s=r+1; s<i; s++ )); do\n               \
    \                                 local t\n                                  \
    \              for (( t=0; t<s; t++ )); do\n                                 \
    \                   local u\n                                                \
    \    for (( u=t+1; u<i; u++ )); do\n                                         \
    \               local v\n                                                    \
    \    for (( v=0; v<u; v++ )); do\n                                           \
    \                 local w\n                                                  \
    \          for (( w=0; w<v; w++ )); do\n                                     \
    \                           local x\n                                        \
    \                        for (( x=w+1; x<i; x++ )); do\n                     \
    \                                               local y\n                    \
    \                                                for (( y=x+1; y<i; y++ )); do\n\
    \                                                                        local\
    \ z\n                                                                        for\
    \ (( z=y+1; z<i; z++ )); do\n                                                \
    \                            local a\n                                       \
    \                                     for (( a=z+1; a<i; a++ )); do\n        \
    \                                                                        local\
    \ b\n                                                                        \
    \        for (( b=a+1; b<i; b++ )); do\n                                     \
    \                                               local c\n                    \
    \                                                                for (( c=b+1;\
    \ c<i; c++ )); do\n                                                          \
    \                              local d\n                                     \
    \                                                   for (( d=c+1; d<i\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph3kl3uu1.sh: line 55: unexpected EOF while looking for matching
    `)''

    /tmp/tmph3kl3uu1.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local input=$1\n  local output=\"\"\n  local\
    \ i\n  local j\n  local k\n  local min\n  local max\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=$2\n  local max=$3\n\
    \  local tmp\n  local i\n  local strange\n  local strange_sorted\n  local strange_sorted_list\n\
    \  local strange_sorted_list_tmp\n  local strange_sorted_list_tmp2\n  local strange_sorted_list_tmp3\n\
    \  local strange_sorted_list_tmp4\n  local strange_sorted_list_tmp5\n  local strange_sorted_list_tmp6\n\
    \  local strange_sorted_list_tmp7\n  local strange_sorted_list_tmp8\n  local strange_sorted_list_tmp9\n\
    \  local strange_sorted_list_tmp10\n  local strange_sorted_list_tmp11\n  local\
    \ strange_sorted_list_tmp12\n  local strange_sorted_list_tmp13\n  local strange_sorted_list_tmp14\n\
    \  local strange_sorted_list_tmp15\n  local strange_sorted_list_tmp16\n  local\
    \ strange_sorted_list_tmp17\n  local strange_sorted_list_tmp18\n  local strange_sorted_list_tmp19\n\
    \  local strange_sorted_list_tmp20\n  local strange_sorted_list_tmp21\n  local\
    \ strange_sorted_list_tmp22\n  local strange_sorted_list_tmp23\n  local strange_sorted_list_tmp24\n\
    \  local strange_sorted_list_tmp25\n  local strange_sorted_list_tmp26\n  local\
    \ strange_sorted_list_tmp27\n  local strange_sorted_list_tmp28\n  local strange_sorted_list_tmp29\n\
    \  local strange_sorted_list_tmp30\n  local strange_sorted_list_tmp31\n  local\
    \ strange_sorted_list_tmp32\n  local strange_sorted_list_tmp33\n  local strange_sorted_list_tmp34\n\
    \  local strange_sorted_list_tmp35\n  local strange_sorted_list_tmp36\n  local\
    \ strange_sorted_list_tmp37\n  local strange_sorted_list_tmp38\n  local strange_sorted_list_tmp39\n\
    \  local strange_sorted_list_tmp40\n  local strange_sorted_list_tmp41\n  local\
    \ strange_sorted_list_tmp42\n  local strange_sorted_list_tmp43\n  local strange_sorted_list_tmp44\n\
    \  local strange_sorted_list_tmp45\n  local strange_sorted_list_tmp46\n  local\
    \ strange_sorted_list_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ output\n    output=$(echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//')\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list_cmd=\"sort -n -k 1,1\
    \ -k 2,2 -k 3,3 -k 4,4 -k 5,5 -k 6,6 -k 7,7 -k 8,8 -k 9,9 -k 10,10 -k 11,11 -k\
    \ 12,12 -k 13,13 -k 14,14 -k 15,15 -k 16,16 -k 17,17 -k 18,18 -k 19,19 -k 20,20\
    \ -k 21,21 -k 22,22 -k 23,23 -k 24,24 -k 25,25 -k 26,26 -k 27,27 -k 28,28 -k 29,29\
    \ -k 30,30 -k 31,31 -k 32,32 -k 33,33 -k 34,34 -k 35,35 -k 36,36 -k 37,37 -k 38,38\
    \ -k 39,39 -k 40,40 -k 41,41 -k 42,42 -k 43,43 -k 44,44 -k 45,45 -k 46,46 -k 47,47\
    \ -k 48,48 -k 49,49 -k 50,50 -k 51,51 -k 52,52 -k 53,53 -k 54,54 -k 55,55 -k 56,56\
    \ -k 57,57 -k 58,58 -k 59,59 -k 60,60 -k 61,61 -k 62,62 -k 63,63 -k 64,64 -k 65,65\
    \ -k 66,66 -k 67,67 -k 68,68 -k 69,69 -k 70,70 -k 71,71 -k 72,72 -k 73,73 -k 74,74\
    \ -k 75,75 -k 76,76 -k 77,77 -k 78,78 -k 79,79 -k 80,80 -k 81,81 -k 82,82 -k 83,83\
    \ -k 84,84 -k 85,85 -k 86,86 -k 87,87 -k 88,88 -k 89,89 -k 90,90 -k 91,91 -k 92,92\
    \ -k 93,93 -k 94,94 -k 95,95 -k 96,96 -k 97,97 -k 98,98 -k 99,99 -k 100,100 -k\
    \ 101,101 -k 102,102 -k 103,103 -k 104,104 -k \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7h8purpc.sh: line 26: unexpected EOF while looking for matching
    `"''

    /tmp/tmp7h8purpc.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ result\n    local i\n    local j\n    local k\n    local min\n    local max\n\
    \    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    \n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    arr=($1)\n\
    \    local i\n    local j\n    local k\n    local tmp\n    local tmp2\n    local\
    \ tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local\
    \ tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n  \
    \  local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local \n}\n\ncandidate() {\n  \
    \  strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=$2\n    local\
    \ max=$3\n    local tmp\n    local strange_sorted\n    local strange_sorted_list\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -n arr=$1\n  local -n min=$2\n  local -n\
    \ max=$3\n  local -n tmp=$4\n  local -n i=$5\n  local -n j=$6\n  local -n len=$7\n\
    \  local -n tmp2=$8\n  local -n tmp3=$9\n  local -n tmp4=$10\n  local -n tmp5=$11\n\
    \  local -n tmp6=$12\n  local -n tmp7=$13\n  local -n tmp8=$14\n  local -n tmp9=$15\n\
    \  local -n tmp10=$16\n  local -n tmp11=$17\n  local -n tmp12=$18\n  local -n\
    \ tmp13=$19\n  local -n tmp14=$20\n  local -n tmp15=$21\n  local -n tmp16=$22\n\
    \  local -n tmp17=$23\n  local -n tmp18=$24\n  local -n tmp19=$25\n  local -n\
    \ tmp20=$26\n  local -n tmp21=$27\n  local -n tmp22=$28\n  local -n tmp23=$29\n\
    \  local -n tmp24=$30\n  local -n tmp25=$31\n  local -n tmp26=$32\n  local -n\
    \ tmp27=$33\n  local -n tmp28=$34\n  local -n tmp29=$35\n  local -n tmp30=$36\n\
    \  local -n tmp31=$37\n  local -n tmp32=$38\n  local -n tmp33=$39\n  local -n\
    \ tmp34=$40\n  local -n tmp35=$41\n  local -n tmp36=$42\n  local -n tmp37=$43\n\
    \  local -n tmp38=$44\n  local -n tmp39=$45\n  local -n tmp40=$46\n  local -n\
    \ tmp41=$47\n  local -n tmp42=$48\n  local -n tmp43=$49\n  local -n tmp44=$50\n\
    \  local -n tmp45=$51\n  local -n tmp46=$52\n  local -n tmp47=$53\n  local -n\
    \ tmp48=$54\n  local -n tmp49=$55\n  local -n tmp50=$56\n  local -n tmp51=$57\n\
    \  local -n tmp52\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqa1bifdr.sh: line 9: local: `1 2 3 4'': invalid variable name for
    name reference

    /tmp/tmpqa1bifdr.sh: line 10: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 11: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpqa1bifdr.sh: line 18: local: `1 2 3 40'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 19: local: `1 2 3 41'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 20: local: `1 2 3 42'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 21: local: `1 2 3 43'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 22: local: `1 2 3 44'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 23: local: `1 2 3 45'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 24: local: `1 2 3 46'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 25: local: `1 2 3 47'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 26: local: `1 2 3 48'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 27: local: `1 2 3 49'': invalid variable name for name
    reference

    /tmp/tmpqa1bifdr.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpqa1bifdr.sh: line 29: local: `1'': invalid variable name for name reference

    /tmp/tmpqa1bifdr.sh: line 30: local: `2'': invalid variable name for name reference

    /tmp/tmpqa1bifdr.sh: line 31: local: `3'': invalid variable name for name reference

    /tmp/tmpqa1bifdr.sh: line 32: local: `4'': invalid variable name for name reference

    /tmp/tmpqa1bifdr.sh: line 33: local: `5'': invalid variable name for name reference

    /tmp/tmpqa1bifdr.sh: line 34: local: `6'': invalid '
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list\n\
    \    local i\n    strange_sort_list=\"$(\n        IFS=' '\n        echo \"$list\"\
    \n        echo \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo\
    \ \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" |\
    \ sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed\
    \ 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/g' |\
    \ sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n\
    \        echo \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo\
    \ \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" |\
    \ sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed\
    \ 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/g' |\
    \ sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n\
    \        echo \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo\
    \ \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" |\
    \ sort -n | sed 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed\
    \ 's/^/-/g' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/g' |\
    \ sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n\
    \        echo \"$list\" | sort -n | sed 's/^/-/g' | sed 's/-$//'\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppa731kdx.sh: line 12: unexpected EOF while looking for matching
    `)''

    /tmp/tmppa731kdx.sh: line 54: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local -a output\n  local\
    \ -a temp\n  local -a temp2\n  local -a temp3\n  local -a temp4\n  local -a temp5\n\
    \  local -a temp6\n  local -a temp7\n  local -a temp8\n  local -a temp9\n  local\
    \ -a temp10\n  local -a temp11\n  local -a temp12\n  local -a temp13\n  local\
    \ -a temp14\n  local -a temp15\n  local -a temp16\n  local -a temp17\n  local\
    \ -a temp18\n  local -a temp19\n  local -a temp20\n  local -a temp21\n  local\
    \ -a temp22\n  local -a temp23\n  local -a temp24\n  local -a temp25\n  local\
    \ -a temp26\n  local -a temp27\n  local -a temp28\n  local -a temp29\n  local\
    \ -a temp30\n  local -a temp31\n  local -a temp32\n  local -a temp33\n  local\
    \ -a temp34\n  local -a temp35\n  local -a temp36\n  local -a temp37\n  local\
    \ -a temp38\n  local -a temp39\n  local -a temp40\n  local -a temp41\n  local\
    \ -a temp42\n  local -a temp43\n  local -a temp44\n  local -a temp45\n  local\
    \ -a temp46\n  local -a temp47\n  local -a temp48\n  local -a temp49\n  local\
    \ -a temp50\n  local -a temp51\n  local -a temp52\n  local -a temp53\n  local\
    \ -a temp54\n  local -a temp55\n  local -a temp56\n  local -a temp57\n  local\
    \ -a temp58\n  local -a temp59\n  local -a temp60\n  local -a temp61\n  local\
    \ -a temp62\n  local -a temp63\n  local -a temp64\n  local -a temp65\n  local\
    \ -a temp66\n  local -a temp67\n  local -a temp68\n  local -a temp69\n  local\
    \ -a temp70\n  local -a temp71\n  local -a \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a sorted\n    local -i i\n    local -a tmp\n    local -a tmp2\n    local -a\
    \ tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a\
    \ tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a\
    \ tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp70\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_size=0\n    local strange_sort_list_output_index=0\n\
    \    local strange_sort_list_output_value=\"\"\n    local strange_sort_list_output_value_length=0\n\
    \    local strange_sort_list_output_value_index=0\n    local strange_sort_list_output_value_char=\"\
    \"\n    local strange_sort_list_output_value_char_index=0\n    local strange_sort_list_output_value_char_value=\"\
    \"\n    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_sort_list_output_value_char_value_index=0\n    local strange_sort_list_output_value_char_value_index=0\n\
    \    local strange_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ i\n    local j\n    local k\n    local min\n    local max\n    local tmp\n \
    \   local strange_sort_list\n    arr=( $1 )\n    min=${arr[0]}\n    max=${arr[0]}\n\
    \    for (( i=1; i<${#arr[@]}; i++ )); do\n        if [[ ${arr[i]} -gt ${max}\
    \ ]]; then\n            max=${arr[i]}\n        elif [[ ${arr[i]} -lt ${min} ]];\
    \ then\n            min=${arr[i]}\n        fi\n    done\n    for (( j=0; j<${#arr[@]};\
    \ j++ )); do\n        if [[ ${arr[j]} -gt ${max} ]]; then\n            tmp=${arr[j]}\n\
    \            arr[j]=${max}\n            arr[j+1]=${tmp}\n            max=${arr[j]}\n\
    \        elif [[ ${arr[j]} -lt ${min} ]]; then\n            tmp=${arr[j]}\n  \
    \          arr[j]=${min}\n            arr[j+1]=${tmp}\n            min=${arr[j]}\n\
    \        fi\n    done\n    for (( k=0; k<${#arr[@]}; k++ )); do\n        strange_sort_list+=(\
    \ ${arr[k]} )\n    done\n    echo \"${strange_sort_list[@]}\"\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=\"${list[0]}\"\
    \n    local max=\"${list[-1]}\"\n    local temp\n    local i\n    for (( i=1;\
    \ i<${#list}; i++ )); do\n        temp=\"${list[i]}\"\n        if [[ $temp < min\
    \ ]]; then\n            min=\"${temp}\"\n        elif [[ $temp > max ]]; then\n\
    \            max=\"${temp}\"\n        fi\n    done\n    for (( i=0; i<${#list};\
    \ i++ )); do\n        temp=\"${list[i]}\"\n        list[i]=\"${min}\"\n      \
    \  list[i]=\"${temp}\"\n        list[i]=\"${max}\"\n    done\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1ojozw8l.sh: line 11: list: bad array subscript

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local temp\n  local i\n  local\
    \ j\n  local len\n  local min\n  local max\n  local output\n  local strange_sort_list\n\
    \n  strange_sort_list=\"$(echo \"$list\" | sed 's/ /\\n/g' | sort -n | sed 's/^/-/'\
    \ | sed 's/-$//')\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange_sort_list\"\n  strange_sort_list=\"\
    $strange_sort_list\"\n  strange_sort_list=\"$strange\n}\n\ncandidate() {\n   \
    \ strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmhax5q3c.sh: line 67: unexpected EOF while looking for matching
    `"''

    /tmp/tmpmhax5q3c.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: -1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=$2\n    local\
    \ max=$3\n    local tmp\n    local i\n    local strange_list\n    strange_list=\"\
    \"\n    while [[ $list ]]; do\n        tmp=$list\n        list=$(echo \"$list\"\
    \ | sed 's/^ *//' | sed 's/ *$//')\n        i=$(( ${#tmp} - 1 ))\n        while\
    \ [[ $i -ge 0 ]]; do\n            if [[ $tmp[$i] -gt $max ]]; then\n         \
    \       max=$tmp[$i]\n            fi\n            if [[ $tmp[$i] -lt $min ]];\
    \ then\n                min=$tmp[$i]\n            fi\n            i=$(( i - 1\
    \ ))\n        done\n        strange_list=\"$strange_list $tmp\"\n    done\n  \
    \  echo \"$strange_list\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660038945
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=\"$1\"\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_sorted=\"\"\n    local strange_sort_list_output_sorted_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed=\"\"\n    local\
    \ strange_sort_list_output_sorted_reversed_reversed_reversed=\"\"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed=\"\
    \"\n    local strange_sort_list_output_sorted_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reverse\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=$2\n  local max=$3\n\
    \  local tmp\n  local i\n  local output\n  output=$(printf '%s\\n' \"${list}\"\
    \ | sort -n | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed\
    \ 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/'\
    \ | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' |\
    \ sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed\
    \ 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/'\
    \ | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' |\
    \ sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed\
    \ 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/'\
    \ | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' |\
    \ sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed\
    \ 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/'\
    \ | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/[/' |\
    \ sed 's/$/]/' | sed 's/^/[/' | sed 's/$/]/' | sed 's/^/\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc5_48l5d.sh: line 15: unexpected EOF while looking for matching
    `''''

    /tmp/tmpc5_48l5d.sh: line 36: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list_str=\"$1\"\n    local list_str_tmp\n\
    \    local list_str_tmp_tmp\n    local list_str_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list=\"\
    \"\n    local min_val=\"$2\"\n    local max_val=\"$3\"\n    local curr_val=\"\
    $4\"\n    local curr_strange_sort_list=\"\"\n    local curr_min_val=\"$5\"\n \
    \   local curr_max_val=\"$6\"\n    local curr_curr_val=\"$7\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$8\"\n    local curr_curr_max_val=\"$9\"\n \
    \   local curr_curr_curr_val=\"$10\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$11\"\n    local curr_curr_max_val=\"$12\"\n\
    \    local curr_curr_curr_val=\"$13\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$14\"\n    local curr_curr_max_val=\"$15\"\n\
    \    local curr_curr_curr_val=\"$16\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$17\"\n    local curr_curr_max_val=\"$18\"\n\
    \    local curr_curr_curr_val=\"$19\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$20\"\n    local curr_curr_max_val=\"$21\"\n\
    \    local curr_curr_curr_val=\"$22\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$23\"\n    local curr_curr_max_val=\"$24\"\n\
    \    local curr_curr_curr_val=\"$25\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$26\"\n    local curr_curr_max_val=\"$27\"\n\
    \    local curr_curr_curr_val=\"$28\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$29\"\n    local curr_curr_max_val=\"$30\"\n\
    \    local curr_curr_curr_val=\"$31\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$32\"\n    local curr_curr_max_val=\"$33\"\n\
    \    local curr_curr_curr_val=\"$34\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$35\"\n    local curr_curr_max_val=\"$36\"\n\
    \    local curr_curr_curr_val=\"$37\"\n    local curr_curr_strange_sort_list=\"\
    \"\n    local curr_curr_min_val=\"$38\"\n    local curr_curr_max_val=\"$39\"\n\
    \    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a sorted\n    local -i i\n    local -a tmp\n    local -a tmp2\n    local -a\
    \ tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a\
    \ tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a\
    \ tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp70\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list\n\
    \    local i\n    strange_sort_list=\"$(\n        IFS=' '\n        echo \"$list\"\
    \n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\" | sort -n -k\
    \ 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\" | sort\
    \ -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\" |\
    \ sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort -n -k 1,1\n        echo \"$list\"\
    \ | sort -n -k 1,1\n        echo \"$list\" | sort \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1d9u0zub.sh: line 12: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1d9u0zub.sh: line 72: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=$2\n    local\
    \ max=$3\n    local tmp\n    local i\n    local strange\n    local strange_str\n\
    \    local strange_str_list\n    local strange_str_list2\n    local strange_str_list3\n\
    \    local strange_str_list4\n    local strange_str_list5\n    local strange_str_list6\n\
    \    local strange_str_list7\n    local strange_str_list8\n    local strange_str_list9\n\
    \    local strange_str_list10\n    local strange_str_list11\n    local strange_str_list12\n\
    \    local strange_str_list13\n    local strange_str_list14\n    local strange_str_list15\n\
    \    local strange_str_list16\n    local strange_str_list17\n    local strange_str_list18\n\
    \    local strange_str_list19\n    local strange_str_list20\n    local strange_str_list21\n\
    \    local strange_str_list22\n    local strange_str_list23\n    local strange_str_list24\n\
    \    local strange_str_list25\n    local strange_str_list26\n    local strange_str_list27\n\
    \    local strange_str_list28\n    local strange_str_list29\n    local strange_str_list30\n\
    \    local strange_str_list31\n    local strange_str_list32\n    local strange_str_list33\n\
    \    local strange_str_list34\n    local strange_str_list35\n    local strange_str_list36\n\
    \    local strange_str_list37\n    local strange_str_list38\n    local strange_str_list39\n\
    \    local strange_str_list40\n    local strange_str_list41\n    local strange_str_list42\n\
    \    local strange_str_list43\n    local strange_str_list44\n    local strange_str_list45\n\
    \    local strange_str_list46\n    local strange_str_list47\n    local strange_str_list48\n\
    \    local strange_str_list49\n    local strange_str_list50\n    local strange_str_list51\n\
    \    local strange_str_list52\n    local strange_str_list\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local max\n    local min\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list_str=$1\n    local list_str_tmp\n\
    \    local list_str_tmp_tmp\n    local list_str_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -n arr=$1\n    local -n min=$2\n    local\
    \ -n max=$3\n    local -n tmp=$4\n    local -n i=0\n    local -n j=0\n    local\
    \ -n k=0\n    local -n len=${#arr[@]}\n\n    while [ $i -lt $len ]; do\n     \
    \   if [ $i -eq $min ]; then\n            tmp[$k]=${arr[$i]}\n            ((k++))\n\
    \            ((i++))\n        elif [ $i -eq $max ]; then\n            tmp[$k]=${arr[$i]}\n\
    \            ((k++))\n            ((i++))\n        elif [ $i -gt $min ] && [ $i\
    \ -lt $max ]; then\n            tmp[$k]=${arr[$i]}\n            ((k++))\n    \
    \        ((i++))\n        elif [ $i -gt $max ]; then\n            tmp[$k]=${arr[$i]}\n\
    \            ((k++))\n            ((i++))\n        elif [ $i -lt $min ]; then\n\
    \            tmp[$k]=${arr[$i]}\n            ((k++))\n            ((i++))\n  \
    \      fi\n    done\n\n    local -n result\n    result=()\n    for (( i=0; i<$k;\
    \ i++ )); do\n        result+=(\"${tmp[$i]}\")\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd9ygf5aq.sh: line 9: local: `1 2 3 4'': invalid variable name for
    name reference

    /tmp/tmpd9ygf5aq.sh: line 10: local: `'': not a valid identifier

    /tmp/tmpd9ygf5aq.sh: line 11: local: `'': not a valid identifier

    /tmp/tmpd9ygf5aq.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpd9ygf5aq.sh: line 13: local: `0'': invalid variable name for name reference

    /tmp/tmpd9ygf5aq.sh: line 14: local: `0'': invalid variable name for name reference

    /tmp/tmpd9ygf5aq.sh: line 15: local: `0'': invalid variable name for name reference

    /tmp/tmpd9ygf5aq.sh: line 16: local: `0'': invalid variable name for name reference

    /tmp/tmpd9ygf5aq.sh: line 18: [: 1: unary operator expected

    /tmp/tmpd9ygf5aq.sh: line 43: warning: result: removing nameref attribute

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    shift\n    local list\n \
    \   list=$1\n    local temp\n    temp=$list\n    local i\n    local j\n    local\
    \ k\n    local len\n    local max\n    local min\n    local tmp\n    local str\n\
    \    local str1\n    local str2\n    local str3\n    local str4\n    local str5\n\
    \    local str6\n    local str7\n    local str8\n    local str9\n    local str10\n\
    \    local str11\n    local str12\n    local str13\n    local str14\n    local\
    \ str15\n    local str16\n    local str17\n    local str18\n    local str19\n\
    \    local str20\n    local str21\n    local str22\n    local str23\n    local\
    \ str24\n    local str25\n    local str26\n    local str27\n    local str28\n\
    \    local str29\n    local str30\n    local str31\n    local str32\n    local\
    \ str33\n    local str34\n    local str35\n    local str36\n    local str37\n\
    \    local str38\n    local str39\n    local str40\n    local str41\n    local\
    \ str42\n    local str43\n    local str44\n    local str45\n    local str46\n\
    \    local str47\n    local str48\n    local str49\n    local str50\n    local\
    \ str51\n    local str52\n    local str53\n    local str54\n    local str55\n\
    \    local str56\n    local str57\n    local str58\n    local str59\n    local\
    \ str60\n    local str61\n    local str62\n    local str63\n    local str64\n\
    \    local str65\n    local str66\n    local str67\n    local str68\n    local\
    \ str69\n    local str70\n    local str71\n    local str72\n    local str73\n\
    \    local str74\n    local str75\n    local str76\n    local str77\n    local\
    \ str78\n    local str79\n    local str80\n    local str81\n    local str82\n\
    \    local str83\n    local str84\n    local str85\n    local str86\n    local\
    \ str87\n    local str88\n    local str89\n    local str90\n    local str\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=\"${list[0]}\"\
    \n    local max=\"${list[0]}\"\n    local tmp=\"${list[0]}\"\n    local i\n\n\
    \    for (( i=1; i<${#list}; i++ )); do\n        local val=\"${list[i]}\"\n  \
    \      if [[ ${val} -gt ${max} ]]; then\n            max=val\n        elif [[\
    \ ${val} -lt ${min} ]]; then\n            min=val\n        fi\n    done\n\n  \
    \  for (( i=0; i<${#list}; i++ )); do\n        local val=\"${list[i]}\"\n    \
    \    if [[ ${val} -gt ${max} ]]; then\n            tmp=${val}\n        elif [[\
    \ ${val} -lt ${min} ]]; then\n            tmp=${val}\n        fi\n        list[i]=${tmp}\n\
    \    done\n\n    echo \"${list[*]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphz1ctyeg.sh: line 17: [[: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 19: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 17: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 19: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 17: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 19: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 17: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 19: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 17: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 19: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 17: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 19: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 26: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 26: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 26: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 26: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 26: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmphz1ctyeg.sh: line 28: [[: 1 2 3 4: syntax err'
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local strange\n\
    \n    # Sort list into ascending order\n    list=\"$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n)\"\n\n    # Find minimum length\n    len=\"${#list}\"\n    min=\"\
    ${list[0]}\"\n    max=\"${list[len-1]}\"\n\n    # Sort list into descending order\n\
    \    for (( i=1; i<len; i++ )); do\n        temp=\"${list[i]}\"\n        for ((\
    \ j=i+1; j<len; j++ )); do\n            if [ \"${temp}\" -gt \"${list[j]}\" ];\
    \ then\n                temp=\"${list[j]}\"\n            fi\n        done\n  \
    \      list[i]=\"${temp}\"\n    done\n\n    # Sort list into ascending order\n\
    \    strange=\"$(echo \"$list\" | tr ' ' '\\n' | sort -n)\"\n\n    # Return sorted\
    \ list\n    echo \"$strange\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    /tmp/tmpa2nww4sz.sh: line 30: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    shift\n    local list\n \
    \   list=\"$*\"\n    local tmp\n    tmp=$(echo \"$list\" | sort -n | tail -n 1)\n\
    \    list=\"$tmp $list\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n  \
    \  list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"\
    $list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"$list\
    \ $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"$list $tmp\"\
    \n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"$list $tmp\"\n \
    \   tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"$list $tmp\"\n   \
    \ tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo\
    \ \"$list\" | sort -n | head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"\
    $list\" | sort -n | head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\"\
    \ | sort -n | head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" |\
    \ sort -n | head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort\
    \ -n | head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n\
    \ | head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n |\
    \ head -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head\
    \ -n 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n\
    \ 1)\n    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n\
    \    list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n  \
    \  list=\"$list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"\
    $list $tmp\"\n    tmp=$(echo \"$list\" | sort -n | head -n 1)\n    list=\"$list\
    \ $tmp\"\n    tmp=$(echo \"$list\" | \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf2cg6vq4.sh: line 56: unexpected EOF while looking for matching
    `)''

    /tmp/tmpf2cg6vq4.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ result=\"\"\n    local min=$3\n    local max=$4\n    local i\n    local j\n\
    \    local temp\n    local count\n    local temp2\n    local temp3\n    local\
    \ temp4\n    local temp5\n    local temp6\n    local temp7\n    local temp8\n\
    \    local temp9\n    local temp10\n    local temp11\n    local temp12\n    local\
    \ temp13\n    local temp14\n    local temp15\n    local temp16\n    local temp17\n\
    \    local temp18\n    local temp19\n    local temp20\n    local temp21\n    local\
    \ temp22\n    local temp23\n    local temp24\n    local temp25\n    local temp26\n\
    \    local temp27\n    local temp28\n    local temp29\n    local temp30\n    local\
    \ temp31\n    local temp32\n    local temp33\n    local temp34\n    local temp35\n\
    \    local temp36\n    local temp37\n    local temp38\n    local temp39\n    local\
    \ temp40\n    local temp41\n    local temp42\n    local temp43\n    local temp44\n\
    \    local temp45\n    local temp46\n    local temp47\n    local temp48\n    local\
    \ temp49\n    local temp50\n    local temp51\n    local temp52\n    local temp53\n\
    \    local temp54\n    local temp55\n    local temp56\n    local temp57\n    local\
    \ temp58\n    local temp59\n    local temp60\n    local temp61\n    local temp62\n\
    \    local temp63\n    local temp64\n    local temp65\n    local temp66\n    local\
    \ temp67\n    local temp68\n    local temp69\n    local temp70\n    local temp71\n\
    \    local temp72\n    local temp73\n    local temp74\n    local temp75\n    local\
    \ temp76\n    local temp77\n    local temp78\n    local temp79\n    local temp80\n\
    \    local temp81\n    local temp82\n    local temp83\n    local temp84\n    local\
    \ temp85\n    local temp86\n    local temp87\n    local temp88\n    local temp89\n\
    \    local temp90\n    local temp91\n    local temp92\n    local temp93\n    local\
    \ temp94\n    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local IFS=$1\n  local list=$2\n  local output\n\
    \  output=$(echo \"${list}\" | tr \" \" \"\\n\" | sort -n | tr \"\\n\" \" \")\n\
    \  echo \"${output}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local tmp\n\
    \    local strange\n    local strange_str\n    local strange_str_list\n    local\
    \ strange_str_list2\n    local strange_str_list3\n    local strange_str_list4\n\
    \    local strange_str_list5\n    local strange_str_list6\n    local strange_str_list7\n\
    \    local strange_str_list8\n    local strange_str_list9\n    local strange_str_list10\n\
    \    local strange_str_list11\n    local strange_str_list12\n    local strange_str_list13\n\
    \    local strange_str_list14\n    local strange_str_list15\n    local strange_str_list16\n\
    \    local strange_str_list17\n    local strange_str_list18\n    local strange_str_list19\n\
    \    local strange_str_list20\n    local strange_str_list21\n    local strange_str_list22\n\
    \    local strange_str_list23\n    local strange_str_list24\n    local strange_str_list25\n\
    \    local strange_str_list26\n    local strange_str_list27\n    local strange_str_list28\n\
    \    local strange_str_list29\n    local strange_str_list30\n    local strange_str_list31\n\
    \    local strange_str_list32\n    local strange_str_list33\n    local strange_str_list34\n\
    \    local strange_str_list35\n    local strange_str_list36\n    local strange_str_list37\n\
    \    local strange_str_list38\n    local strange_str_list39\n    local strange_str_list40\n\
    \    local strange_str_list41\n    local strange_str_list42\n    local strange_str_list43\n\
    \    local strange_str_list44\n    local strange_str_list45\n    local strange_str_list46\n\
    \    local strange_str_list47\n    local strange_str_list48\n    local strange_str_list49\n\
    \    local strange_str_list50\n    local strange_str_list51\n    local strange_str_list52\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list_cmd=\"strange_sort_list.py\"\
    \n    local strange_sort_list_args=\"$@\"\n    local strange_sort_list_output\n\
    \    local strange_sort_list_err\n    local strange_sort_list_exitcode\n    local\
    \ strange_sort_list_pid\n    local strange_sort_list_pids\n    local strange_sort_list_pids_str\n\
    \    local strange_sort_list_pids_strs\n    local strange_sort_list_pids_strs_str\n\
    \    local strange_sort_list_pids_strs_strs\n    local strange_sort_list_pids_strs_strs_str\n\
    \    local strange_sort_list_pids_strs_strs_strs\n    local strange_sort_list_pids_strs_strs_strs_str\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs\n    local strange_sort_list_pids_strs_strs_strs_strs_str\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs\n    local strange_sort_list_pids_strs_strs_strs_strs_strs_str\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs\n    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_str\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs\n    local\
    \ strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs_str\n    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local strange_sort_list_pids_strs_strs_strs_strs_strs_strs_strs_strs_strs_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a sorted\n    local i\n    local j\n    local k\n    local len\n    local min\n\
    \    local max\n    local tmp\n    local len2\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local input=$2\n    local\
    \ output\n    output=$(echo \"$input\" | sort -n | sed 's/^/'\"$IFS\"'/' | sed\
    \ 's/$/'\"$IFS\"'/')\n    echo \"$output\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local strange_list\n\
    \    local strange_list_len\n    local strange_list_i\n    local strange_list_j\n\
    \    local strange_list_temp\n    local strange_list_temp2\n    local strange_list_temp3\n\
    \    local strange_list_temp4\n    local strange_list_temp5\n    local strange_list_temp6\n\
    \    local strange_list_temp7\n    local strange_list_temp8\n    local strange_list_temp9\n\
    \    local strange_list_temp10\n    local strange_list_temp11\n    local strange_list_temp12\n\
    \    local strange_list_temp13\n    local strange_list_temp14\n    local strange_list_temp15\n\
    \    local strange_list_temp16\n    local strange_list_temp17\n    local strange_list_temp18\n\
    \    local strange_list_temp19\n    local strange_list_temp20\n    local strange_list_temp21\n\
    \    local strange_list_temp22\n    local strange_list_temp23\n    local strange_list_temp24\n\
    \    local strange_list_temp25\n    local strange_list_temp26\n    local strange_list_temp27\n\
    \    local strange_list_temp28\n    local strange_list_temp29\n    local strange_list_temp30\n\
    \    local strange_list_temp31\n    local strange_list_temp32\n    local strange_list_temp33\n\
    \    local strange_list_temp34\n    local strange_list_temp35\n    local strange_list_temp36\n\
    \    local strange_list_temp37\n    local strange_list_temp38\n    local strange_list_temp39\n\
    \    local strange_list_temp40\n    local strange_list_temp41\n    local strange_list_temp42\n\
    \    local strange_list_temp43\n    local strange_list_temp44\n    local strange_list_temp45\n\
    \    local strange_list_temp46\n    local strange_list_temp47\n    local strange_list_temp48\n\
    \    local strange_list_temp49\n    local strange_list_temp50\n    local str\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list_str=$1\n    local list_str_tmp\n\
    \    local list_str_tmp_tmp\n    local list_str_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n \
    \   local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_list strange_list_tmp strange_list_tmp2\n\
    \    local strange_list_tmp3\n    local strange_list_tmp4\n    local strange_list_tmp5\n\
    \    local strange_list_tmp6\n    local strange_list_tmp7\n    local strange_list_tmp8\n\
    \    local strange_list_tmp9\n    local strange_list_tmp10\n    local strange_list_tmp11\n\
    \    local strange_list_tmp12\n    local strange_list_tmp13\n    local strange_list_tmp14\n\
    \    local strange_list_tmp15\n    local strange_list_tmp16\n    local strange_list_tmp17\n\
    \    local strange_list_tmp18\n    local strange_list_tmp19\n    local strange_list_tmp20\n\
    \    local strange_list_tmp21\n    local strange_list_tmp22\n    local strange_list_tmp23\n\
    \    local strange_list_tmp24\n    local strange_list_tmp25\n    local strange_list_tmp26\n\
    \    local strange_list_tmp27\n    local strange_list_tmp28\n    local strange_list_tmp29\n\
    \    local strange_list_tmp30\n    local strange_list_tmp31\n    local strange_list_tmp32\n\
    \    local strange_list_tmp33\n    local strange_list_tmp34\n    local strange_list_tmp35\n\
    \    local strange_list_tmp36\n    local strange_list_tmp37\n    local strange_list_tmp38\n\
    \    local strange_list_tmp39\n    local strange_list_tmp40\n    local strange_list_tmp41\n\
    \    local strange_list_tmp42\n    local strange_list_tmp43\n    local strange_list_tmp44\n\
    \    local strange_list_tmp45\n    local strange_list_tmp46\n    local strange_list_tmp47\n\
    \    local strange_list_tmp48\n    local strange_list_tmp49\n    local strange_list_tmp50\n\
    \    local strange_list_tmp51\n    local strange_list_tmp52\n    local strange_list_tmp53\n\
    \    local strange_list_tmp54\n    local strange_list_tmp55\n    local strange_list_tmp56\n\
    \    local strange_list_tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list_string=$1\n    local list_array=($list_string)\n\
    \    local list_length=${#list_array[@]}\n    local list_min=${list_array[0]}\n\
    \    local list_max=${list_array[list_length-1]}\n    local list_temp\n    local\
    \ list_temp2\n    local list_temp3\n    local list_temp4\n    local list_temp5\n\
    \    local list_temp6\n    local list_temp7\n    local list_temp8\n    local list_temp9\n\
    \    local list_temp10\n    local list_temp11\n    local list_temp12\n    local\
    \ list_temp13\n    local list_temp14\n    local list_temp15\n    local list_temp16\n\
    \    local list_temp17\n    local list_temp18\n    local list_temp19\n    local\
    \ list_temp20\n    local list_temp21\n    local list_temp22\n    local list_temp23\n\
    \    local list_temp24\n    local list_temp25\n    local list_temp26\n    local\
    \ list_temp27\n    local list_temp28\n    local list_temp29\n    local list_temp30\n\
    \    local list_temp31\n    local list_temp32\n    local list_temp33\n    local\
    \ list_temp34\n    local list_temp35\n    local list_temp36\n    local list_temp37\n\
    \    local list_temp38\n    local list_temp39\n    local list_temp40\n    local\
    \ list_temp41\n    local list_temp42\n    local list_temp43\n    local list_temp44\n\
    \    local list_temp45\n    local list_temp46\n    local list_temp47\n    local\
    \ list_temp48\n    local list_temp49\n    local list_temp50\n    local list_temp51\n\
    \    local list_temp52\n    local list_temp53\n    local list_temp54\n    local\
    \ list_temp55\n    local list_temp56\n    local list_temp57\n    local list_temp58\n\
    \    local list_temp59\n    local list_temp60\n    local list_temp61\n    local\
    \ list_temp62\n    local list_temp63\n    local list_temp64\n    local list_temp65\n\
    \    local list_temp66\n    local list_temp67\n    local list_temp68\n    local\
    \ list_temp69\n    local list_temp70\n    local list_temp71\n    local list_temp72\n\
    \    local list_temp73\n    local list_temp74\n    local list_temp75\n    local\
    \ list_temp76\n    local list_temp77\n    local \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=$2\n    local\
    \ max=$3\n    local tmp\n    local i\n    local strange_list\n    strange_list=\"\
    \"\n    for (( i=1; i<${#list}; i++ )); do\n        tmp=${list[i]}\n        if\
    \ [[ ${min} -gt ${tmp} ]]; then\n            min=${tmp}\n        fi\n        if\
    \ [[ ${max} -lt ${tmp} ]]; then\n            max=${tmp}\n        fi\n    done\n\
    \    for (( i=1; i<${#list}; i++ )); do\n        tmp=${list[i]}\n        if [[\
    \ ${min} -gt ${tmp} ]]; then\n            tmp=${min}\n        fi\n        if [[\
    \ ${max} -lt ${tmp} ]]; then\n            tmp=${max}\n        fi\n        strange_list=\"\
    ${strange_list} ${tmp}\"\n    done\n    echo \"${strange_list}\"\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min\n    local\
    \ max\n    local tmp\n    local i\n    local strange\n    local strange_str\n\
    \    local strange_str_list\n    local strange_str_list2\n    local strange_str_list3\n\
    \    local strange_str_list4\n    local strange_str_list5\n    local strange_str_list6\n\
    \    local strange_str_list7\n    local strange_str_list8\n    local strange_str_list9\n\
    \    local strange_str_list10\n    local strange_str_list11\n    local strange_str_list12\n\
    \    local strange_str_list13\n    local strange_str_list14\n    local strange_str_list15\n\
    \    local strange_str_list16\n    local strange_str_list17\n    local strange_str_list18\n\
    \    local strange_str_list19\n    local strange_str_list20\n    local strange_str_list21\n\
    \    local strange_str_list22\n    local strange_str_list23\n    local strange_str_list24\n\
    \    local strange_str_list25\n    local strange_str_list26\n    local strange_str_list27\n\
    \    local strange_str_list28\n    local strange_str_list29\n    local strange_str_list30\n\
    \    local strange_str_list31\n    local strange_str_list32\n    local strange_str_list33\n\
    \    local strange_str_list34\n    local strange_str_list35\n    local strange_str_list36\n\
    \    local strange_str_list37\n    local strange_str_list38\n    local strange_str_list39\n\
    \    local strange_str_list40\n    local strange_str_list41\n    local strange_str_list42\n\
    \    local strange_str_list43\n    local strange_str_list44\n    local strange_str_list45\n\
    \    local strange_str_list46\n    local strange_str_list47\n    local strange_str_list48\n\
    \    local strange_str_list49\n    local strange_str_list50\n    local strange_str_list51\n\
    \    local strange_str_list52\n    local strange_str_list53\n    local \n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local tmp\n\
    \    local strange_list\n    local strange_list_len\n    local strange_list_tmp\n\
    \    local strange_list_i\n    local strange_list_j\n    local strange_list_tmp2\n\
    \    local strange_list_tmp3\n    local strange_list_tmp4\n    local strange_list_tmp5\n\
    \    local strange_list_tmp6\n    local strange_list_tmp7\n    local strange_list_tmp8\n\
    \    local strange_list_tmp9\n    local strange_list_tmp10\n    local strange_list_tmp11\n\
    \    local strange_list_tmp12\n    local strange_list_tmp13\n    local strange_list_tmp14\n\
    \    local strange_list_tmp15\n    local strange_list_tmp16\n    local strange_list_tmp17\n\
    \    local strange_list_tmp18\n    local strange_list_tmp19\n    local strange_list_tmp20\n\
    \    local strange_list_tmp21\n    local strange_list_tmp22\n    local strange_list_tmp23\n\
    \    local strange_list_tmp24\n    local strange_list_tmp25\n    local strange_list_tmp26\n\
    \    local strange_list_tmp27\n    local strange_list_tmp28\n    local strange_list_tmp29\n\
    \    local strange_list_tmp30\n    local strange_list_tmp31\n    local strange_list_tmp32\n\
    \    local strange_list_tmp33\n    local strange_list_tmp34\n    local strange_list_tmp35\n\
    \    local strange_list_tmp36\n    local strange_list_tmp37\n    local strange_list_tmp38\n\
    \    local strange_list_tmp39\n    local strange_list_tmp40\n    local strange_list_tmp41\n\
    \    local strange_list_tmp42\n    local strange_list_tmp43\n    local strange_list_tmp44\n\
    \    local strange_list_tmp45\n    local strange_list_tmp46\n    local strange_list_tmp47\n\
    \    local strange_list_tmp48\n    local strange_list_tmp49\n    local strange_list_tmp50\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local IFS=' '\n  local -a arr\n  arr=($1)\n \
    \ local i\n  local j\n  local k\n  local tmp\n  local len\n  local min\n  local\
    \ max\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n\
    \  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local\
    \ tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n\
    \  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n \
    \ local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local\
    \ tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n\
    \  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n \
    \ local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local\
    \ tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n\
    \  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n \
    \ local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local\
    \ tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n\
    \  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n \
    \ local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local\
    \ tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n\
    \  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n \
    \ local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local\
    \ tmp92\n  local tmp93\n  local tmp94\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local input=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  local j\n  local k\n  local min\n  local max\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ tmp\n    local i\n    local j\n    local k\n    local len\n    local min\n \
    \   local max\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    \n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=\"$2\"\n  local\
    \ max=\"$3\"\n  local tmp\n  local output\n  local i\n  local j\n  local k\n \
    \ local count\n  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local\
    \ tmp6\n  local tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n\
    \  local tmp12\n  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n \
    \ local tmp17\n  local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local\
    \ tmp22\n  local tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n\
    \  local tmp28\n  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n \
    \ local tmp33\n  local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local\
    \ tmp38\n  local tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n\
    \  local tmp44\n  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n \
    \ local tmp49\n  local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local\
    \ tmp54\n  local tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n\
    \  local tmp60\n  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n \
    \ local tmp65\n  local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local\
    \ tmp70\n  local tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n\
    \  local tmp76\n  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n \
    \ local tmp81\n  local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local\
    \ tmp86\n  local tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n\
    \  local tmp92\n  local tmp93\n  local tmp94\n  local tmp95\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list_cmd=\"sort -n -k 1,1\
    \ -k 2,2 -k 3,3 -k 4,4 -k 5,5 -k 6,6 -k 7,7 -k 8,8 -k 9,9 -k 10,10 -k 11,11 -k\
    \ 12,12 -k 13,13 -k 14,14 -k 15,15 -k 16,16 -k 17,17 -k 18,18 -k 19,19 -k 20,20\
    \ -k 21,21 -k 22,22 -k 23,23 -k 24,24 -k 25,25 -k 26,26 -k 27,27 -k 28,28 -k 29,29\
    \ -k 30,30 -k 31,31 -k 32,32 -k 33,33 -k 34,34 -k 35,35 -k 36,36 -k 37,37 -k 38,38\
    \ -k 39,39 -k 40,40 -k 41,41 -k 42,42 -k 43,43 -k 44,44 -k 45,45 -k 46,46 -k 47,47\
    \ -k 48,48 -k 49,49 -k 50,50 -k 51,51 -k 52,52 -k 53,53 -k 54,54 -k 55,55 -k 56,56\
    \ -k 57,57 -k 58,58 -k 59,59 -k 60,60 -k 61,61 -k 62,62 -k 63,63 -k 64,64 -k 65,65\
    \ -k 66,66 -k 67,67 -k 68,68 -k 69,69 -k 70,70 -k 71,71 -k 72,72 -k 73,73 -k 74,74\
    \ -k 75,75 -k 76,76 -k 77,77 -k 78,78 -k 79,79 -k 80,80 -k 81,81 -k 82,82 -k 83,83\
    \ -k 84,84 -k 85,85 -k 86,86 -k 87,87 -k 88,88 -k 89,89 -k 90,90 -k 91,91 -k 92,92\
    \ -k 93,93 -k 94,94 -k 95,95 -k 96,96 -k 97,97 -k 98,98 -k 99,99 -k 100,100 -k\
    \ 101,101 -k 102,102 -k 103,103 -k 104,104 -k \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7h8purpc.sh: line 26: unexpected EOF while looking for matching
    `"''

    /tmp/tmp7h8purpc.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local strange_sort_list=$1\n  local strange_sort_list_output=\"\
    \"\n  local strange_sort_list_count=0\n  local strange_sort_list_count_max=0\n\
    \  local strange_sort_list_count_min=0\n  local strange_sort_list_count_temp=0\n\
    \  local strange_sort_list_count_temp2=0\n  local strange_sort_list_count_temp3=0\n\
    \  local strange_sort_list_count_temp4=0\n  local strange_sort_list_count_temp5=0\n\
    \  local strange_sort_list_count_temp6=0\n  local strange_sort_list_count_temp7=0\n\
    \  local strange_sort_list_count_temp8=0\n  local strange_sort_list_count_temp9=0\n\
    \  local strange_sort_list_count_temp10=0\n  local strange_sort_list_count_temp11=0\n\
    \  local strange_sort_list_count_temp12=0\n  local strange_sort_list_count_temp13=0\n\
    \  local strange_sort_list_count_temp14=0\n  local strange_sort_list_count_temp15=0\n\
    \  local strange_sort_list_count_temp16=0\n  local strange_sort_list_count_temp17=0\n\
    \  local strange_sort_list_count_temp18=0\n  local strange_sort_list_count_temp19=0\n\
    \  local strange_sort_list_count_temp20=0\n  local strange_sort_list_count_temp21=0\n\
    \  local strange_sort_list_count_temp22=0\n  local strange_sort_list_count_temp23=0\n\
    \  local strange_sort_list_count_temp24=0\n  local strange_sort_list_count_temp25=0\n\
    \  local strange_sort_list_count_temp26=0\n  local strange_sort_list_count_temp27=0\n\
    \  local strange_sort_list_count_temp28=0\n  local strange_sort_list_count_temp29=0\n\
    \  local strange_sort_list_count_temp30=0\n  local strange_sort_list_count_temp31=0\n\
    \  local strange_sort_list_count_temp32=0\n  local strange_sort_list_count_temp33=0\n\
    \  local strange_sort_list_count_temp34=0\n  local strange_sort_list_count_temp35=0\n\
    \  local strange_sort_list_count_temp36=0\n  local strange_sort_list_count_temp37=0\n\
    \  local strange_sort_list_count_temp38=0\n  local strange_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local input=$2\n    local\
    \ output\n    output=$(echo \"$input\" | sort -n -k 1,1 -k 2,2 -k 3,3 -k 4,4 -k\
    \ 5,5 -k 6,6 -k 7,7 -k 8,8 -k 9,9 -k 10,10 -k 11,11 -k 12,12 -k 13,13 -k 14,14\
    \ -k 15,15 -k 16,16 -k 17,17 -k 18,18 -k 19,19 -k 20,20 -k 21,21 -k 22,22 -k 23,23\
    \ -k 24,24 -k 25,25 -k 26,26 -k 27,27 -k 28,28 -k 29,29 -k 30,30 -k 31,31 -k 32,32\
    \ -k 33,33 -k 34,34 -k 35,35 -k 36,36 -k 37,37 -k 38,38 -k 39,39 -k 40,40 -k 41,41\
    \ -k 42,42 -k 43,43 -k 44,44 -k 45,45 -k 46,46 -k 47,47 -k 48,48 -k 49,49 -k 50,50\
    \ -k 51,51 -k 52,52 -k 53,53 -k 54,54 -k 55,55 -k 56,56 -k 57,57 -k 58,58 -k 59,59\
    \ -k 60,60 -k 61,61 -k 62,62 -k 63,63 -k 64,64 -k 65,65 -k 66,66 -k 67,67 -k 68,68\
    \ -k 69,69 -k 70,70 -k 71,71 -k 72,72 -k 73,73 -k 74,74 -k 75,75 -k 76,76 -k 77,77\
    \ -k 78,78 -k 79,79 -k 80,80 -k 81,81 -k 82,82 -k 83,83 -k 84,84 -k 85,85 -k 86,86\
    \ -k 87,87 -k 88,88 -k 89,89 -k 90,90 -k 91,91 -k 92,92 -k 93,93 -k 94,94 -k 95,95\
    \ -k 96,96 -k 97,97 -k 98,98 -k 99,99 -k 100,100 -k 101,101 -k 102,102 \n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppuhc2faq.sh: line 12: unexpected EOF while looking for matching
    `)''

    /tmp/tmppuhc2faq.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a sorted\n    local -a tmp\n    local -i i\n    local -n max\n    local -n\
    \ min\n    local -n len\n    local -n count\n    local -n i\n    local -n j\n\
    \    local -n k\n    local -n l\n    local -n m\n    local -n n\n    local -n\
    \ p\n    local -n q\n    local -n r\n    local -n s\n    local -n t\n    local\
    \ -n u\n    local -n v\n    local -n w\n    local -n x\n    local -n y\n    local\
    \ -n z\n    local -n a\n    local -n b\n    local -n c\n    local -n d\n    local\
    \ -n e\n    local -n f\n    local -n g\n    local -n h\n    local -n i\n    local\
    \ -n j\n    local -n k\n    local -n l\n    local -n m\n    local -n n\n    local\
    \ -n p\n    local -n q\n    local -n r\n    local -n s\n    local -n t\n    local\
    \ -n u\n    local -n v\n    local -n w\n    local -n x\n    local -n y\n    local\
    \ -n z\n    local -n a\n    local -n b\n    local -n c\n    local -n d\n    local\
    \ -n e\n    local -n f\n    local -n g\n    local -n h\n    local -n i\n    local\
    \ -n j\n    local -n k\n    local -n l\n    local -n m\n    local -n n\n    local\
    \ -n p\n    local -n q\n    local -n r\n    local -n s\n    local -n t\n    local\
    \ -n u\n    local -n v\n    local -n w\n    local -n x\n    local -n y\n    local\
    \ -n z\n    local -n a\n    local -n b\n    local -n c\n    local -n d\n    local\
    \ -n e\n    local -n f\n    local -n g\n    local -n h\n    local -n i\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local max\n    local min\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    shift\n    local list\n \
    \   list=\"$*\"\n    local i\n    local j\n    local temp\n    local result\n\
    \    local strange_sort\n    local strange_sort_list\n    strange_sort=0\n   \
    \ strange_sort_list=\"\"\n    for (( i = 0; i < ${#list}; i++ )); do\n       \
    \ strange_sort=$(( strange_sort + ${list[i]} ))\n    done\n    for (( j = 1; j\
    \ < ${#list}; j++ )); do\n        temp=${list[j]}\n        for (( i = j - 1; i\
    \ >= 0; i-- )); do\n            if [ ${list[i]} -gt ${temp} ]; then\n        \
    \        list[i]=${list[i]}\n            fi\n        done\n        list[j-1]=${list[j-1]}\n\
    \        list[j]=${temp}\n    done\n    for (( i = 0; i < ${#list}; i++ )); do\n\
    \        strange_sort_list=\"${strange_sort_list} ${list[i]}\"\n    done\n   \
    \ echo \"${strange_sort_list}\"\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort\n\
    \    local i\n    local strange_sort_list\n    strange_sort=\"\"\n    for (( i\
    \ = 0; i < ${#list}; i++ )); do\n        strange_sort=\"${strange_sort} ${list[i]}\"\
    \n    done\n    strange_sort_list=\"${strange_sort}\"\n}\n\ncandidate() {\n  \
    \  strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local tmp\n\
    \    local strange_list\n    local strange_list_len\n    local strange_list_tmp\n\
    \    local strange_list_i\n    local strange_list_j\n    local strange_list_tmp2\n\
    \    local strange_list_tmp3\n    local strange_list_tmp4\n    local strange_list_tmp5\n\
    \    local strange_list_tmp6\n    local strange_list_tmp7\n    local strange_list_tmp8\n\
    \    local strange_list_tmp9\n    local strange_list_tmp10\n    local strange_list_tmp11\n\
    \    local strange_list_tmp12\n    local strange_list_tmp13\n    local strange_list_tmp14\n\
    \    local strange_list_tmp15\n    local strange_list_tmp16\n    local strange_list_tmp17\n\
    \    local strange_list_tmp18\n    local strange_list_tmp19\n    local strange_list_tmp20\n\
    \    local strange_list_tmp21\n    local strange_list_tmp22\n    local strange_list_tmp23\n\
    \    local strange_list_tmp24\n    local strange_list_tmp25\n    local strange_list_tmp26\n\
    \    local strange_list_tmp27\n    local strange_list_tmp28\n    local strange_list_tmp29\n\
    \    local strange_list_tmp30\n    local strange_list_tmp31\n    local strange_list_tmp32\n\
    \    local strange_list_tmp33\n    local strange_list_tmp34\n    local strange_list_tmp35\n\
    \    local strange_list_tmp36\n    local strange_list_tmp37\n    local strange_list_tmp38\n\
    \    local strange_list_tmp39\n    local strange_list_tmp40\n    local strange_list_tmp41\n\
    \    local strange_list_tmp42\n    local strange_list_tmp43\n    local strange_list_tmp44\n\
    \    local strange_list_tmp45\n    local strange_list_tmp46\n    local strange_list_tmp47\n\
    \    local strange_list_tmp48\n    local strange_list_tmp49\n    local strange_list_tmp50\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_line=\"\"\n    local strange_sort_list_output_line_number=0\n\
    \    local strange_sort_list_output_line_number_increment=1\n    local strange_sort_list_output_line_number_increment_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement=1\n    local\
    \ strange_sort_list_output_line_number_increment_decrement_increment=1\n    local\
    \ strange_sort_list_output_line_number_increment_decrement_decrement=1\n    local\
    \ strange_sort_list_output_line_number_increment_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local strange_sort_list_output_line_number_increment_decrement_decrement_decrement_decrement_decrement_decrement_decrement_decrement_increment=1\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -n arr=$1\n    local -i i\n    local\
    \ -a sorted\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local\
    \ -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n    local\
    \ -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n    local\
    \ -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local\
    \ -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local\
    \ -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local\
    \ -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local\
    \ -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local\
    \ -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local\
    \ -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local\
    \ -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local\
    \ -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local\
    \ -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local\
    \ -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local\
    \ -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local\
    \ -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local\
    \ -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local\
    \ -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local -a \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvetd08cx.sh: line 9: local: `1 2 3 4'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ output\n    output=$(for item in $list; do echo $item; done | sort -n | tr -d\
    \ '\\n')\n    echo \"$output\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=\"$1\"\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_temp=\"\"\n    local strange_sort_list_temp2=\"\
    \"\n    local strange_sort_list_temp3=\"\"\n    local strange_sort_list_temp4=\"\
    \"\n    local strange_sort_list_temp5=\"\"\n    local strange_sort_list_temp6=\"\
    \"\n    local strange_sort_list_temp7=\"\"\n    local strange_sort_list_temp8=\"\
    \"\n    local strange_sort_list_temp9=\"\"\n    local strange_sort_list_temp10=\"\
    \"\n    local strange_sort_list_temp11=\"\"\n    local strange_sort_list_temp12=\"\
    \"\n    local strange_sort_list_temp13=\"\"\n    local strange_sort_list_temp14=\"\
    \"\n    local strange_sort_list_temp15=\"\"\n    local strange_sort_list_temp16=\"\
    \"\n    local strange_sort_list_temp17=\"\"\n    local strange_sort_list_temp18=\"\
    \"\n    local strange_sort_list_temp19=\"\"\n    local strange_sort_list_temp20=\"\
    \"\n    local strange_sort_list_temp21=\"\"\n    local strange_sort_list_temp22=\"\
    \"\n    local strange_sort_list_temp23=\"\"\n    local strange_sort_list_temp24=\"\
    \"\n    local strange_sort_list_temp25=\"\"\n    local strange_sort_list_temp26=\"\
    \"\n    local strange_sort_list_temp27=\"\"\n    local strange_sort_list_temp28=\"\
    \"\n    local strange_sort_list_temp29=\"\"\n    local strange_sort_list_temp30=\"\
    \"\n    local strange_sort_list_temp31=\"\"\n    local strange_sort_list_temp32=\"\
    \"\n    local strange_sort_list_temp33=\"\"\n    local strange_sort_list_temp34=\"\
    \"\n    local strange_sort_list_temp35=\"\"\n    local strange_sort_list_temp36=\"\
    \"\n    local strange_sort_list_temp37=\"\"\n    local strange_sort_list_temp38=\"\
    \"\n    local strange_sort_list_temp39=\"\"\n    local strange_sort_list_temp40=\"\
    \"\n    local strange_sort_list_temp41=\"\"\n    local strange_sort_list_temp42=\"\
    \"\n    local strange_sort_list_temp43=\"\"\n    local strange_sort_list_temp44=\"\
    \"\n    local strange_sort_list_temp45\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local input=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  local j\n  local k\n  local len\n  local min\n  local max\n  local tmp\n\
    \  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local\
    \ tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n\
    \  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n \
    \ local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local\
    \ tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n\
    \  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n \
    \ local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local\
    \ tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n\
    \  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n \
    \ local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local\
    \ tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n\
    \  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n \
    \ local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local\
    \ tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n\
    \  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n \
    \ local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local\
    \ tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n\
    \  local tmp93\n  local tmp94\n  local tmp95\n  local tmp\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=\"$2\"\n  local\
    \ max=\"$3\"\n  local tmp\n  local i\n  local j\n  local output\n  local count\n\
    \  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local\
    \ tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n\
    \  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n \
    \ local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local\
    \ tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n\
    \  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n \
    \ local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local\
    \ tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n\
    \  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n \
    \ local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local\
    \ tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n\
    \  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n \
    \ local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local\
    \ tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n\
    \  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n \
    \ local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local\
    \ tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n\
    \  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local input=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort\n\
    \    local i\n    local j\n    local strange_sort_list\n    local strange_sort_list_output\n\
    \    local strange_sort_list_output_line\n    local strange_sort_list_output_line_i\n\
    \    local strange_sort_list_output_line_j\n    local strange_sort_list_output_line_i_value\n\
    \    local strange_sort_list_output_line_j_value\n    local strange_sort_list_output_line_i_length\n\
    \    local strange_sort_list_output_line_j_length\n    local strange_sort_list_output_line_i_length_value\n\
    \    local strange_sort_list_output_line_j_length_value\n    local strange_sort_list_output_line_i_length_value_value\n\
    \    local strange_sort_list_output_line_j_length_value_value\n    local strange_sort_list_output_line_i_length_value_value_value\n\
    \    local strange_sort_list_output_line_j_length_value_value_value\n    local\
    \ strange_sort_list_output_line_i_length_value_value_value\n    local strange_sort_list_output_line_j_length_value_value_value\n\
    \    local strange_sort_list_output_line_i_length_value_value_value\n    local\
    \ strange_sort_list_output_line_j_length_value_value_value\n    local strange_sort_list_output_line_i_length_value_value_value\n\
    \    local strange_sort_list_output_line_j_length_value_value_value\n    local\
    \ strange_sort_list_output_line_i_length_value_value_value\n    local strange_sort_list_output_line_j_length_value_value_value\n\
    \    local strange_sort_list_output_line_i_length_value_value_value\n    local\
    \ strange_sort_list_output_line_j_length_value_value_value\n    local strange_sort_list_output_line_i_length_value_value_value\n\
    \    local strange_sort_list_output_line_j_length_value_value_value\n    local\
    \ strange_sort_list_output_line_i_length_value_value_value\n    local strange_sort_list_output_line_j_length_value_value_value\n\
    \    local strange_sort_list_output_line_i_length_value_value_value\n    local\
    \ strange_sort_list_output_line_j_length_value_value_value\n    local strange_sort_list_output_line_i_length_value_value_value\n\
    \    local strange_sort_list_output_line_j_length_value_value_value\n    local\
    \ strange_sort_list_output_line_i_length_value_value_value\n    local strange_sort_list_output_line_j_length_value_value_value\n\
    \    local strange_sort_list_output_line_i_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a list\n    list=($1)\n\
    \    local -a sorted\n    sorted=()\n    local i\n    for ((i=0; i<${#list[@]};\
    \ i++)); do\n        local j\n        for ((j=0; j<${#list[@]}; j++)); do\n  \
    \          if [[ ${list[j]} -gt ${list[i]} ]]; then\n                sorted+=(\"\
    ${list[i]}\")\n                list[i]=${list[j]}\n                list[j]=${list[i]}\n\
    \            fi\n        done\n        sorted+=(\"${list[i]}\")\n        list[i]=${list[i]}\n\
    \    done\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    shift\n    local list\n \
    \   list=\"$(IFS=$'\\n'; echo \"$@\")\"\n    local i\n    local j\n    local k\n\
    \    local temp\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n\
    \    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n\
    \    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local\
    \ tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n\
    \    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local\
    \ tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n\
    \    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local\
    \ tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n\
    \    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local\
    \ tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n\
    \    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local\
    \ tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n\
    \    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local\
    \ tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n\
    \    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local\
    \ tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n\
    \    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local\
    \ tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n\
    \    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local\
    \ tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n\
    \    local tmp91\n    local tmp92\n    local tmp93\n    local \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local tmp\n  local i\n \
    \ local j\n  local k\n  local min\n  local max\n  local tmp2\n  local tmp3\n \
    \ local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local tmp8\n  local\
    \ tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n\
    \  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n  local tmp19\n \
    \ local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local tmp24\n  local\
    \ tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n\
    \  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n  local tmp35\n \
    \ local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local tmp40\n  local\
    \ tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n\
    \  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n  local tmp51\n \
    \ local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local tmp56\n  local\
    \ tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n\
    \  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n  local tmp67\n \
    \ local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local tmp72\n  local\
    \ tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n\
    \  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n  local tmp83\n \
    \ local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local tmp88\n  local\
    \ tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n\
    \  local tmp95\n  local tmp96\n  local tmp97\n  local \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local IFS=' '\n  local -a arr\n  arr=($1)\n \
    \ local i\n  local j\n  local k\n  local min\n  local max\n  local tmp\n  local\
    \ tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n\
    \  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local\
    \ tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n\
    \  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n \
    \ local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local\
    \ tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n\
    \  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n \
    \ local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local\
    \ tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n\
    \  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n \
    \ local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local\
    \ tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n\
    \  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n \
    \ local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local\
    \ tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n\
    \  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n \
    \ local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local\
    \ tmp93\n  local tmp94\n  local tmp95\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list_str=$1\n  local list_str_tmp\n  local\
    \ list_str_tmp_tmp\n  local list_str_tmp_tmp_tmp\n  local list_str_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp\n  local list_str_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a result\n    local -i i\n    local j\n    local k\n    local len\n    local\
    \ min\n    local max\n    local tmp\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=\"$2\"\n  local\
    \ max=\"$3\"\n  local tmp\n  local i\n  local strange_list\n  local strange_list_len\n\
    \  local strange_list_i\n  local strange_list_j\n  local strange_list_k\n  local\
    \ strange_list_l\n  local strange_list_m\n  local strange_list_n\n  local strange_list_o\n\
    \  local strange_list_p\n  local strange_list_q\n  local strange_list_r\n  local\
    \ strange_list_s\n  local strange_list_t\n  local strange_list_u\n  local strange_list_v\n\
    \  local strange_list_w\n  local strange_list_x\n  local strange_list_y\n  local\
    \ strange_list_z\n  local strange_list_a\n  local strange_list_b\n  local strange_list_c\n\
    \  local strange_list_d\n  local strange_list_e\n  local strange_list_f\n  local\
    \ strange_list_g\n  local strange_list_h\n  local strange_list_i\n  local strange_list_j\n\
    \  local strange_list_k\n  local strange_list_l\n  local strange_list_m\n  local\
    \ strange_list_n\n  local strange_list_o\n  local strange_list_p\n  local strange_list_q\n\
    \  local strange_list_r\n  local strange_list_s\n  local strange_list_t\n  local\
    \ strange_list_u\n  local strange_list_v\n  local strange_list_w\n  local strange_list_x\n\
    \  local strange_list_y\n  local strange_list_z\n  local strange_list_a\n  local\
    \ strange_list_b\n  local strange_list_c\n  local strange_list_d\n  local strange_list_e\n\
    \  local strange_list_f\n  local strange_list_g\n  local strange_list_h\n  local\
    \ strange_list_i\n  local strange_list_j\n  local strange_list_k\n  local strange_list_l\n\
    \  local strange_list_m\n  local strange_list_n\n  local strange_list_o\n\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr=( $1 )\n  \
    \  local i tmp tmp2 tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n\
    \    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n\
    \    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n\
    \    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n\
    \    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n\
    \    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n\
    \    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n\
    \    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n\
    \    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n\
    \    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n\
    \    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n\
    \    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n\
    \    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n\
    \    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n\
    \    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n\
    \    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n\
    \    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp70\n\
    \    local -a tmp71\n    local -a tmp72\n    \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -i i\n    local j\n    local k\n    local len\n    local min\n    local max\n\
    \    local tmp\n    local str\n\n    arr=( $1 )\n    len=${#arr[@]}\n    for ((\
    \ i=0; i<len; i++ )); do\n        min=i\n        max=$(( len-1 ))\n        for\
    \ (( j=i+1; j<len; j++ )); do\n            if [ ${arr[j]} -gt ${arr[i]} ]; then\n\
    \                max=j\n            fi\n        done\n        for (( k=min; k<=max;\
    \ k++ )); do\n            tmp=${arr[k]}\n            arr[k]=${arr[i]}\n      \
    \      arr[i]=${tmp}\n        done\n    done\n\n    str=\"${arr[@]}\"\n    echo\
    \ \"$str\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list\n    local i\n\
    \    local j\n    local k\n    local temp\n    list=\"$2\"\n    shift\n    for\
    \ ((i=1; i<${#list}; i++)); do\n        for ((j=0; j<i; j++)); do\n          \
    \  if [[ ${list[i]} -gt ${list[j]} ]]; then\n                temp=${list[i]}\n\
    \                list[i]=${list[j]}\n                list[j]=${temp}\n       \
    \     fi\n        done\n    done\n    echo \"${list}\"\n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local tmp\n\
    \    local strange_sort_list\n    local strange_sort_list_output\n    local strange_sort_list_output_len\n\
    \    local strange_sort_list_output_len2\n    local strange_sort_list_output_len3\n\
    \    local strange_sort_list_output_len4\n    local strange_sort_list_output_len5\n\
    \    local strange_sort_list_output_len6\n    local strange_sort_list_output_len7\n\
    \    local strange_sort_list_output_len8\n    local strange_sort_list_output_len9\n\
    \    local strange_sort_list_output_len10\n    local strange_sort_list_output_len11\n\
    \    local strange_sort_list_output_len12\n    local strange_sort_list_output_len13\n\
    \    local strange_sort_list_output_len14\n    local strange_sort_list_output_len15\n\
    \    local strange_sort_list_output_len16\n    local strange_sort_list_output_len17\n\
    \    local strange_sort_list_output_len18\n    local strange_sort_list_output_len19\n\
    \    local strange_sort_list_output_len20\n    local strange_sort_list_output_len21\n\
    \    local strange_sort_list_output_len22\n    local strange_sort_list_output_len23\n\
    \    local strange_sort_list_output_len24\n    local strange_sort_list_output_len25\n\
    \    local strange_sort_list_output_len26\n    local strange_sort_list_output_len27\n\
    \    local strange_sort_list_output_len28\n    local strange_sort_list_output_len29\n\
    \    local strange_sort_list_output_len30\n    local strange_sort_list_output_len31\n\
    \    local strange_sort_list_output_len32\n    local strange_sort_list_output_len33\n\
    \    local strange_sort_list_output_len34\n    local strange_sort_list_output_len35\n\
    \    local strange_sort_list_output_len36\n    local strange_sort_list_output_len37\n\
    \    local strange_sort_list_output_len38\n    local strange_sort_list_output_len39\n\
    \    local strange_sort_list_output_len40\n    local strange_sort_list_output_len41\n\
    \    local strange_sort_list_output_len42\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local result=\"\"\n\
    \    local i\n    local j\n    local k\n    local temp\n    local min\n    local\
    \ max\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ output\n    output=$(echo \"${list}\" | tr \" \" \"\\n\" | sort -n | tr \"\\\
    n\" \" \")\n    echo \"${output}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local result=\"\"\n  local\
    \ i\n  for i in $(seq 0 $((${#list}-1))); do\n    local j\n    for j in $(seq\
    \ 0 $((${#list}-1))); do\n      if [[ ${list[j]} -gt ${list[i]} ]]; then\n   \
    \     local temp=${list[i]}\n        list[i]=${list[j]}\n        list[j]=${temp}\n\
    \      fi\n    done\n    local temp=${list[i]}\n    result+=\"${temp} \"\n  done\n\
    \  echo \"${result}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpwj1t4gqk.sh: line 15: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local temp\n  local i\n\
    \  local j\n  local k\n  local len\n  local min\n  local max\n  local strange_list\n\
    \  local strange_list_len\n  local strange_list_i\n  local strange_list_j\n  local\
    \ strange_list_k\n  local strange_list_temp\n  local strange_list_temp2\n  local\
    \ strange_list_temp3\n  local strange_list_temp4\n  local strange_list_temp5\n\
    \  local strange_list_temp6\n  local strange_list_temp7\n  local strange_list_temp8\n\
    \  local strange_list_temp9\n  local strange_list_temp10\n  local strange_list_temp11\n\
    \  local strange_list_temp12\n  local strange_list_temp13\n  local strange_list_temp14\n\
    \  local strange_list_temp15\n  local strange_list_temp16\n  local strange_list_temp17\n\
    \  local strange_list_temp18\n  local strange_list_temp19\n  local strange_list_temp20\n\
    \  local strange_list_temp21\n  local strange_list_temp22\n  local strange_list_temp23\n\
    \  local strange_list_temp24\n  local strange_list_temp25\n  local strange_list_temp26\n\
    \  local strange_list_temp27\n  local strange_list_temp28\n  local strange_list_temp29\n\
    \  local strange_list_temp30\n  local strange_list_temp31\n  local strange_list_temp32\n\
    \  local strange_list_temp33\n  local strange_list_temp34\n  local strange_list_temp35\n\
    \  local strange_list_temp36\n  local strange_list_temp37\n  local strange_list_temp38\n\
    \  local strange_list_temp39\n  local strange_list_temp40\n  local strange_list_temp41\n\
    \  local strange_list_temp42\n  local strange_list_temp43\n  local strange_list_temp44\n\
    \  local strange_list_temp45\n  local strange_list_temp46\n  local strange_list_temp47\n\
    \  local strange_list_temp48\n  local strange_list_temp49\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\
    \    local tmp98\n    local tmp99\n    local tmp100\n    local tmp101\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=\"$1\"\n    local strange_sort_list_length=${#strange_sort_list}\n\
    \    local strange_sort_list_length2=$((strange_sort_list_length-1))\n    local\
    \ strange_sort_list_length3=$((strange_sort_list_length-2))\n    local strange_sort_list_length4=$((strange_sort_list_length-3))\n\
    \    local strange_sort_list_length5=$((strange_sort_list_length-4))\n    local\
    \ strange_sort_list_length6=$((strange_sort_list_length-5))\n    local strange_sort_list_length7=$((strange_sort_list_length-6))\n\
    \    local strange_sort_list_length8=$((strange_sort_list_length-7))\n    local\
    \ strange_sort_list_length9=$((strange_sort_list_length-8))\n    local strange_sort_list_length10=$((strange_sort_list_length-9))\n\
    \    local strange_sort_list_length11=$((strange_sort_list_length-10))\n    local\
    \ strange_sort_list_length12=$((strange_sort_list_length-11))\n    local strange_sort_list_length13=$((strange_sort_list_length-12))\n\
    \    local strange_sort_list_length14=$((strange_sort_list_length-13))\n    local\
    \ strange_sort_list_length15=$((strange_sort_list_length-14))\n    local strange_sort_list_length16=$((strange_sort_list_length-15))\n\
    \    local strange_sort_list_length17=$((strange_sort_list_length-16))\n    local\
    \ strange_sort_list_length18=$((strange_sort_list_length-17))\n    local strange_sort_list_length19=$((strange_sort_list_length-18))\n\
    \    local strange_sort_list_length20=$((strange_sort_list_length-19))\n    local\
    \ strange_sort_list_length21=$((strange_sort_list_length-20))\n    local strange_sort_list_length22=$((strange_sort_list_length-21))\n\
    \    local strange_sort_list_length23=$((strange_sort_list_length-22))\n    local\
    \ strange_sort_list_length24=$((strange_sort_list_length-23))\n    local strange_sort_list_length25=$((strange_sort_list_length-24))\n\
    \    local strange\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ output\n    output=$(echo \"${list}\" | tr \" \" \"\\n\" | sort -n | tr \"\\\
    n\" \" \")\n    echo \"${output}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local strange_sort_list=\"$1\"\n  local strange_sort_list_output\n\
    \  local strange_sort_list_output_line\n  local strange_sort_list_output_line_number\n\
    \  local strange_sort_list_output_line_number_index\n  local strange_sort_list_output_line_number_length\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_list_output_line_number_length_index\n  local strange_sort_list_output_line_number_length_index\n\
    \  local strange_sort_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local len\n    local min\n    local\
    \ max\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n\
    \    local tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local temp\n  local i\n\
    \  local j\n  local k\n  local len\n  local min\n  local max\n  local tmp\n  local\
    \ strange_list\n  local strange_list_len\n  local strange_list_i\n  local strange_list_j\n\
    \  local strange_list_k\n  local strange_list_tmp\n  local strange_list_tmp2\n\
    \  local strange_list_tmp3\n  local strange_list_tmp4\n  local strange_list_tmp5\n\
    \  local strange_list_tmp6\n  local strange_list_tmp7\n  local strange_list_tmp8\n\
    \  local strange_list_tmp9\n  local strange_list_tmp10\n  local strange_list_tmp11\n\
    \  local strange_list_tmp12\n  local strange_list_tmp13\n  local strange_list_tmp14\n\
    \  local strange_list_tmp15\n  local strange_list_tmp16\n  local strange_list_tmp17\n\
    \  local strange_list_tmp18\n  local strange_list_tmp19\n  local strange_list_tmp20\n\
    \  local strange_list_tmp21\n  local strange_list_tmp22\n  local strange_list_tmp23\n\
    \  local strange_list_tmp24\n  local strange_list_tmp25\n  local strange_list_tmp26\n\
    \  local strange_list_tmp27\n  local strange_list_tmp28\n  local strange_list_tmp29\n\
    \  local strange_list_tmp30\n  local strange_list_tmp31\n  local strange_list_tmp32\n\
    \  local strange_list_tmp33\n  local strange_list_tmp34\n  local strange_list_tmp35\n\
    \  local strange_list_tmp36\n  local strange_list_tmp37\n  local strange_list_tmp38\n\
    \  local strange_list_tmp39\n  local strange_list_tmp40\n  local strange_list_tmp41\n\
    \  local strange_list_tmp42\n  local strange_list_tmp43\n  local strange_list_tmp44\n\
    \  local strange_list_tmp45\n  local strange_list_tmp46\n  local strange_list_tmp47\n\
    \  local strange_list_tmp48\n  local strange_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local tmp\n\
    \    local strange_list\n    local strange_list_len\n    local strange_list_i\n\
    \    local strange_list_j\n    local strange_list_tmp\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_len\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_length=${#strange_sort_list}\n\
    \    local strange_sort_list_index=0\n    local strange_sort_list_temp\n    local\
    \ strange_sort_list_temp_length\n    local strange_sort_list_temp_length_index\n\
    \    local strange_sort_list_temp_length_index2\n    local strange_sort_list_temp_length_index3\n\
    \    local strange_sort_list_temp_length_index4\n    local strange_sort_list_temp_length_index5\n\
    \    local strange_sort_list_temp_length_index6\n    local strange_sort_list_temp_length_index7\n\
    \    local strange_sort_list_temp_length_index8\n    local strange_sort_list_temp_length_index9\n\
    \    local strange_sort_list_temp_length_index10\n    local strange_sort_list_temp_length_index11\n\
    \    local strange_sort_list_temp_length_index12\n    local strange_sort_list_temp_length_index13\n\
    \    local strange_sort_list_temp_length_index14\n    local strange_sort_list_temp_length_index15\n\
    \    local strange_sort_list_temp_length_index16\n    local strange_sort_list_temp_length_index17\n\
    \    local strange_sort_list_temp_length_index18\n    local strange_sort_list_temp_length_index19\n\
    \    local strange_sort_list_temp_length_index20\n    local strange_sort_list_temp_length_index21\n\
    \    local strange_sort_list_temp_length_index22\n    local strange_sort_list_temp_length_index23\n\
    \    local strange_sort_list_temp_length_index24\n    local strange_sort_list_temp_length_index25\n\
    \    local strange_sort_list_temp_length_index26\n    local strange_sort_list_temp_length_index27\n\
    \    local strange_sort_list_temp_length_index28\n    local strange_sort_list_temp_length_index29\n\
    \    local strange_sort_list_temp_length_index30\n    local strange_sort_list_temp_length_index31\n\
    \    local strange_sort_list_temp_length_index32\n    local strange_sort_list_temp_length_index33\n\
    \    local strange_sort_list_temp_length_index34\n    local strange_sort_list_temp_length_index35\n\
    \    local strange_sort_list_temp_length_index36\n    local strange_sort_list_temp_length_index37\n\
    \    local strange_sort_list_temp_length_index38\n    \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n\
    \    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n\
    \    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local\
    \ tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n\
    \    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local\
    \ tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n\
    \    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local\
    \ tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n\
    \    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local\
    \ tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n\
    \    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local\
    \ tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n\
    \    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local\
    \ tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n\
    \    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local\
    \ tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n\
    \    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local\
    \ tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n\
    \    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local\
    \ tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n\
    \    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local\
    \ tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ -a tmp\n    local -i i\n    local j\n    local k\n    local len\n    local min\n\
    \    local max\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n\
    \    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n\
    \    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local\
    \ tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n\
    \    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local\
    \ tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n\
    \    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local\
    \ tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n\
    \    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local\
    \ tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n\
    \    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local\
    \ tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n\
    \    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local\
    \ tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n\
    \    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local\
    \ tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n\
    \    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local\
    \ tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n\
    \    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local\
    \ tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n\
    \    local tmp92\n    local tmp93\n    local tmp94\n    local tmp\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ i\n    local j\n    local k\n    local min\n    local max\n    local tmp2\n\
    \    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min_val\n  local max_val\n\
    \  local min_str\n  local max_str\n  local i\n  local j\n  local output\n\n  #\
    \ Sort list from smallest to largest\n  for i in \"${!list}\"; do\n    if [[ ${list[i]}\
    \ -gt ${list[i+1]} ]]; then\n      output+=\"${list[i]} \"\n      list[i]=\"${list[i+1]}\"\
    \n      list[i+1]=\"${list[i]}\"\n    fi\n  done\n\n  # Sort list from largest\
    \ to smallest\n  for i in \"${!list}\"; do\n    if [[ ${list[i]} -lt ${list[i+1]}\
    \ ]]; then\n      output+=\"${list[i]} \"\n      list[i]=\"${list[i+1]}\"\n  \
    \    list[i+1]=\"${list[i]}\"\n    fi\n  done\n\n  # Reverse output\n  output=\"\
    ${output%?}\"\n  output=\"${output#* }\"\n  output=\"${output%?}\"\n  output=\"\
    ${output#* }\"\n  output=\"${output%?}\"\n  output=\"${output#* }\"\n  output=\"\
    ${output%?}\"\n  output=\"${output#* }\"\n  output=\"${output%?}\"\n  output=\"\
    ${output#* }\"\n  output=\"${output%?}\"\n  output=\"${output#* }\"\n  output=\"\
    ${output%?}\"\n  output=\"${output#* }\"\n  output=\"${output%?}\"\n  output=\"\
    ${output#* }\"\n  output=\"${output%?}\"\n  output=\"${output#* }\"\n  output=\"\
    ${output%?}\"\n  output=\"${output#* }\"\n  output=\"${output%?}\"\n  output=\"\
    ${output#* }\"\n  output=\"${output%?}\"\n  output=\"${output#* }\"\n  output=\"\
    ${output%?}\"\n  output=\"${output#* }\"\n  output=\"${output%?}\"\n  output=\"\
    ${output#* }\"\n  output=\"${output%?}\"\n  output=\"${output#* }\"\n  output=\"\
    ${output%?}\"\n  output=\"${output#* }\"\n  output=\"${output%?}\"\n  output=\"\
    ${output#* }\"\n  output=\"${output%?}\"\n  output=\"${output#* }\"\n  output=\"\
    ${output%?}\"\n  output=\"${output#* }\"\n  output=\"${output%?}\"\n  output=\"\
    ${output#* }\"\n  output=\"${output%?}\"\n  output=\"${output#* }\"\n  output=\"\
    ${output%\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8nh49rko.sh: line 96: unexpected EOF while looking for matching
    `"''

    /tmp/tmp8nh49rko.sh: line 100: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_temp=\"\"\n    local strange_sort_list_output_temp2=\"\
    \"\n    local strange_sort_list_output_temp3=\"\"\n    local strange_sort_list_output_temp4=\"\
    \"\n    local strange_sort_list_output_temp5=\"\"\n    local strange_sort_list_output_temp6=\"\
    \"\n    local strange_sort_list_output_temp7=\"\"\n    local strange_sort_list_output_temp8=\"\
    \"\n    local strange_sort_list_output_temp9=\"\"\n    local strange_sort_list_output_temp10=\"\
    \"\n    local strange_sort_list_output_temp11=\"\"\n    local strange_sort_list_output_temp12=\"\
    \"\n    local strange_sort_list_output_temp13=\"\"\n    local strange_sort_list_output_temp14=\"\
    \"\n    local strange_sort_list_output_temp15=\"\"\n    local strange_sort_list_output_temp16=\"\
    \"\n    local strange_sort_list_output_temp17=\"\"\n    local strange_sort_list_output_temp18=\"\
    \"\n    local strange_sort_list_output_temp19=\"\"\n    local strange_sort_list_output_temp20=\"\
    \"\n    local strange_sort_list_output_temp21=\"\"\n    local strange_sort_list_output_temp22=\"\
    \"\n    local strange_sort_list_output_temp23=\"\"\n    local strange_sort_list_output_temp24=\"\
    \"\n    local strange_sort_list_output_temp25=\"\"\n    local strange_sort_list_output_temp26=\"\
    \"\n    local strange_sort_list_output_temp27=\"\"\n    local strange_sort_list_output_temp28=\"\
    \"\n    local strange_sort_list_output_temp29=\"\"\n    local strange_sort_list_output_temp30=\"\
    \"\n    local strange_sort_list_output_temp31=\"\"\n    local strange_sort_list_output_temp32=\"\
    \"\n    local strange_sort_list_output_temp33=\"\"\n    local strange_sort_list_output_temp34=\"\
    \"\n    local strange_sort_list_output_temp35=\"\"\n    local strange_sort_list_output_temp36=\"\
    \"\n    local strange_sort_list_output_temp37=\"\"\n    local strange_sort_list_output_temp38=\"\
    \"\n    local strange_sort_list_output_temp39=\"\"\n    local strange_sort_list_output_temp40=\"\
    \"\n    local strange_sort_list_output_temp41=\"\"\n    \n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local tmp\n  local tmp2\n\
    \  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local\
    \ tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n\
    \  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n \
    \ local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local\
    \ tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n\
    \  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n \
    \ local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local\
    \ tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n\
    \  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n \
    \ local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local\
    \ tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n\
    \  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n \
    \ local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local\
    \ tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n\
    \  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n \
    \ local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local\
    \ tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n\
    \  local tmp94\n  local tmp95\n  local tmp96\n  local tmp97\n  local tmp98\n \
    \ local tmp99\n  local tmp100\n  local tmp101\n  local \n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=\"${list[0]}\"\
    \n  local max=\"${list[0]}\"\n  local tmp=\"${list[0]}\"\n  local i\n  for i in\
    \ \"${!list}\"; do\n    if [ \"${list[i]}\" -gt \"${max}\" ]; then\n      max=\"\
    ${list[i]}\"\n    elif [ \"${list[i]}\" -lt \"${min}\" ]; then\n      min=\"${list[i]}\"\
    \n    fi\n  done\n  local tmp2\n  for ((i=1; i<${#list}; i++)); do\n    if [ \"\
    ${list[i]}\" -gt \"${max}\" ]; then\n      tmp2=\"${list[i]}\"\n    elif [ \"\
    ${list[i]}\" -lt \"${min}\" ]; then\n      tmp2=\"${list[i]}\"\n    fi\n    if\
    \ [ \"${list[i]}\" -gt \"${min}\" ]; then\n      tmp=\"${list[i]}\"\n    fi\n\
    \  done\n  echo \"${list}\"\n  echo \"${min}\"\n  echo \"${max}\"\n  echo \"${tmp}\"\
    \n  echo \"${tmp2}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpit774f0q.sh: line 14: 1 2 3 4: invalid variable name

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=\"${list[0]}\"\
    \n    local max=\"${list[-1]}\"\n    local tmp\n\n    for (( i=1; i<${#list};\
    \ i++ )); do\n        tmp=\"${list[i]}\"\n        if [[ ${min} -gt ${tmp} ]];\
    \ then\n            min=\"${tmp}\"\n        elif [[ ${max} -lt ${tmp} ]]; then\n\
    \            max=\"${tmp}\"\n        fi\n    done\n\n    local output\n    output=\"\
    $(printf \"%s\\n\" \"${list[@]}\" | sort -n | sed 's/^/'${min}'/; s/$/'${max}'/')\"\
    \n    echo \"$output\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjba4do6h.sh: line 11: list: bad array subscript

    /tmp/tmpjba4do6h.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpjba4do6h.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpjba4do6h.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpjba4do6h.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpjba4do6h.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmpjba4do6h.sh: line 16: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    sed: -e expression #1, char 5: unterminated `s'' command

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min=\"$2\"\n \
    \   local max=\"$3\"\n    local tmp\n    local i\n    local result\n    local\
    \ count\n    local j\n    local k\n    local l\n    local m\n    local n\n   \
    \ local o\n    local p\n    local q\n    local r\n    local s\n    local t\n \
    \   local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min\n    local\
    \ max\n    local tmp\n    local result\n    local i\n\n    # Find minimum and\
    \ maximum\n    min=$( echo $list | awk '{print $1}' | sort -n | head -1 )\n  \
    \  max=$( echo $list | awk '{print $1}' | sort -n | tail -1 )\n\n    # Sort list\
    \ with minimum first\n    for (( i=1; i<=$(( $#list )-1 )); i++ )\n    do\n  \
    \      tmp=$( echo $list | awk \"{print \\$i}\" )\n        if [ \"$tmp\" -gt \"\
    $max\" ]\n        then\n            max=$tmp\n        elif [ \"$tmp\" -lt \"$min\"\
    \ ]\n        then\n            min=$tmp\n        fi\n    done\n\n    # Sort list\
    \ with maximum first\n    for (( i=1; i<=$(( $#list )-1 )); i++ )\n    do\n  \
    \      tmp=$( echo $list | awk \"{print \\$i}\" )\n        if [ \"$tmp\" -gt \"\
    $min\" ]\n        then\n            min=$tmp\n        elif [ \"$tmp\" -lt \"$max\"\
    \ ]\n        then\n            max=$tmp\n        fi\n    done\n\n    # Sort list\
    \ with minimum first\n    for (( i=1; i<=$(( $#list )-1 )); i++ )\n    do\n  \
    \      tmp=$( echo $list | awk \"{print \\$i}\" )\n        if [ \"$tmp\" -gt \"\
    $max\" ]\n        then\n            max=$tmp\n        elif [ \"$tmp\" -lt \"$min\"\
    \ ]\n        then\n            min=$tmp\n        fi\n    done\n\n    # Sort list\
    \ with maximum first\n    for (( i=1; i<=$(( $#list )-1 )); i++ )\n    do\n  \
    \      tmp=$( echo $list | awk \"{print \\$i}\" )\n        if [ \"$tmp\" -gt \"\
    $min\" ]\n        then\n            min=$tmp\n        elif [ \"$tmp\" -lt \"$max\"\
    \ ]\n        then\n            max=$tmp\n        fi\n    done\n\n    # Sort list\
    \ with minimum first\n    for (( i=1; i<=$(( $#list )-1 )); i++ )\n    do\n  \
    \      tmp=$( echo $list | awk \"{print \\$i}\" )\n        if [ \"$tmp\" -gt \"\
    $max\" ]\n        then\n            max=$tmp\n        elif [ \"$tmp\" -lt \"$min\"\
    \ ]\n        then\n            min=$tmp\n        fi\n    done\n\n    # Sort list\
    \ with maximum first\n    for (( i=1; i<=$(( $#list \n}\n\ncandidate() {\n   \
    \ strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4ynxj5at.sh: line 21: syntax error near `;''

    /tmp/tmp4ynxj5at.sh: line 21: `    for (( i=1; i<=$(( $#list )-1 )); i++ )''

    '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local result=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=\"$1\"\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_temp=\"\"\n    local strange_sort_list_temp_output=\"\
    \"\n    local strange_sort_list_temp_int=\"\"\n    local strange_sort_list_temp_int2=\"\
    \"\n    local strange_sort_list_temp_int3=\"\"\n    local strange_sort_list_temp_int4=\"\
    \"\n    local strange_sort_list_temp_int5=\"\"\n    local strange_sort_list_temp_int6=\"\
    \"\n    local strange_sort_list_temp_int7=\"\"\n    local strange_sort_list_temp_int8=\"\
    \"\n    local strange_sort_list_temp_int9=\"\"\n    local strange_sort_list_temp_int10=\"\
    \"\n    local strange_sort_list_temp_int11=\"\"\n    local strange_sort_list_temp_int12=\"\
    \"\n    local strange_sort_list_temp_int13=\"\"\n    local strange_sort_list_temp_int14=\"\
    \"\n    local strange_sort_list_temp_int15=\"\"\n    local strange_sort_list_temp_int16=\"\
    \"\n    local strange_sort_list_temp_int17=\"\"\n    local strange_sort_list_temp_int18=\"\
    \"\n    local strange_sort_list_temp_int19=\"\"\n    local strange_sort_list_temp_int20=\"\
    \"\n    local strange_sort_list_temp_int21=\"\"\n    local strange_sort_list_temp_int22=\"\
    \"\n    local strange_sort_list_temp_int23=\"\"\n    local strange_sort_list_temp_int24=\"\
    \"\n    local strange_sort_list_temp_int25=\"\"\n    local strange_sort_list_temp_int26=\"\
    \"\n    local strange_sort_list_temp_int27=\"\"\n    local strange_sort_list_temp_int28=\"\
    \"\n    local strange_sort_list_temp_int29=\"\"\n    local strange_sort_list_temp_int30=\"\
    \"\n    local strange_sort_list_temp_int31=\"\"\n    local strange_sort_list_temp_int32=\"\
    \"\n    local strange_sort_list_temp_int33=\"\"\n    local strange_sort_list_temp_int34=\"\
    \"\n    local strange_sort_list_temp_int35=\"\"\n    local strange_sort_list_temp_int36=\"\
    \"\n    local strange_sort_list_temp_int37=\"\"\n    local strange_sort_list_temp_int38=\"\
    \"\n    local strange_sort_list_temp_int39=\"\"\n    local strange\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local output\n    local strange_list\n    local strange_list_output\n\
    \    local strange_list_output_tmp\n    local strange_list_output_tmp2\n    local\
    \ strange_list_output_tmp3\n    local strange_list_output_tmp4\n    local strange_list_output_tmp5\n\
    \    local strange_list_output_tmp6\n    local strange_list_output_tmp7\n    local\
    \ strange_list_output_tmp8\n    local strange_list_output_tmp9\n    local strange_list_output_tmp10\n\
    \    local strange_list_output_tmp11\n    local strange_list_output_tmp12\n  \
    \  local strange_list_output_tmp13\n    local strange_list_output_tmp14\n    local\
    \ strange_list_output_tmp15\n    local strange_list_output_tmp16\n    local strange_list_output_tmp17\n\
    \    local strange_list_output_tmp18\n    local strange_list_output_tmp19\n  \
    \  local strange_list_output_tmp20\n    local strange_list_output_tmp21\n    local\
    \ strange_list_output_tmp22\n    local strange_list_output_tmp23\n    local strange_list_output_tmp24\n\
    \    local strange_list_output_tmp25\n    local strange_list_output_tmp26\n  \
    \  local strange_list_output_tmp27\n    local strange_list_output_tmp28\n    local\
    \ strange_list_output_tmp29\n    local strange_list_output_tmp30\n    local strange_list_output_tmp31\n\
    \    local strange_list_output_tmp32\n    local strange_list_output_tmp33\n  \
    \  local strange_list_output_tmp34\n    local strange_list_output_tmp35\n    local\
    \ strange_list_output_tmp36\n    local strange_list_output_tmp37\n    local strange_list_output_tmp38\n\
    \    local strange_list_output_tmp39\n    local strange_list_output_tmp40\n  \
    \  local strange_list_output_tmp41\n    local strange_list_output_tmp42\n    local\
    \ strange_list_output_tmp43\n    local strange_list_output_tmp44\n    local strange_list_output_tmp45\n\
    \    local strange_list_output_\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list_str=$1\n    local list_str_tmp\n\
    \    local list_str_tmp_tmp\n    local list_str_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list=\"\
    \"\n    local strange_sort_list_count=0\n    local strange_sort_list_index=0\n\
    \    local strange_sort_list_max=0\n    local strange_sort_list_min=0\n    local\
    \ strange_sort_list_temp\n    local strange_sort_list_temp2\n    local strange_sort_list_temp3\n\
    \    local strange_sort_list_temp4\n    local strange_sort_list_temp5\n    local\
    \ strange_sort_list_temp6\n    local strange_sort_list_temp7\n    local strange_sort_list_temp8\n\
    \    local strange_sort_list_temp9\n    local strange_sort_list_temp10\n    local\
    \ strange_sort_list_temp11\n    local strange_sort_list_temp12\n    local strange_sort_list_temp13\n\
    \    local strange_sort_list_temp14\n    local strange_sort_list_temp15\n    local\
    \ strange_sort_list_temp16\n    local strange_sort_list_temp17\n    local strange_sort_list_temp18\n\
    \    local strange_sort_list_temp19\n    local strange_sort_list_temp20\n    local\
    \ strange_sort_list_temp21\n    local strange_sort_list_temp22\n    local strange_sort_list_temp23\n\
    \    local strange_sort_list_temp24\n    local strange_sort_list_temp25\n    local\
    \ strange_sort_list_temp26\n    local strange_sort_list_temp27\n    local strange_sort_list_temp28\n\
    \    local strange_sort_list_temp29\n    local strange_sort_list_temp30\n    local\
    \ strange_sort_list_temp31\n    local strange_sort_list_temp32\n    local strange_sort_list_temp33\n\
    \    local strange_sort_list_temp34\n    local strange_sort_list_temp35\n    local\
    \ strange_sort_list_temp36\n    local strange_sort_list_temp37\n    local strange_sort_list_temp38\n\
    \    local strange_sort_list_temp39\n    local strange_sort_list_temp40\n    local\
    \ strange_sort_list_temp41\n    local strange_sort_list_temp42\n    local strange_sort_list_temp43\n\
    \    local strange_sort_list_temp44\n    local strange_sort_list_temp45\n    local\
    \ strange_sort_list_temp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -n arr=$1\n    local -n min=$2\n    local\
    \ -n max=$3\n    local -n i=$4\n    local -n j=$5\n    local -n tmp=$6\n    local\
    \ -n tmp2=$7\n    local -n tmp3=$8\n    local -n tmp4=$9\n    local -n tmp5=$10\n\
    \    local -n tmp6=$11\n    local -n tmp7=$12\n    local -n tmp8=$13\n    local\
    \ -n tmp9=$14\n    local -n tmp10=$15\n    local -n tmp11=$16\n    local -n tmp12=$17\n\
    \    local -n tmp13=$18\n    local -n tmp14=$19\n    local -n tmp15=$20\n    local\
    \ -n tmp16=$21\n    local -n tmp17=$22\n    local -n tmp18=$23\n    local -n tmp19=$24\n\
    \    local -n tmp20=$25\n    local -n tmp21=$26\n    local -n tmp22=$27\n    local\
    \ -n tmp23=$28\n    local -n tmp24=$29\n    local -n tmp25=$30\n    local -n tmp26=$31\n\
    \    local -n tmp27=$32\n    local -n tmp28=$33\n    local -n tmp29=$34\n    local\
    \ -n tmp30=$35\n    local -n tmp31=$36\n    local -n tmp32=$37\n    local -n tmp33=$38\n\
    \    local -n tmp34=$39\n    local -n tmp35=$40\n    local -n tmp36=$41\n    local\
    \ -n tmp37=$42\n    local -n tmp38=$43\n    local -n tmp39=$44\n    local -n tmp40=$45\n\
    \    local -n tmp41=$46\n    local -n tmp42=$47\n    local -n tmp43=$48\n    local\
    \ -n tmp44=$49\n    local -n tmp45=$50\n    local -n tmp46=$51\n    local -n tmp47=$52\n\
    \    local -n tmp48=$53\n    local -n tmp49=$54\n    local -n tmp50=$55\n    local\
    \ -n tmp51=$56\n    local -n tmp52=$57\n    local -n tmp\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc6m_w827.sh: line 9: local: `1 2 3 4'': invalid variable name for
    name reference

    /tmp/tmpc6m_w827.sh: line 10: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 11: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 16: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpc6m_w827.sh: line 18: local: `1 2 3 40'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 19: local: `1 2 3 41'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 20: local: `1 2 3 42'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 21: local: `1 2 3 43'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 22: local: `1 2 3 44'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 23: local: `1 2 3 45'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 24: local: `1 2 3 46'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 25: local: `1 2 3 47'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 26: local: `1 2 3 48'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 27: local: `1 2 3 49'': invalid variable name for name
    reference

    /tmp/tmpc6m_w827.sh: line 28: local: `0'': invalid variable name for name reference

    /tmp/tmpc6m_w827.sh: line 29: local: `1'': invalid variable name for name reference

    /tmp/tmpc6m_w827.sh: line 30: local: `2'': invalid variable name for name reference

    /tmp/tmpc6m_w827.sh: line 31: local: `3'': invalid variable name for name reference

    /tmp/tmpc6m_w827.sh: line 32: local: `4'': invalid variable name for name reference

    /tmp/tmpc6m_w827.sh: line 33: local: `5'': invalid variable name for name reference

    /tmp/tmpc6m_w827.sh: line 34: local: `6'': invalid '
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort=\"\
    \"\n    local strange_sort_index=0\n    local strange_sort_max=0\n    local strange_sort_min=0\n\
    \    local strange_sort_temp=0\n    local strange_sort_temp2=0\n    local strange_sort_temp3=0\n\
    \    local strange_sort_temp4=0\n    local strange_sort_temp5=0\n    local strange_sort_temp6=0\n\
    \    local strange_sort_temp7=0\n    local strange_sort_temp8=0\n    local strange_sort_temp9=0\n\
    \    local strange_sort_temp10=0\n    local strange_sort_temp11=0\n    local strange_sort_temp12=0\n\
    \    local strange_sort_temp13=0\n    local strange_sort_temp14=0\n    local strange_sort_temp15=0\n\
    \    local strange_sort_temp16=0\n    local strange_sort_temp17=0\n    local strange_sort_temp18=0\n\
    \    local strange_sort_temp19=0\n    local strange_sort_temp20=0\n    local strange_sort_temp21=0\n\
    \    local strange_sort_temp22=0\n    local strange_sort_temp23=0\n    local strange_sort_temp24=0\n\
    \    local strange_sort_temp25=0\n    local strange_sort_temp26=0\n    local strange_sort_temp27=0\n\
    \    local strange_sort_temp28=0\n    local strange_sort_temp29=0\n    local strange_sort_temp30=0\n\
    \    local strange_sort_temp31=0\n    local strange_sort_temp32=0\n    local strange_sort_temp33=0\n\
    \    local strange_sort_temp34=0\n    local strange_sort_temp35=0\n    local strange_sort_temp36=0\n\
    \    local strange_sort_temp37=0\n    local strange_sort_temp38=0\n    local strange_sort_temp39=0\n\
    \    local strange_sort_temp40=0\n    local strange_sort_temp41=0\n    local strange_sort_temp42=0\n\
    \    local strange_sort_temp43=0\n    local strange_sort_temp44=0\n    local strange_sort_temp45=0\n\
    \    local strange_sort_temp46=0\n    local strange_sort_temp47=0\n    local \n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local tmp\n  local i\n \
    \ local j\n  local len\n  local min\n  local max\n  local tmp2\n  local tmp3\n\
    \  local tmp4\n  local tmp5\n  local tmp6\n  local tmp7\n  local tmp8\n  local\
    \ tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n  local tmp13\n  local tmp14\n\
    \  local tmp15\n  local tmp16\n  local tmp17\n  local tmp18\n  local tmp19\n \
    \ local tmp20\n  local tmp21\n  local tmp22\n  local tmp23\n  local tmp24\n  local\
    \ tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n  local tmp29\n  local tmp30\n\
    \  local tmp31\n  local tmp32\n  local tmp33\n  local tmp34\n  local tmp35\n \
    \ local tmp36\n  local tmp37\n  local tmp38\n  local tmp39\n  local tmp40\n  local\
    \ tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n  local tmp45\n  local tmp46\n\
    \  local tmp47\n  local tmp48\n  local tmp49\n  local tmp50\n  local tmp51\n \
    \ local tmp52\n  local tmp53\n  local tmp54\n  local tmp55\n  local tmp56\n  local\
    \ tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n  local tmp61\n  local tmp62\n\
    \  local tmp63\n  local tmp64\n  local tmp65\n  local tmp66\n  local tmp67\n \
    \ local tmp68\n  local tmp69\n  local tmp70\n  local tmp71\n  local tmp72\n  local\
    \ tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n  local tmp77\n  local tmp78\n\
    \  local tmp79\n  local tmp80\n  local tmp81\n  local tmp82\n  local tmp83\n \
    \ local tmp84\n  local tmp85\n  local tmp86\n  local tmp87\n  local tmp88\n  local\
    \ tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n  local tmp93\n  local tmp94\n\
    \  local tmp95\n  local tmp96\n  local tmp97\n  local \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local strange_list\n    local strange_list_len\n    local strange_list_i\n\
    \    local strange_list_j\n    local strange_list_k\n    local strange_list_tmp\n\
    \    local strange_list_tmp_len\n    local strange_list_tmp_i\n    local strange_list_tmp_j\n\
    \    local strange_list_tmp_k\n    local strange_list_tmp_len\n    local strange_list_tmp_i\n\
    \    local strange_list_tmp_j\n    local strange_list_tmp_k\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_k\n\
    \    local strange_list_tmp_len\n    local strange_list_tmp_i\n    local strange_list_tmp_j\n\
    \    local strange_list_tmp_k\n    local strange_list_tmp_len\n    local strange_list_tmp_i\n\
    \    local strange_list_tmp_j\n    local strange_list_tmp_k\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_k\n\
    \    local strange_list_tmp_len\n    local strange_list_tmp_i\n    local strange_list_tmp_j\n\
    \    local strange_list_tmp_k\n    local strange_list_tmp_len\n    local strange_list_tmp_i\n\
    \    local strange_list_tmp_j\n    local strange_list_tmp_k\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_list_tmp_k\n\
    \    local strange_list_tmp_len\n    local strange_list_tmp_i\n    local strange_list_tmp_j\n\
    \    local strange_list_tmp_k\n    local strange_list_tmp_len\n    local strange_list_tmp_i\n\
    \    local strange_list_tmp_j\n    local strange_list_tmp_k\n    local strange_list_tmp_len\n\
    \    local strange_list_tmp_i\n    local strange_list_tmp_j\n    local strange_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ i\n    local j\n    local k\n    local min\n    local max\n    local tmp2\n\
    \    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n\
    \    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n\
    \    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local\
    \ tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n\
    \    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local\
    \ tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n\
    \    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local\
    \ tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n\
    \    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local\
    \ tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n\
    \    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local\
    \ tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n\
    \    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local\
    \ tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n\
    \    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local\
    \ tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n\
    \    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local\
    \ tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n\
    \    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local\
    \ tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n\
    \    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    local\
    \ i\n    local j\n    local k\n    local len\n    local min\n    local max\n \
    \   local tmp\n    local str\n    local str1\n    local str2\n    local str3\n\
    \    local str4\n    local str5\n    local str6\n    local str7\n    local str8\n\
    \    local str9\n    local str10\n    local str11\n    local str12\n    local\
    \ str13\n    local str14\n    local str15\n    local str16\n    local str17\n\
    \    local str18\n    local str19\n    local str20\n    local str21\n    local\
    \ str22\n    local str23\n    local str24\n    local str25\n    local str26\n\
    \    local str27\n    local str28\n    local str29\n    local str30\n    local\
    \ str31\n    local str32\n    local str33\n    local str34\n    local str35\n\
    \    local str36\n    local str37\n    local str38\n    local str39\n    local\
    \ str40\n    local str41\n    local str42\n    local str43\n    local str44\n\
    \    local str45\n    local str46\n    local str47\n    local str48\n    local\
    \ str49\n    local str50\n    local str51\n    local str52\n    local str53\n\
    \    local str54\n    local str55\n    local str56\n    local str57\n    local\
    \ str58\n    local str59\n    local str60\n    local str61\n    local str62\n\
    \    local str63\n    local str64\n    local str65\n    local str66\n    local\
    \ str67\n    local str68\n    local str69\n    local str70\n    local str71\n\
    \    local str72\n    local str73\n    local str74\n    local str75\n    local\
    \ str76\n    local str77\n    local str78\n    local str79\n    local str80\n\
    \    local str81\n    local str82\n    local str83\n    local str84\n    local\
    \ str85\n    local str86\n    local str87\n    local str88\n    local str89\n\
    \    local str90\n    local str91\n    local str92\n    local str93\n    local\
    \ str\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=\"$2\"\n  local\
    \ max=\"$3\"\n  local tmp\n  local i\n  local j\n  local result\n\n  result=()\n\
    \  for i in \"${!list}\"; do\n    local val=\"${list[i]}\"\n    local tmp\n  \
    \  for j in \"${!list}\"; do\n      if [ \"${list[j]}\" -gt \"${val}\" ]; then\n\
    \        local tmp=\"${list[j]}\"\n        list[j]=\"${list[i]}\"\n        list[i]=\"\
    ${tmp}\"\n      fi\n    done\n    local tmp\n    for j in \"${!list}\"; do\n \
    \     if [ \"${list[j]}\" -eq \"${min}\" ]; then\n        local tmp=\"${list[j]}\"\
    \n        list[j]=\"${list[i]}\"\n        list[i]=\"${tmp}\"\n      fi\n    done\n\
    \    local tmp\n    for j in \"${!list}\"; do\n      if [ \"${list[j]}\" -eq \"\
    ${max}\" ]; then\n        local tmp=\"${list[j]}\"\n        list[j]=\"${list[i]}\"\
    \n        list[i]=\"${tmp}\"\n      fi\n    done\n    local tmp\n    for j in\
    \ \"${!list}\"; do\n      if [ \"${list[j]}\" -le \"${min}\" ]; then\n       \
    \ local tmp=\"${list[j]}\"\n        list[j]=\"${list[i]}\"\n        list[i]=\"\
    ${tmp}\"\n      fi\n    done\n    local tmp\n    for j in \"${!list}\"; do\n \
    \     if [ \"${list[j]}\" -le \"${max}\" ]; then\n        local tmp=\"${list[j]}\"\
    \n        list[j]=\"${list[i]}\"\n        list[i]=\"${tmp}\"\n      fi\n    done\n\
    \    local tmp\n    for j in \"${!list}\"; do\n      if [ \"${list[j]}\" -gt \"\
    ${max}\" ]; then\n        local tmp=\"${list[j]}\"\n        list[j]=\"${list[i]}\"\
    \n        list[i]=\"${tmp}\"\n      fi\n    done\n    local tmp\n    for j in\
    \ \"${!list}\"; do\n      if [ \"${list[j]}\" -gt \"${min}\" ]; then\n       \
    \ local tmp=\"${list[j]}\"\n        list[j]=\"${list[i]}\"\n        list[i]=\"\
    ${tmp}\"\n      fi\n    done\n    local tmp\n    for j in \"${!list}\"; do\n \
    \     if [ \"${list[j]}\" -eq \"${min}\" ]; then\n        local tmp=\"${list[j]}\"\
    \n        list[j]=\"${list[i]}\"\n        list[i]=\"${tmp}\"\n      fi\n    done\n\
    \    local tmp\n    for j in \"${!list}\"; do\n      if [ \"${list[j]}\" -eq \"\
    ${max}\" ]; then\n        local tmp=\"${list[j]\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp48dvjjmv.sh: line 104: unexpected EOF while looking for matching
    `"''

    /tmp/tmp48dvjjmv.sh: line 108: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=\"$1\"\n    local strange_sort_list_array=(\
    \ $strange_sort_list )\n    local strange_sort_list_length=${#strange_sort_list_array[@]}\n\
    \    local strange_sort_list_index=0\n    local strange_sort_list_value\n    local\
    \ strange_sort_list_value_length\n    local strange_sort_list_value_length_index\n\
    \    local strange_sort_list_value_length_value\n    local strange_sort_list_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length\n    local strange_sort_list_value_length_value_length_index\n\
    \    local strange_sort_list_value_length_value_length_value\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n    local\
    \ strange_sort_list_value_length_value_length_value_index\n    local strange_sort_list_value_length_value_length_value_index\n\
    \    local strange_sort_list_value_length_value_length_value_index\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=\"$2\"\n  local\
    \ max=\"$3\"\n  local tmp\n  local i\n  local j\n  local output\n  local count\n\
    \  local tmp2\n  local tmp3\n  local tmp4\n  local tmp5\n  local tmp6\n  local\
    \ tmp7\n  local tmp8\n  local tmp9\n  local tmp10\n  local tmp11\n  local tmp12\n\
    \  local tmp13\n  local tmp14\n  local tmp15\n  local tmp16\n  local tmp17\n \
    \ local tmp18\n  local tmp19\n  local tmp20\n  local tmp21\n  local tmp22\n  local\
    \ tmp23\n  local tmp24\n  local tmp25\n  local tmp26\n  local tmp27\n  local tmp28\n\
    \  local tmp29\n  local tmp30\n  local tmp31\n  local tmp32\n  local tmp33\n \
    \ local tmp34\n  local tmp35\n  local tmp36\n  local tmp37\n  local tmp38\n  local\
    \ tmp39\n  local tmp40\n  local tmp41\n  local tmp42\n  local tmp43\n  local tmp44\n\
    \  local tmp45\n  local tmp46\n  local tmp47\n  local tmp48\n  local tmp49\n \
    \ local tmp50\n  local tmp51\n  local tmp52\n  local tmp53\n  local tmp54\n  local\
    \ tmp55\n  local tmp56\n  local tmp57\n  local tmp58\n  local tmp59\n  local tmp60\n\
    \  local tmp61\n  local tmp62\n  local tmp63\n  local tmp64\n  local tmp65\n \
    \ local tmp66\n  local tmp67\n  local tmp68\n  local tmp69\n  local tmp70\n  local\
    \ tmp71\n  local tmp72\n  local tmp73\n  local tmp74\n  local tmp75\n  local tmp76\n\
    \  local tmp77\n  local tmp78\n  local tmp79\n  local tmp80\n  local tmp81\n \
    \ local tmp82\n  local tmp83\n  local tmp84\n  local tmp85\n  local tmp86\n  local\
    \ tmp87\n  local tmp88\n  local tmp89\n  local tmp90\n  local tmp91\n  local tmp92\n\
    \  local tmp93\n  local tmp94\n  local tmp95\n  local tmp96\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_output_temp=\"\"\n    local strange_sort_list_output_temp2=\"\
    \"\n    local strange_sort_list_output_temp3=\"\"\n    local strange_sort_list_output_temp4=\"\
    \"\n    local strange_sort_list_output_temp5=\"\"\n    local strange_sort_list_output_temp6=\"\
    \"\n    local strange_sort_list_output_temp7=\"\"\n    local strange_sort_list_output_temp8=\"\
    \"\n    local strange_sort_list_output_temp9=\"\"\n    local strange_sort_list_output_temp10=\"\
    \"\n    local strange_sort_list_output_temp11=\"\"\n    local strange_sort_list_output_temp12=\"\
    \"\n    local strange_sort_list_output_temp13=\"\"\n    local strange_sort_list_output_temp14=\"\
    \"\n    local strange_sort_list_output_temp15=\"\"\n    local strange_sort_list_output_temp16=\"\
    \"\n    local strange_sort_list_output_temp17=\"\"\n    local strange_sort_list_output_temp18=\"\
    \"\n    local strange_sort_list_output_temp19=\"\"\n    local strange_sort_list_output_temp20=\"\
    \"\n    local strange_sort_list_output_temp21=\"\"\n    local strange_sort_list_output_temp22=\"\
    \"\n    local strange_sort_list_output_temp23=\"\"\n    local strange_sort_list_output_temp24=\"\
    \"\n    local strange_sort_list_output_temp25=\"\"\n    local strange_sort_list_output_temp26=\"\
    \"\n    local strange_sort_list_output_temp27=\"\"\n    local strange_sort_list_output_temp28=\"\
    \"\n    local strange_sort_list_output_temp29=\"\"\n    local strange_sort_list_output_temp30=\"\
    \"\n    local strange_sort_list_output_temp31=\"\"\n    local strange_sort_list_output_temp32=\"\
    \"\n    local strange_sort_list_output_temp33=\"\"\n    local strange_sort_list_output_temp34=\"\
    \"\n    local strange_sort_list_output_temp35=\"\"\n    local strange_sort_list_output_temp36=\"\
    \"\n    local strange_sort_list_output_temp37=\"\"\n    local strange_sort_list_output_temp38=\"\
    \"\n    local strange_sort_list_output_temp39=\"\"\n    local strange_sort_list_output_temp40=\"\
    \"\n    local strange_sort_list_output_temp41=\"\"\n    \n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local -a sorted_list\n\
    \    local -a sorted_list_reversed\n    local -a sorted_list_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed\n    local -a sorted_list_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed\n    local\
    \ -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed\n    local\
    \ -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local -a sorted_list_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local strange_sort\n\
    \    local output\n    local i\n    local j\n    local len\n    local min\n  \
    \  local max\n    local strange_sort\n    local output\n    local i\n    local\
    \ j\n    local len\n    local min\n    local max\n    local strange_sort\n   \
    \ local output\n    local i\n    local j\n    local len\n    local min\n    local\
    \ max\n    local strange_sort\n    local output\n    local i\n    local j\n  \
    \  local len\n    local min\n    local max\n    local strange_sort\n    local\
    \ output\n    local i\n    local j\n    local len\n    local min\n    local max\n\
    \    local strange_sort\n    local output\n    local i\n    local j\n    local\
    \ len\n    local min\n    local max\n    local strange_sort\n    local output\n\
    \    local i\n    local j\n    local len\n    local min\n    local max\n    local\
    \ strange_sort\n    local output\n    local i\n    local j\n    local len\n  \
    \  local min\n    local max\n    local strange_sort\n    local output\n    local\
    \ i\n    local j\n    local len\n    local min\n    local max\n    local strange_sort\n\
    \    local output\n    local i\n    local j\n    local len\n    local min\n  \
    \  local max\n    local strange_sort\n    local output\n    local i\n    local\
    \ j\n    local len\n    local min\n    local max\n    local strange_sort\n   \
    \ local output\n    local i\n    local j\n    local len\n    local min\n    local\
    \ max\n    local strange_sort\n    local output\n    local i\n    local j\n  \
    \  local len\n    local min\n    local max\n    local strange_sort\n    local\
    \ output\n    local i\n    local j\n    local len\n    local min\n    local max\n\
    \    local strange_sort\n    local output\n    local i\n    local j\n    local\
    \ len\n    local min\n    local max\n    local strange_sort\n    local output\n\
    \    local i\n    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local min\n    local\
    \ max\n    local tmp\n    local output\n    local i\n    local j\n    local k\n\
    \    local count\n    local temp\n    local count2\n    local count3\n    local\
    \ count4\n    local count5\n    local count6\n    local count7\n    local count8\n\
    \    local count9\n    local count10\n    local count11\n    local count12\n \
    \   local count13\n    local count14\n    local count15\n    local count16\n \
    \   local count17\n    local count18\n    local count19\n    local count20\n \
    \   local count21\n    local count22\n    local count23\n    local count24\n \
    \   local count25\n    local count26\n    local count27\n    local count28\n \
    \   local count29\n    local count30\n    local count31\n    local count32\n \
    \   local count33\n    local count34\n    local count35\n    local count36\n \
    \   local count37\n    local count38\n    local count39\n    local count40\n \
    \   local count41\n    local count42\n    local count43\n    local count44\n \
    \   local count45\n    local count46\n    local count47\n    local count48\n \
    \   local count49\n    local count50\n    local count51\n    local count52\n \
    \   local count53\n    local count54\n    local count55\n    local count56\n \
    \   local count57\n    local count58\n    local count59\n    local count60\n \
    \   local count61\n    local count62\n    local count63\n    local count64\n \
    \   local count65\n    local count66\n    local count67\n    local count68\n \
    \   local count69\n    local count70\n    local count71\n    local count72\n \
    \   local count73\n    local count74\n    local count75\n    local count76\n \
    \   local count77\n    local count78\n    local count79\n    local count80\n \
    \   local count81\n    local count82\n    local count83\n    local count84\n \
    \   local count85\n    local count86\n    local count87\n    local count88\n \
    \   local count89\n    local count90\n    local count91\n    local count92\n \
    \   local count93\n    local count94\n    local count95\n\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local input=$1\n  local output=\"\"\n  local\
    \ min=$2\n  local max=$3\n  local i=$4\n  local j=$5\n  local k=$6\n  local count=0\n\
    \  local temp=\"\"\n  while [ $i -le $max ]; do\n    count=$((count+1))\n    temp=$input\n\
    \    temp=${temp:$i:1}\n    output=$output$temp\n    i=$((i+1))\n  done\n  while\
    \ [ $j -le $min ]; do\n    count=$((count+1))\n    temp=$input\n    temp=${temp:$j:1}\n\
    \    output=$output$temp\n    j=$((j+1))\n  done\n  while [ $k -le $max ]; do\n\
    \    count=$((count+1))\n    temp=$input\n    temp=${temp:$k:1}\n    output=$output$temp\n\
    \    k=$((k+1))\n  done\n  echo $output\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpinv_dspi.sh: line 18: [: 1: unary operator expected

    /tmp/tmpinv_dspi.sh: line 25: [: 1: unary operator expected

    /tmp/tmpinv_dspi.sh: line 32: [: 1: unary operator expected

    '
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_count=0\n    local strange_sort_list_index=0\n\
    \    local strange_sort_list_count2=0\n    local strange_sort_list_index2=0\n\
    \    local strange_sort_list_count3=0\n    local strange_sort_list_index3=0\n\
    \    local strange_sort_list_count4=0\n    local strange_sort_list_index4=0\n\
    \    local strange_sort_list_count5=0\n    local strange_sort_list_index5=0\n\
    \    local strange_sort_list_count6=0\n    local strange_sort_list_index6=0\n\
    \    local strange_sort_list_count7=0\n    local strange_sort_list_index7=0\n\
    \    local strange_sort_list_count8=0\n    local strange_sort_list_index8=0\n\
    \    local strange_sort_list_count9=0\n    local strange_sort_list_index9=0\n\
    \    local strange_sort_list_count10=0\n    local strange_sort_list_index10=0\n\
    \    local strange_sort_list_count11=0\n    local strange_sort_list_index11=0\n\
    \    local strange_sort_list_count12=0\n    local strange_sort_list_index12=0\n\
    \    local strange_sort_list_count13=0\n    local strange_sort_list_index13=0\n\
    \    local strange_sort_list_count14=0\n    local strange_sort_list_index14=0\n\
    \    local strange_sort_list_count15=0\n    local strange_sort_list_index15=0\n\
    \    local strange_sort_list_count16=0\n    local strange_sort_list_index16=0\n\
    \    local strange_sort_list_count17=0\n    local strange_sort_list_index17=0\n\
    \    local strange_sort_list_count18=0\n    local strange_sort_list_index18=0\n\
    \    local strange_sort_list_count19=0\n    local strange_sort_list_index19=0\n\
    \    local strange_sort_list_count20=0\n    local strange_sort_list_index20=0\n\
    \    local strange_sort_list_count21=0\n    local strange_sort_list_index21=0\n\
    \    local strange_sort_list_count22=0\n    local strange_sort_list_index22=0\n\
    \    local strange_sort_list_count23=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_list strange_list_sorted\n  \
    \  local i j k l m n o\n    local strange_list_sorted\n\n    strange_list=$1\n\
    \    strange_list_sorted=()\n\n    for (( i=0; i<${#strange_list}; i++ )); do\n\
    \        j=$(( i + 1 ))\n        k=$(( j + 1 ))\n        l=$(( k + 1 ))\n    \
    \    m=$(( l + 1 ))\n        n=$(( m + 1 ))\n        o=$(( n + 1 ))\n\n      \
    \  if [ $i -eq 0 ]; then\n            strange_list_sorted+=( ${strange_list[i]}\
    \ )\n        elif [ $j -eq 0 ]; then\n            strange_list_sorted+=( ${strange_list[j]}\
    \ )\n        elif [ $k -eq 0 ]; then\n            strange_list_sorted+=( ${strange_list[k]}\
    \ )\n        elif [ $l -eq 0 ]; then\n            strange_list_sorted+=( ${strange_list[l]}\
    \ )\n        elif [ $m -eq 0 ]; then\n            strange_list_sorted+=( ${strange_list[m]}\
    \ )\n        elif [ $n -eq 0 ]; then\n            strange_list_sorted+=( ${strange_list[n]}\
    \ )\n        elif [ $o -eq 0 ]; then\n            strange_list_sorted+=( ${strange_list[o]}\
    \ )\n        else\n            strange_list_sorted+=( ${strange_list[i]} ${strange_list[j]}\
    \ ${strange_list[k]} ${strange_list[l]} ${strange_list[m]} ${strange_list[n]}\
    \ ${strange_list[o]} )\n        fi\n    done\n\n    echo \"${strange_list_sorted[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local -a arr\n    local\
    \ -a sorted\n    local -a tmp\n    local i\n    local j\n    local k\n    local\
    \ len\n    local min\n    local max\n    local tmp2\n    local tmp3\n    local\
    \ tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local\
    \ tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n \
    \   local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local\
    \ tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n\
    \    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local\
    \ tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n\
    \    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local\
    \ tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n\
    \    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local\
    \ tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n\
    \    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local\
    \ tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n\
    \    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local\
    \ tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n\
    \    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local\
    \ tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n\
    \    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local\
    \ tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n\
    \    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local\
    \ tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list_str=$1\n    local list_str_tmp\n\
    \    local list_str_tmp_tmp\n    local list_str_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local\
    \ list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n \
    \   local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local list_str_tmp\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: -1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=$1\n    local list=$2\n    local\
    \ output\n    output=$(\n        IFS=$IFS\n        sort -n -k 2\n    )\n    IFS=$IFS\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660038946
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local temp\n    local\
    \ i\n    local j\n    local k\n    local min\n    local max\n    local strange_sort\n\
    \    local strange_sort_list\n    local strange_sort_list_output\n    local strange_sort_list_output_line\n\
    \    local strange_sort_list_output_line_i\n    local strange_sort_list_output_line_j\n\
    \    local strange_sort_list_output_line_k\n    local strange_sort_list_output_line_min\n\
    \    local strange_sort_list_output_line_max\n    local strange_sort_list_output_line_strange_sort\n\
    \    local strange_sort_list_output_line_strange_sort_i\n    local strange_sort_list_output_line_strange_sort_j\n\
    \    local strange_sort_list_output_line_strange_sort_k\n    local strange_sort_list_output_line_strange_sort_min\n\
    \    local strange_sort_list_output_line_strange_sort_max\n    local strange_sort_list_output_line_strange_sort_strange_sort\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_i\n    local\
    \ strange_sort_list_output_line_strange_sort_strange_sort_j\n    local strange_sort_list_output_line_strange_sort_strange_sort_k\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_min\n    local\
    \ strange_sort_list_output_line_strange_sort_strange_sort_max\n    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort_i\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort_j\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort_k\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort_min\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort_max\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort_strange_sort\n\
    \    local strange_sort_list_output_line_strange_sort_strange_sort_strange_sort_strange_sort_i\n\
    \    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local IFS=' '\n    local -a arr\n    arr=($1)\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\
    \    local tmp98\n    local tmp99\n    local tmp100\n    local tmp101\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local tmp\n    local\
    \ tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local\
    \ tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n   \
    \ local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n\
    \    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local\
    \ tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n\
    \    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local\
    \ tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n\
    \    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local\
    \ tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n\
    \    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local\
    \ tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n\
    \    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local\
    \ tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n\
    \    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local\
    \ tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n\
    \    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local\
    \ tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n\
    \    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local\
    \ tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n\
    \    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local\
    \ tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n\
    \    local tmp98\n    local tmp99\n    local tmp100\n    local tmp101\n    local\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort_list\n\
    \    strange_sort_list=\"$(\n        IFS=' '\n        echo \"$list\"\n       \
    \ echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\"\
    \ | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\" | sort -n |\
    \ sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/'\
    \ | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n\
    \        echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo\
    \ \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\" |\
    \ sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed\
    \ 's/^/-/' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/' | sed\
    \ 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n \
    \       echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"\
    $list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\" | sort\
    \ -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/'\
    \ | sed 's/-$//'\n        echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n\
    \        echo \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo\
    \ \"$list\" | sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$list\" |\
    \ sort -n | sed 's/^/-/' | sed 's/-$//'\n        echo \"$\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphv735607.sh: line 50: unexpected EOF while looking for matching
    `"''

    /tmp/tmphv735607.sh: line 54: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort\n\
    \    strange_sort=\"$(sort -n \"$list\")\"\n    echo \"$strange_sort\"\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 2 3 4'': No such file or directory

    '
  stdout: ''
  timestamp: 1660038941
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local output=\"\"\n\
    \    local i\n    local j\n    local k\n    local min\n    local max\n    local\
    \ tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local\
    \ tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local\
    \ tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n\
    \    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local\
    \ tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n\
    \    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local\
    \ tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n\
    \    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local\
    \ tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n\
    \    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local\
    \ tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n\
    \    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local\
    \ tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n\
    \    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local\
    \ tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n\
    \    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local\
    \ tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n\
    \    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local\
    \ tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n\
    \    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local\
    \ tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n\
    \    local \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=\"$1\"\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_temp=\"\"\n    local strange_sort_list_temp2=\"\
    \"\n    local strange_sort_list_temp3=\"\"\n    local strange_sort_list_temp4=\"\
    \"\n    local strange_sort_list_temp5=\"\"\n    local strange_sort_list_temp6=\"\
    \"\n    local strange_sort_list_temp7=\"\"\n    local strange_sort_list_temp8=\"\
    \"\n    local strange_sort_list_temp9=\"\"\n    local strange_sort_list_temp10=\"\
    \"\n    local strange_sort_list_temp11=\"\"\n    local strange_sort_list_temp12=\"\
    \"\n    local strange_sort_list_temp13=\"\"\n    local strange_sort_list_temp14=\"\
    \"\n    local strange_sort_list_temp15=\"\"\n    local strange_sort_list_temp16=\"\
    \"\n    local strange_sort_list_temp17=\"\"\n    local strange_sort_list_temp18=\"\
    \"\n    local strange_sort_list_temp19=\"\"\n    local strange_sort_list_temp20=\"\
    \"\n    local strange_sort_list_temp21=\"\"\n    local strange_sort_list_temp22=\"\
    \"\n    local strange_sort_list_temp23=\"\"\n    local strange_sort_list_temp24=\"\
    \"\n    local strange_sort_list_temp25=\"\"\n    local strange_sort_list_temp26=\"\
    \"\n    local strange_sort_list_temp27=\"\"\n    local strange_sort_list_temp28=\"\
    \"\n    local strange_sort_list_temp29=\"\"\n    local strange_sort_list_temp30=\"\
    \"\n    local strange_sort_list_temp31=\"\"\n    local strange_sort_list_temp32=\"\
    \"\n    local strange_sort_list_temp33=\"\"\n    local strange_sort_list_temp34=\"\
    \"\n    local strange_sort_list_temp35=\"\"\n    local strange_sort_list_temp36=\"\
    \"\n    local strange_sort_list_temp37=\"\"\n    local strange_sort_list_temp38=\"\
    \"\n    local strange_sort_list_temp39=\"\"\n    local strange_sort_list_temp40=\"\
    \"\n    local strange_sort_list_temp41=\"\"\n    local strange_sort_list_temp42=\"\
    \"\n    local strange_sort_list_temp43=\"\"\n    local strange_sort_list_temp44=\"\
    \"\n    local strange_sort_list_temp45\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local strange_sort_list=$1\n    local strange_sort_list_output=\"\
    \"\n    local strange_sort_list_temp=\"\"\n    local strange_sort_list_temp2=\"\
    \"\n    local strange_sort_list_temp3=\"\"\n    local strange_sort_list_temp4=\"\
    \"\n    local strange_sort_list_temp5=\"\"\n    local strange_sort_list_temp6=\"\
    \"\n    local strange_sort_list_temp7=\"\"\n    local strange_sort_list_temp8=\"\
    \"\n    local strange_sort_list_temp9=\"\"\n    local strange_sort_list_temp10=\"\
    \"\n    local strange_sort_list_temp11=\"\"\n    local strange_sort_list_temp12=\"\
    \"\n    local strange_sort_list_temp13=\"\"\n    local strange_sort_list_temp14=\"\
    \"\n    local strange_sort_list_temp15=\"\"\n    local strange_sort_list_temp16=\"\
    \"\n    local strange_sort_list_temp17=\"\"\n    local strange_sort_list_temp18=\"\
    \"\n    local strange_sort_list_temp19=\"\"\n    local strange_sort_list_temp20=\"\
    \"\n    local strange_sort_list_temp21=\"\"\n    local strange_sort_list_temp22=\"\
    \"\n    local strange_sort_list_temp23=\"\"\n    local strange_sort_list_temp24=\"\
    \"\n    local strange_sort_list_temp25=\"\"\n    local strange_sort_list_temp26=\"\
    \"\n    local strange_sort_list_temp27=\"\"\n    local strange_sort_list_temp28=\"\
    \"\n    local strange_sort_list_temp29=\"\"\n    local strange_sort_list_temp30=\"\
    \"\n    local strange_sort_list_temp31=\"\"\n    local strange_sort_list_temp32=\"\
    \"\n    local strange_sort_list_temp33=\"\"\n    local strange_sort_list_temp34=\"\
    \"\n    local strange_sort_list_temp35=\"\"\n    local strange_sort_list_temp36=\"\
    \"\n    local strange_sort_list_temp37=\"\"\n    local strange_sort_list_temp38=\"\
    \"\n    local strange_sort_list_temp39=\"\"\n    local strange_sort_list_temp40=\"\
    \"\n    local strange_sort_list_temp41=\"\"\n    local strange_sort_list_temp42=\"\
    \"\n    local strange_sort_list_temp43=\"\"\n    local strange_sort_list_temp44=\"\
    \"\n    local strange_sort_list_temp45\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038940
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local strange_sort=\"\
    \"\n    local strange_sort_list=\"\"\n    local strange_sort_list_index=0\n  \
    \  local strange_sort_list_length=0\n    local strange_sort_list_element=\"\"\n\
    \    local strange_sort_list_element_index=0\n    local strange_sort_list_element_length=0\n\
    \    local strange_sort_list_element_value=\"\"\n    local strange_sort_list_element_value_length=0\n\
    \    local strange_sort_list_element_value_length_index=0\n    local strange_sort_list_element_value_length_value=0\n\
    \    local strange_sort_list_element_value_length_value_index=0\n    local strange_sort_list_element_value_length_value_length=0\n\
    \    local strange_sort_list_element_value_length_value_length_index=0\n    local\
    \ strange_sort_list_element_value_length_value_length_value=0\n    local strange_sort_list_element_value_length_value_length_value_index=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length_value_length_value_value=0\n\
    \    local strange_sort_list_element_value_length\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660038941

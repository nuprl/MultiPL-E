language: sh
name: HumanEval_25_factorize
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor_count\n    local factor_index\n    local\
    \ factor_counts\n    local factor_indexes\n    local factor_indexes_count\n  \
    \  local factor_indexes_count_max\n    local factor_indexes_count_min\n    local\
    \ factor_indexes_count_min_index\n    local factor_indexes_count_max_index\n \
    \   local factor_indexes_count_min_indexes\n    local factor_indexes_count_max_indexes\n\
    \    local factor_indexes_count_min_indexes_count\n    local factor_indexes_count_max_indexes_count\n\
    \    local factor_indexes_count_min_indexes_count_max\n    local factor_indexes_count_max_indexes_count_max\n\
    \    local factor_indexes_count_min_indexes_count_max_index\n    local factor_indexes_count_max_indexes_count_max\n\
    \    local factor_indexes_count_min_indexes_count_max_index\n    local factor_indexes_count_max_indexes_count_max\n\
    \    local factor_indexes_count_min_indexes_count_max_index\n    local factor_indexes_count_max_indexes_count_max_index\n\
    \    local factor_indexes_count_min_indexes_count_max_indexes_count\n    local\
    \ factor_indexes_count_max_indexes_count_max_indexes_count\n    local factor_indexes_count_min_indexes_count_max_indexes_count_max\n\
    \    local factor_indexes_count_max_indexes_count_max_indexes_count_max\n    local\
    \ factor_indexes_count_min_indexes_count_max_indexes_count_max_index\n    local\
    \ factor_indexes_count_max_indexes_count_max_indexes_count_max_index\n    local\
    \ factor_indexes_count_min_indexes_count_max_indexes_count_max_indexes_count\n\
    \    local factor_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count\n\
    \    local factor_indexes_count_min_indexes_count_max_indexes_count_max_indexes_count_max\n\
    \    local factor_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count_max\n\
    \    local factor_indexes_count_min_indexes_count_max_indexes_count_max_indexes_count_max_index\n\
    \    local factor_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count_max_index\n\
    \    local factor_indexes_count_min_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count\n\
    \    local factor_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count\n\
    \    local factor_indexes_count_min_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count_max\n\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_count\n \
    \ local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local count\n    local i\n    local j\n    local k\n    local factor\n   \
    \ local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ count\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n    local prime\n    local prime\n    local prime\n\
    \    local prime\n    local prime\n    local prime\n    local prime\n    local\
    \ prime\n    local prime\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local factor\n    local factor_count\n    local\
    \ factor\n    local factor_count\n    local factor\n    local factor_count\n \
    \   local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_index2=0\n    local factor_index3=0\n\
    \    local factor_index4=0\n    local factor_index5=0\n    local factor_index6=0\n\
    \    local factor_index7=0\n    local factor_index8=0\n    local factor_index9=0\n\
    \    local factor_index10=0\n    local factor_index11=0\n    local factor_index12=0\n\
    \    local factor_index13=0\n    local factor_index14=0\n    local factor_index15=0\n\
    \    local factor_index16=0\n    local factor_index17=0\n    local factor_index18=0\n\
    \    local factor_index19=0\n    local factor_index20=0\n    local factor_index21=0\n\
    \    local factor_index22=0\n    local factor_index23=0\n    local factor_index24=0\n\
    \    local factor_index25=0\n    local factor_index26=0\n    local factor_index27=0\n\
    \    local factor_index28=0\n    local factor_index29=0\n    local factor_index30=0\n\
    \    local factor_index31=0\n    local factor_index32=0\n    local factor_index33=0\n\
    \    local factor_index34=0\n    local factor_index35=0\n    local factor_index36=0\n\
    \    local factor_index37=0\n    local factor_index38=0\n    local factor_index39=0\n\
    \    local factor_index40=0\n    local factor_index41=0\n    local factor_index42=0\n\
    \    local factor_index43=0\n    local factor_index44=0\n    local factor_index45=0\n\
    \    local factor_index46=0\n    local factor_index47=0\n    local factor_index48=0\n\
    \    local factor_index49=0\n    local factor_index50=0\n    local factor_index51=0\n\
    \    local factor_index52=0\n    local factor_index53=0\n    local factor_index54=0\n\
    \    local factor_index55=0\n    local factor_index56=0\n    local factor_index57=0\n\
    \    local factor_index58=0\n    local factor_index59=0\n    local factor_index60=0\n\
    \    local factor_index61=0\n    local factor_index62=0\n    local factor_index63=0\n\
    \    local factor_index64=0\n    local factor_index65=0\n    local factor_index66=0\n\
    \    local factor_index67=0\n    local factor_index68=0\n    local factor_index69=0\n\
    \    local factor_index70=0\n    local factor_index71=0\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_count\n \
    \ local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor\n    local factors\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    \n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count=0\n  local\
    \ factor_index=0\n  local factor_index2=0\n  local factor_index3=0\n  local factor_index4=0\n\
    \  local factor_index5=0\n  local factor_index6=0\n  local factor_index7=0\n \
    \ local factor_index8=0\n  local factor_index9=0\n  local factor_index10=0\n \
    \ local factor_index11=0\n  local factor_index12=0\n  local factor_index13=0\n\
    \  local factor_index14=0\n  local factor_index15=0\n  local factor_index16=0\n\
    \  local factor_index17=0\n  local factor_index18=0\n  local factor_index19=0\n\
    \  local factor_index20=0\n  local factor_index21=0\n  local factor_index22=0\n\
    \  local factor_index23=0\n  local factor_index24=0\n  local factor_index25=0\n\
    \  local factor_index26=0\n  local factor_index27=0\n  local factor_index28=0\n\
    \  local factor_index29=0\n  local factor_index30=0\n  local factor_index31=0\n\
    \  local factor_index32=0\n  local factor_index33=0\n  local factor_index34=0\n\
    \  local factor_index35=0\n  local factor_index36=0\n  local factor_index37=0\n\
    \  local factor_index38=0\n  local factor_index39=0\n  local factor_index40=0\n\
    \  local factor_index41=0\n  local factor_index42=0\n  local factor_index43=0\n\
    \  local factor_index44=0\n  local factor_index45=0\n  local factor_index46=0\n\
    \  local factor_index47=0\n  local factor_index48=0\n  local factor_index49=0\n\
    \  local factor_index50=0\n  local factor_index51=0\n  local factor_index52=0\n\
    \  local factor_index53=0\n  local factor_index54=0\n  local factor_index55=0\n\
    \  local factor_index56=0\n  local factor_index57=0\n  local factor_index58=0\n\
    \  local factor_index59=0\n  local factor_index60=0\n  local factor_index61=0\n\
    \  local factor_index62=0\n  local factor_index63=0\n  local factor_index64=0\n\
    \  local factor_index65=0\n  local factor_index66=0\n  local factor_index67=0\n\
    \  local factor_index68=0\n  local factor_index69=0\n  local factor_index70=0\n\
    \  local factor_index71=0\n\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_count\n \
    \ local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local count\n    local i\n    local j\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_index2\n    local factor_index3\n  \
    \  local factor_index4\n    local factor_index5\n    local factor_index6\n   \
    \ local factor_index7\n    local factor_index8\n    local factor_index9\n    local\
    \ factor_index10\n    local factor_index11\n    local factor_index12\n    local\
    \ factor_index13\n    local factor_index14\n    local factor_index15\n    local\
    \ factor_index16\n    local factor_index17\n    local factor_index18\n    local\
    \ factor_index19\n    local factor_index20\n    local factor_index21\n    local\
    \ factor_index22\n    local factor_index23\n    local factor_index24\n    local\
    \ factor_index25\n    local factor_index26\n    local factor_index27\n    local\
    \ factor_index28\n    local factor_index29\n    local factor_index30\n    local\
    \ factor_index31\n    local factor_index32\n    local factor_index33\n    local\
    \ factor_index34\n    local factor_index35\n    local factor_index36\n    local\
    \ factor_index37\n    local factor_index38\n    local factor_index39\n    local\
    \ factor_index40\n    local factor_index41\n    local factor_index42\n    local\
    \ factor_index43\n    local factor_index44\n    local factor_index45\n    local\
    \ factor_index46\n    local factor_index47\n    local factor_index48\n    local\
    \ factor_index49\n    local factor_index50\n    local factor_index51\n    local\
    \ factor_index52\n    local factor_index53\n    local factor_index54\n    local\
    \ factor_index55\n    local factor_index56\n    local factor_index57\n    local\
    \ factor_index58\n    local factor_index59\n    local factor_index60\n    local\
    \ factor_index61\n    local factor_index62\n    local factor_index63\n    local\
    \ factor_index64\n    local factor_index65\n    local factor_index66\n    local\
    \ factor_index67\n    local factor_index68\n    local factor_index69\n    local\
    \ factor_index70\n    local factor_index71\n    local factor_index72\n    local\
    \ factor_index73\n    local factor_index74\n    local factor_index75\n    local\
    \ factor_index76\n    local factor_index77\n    local factor_index78\n    local\
    \ factor_index79\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_indexes=()\n    local factor_indexes_count=0\n\
    \    local factor_indexes_index=-1\n    local factor_indexes_value=-1\n    local\
    \ factor_indexes_values=()\n    local factor_indexes_values_count=-1\n    local\
    \ factor_indexes_values_index=-1\n    local factor_indexes_values_values=()\n\
    \    local factor_indexes_values_values_count=-1\n    local factor_indexes_values_values_index=-1\n\
    \    local factor_indexes_values_values_values=()\n    local factor_indexes_values_values_values_count=-1\n\
    \    local factor_indexes_values_values_values_index=-1\n    local factor_indexes_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_count=-1\n    local factor_indexes_values_values_values_values_index=-1\n\
    \    local factor_indexes_values_values_values_values_values=()\n    local factor_indexes_values_values_values_values_values_count=-1\n\
    \    local factor_indexes_values_values_values_values_values_index=-1\n    local\
    \ factor_indexes_values_values_values_values_values_values=()\n    local factor_indexes_values_values_values_values_values_values_count=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_index=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_count=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_index=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_count=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_index=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_count=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_index=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_count=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_index=-1\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    local factor\n    local factor_index\n\
    \    local factor\n    local factor_index\n    \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local count\n    local i\n    local j\n    local k\n    local factor\n   \
    \ local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local k\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local i\n  \
    \  local j\n    local k\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local i\n    local j\n    local\
    \ k\n    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local k\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local i\n  \
    \  local j\n    local k\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local i\n    local j\n    local\
    \ k\n    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local k\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local i\n  \
    \  local j\n    local k\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local i\n    local j\n    local\
    \ k\n    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local k\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local i\n  \
    \  local j\n    local k\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local i\n    local j\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local factor\n  local count\n  local\
    \ factor\n  local factors\n  local factor\n  local count\n  local factor\n  local\
    \ factors\n  local factor\n  local count\n  local factor\n  local factors\n  local\
    \ factor\n  local count\n  local factor\n  local factors\n  local factor\n  local\
    \ count\n  local factor\n  local factors\n  local factor\n  local count\n  local\
    \ factor\n  local factors\n  local factor\n  local count\n  local factor\n  local\
    \ factors\n  local factor\n  local count\n  local factor\n  local factors\n  local\
    \ factor\n  local count\n  local factor\n  local factors\n  local factor\n  local\
    \ count\n  local factor\n  local factors\n  local factor\n  local count\n  local\
    \ factor\n  local factors\n  local factor\n  local count\n  local factor\n  local\
    \ factors\n  local factor\n  local count\n  local factor\n  local factors\n  local\
    \ factor\n  local count\n  local factor\n  local factors\n  local factor\n  local\
    \ count\n  local factor\n  local factors\n  local factor\n  local count\n  local\
    \ factor\n  local factors\n  local factor\n  local count\n  local factor\n  local\
    \ factors\n  local factor\n  local count\n  local factor\n  local factors\n  local\
    \ factor\n  local count\n  local factor\n  local factors\n  local factor\n  local\
    \ count\n  local factor\n  local factors\n  local factor\n  local count\n  local\
    \ factor\n  local factors\n  local factor\n  local count\n  local factor\n  local\
    \ factors\n  local factor\n  local count\n  local factor\n  local factors\n  local\
    \ factor\n  local count\n  local factor\n  local factors\n  local factor\n  local\
    \ count\n  local factor\n  local factors\n  local factor\n  local count\n  local\
    \ factor\n  local factors\n  local factor\n  local count\n  local factor\n  local\
    \ factors\n  local factor\n  local count\n  local factor\n  local factors\n  local\
    \ factor\n  \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local \n}\n\ncandidate() {\n \
    \   factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local count=1\n \
    \   local i\n    local j\n    local k\n    local factor\n    local factors\n \
    \   local factor\n    local count\n    local i\n    local j\n    local k\n   \
    \ local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n \
    \   [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\"\
    \ ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local i\n  local j\n  local\
    \ k\n  local count\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local count\n    local i\n    local j\n    local k\n    local factor\n  \
    \  local factors\n    local count\n    local i\n    local j\n    local k\n   \
    \ local factor\n    local factors\n    local count\n    local i\n    local j\n\
    \    local k\n    local factor\n    local factors\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local count\n    local i\n    local j\n    local k\n    local factor\n  \
    \  local factors\n    local count\n    local i\n    local j\n    local k\n   \
    \ local factor\n    local factors\n    local count\n    local i\n    local j\n\
    \    local k\n    local factor\n    local factors\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local count\n    local i\n    local j\n    local k\n    local factor\n  \
    \  local factors\n    local count\n    local i\n    local j\n    local k\n   \
    \ local factor\n    local factors\n    local count\n    local i\n    local j\n\
    \    local k\n    local factor\n    local factors\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local count\n    local i\n    local j\n    local k\n    local factor\n  \
    \  local factors\n    local count\n    local i\n    local j\n    local k\n   \
    \ local factor\n    local factors\n    local count\n    local i\n    local j\n\
    \    local k\n    local factor\n    local factors\n    local \n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  local factor\n  local\
    \ factors\n  local i\n  local j\n  local count\n  local factor\n  local factors\n\
    \  local count\n  local factor\n  local factors\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  local factor\n  local\
    \ factors\n  local i\n  local j\n  local count\n  local factor\n  local factors\n\
    \  local count\n  local factor\n  local factors\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  local factor\n  local\
    \ factors\n  local i\n  local j\n  local count\n  local factor\n  local factors\n\
    \  local count\n  local factor\n  local factors\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  local factor\n  local\
    \ factors\n  local i\n  local j\n  local count\n  local factor\n  local factors\n\
    \  local count\n  local factor\n  local factors\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  local factor\n  local\
    \ factors\n  local i\n  local j\n  local count\n  local factor\n  local factors\n\
    \  local count\n  local factor\n  local factors\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  local factor\n  local\
    \ factors\n  local i\n  local j\n  local count\n  local factor\n  local factors\n\
    \  local count\n  local factor\n  local factors\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  local factor\n  local\
    \ factors\n  local i\n  local j\n  local count\n  local factor\n  local factors\n\
    \  local count\n  local factor\n  local factors\n  local i\n  local j\n  local\
    \ count\n  local factor\n  local factors\n  local count\n  \n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local i\n  local j\n  local\
    \ count\n  local factor_count\n  local factor_index\n  local factor_counts\n \
    \ local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  local factor_index\n  local factor_counts\n\
    \  local factor_indexes\n  local factor_count\n  \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local count2\n    local count3\n    local count4\n \
    \   local count5\n    local count6\n    local count7\n    local count8\n    local\
    \ count9\n    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count89\n\
    \    local count90\n    local count91\n    local count92\n    local count93\n\
    \    local count94\n    local count95\n    local count96\n    local count97\n\
    \    local count98\n    local count99\n\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local k\n    local factor\n    local factor_count\n\
    \    local prime\n    local prime_count\n    local prime_number\n    local prime_numbers=()\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=1\n\
    \    local factor_index=1\n    local factor_index2=1\n    local factor_index3=1\n\
    \    local factor_index4=1\n    local factor_index5=1\n    local factor_index6=1\n\
    \    local factor_index7=1\n    local factor_index8=1\n    local factor_index9=1\n\
    \    local factor_index10=1\n    local factor_index11=1\n    local factor_index12=1\n\
    \    local factor_index13=1\n    local factor_index14=1\n    local factor_index15=1\n\
    \    local factor_index16=1\n    local factor_index17=1\n    local factor_index18=1\n\
    \    local factor_index19=1\n    local factor_index20=1\n    local factor_index21=1\n\
    \    local factor_index22=1\n    local factor_index23=1\n    local factor_index24=1\n\
    \    local factor_index25=1\n    local factor_index26=1\n    local factor_index27=1\n\
    \    local factor_index28=1\n    local factor_index29=1\n    local factor_index30=1\n\
    \    local factor_index31=1\n    local factor_index32=1\n    local factor_index33=1\n\
    \    local factor_index34=1\n    local factor_index35=1\n    local factor_index36=1\n\
    \    local factor_index37=1\n    local factor_index38=1\n    local factor_index39=1\n\
    \    local factor_index40=1\n    local factor_index41=1\n    local factor_index42=1\n\
    \    local factor_index43=1\n    local factor_index44=1\n    local factor_index45=1\n\
    \    local factor_index46=1\n    local factor_index47=1\n    local factor_index48=1\n\
    \    local factor_index49=1\n    local factor_index50=1\n    local factor_index51=1\n\
    \    local factor_index52=1\n    local factor_index53=1\n    local factor_index54=1\n\
    \    local factor_index55=1\n    local factor_index56=1\n    local factor_index57=1\n\
    \    local factor_index58=1\n    local factor_index59=1\n    local factor_index60=1\n\
    \    local factor_index61=1\n    local factor_index62=1\n    local factor_index63=1\n\
    \    local factor_index64=1\n    local factor_index65=1\n    local factor_index66=1\n\
    \    local factor_index67=1\n    local factor_index68=1\n    local factor_index69=1\n\
    \    local factor_index70=1\n    local factor_index71=1\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_index2\n    local factor_index3\n  \
    \  local factor_index4\n    local factor_index5\n    local factor_index6\n   \
    \ local factor_index7\n    local factor_index8\n    local factor_index9\n    local\
    \ factor_index10\n    local factor_index11\n    local factor_index12\n    local\
    \ factor_index13\n    local factor_index14\n    local factor_index15\n    local\
    \ factor_index16\n    local factor_index17\n    local factor_index18\n    local\
    \ factor_index19\n    local factor_index20\n    local factor_index21\n    local\
    \ factor_index22\n    local factor_index23\n    local factor_index24\n    local\
    \ factor_index25\n    local factor_index26\n    local factor_index27\n    local\
    \ factor_index28\n    local factor_index29\n    local factor_index30\n    local\
    \ factor_index31\n    local factor_index32\n    local factor_index33\n    local\
    \ factor_index34\n    local factor_index35\n    local factor_index36\n    local\
    \ factor_index37\n    local factor_index38\n    local factor_index39\n    local\
    \ factor_index40\n    local factor_index41\n    local factor_index42\n    local\
    \ factor_index43\n    local factor_index44\n    local factor_index45\n    local\
    \ factor_index46\n    local factor_index47\n    local factor_index48\n    local\
    \ factor_index49\n    local factor_index50\n    local factor_index51\n    local\
    \ factor_index52\n    local factor_index53\n    local factor_index54\n    local\
    \ factor_index55\n    local factor_index56\n    local factor_index57\n    local\
    \ factor_index58\n    local factor_index59\n    local factor_index60\n    local\
    \ factor_index61\n    local factor_index62\n    local factor_index63\n    local\
    \ factor_index64\n    local factor_index65\n    local factor_index66\n    local\
    \ factor_index67\n    local factor_index68\n    local factor_index69\n    local\
    \ factor_index70\n    local factor_index71\n    local factor_index72\n    local\
    \ factor_index73\n    local factor_index74\n    local factor_index75\n    local\
    \ factor_index76\n    local factor_index77\n    local factor_index78\n    local\
    \ factor_index79\n    local factor_index80\n    local factor_index81\n    local\
    \ factor_index82\n    local factor_index83\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local factor\n    local count\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local factor\n    local\
    \ count\n    local factors\n    local factor\n    local count\n    local i\n \
    \   local j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    local j\n    local factor\n    local count\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    local j\n    local factor\n    local count\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    local j\n    local factor\n    local count\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    local j\n    local factor\n    local count\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    local j\n    local factor\n    local count\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    local j\n    local factor\n    local count\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    local j\n    local factor\n    local count\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local factor\n    local count\n    local factors\n    local factor\n\
    \    local count\n    local i\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local count\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local i\n  \
    \  local j\n    local count\n    local factor\n    local factor_count\n    local\
    \ factors\n    local factor\n    local factor_count\n    local i\n    local j\n\
    \    local count\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local i\n    local j\n    local\
    \ count\n    local factor\n    local factor_count\n    local factors\n    local\
    \ factor\n    local factor_count\n    local i\n    local j\n    local count\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local i\n    local j\n    local count\n    local\
    \ factor\n    local factor_count\n    local factors\n    local factor\n    local\
    \ factor_count\n    local i\n    local j\n    local count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local count\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local i\n  \
    \  local j\n    local count\n    local factor\n    local factor_count\n    local\
    \ factors\n    local factor\n    local factor_count\n    local i\n    local j\n\
    \    local count\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local i\n    local j\n    local\
    \ count\n    local factor\n    local factor_count\n    local factors\n    local\
    \ factor\n    local factor_count\n    local i\n    local j\n    local count\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local i\n    local j\n    local count\n    local\
    \ factor\n    local factor_count\n    local factors\n    local factor\n    local\
    \ factor_count\n    local i\n    local j\n    local count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_count\n \
    \ local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_indexes=()\n    local factor_indexes_count=0\n\
    \    local factor_indexes_index=0\n    local factor_indexes_values=()\n    local\
    \ factor_indexes_values_count=0\n    local factor_indexes_values_index=0\n   \
    \ local factor_indexes_values_values=()\n    local factor_indexes_values_values_count=0\n\
    \    local factor_indexes_values_values_index=0\n    local factor_indexes_values_values_values=()\n\
    \    local factor_indexes_values_values_values_count=0\n    local factor_indexes_values_values_values_index=0\n\
    \    local factor_indexes_values_values_values_values=()\n    local factor_indexes_values_values_values_values_count=0\n\
    \    local factor_indexes_values_values_values_values_index=0\n    local factor_indexes_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_count=0\n    local\
    \ factor_indexes_values_values_values_values_values_index=0\n    local factor_indexes_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_count=0\n\
    \    local factor_indexes_values_values_values_values_values_values_index=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_count=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_index=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_count=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_index=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_count=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_index=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_values_count=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_values_values_index=0\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values_values=()\n\
    \    local factor_indexes_values_values_values_values_values_values_values_values_\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_count\n \
    \ local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index=0\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_count=0\n    local factor_index=0\n\
    \    local factor_count=0\n    local factor_index\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_count\n \
    \ local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_count\n\
    \  local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_index2=0\n    local factor_index3=0\n\
    \    local factor_index4=0\n    local factor_index5=0\n    local factor_index6=0\n\
    \    local factor_index7=0\n    local factor_index8=0\n    local factor_index9=0\n\
    \    local factor_index10=0\n    local factor_index11=0\n    local factor_index12=0\n\
    \    local factor_index13=0\n    local factor_index14=0\n    local factor_index15=0\n\
    \    local factor_index16=0\n    local factor_index17=0\n    local factor_index18=0\n\
    \    local factor_index19=0\n    local factor_index20=0\n    local factor_index21=0\n\
    \    local factor_index22=0\n    local factor_index23=0\n    local factor_index24=0\n\
    \    local factor_index25=0\n    local factor_index26=0\n    local factor_index27=0\n\
    \    local factor_index28=0\n    local factor_index29=0\n    local factor_index30=0\n\
    \    local factor_index31=0\n    local factor_index32=0\n    local factor_index33=0\n\
    \    local factor_index34=0\n    local factor_index35=0\n    local factor_index36=0\n\
    \    local factor_index37=0\n    local factor_index38=0\n    local factor_index39=0\n\
    \    local factor_index40=0\n    local factor_index41=0\n    local factor_index42=0\n\
    \    local factor_index43=0\n    local factor_index44=0\n    local factor_index45=0\n\
    \    local factor_index46=0\n    local factor_index47=0\n    local factor_index48=0\n\
    \    local factor_index49=0\n    local factor_index50=0\n    local factor_index51=0\n\
    \    local factor_index52=0\n    local factor_index53=0\n    local factor_index54=0\n\
    \    local factor_index55=0\n    local factor_index56=0\n    local factor_index57=0\n\
    \    local factor_index58=0\n    local factor_index59=0\n    local factor_index60=0\n\
    \    local factor_index61=0\n    local factor_index62=0\n    local factor_index63=0\n\
    \    local factor_index64=0\n    local factor_index65=0\n    local factor_index66=0\n\
    \    local factor_index67=0\n    local factor_index68=0\n    local factor_index69=0\n\
    \    local factor_index70=0\n    local factor_index71=0\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ count\n    local factor_count\n    local factor\n    local factor_count\n  \
    \  local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_count\n \
    \ local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local factor_index\n  local factor\n\
    \  local factor_count\n  local factor_index\n  local factor\n  local factor_count\n\
    \  local factor_index\n  local factor\n  local factor_count\n  local factor_index\n\
    \  local factor\n  local factor_count\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local factor\n    local factor_count\n    local\
    \ factors\n    local factor\n    local factor_count\n    local i\n    local j\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local i\n    local j\n    local factor\n    local\
    \ factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local factor\n    local factor_count\n    local\
    \ factors\n    local factor\n    local factor_count\n    local i\n    local j\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local i\n    local j\n    local factor\n    local\
    \ factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local factor\n    local factor_count\n    local\
    \ factors\n    local factor\n    local factor_count\n    local factors\n    local\
    \ factor\n    local factor_count\n    local factors\n    local factor\n    local\
    \ factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local count\n    local i\n    local j\n    local k\n    local factor\n   \
    \ local factors\n    local factor\n    local count\n    local i\n    local j\n\
    \    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\"\
    \ ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local k\n    local count\n    local factor_count\n    local factor\n\
    \    local factors\n    local factor\n    local factor\n    local factor\n   \
    \ local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local factor_count\n    local i\n    local j\n    local factor\n    local\
    \ factor_count\n    local factor\n    local factor_count\n    local factor\n \
    \   local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factor\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_index2\n    local factor_index3\n  \
    \  local factor_index4\n    local factor_index5\n    local factor_index6\n   \
    \ local factor_index7\n    local factor_index8\n    local factor_index9\n    local\
    \ factor_index10\n    local factor_index11\n    local factor_index12\n    local\
    \ factor_index13\n    local factor_index14\n    local factor_index15\n    local\
    \ factor_index16\n    local factor_index17\n    local factor_index18\n    local\
    \ factor_index19\n    local factor_index20\n    local factor_index21\n    local\
    \ factor_index22\n    local factor_index23\n    local factor_index24\n    local\
    \ factor_index25\n    local factor_index26\n    local factor_index27\n    local\
    \ factor_index28\n    local factor_index29\n    local factor_index30\n    local\
    \ factor_index31\n    local factor_index32\n    local factor_index33\n    local\
    \ factor_index34\n    local factor_index35\n    local factor_index36\n    local\
    \ factor_index37\n    local factor_index38\n    local factor_index39\n    local\
    \ factor_index40\n    local factor_index41\n    local factor_index42\n    local\
    \ factor_index43\n    local factor_index44\n    local factor_index45\n    local\
    \ factor_index46\n    local factor_index47\n    local factor_index48\n    local\
    \ factor_index49\n    local factor_index50\n    local factor_index51\n    local\
    \ factor_index52\n    local factor_index53\n    local factor_index54\n    local\
    \ factor_index55\n    local factor_index56\n    local factor_index57\n    local\
    \ factor_index58\n    local factor_index59\n    local factor_index60\n    local\
    \ factor_index61\n    local factor_index62\n    local factor_index63\n    local\
    \ factor_index64\n    local factor_index65\n    local factor_index66\n    local\
    \ factor_index67\n    local factor_index68\n    local factor_index69\n    local\
    \ factor_index70\n    local factor_index71\n    local factor_index72\n    local\
    \ factor_index73\n    local factor_index74\n    local factor_index75\n    local\
    \ factor_index76\n    local factor_index77\n    local factor_index78\n    local\
    \ factor_index79\n    local factor_index80\n    local factor_index81\n    local\
    \ factor_index82\n    local factor_index83\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor\n    local factor_count\n    local factor_index\n    local factor\n \
    \   local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local k\n    local factor\n    local factor_count\n\
    \    local prime\n    local prime_count\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local count\n    local i\n    local j\n    local k\n    local factor\n   \
    \ local count\n    local factor\n    local count\n    local factor\n    local\
    \ count\n    local factor\n    local count\n    local factor\n    local count\n\
    \    local factor\n    local count\n    local factor\n    local count\n    local\
    \ factor\n    local count\n    local factor\n    local count\n    local factor\n\
    \    local count\n    local factor\n    local count\n    local factor\n    local\
    \ count\n    local factor\n    local count\n    local factor\n    local count\n\
    \    local factor\n    local count\n    local factor\n    local count\n    local\
    \ factor\n    local count\n    local factor\n    local count\n    local factor\n\
    \    local count\n    local factor\n    local count\n    local factor\n    local\
    \ count\n    local factor\n    local count\n    local factor\n    local count\n\
    \    local factor\n    local count\n    local factor\n    local count\n    local\
    \ factor\n    local count\n    local factor\n    local count\n    local factor\n\
    \    local count\n    local factor\n    local count\n    local factor\n    local\
    \ count\n    local factor\n    local count\n    local factor\n    local count\n\
    \    local factor\n    local count\n    local factor\n    local count\n    local\
    \ factor\n    local count\n    local factor\n    local count\n    local factor\n\
    \    local count\n    local factor\n    local count\n    local factor\n    local\
    \ count\n    local factor\n    local count\n    local factor\n    local count\n\
    \    local factor\n    local count\n    local factor\n    local count\n    local\
    \ factor\n    local count\n    local factor\n    local count\n    local factor\n\
    \    local count\n    local factor\n    local count\n    local factor\n    local\
    \ count\n    local factor\n    local count\n    local factor\n    local count\n\
    \    local factor\n    local count\n    local factor\n    local count\n    local\
    \ factor\n    local count\n    local factor\n    local count\n    local factor\n\
    \    local count\n    local factor\n    local count\n    local factor\n    local\
    \ count\n    local factor\n    local count\n    local factor\n    local count\n\
    \    local factor\n    local count\n\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local k\n    local count\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factors\n    local factor\n\
    \    local factor_count\n    local factor\n    local factor_count\n    local factors\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factors\n    local factor\n    local factor_count\n    local factor\n\
    \    local factor_count\n    local factors\n    local factor\n    local factor\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ i\n  local j\n  local k\n  local factor\n  local factor_count\n  local prime\n\
    \  local prime_count\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n  local prime_number\n\
    \  local prime_number\n  local prime_number\n  local prime_number\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local k\n    local count\n    local factor\n    local factors\n    local\
    \ count\n    local factor\n    local factors\n    local count\n    local factor\n\
    \    local factors\n    local count\n    local factor\n    local factors\n   \
    \ local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    local factors\n    local count\n    local\
    \ factor\n    local factors\n    local count\n    local factor\n    local factors\n\
    \    local count\n    local factor\n    \n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local count\n    local i\n    local j\n    local k\n    local factor\n   \
    \ local factors\n    local factor\n    local count\n    local i\n    local j\n\
    \    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n\
    \    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\"\
    \ ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local factor\n    local factors\n    local count\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n    local prime\n    local primes\n    local\
    \ prime\n    local primes\n    local prime\n    local primes\n    local prime\n\
    \    local primes\n    local prime\n    local primes\n    local prime\n    local\
    \ primes\n    local prime\n    local primes\n    local prime\n    local primes\n\
    \    local prime\n    local primes\n\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor_index=1\n    local factor_count=0\n\
    \    local factor_index=1\n    local factor_count=0\n    local factor_index=1\n\
    \    local factor_count=0\n    local factor\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ count\n    local j\n    local k\n    local factor\n    local count\n    local\
    \ factor\n    local i\n    local count\n    local factor\n    local i\n    local\
    \ count\n    local factor\n    local i\n    local count\n    local factor\n  \
    \  local i\n    local count\n    local factor\n    local i\n    local count\n\
    \    local factor\n    local i\n    local count\n    local factor\n    local i\n\
    \    local count\n    local factor\n    local i\n    local count\n    local factor\n\
    \    local i\n    local count\n    local factor\n    local i\n    local count\n\
    \    local factor\n    local i\n    local count\n    local factor\n    local i\n\
    \    local count\n    local factor\n    local i\n    local count\n    local factor\n\
    \    local i\n    local count\n    local factor\n    local i\n    local count\n\
    \    local factor\n    local i\n    local count\n    local factor\n    local i\n\
    \    local count\n    local factor\n    local i\n    local count\n    local factor\n\
    \    local i\n    local count\n    local factor\n    local i\n    local count\n\
    \    local factor\n    local i\n    local count\n    local factor\n    local i\n\
    \    local count\n    local factor\n    local i\n    local count\n    local factor\n\
    \    local i\n    local count\n    local factor\n    local i\n    local count\n\
    \    local factor\n    local i\n    local count\n    local factor\n    local i\n\
    \    local count\n    local factor\n    local i\n    local count\n    local factor\n\
    \    local i\n    local count\n    local factor\n    local i\n    local count\n\
    \    local factor\n    local i\n    local count\n    local factor\n    local i\n\
    \    local count\n    local factor\n    local i\n    local count\n    local factor\n\
    \    local i\n    local count\n    local factor\n    local i\n    local count\n\
    \    local factor\n    local i\n    local count\n    local factor\n    local i\n\
    \    local count\n    local factor\n    local i\n    local count\n    local factor\n\
    \    local i\n    local count\n    local factor\n    local i\n    local \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local k\n    local factor_count\n    local factor_counts\n    local factor_counts_sorted\n\
    \    local factor_counts_sorted_index\n    local factor_counts_sorted_index2\n\
    \    local factor_counts_sorted_index3\n    local factor_counts_sorted_index4\n\
    \    local factor_counts_sorted_index5\n    local factor_counts_sorted_index6\n\
    \    local factor_counts_sorted_index7\n    local factor_counts_sorted_index8\n\
    \    local factor_counts_sorted_index9\n    local factor_counts_sorted_index10\n\
    \    local factor_counts_sorted_index11\n    local factor_counts_sorted_index12\n\
    \    local factor_counts_sorted_index13\n    local factor_counts_sorted_index14\n\
    \    local factor_counts_sorted_index15\n    local factor_counts_sorted_index16\n\
    \    local factor_counts_sorted_index17\n    local factor_counts_sorted_index18\n\
    \    local factor_counts_sorted_index19\n    local factor_counts_sorted_index20\n\
    \    local factor_counts_sorted_index21\n    local factor_counts_sorted_index22\n\
    \    local factor_counts_sorted_index23\n    local factor_counts_sorted_index24\n\
    \    local factor_counts_sorted_index25\n    local factor_counts_sorted_index26\n\
    \    local factor_counts_sorted_index27\n    local factor_counts_sorted_index28\n\
    \    local factor_counts_sorted_index29\n    local factor_counts_sorted_index30\n\
    \    local factor_counts_sorted_index31\n    local factor_counts_sorted_index32\n\
    \    local factor_counts_sorted_index33\n    local factor_counts_sorted_index34\n\
    \    local factor_counts_sorted_index35\n    local factor_counts_sorted_index36\n\
    \    local factor_counts_sorted_index37\n    local factor_counts_sorted_index38\n\
    \    local factor_counts_sorted_index39\n    local factor_counts_sorted_index40\n\
    \    local factor_counts_sorted_index41\n    local factor_counts_sorted_index42\n\
    \    local factor_counts_sorted_index43\n    local factor_counts_sorted_index44\n\
    \    local factor_counts_sorted_index45\n    local factor_counts_sorted_index46\n\
    \    local factor_counts_sorted_index47\n    local factor_counts_sorted_index48\n\
    \    local factor_counts_sorted_index49\n    local factor_counts_sorted_index50\n\
    \    local factor_counts_sorted_index51\n    local factor_counts_sorted_index52\n\
    \    local factor_counts_\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local count2\n    local count3\n    local count4\n \
    \   local count5\n    local count6\n    local count7\n    local count8\n    local\
    \ count9\n    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count89\n\
    \    local count90\n    local count91\n    local count92\n    local count93\n\
    \    local count94\n    local count95\n    local count96\n    local count97\n\
    \    local count98\n    local count99\n\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor_count\n    local factor_index\n    local\
    \ factor_index2\n    local factor_index3\n    local factor_index4\n    local factor_index5\n\
    \    local factor_index6\n    local factor_index7\n    local factor_index8\n \
    \   local factor_index9\n    local factor_index10\n    local factor_index11\n\
    \    local factor_index12\n    local factor_index13\n    local factor_index14\n\
    \    local factor_index15\n    local factor_index16\n    local factor_index17\n\
    \    local factor_index18\n    local factor_index19\n    local factor_index20\n\
    \    local factor_index21\n    local factor_index22\n    local factor_index23\n\
    \    local factor_index24\n    local factor_index25\n    local factor_index26\n\
    \    local factor_index27\n    local factor_index28\n    local factor_index29\n\
    \    local factor_index30\n    local factor_index31\n    local factor_index32\n\
    \    local factor_index33\n    local factor_index34\n    local factor_index35\n\
    \    local factor_index36\n    local factor_index37\n    local factor_index38\n\
    \    local factor_index39\n    local factor_index40\n    local factor_index41\n\
    \    local factor_index42\n    local factor_index43\n    local factor_index44\n\
    \    local factor_index45\n    local factor_index46\n    local factor_index47\n\
    \    local factor_index48\n    local factor_index49\n    local factor_index50\n\
    \    local factor_index51\n    local factor_index52\n    local factor_index53\n\
    \    local factor_index54\n    local factor_index55\n    local factor_index56\n\
    \    local factor_index57\n    local factor_index58\n    local factor_index59\n\
    \    local factor_index60\n    local factor_index61\n    local factor_index62\n\
    \    local factor_index63\n    local factor_index64\n    local factor_index65\n\
    \    local factor_index66\n    local factor_index67\n    local factor_index68\n\
    \    local factor_index69\n    local factor_index70\n    local factor_index71\n\
    \    local factor_index72\n    local factor_index73\n    local factor_index74\n\
    \    local factor_index75\n    local factor_index76\n    local factor_index77\n\
    \    local factor_index78\n    local factor_index79\n    local factor_index80\n\
    \    local factor_index81\n\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_indexes=()\n    local factor_indexes_count=-1\n\
    \    local factor_indexes_index=0\n    local factor_indexes_index_count=-1\n \
    \   local factor_indexes_index_factors=()\n    local factor_indexes_index_factors_count=-1\n\
    \    local factor_indexes_index_factors_count_factors=()\n    local factor_indexes_index_factors_count_factors_count=-1\n\
    \    local factor_indexes_index_factors_count_factors_count_factors=()\n    local\
    \ factor_indexes_index_factors_count_factors_count_factors_count=-1\n    local\
    \ factor_indexes_index_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count=-1\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count=-1\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count=-1\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_factors=()\n\
    \    local factor_indexes_index_factors_count_factors_count_factors_count_factors_count_factors_count_factors_count_\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local count\n    local i\n    local j\n    local factor\n    local factors\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local count=1\n \
    \   local i\n    local j\n    local k\n    local factor\n    local factors\n \
    \   local factor\n    local count\n    local i\n    local j\n    local k\n   \
    \ local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n \
    \   [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\"\
    \ ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor\n    local factors\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    \n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local i\n    local j\n    local k\n    local factor\n    local factor_count\n\
    \    local prime\n    local prime_count\n    local prime_number\n    local prime_numbers=()\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime_number\n    local prime_number\n\
    \    local prime_number\n    local prime_number\n    local prime_number\n    local\
    \ prime_number\n    local prime_number\n    local prime\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count=0\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  \n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor_count\n    local factor_index\n    local\
    \ factor_index2\n    local factor_index3\n    local factor_index4\n    local factor_index5\n\
    \    local factor_index6\n    local factor_index7\n    local factor_index8\n \
    \   local factor_index9\n    local factor_index10\n    local factor_index11\n\
    \    local factor_index12\n    local factor_index13\n    local factor_index14\n\
    \    local factor_index15\n    local factor_index16\n    local factor_index17\n\
    \    local factor_index18\n    local factor_index19\n    local factor_index20\n\
    \    local factor_index21\n    local factor_index22\n    local factor_index23\n\
    \    local factor_index24\n    local factor_index25\n    local factor_index26\n\
    \    local factor_index27\n    local factor_index28\n    local factor_index29\n\
    \    local factor_index30\n    local factor_index31\n    local factor_index32\n\
    \    local factor_index33\n    local factor_index34\n    local factor_index35\n\
    \    local factor_index36\n    local factor_index37\n    local factor_index38\n\
    \    local factor_index39\n    local factor_index40\n    local factor_index41\n\
    \    local factor_index42\n    local factor_index43\n    local factor_index44\n\
    \    local factor_index45\n    local factor_index46\n    local factor_index47\n\
    \    local factor_index48\n    local factor_index49\n    local factor_index50\n\
    \    local factor_index51\n    local factor_index52\n    local factor_index53\n\
    \    local factor_index54\n    local factor_index55\n    local factor_index56\n\
    \    local factor_index57\n    local factor_index58\n    local factor_index59\n\
    \    local factor_index60\n    local factor_index61\n    local factor_index62\n\
    \    local factor_index63\n    local factor_index64\n    local factor_index65\n\
    \    local factor_index66\n    local factor_index67\n    local factor_index68\n\
    \    local factor_index69\n    local factor_index70\n    local factor_index71\n\
    \    local factor_index72\n    local factor_index73\n    local factor_index74\n\
    \    local factor_index75\n    local factor_index76\n    local factor_index77\n\
    \    local factor_index78\n    local factor_index79\n    local factor_index80\n\
    \    local factor_index81\n\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local factor_count\n\
    \  local factor_index\n  local factor_count\n  local factor_index\n  local \n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor_count\n    local factor_index\n    local\
    \ factor_index2\n    local factor_index3\n    local factor_index4\n    local factor_index5\n\
    \    local factor_index6\n    local factor_index7\n    local factor_index8\n \
    \   local factor_index9\n    local factor_index10\n    local factor_index11\n\
    \    local factor_index12\n    local factor_index13\n    local factor_index14\n\
    \    local factor_index15\n    local factor_index16\n    local factor_index17\n\
    \    local factor_index18\n    local factor_index19\n    local factor_index20\n\
    \    local factor_index21\n    local factor_index22\n    local factor_index23\n\
    \    local factor_index24\n    local factor_index25\n    local factor_index26\n\
    \    local factor_index27\n    local factor_index28\n    local factor_index29\n\
    \    local factor_index30\n    local factor_index31\n    local factor_index32\n\
    \    local factor_index33\n    local factor_index34\n    local factor_index35\n\
    \    local factor_index36\n    local factor_index37\n    local factor_index38\n\
    \    local factor_index39\n    local factor_index40\n    local factor_index41\n\
    \    local factor_index42\n    local factor_index43\n    local factor_index44\n\
    \    local factor_index45\n    local factor_index46\n    local factor_index47\n\
    \    local factor_index48\n    local factor_index49\n    local factor_index50\n\
    \    local factor_index51\n    local factor_index52\n    local factor_index53\n\
    \    local factor_index54\n    local factor_index55\n    local factor_index56\n\
    \    local factor_index57\n    local factor_index58\n    local factor_index59\n\
    \    local factor_index60\n    local factor_index61\n    local factor_index62\n\
    \    local factor_index63\n    local factor_index64\n    local factor_index65\n\
    \    local factor_index66\n    local factor_index67\n    local factor_index68\n\
    \    local factor_index69\n    local factor_index70\n    local factor_index71\n\
    \    local factor_index72\n    local factor_index73\n    local factor_index74\n\
    \    local factor_index75\n    local factor_index76\n    local factor_index77\n\
    \    local factor_index78\n    local factor_index79\n    local factor_index80\n\
    \    local factor_index81\n\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local factor_count\n    local factor\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_index\n\
    \    local factor_count\n    local factor\n    local factor_index\n    local factor_count\n\
    \    local factor\n    local factor_index\n    local \n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    local\
    \ j\n    local k\n    local factor\n    local factors\n    local factor\n    local\
    \ count\n    local i\n    local j\n    local k\n    local factor\n    local factors\n\
    \    local factor\n    local count\n    local i\n    local j\n    local k\n  \
    \  local factor\n    local factors\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local factor\n    local factors\n    local\
    \ factor\n    local count\n    local i\n    local j\n    local k\n    local factor\n\
    \    local factors\n    local factor\n    local count\n    local i\n    \n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    local factor_index\n    local factor_count=0\n    local\
    \ factor_index\n    local factor_count=0\n    local factor_index\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count=0\n    local factor_index\n  \
    \  local factor_count=0\n    local factor_index\n    local factor_count=0\n  \
    \  local factor_index\n    local factor_count=0\n    local factor_index\n    local\
    \ factor_count=0\n    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local n\n    local count\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n    local factor\n    local factors\n    local factor\n\
    \    local factors\n    local factor\n    local factors\n    local factor\n  \
    \  local factors\n    local factor\n    local factors\n    local factor\n    local\
    \ factors\n    local factor\n    local factors\n    local factor\n    local factors\n\
    \    local factor\n    local factors\n    local factor\n    local factors\n  \
    \  local factor\n    local factors\n    local factor\n    local factors\n    local\
    \ factor\n    local factors\n\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: -1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local count=1\n \
    \   while [ $1 -gt 1 ]; do\n        factor=1\n        while [ $1 -le $factor ];\
    \ do\n            (( count++ ))\n            (( factor *= $factor ))\n       \
    \ done\n        factors+=( $factor )\n        (( 1 ))\n        (( $1 /= $factor\
    \ ))\n    done\n    echo $factors\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=4 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=12 encoding='utf-8'>
  timestamp: 1660037337
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local n\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local \n}\n\ncandidate() {\n \
    \   factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local count\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local \n}\n\ncandidate() {\n \
    \   factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor\n    local factors\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    local factor\n    local factor\n    local\
    \ factor\n    local factor\n    local factor\n    local factor\n    local factor\n\
    \    local factor\n    local factor\n    \n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local i\n  local count\n\
    \  local number\n  local factor\n  local factors\n  local factor\n  local i\n\
    \  local count\n  local number\n  local factor\n  local factors\n  local factor\n\
    \  local i\n  local count\n  local number\n  local factor\n  local factors\n \
    \ local factor\n  local i\n  local count\n  local number\n  local factor\n  local\
    \ factors\n  local factor\n  local i\n  local count\n  local number\n  local factor\n\
    \  local factors\n  local factor\n  local i\n  local count\n  local number\n \
    \ local factor\n  local factors\n  local factor\n  local i\n  local count\n  local\
    \ number\n  local factor\n  local factors\n  local factor\n  local i\n  local\
    \ count\n  local number\n  local factor\n  local factors\n  local factor\n  local\
    \ i\n  local count\n  local number\n  local factor\n  local factors\n  local factor\n\
    \  local i\n  local count\n  local number\n  local factor\n  local factors\n \
    \ local factor\n  local i\n  local count\n  local number\n  local factor\n  local\
    \ factors\n  local factor\n  local i\n  local count\n  local number\n  local factor\n\
    \  local factors\n  local factor\n  local i\n  local count\n  local number\n \
    \ local factor\n  local factors\n  local factor\n  local i\n  local count\n  local\
    \ number\n  local factor\n  local factors\n  local factor\n  local i\n  local\
    \ count\n  local number\n  local factor\n  local factors\n  local factor\n  local\
    \ i\n  local count\n  local number\n  local factor\n  local factors\n  local factor\n\
    \  local i\n  local count\n  local number\n  local factor\n  local factors\n \
    \ local factor\n  local i\n  local count\n  local number\n  local factor\n  local\
    \ factors\n  local factor\n  local i\n  local count\n  local number\n  local factor\n\
    \  local factors\n  local factor\n  local i\n  local count\n  local number\n \
    \ local factor\n  local factors\n  local factor\n  local \n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=1\n    local factor_count=0\n\
    \    local factor_index=0\n    local factor_indexes=()\n    local factor_indexes_count=0\n\
    \    local factor_indexes_index=0\n    local factor_indexes_index_count=0\n  \
    \  local factor_indexes_index_count_max=0\n    local factor_indexes_index_count_min=0\n\
    \    local factor_indexes_index_count_min_index=0\n    local factor_indexes_index_count_max_index=0\n\
    \    local factor_indexes_index_count_min_indexes=()\n    local factor_indexes_index_count_max_indexes=()\n\
    \    local factor_indexes_index_count_min_indexes_count=0\n    local factor_indexes_index_count_max_indexes_count=0\n\
    \    local factor_indexes_index_count_min_indexes_count_max=0\n    local factor_indexes_index_count_max_indexes_count_max=0\n\
    \    local factor_indexes_index_count_min_indexes_count_min=0\n    local factor_indexes_index_count_max_indexes_count_min=0\n\
    \    local factor_indexes_index_count_min_indexes_count_min_index=0\n    local\
    \ factor_indexes_index_count_max_indexes_count_min_index=0\n    local factor_indexes_index_count_min_indexes_count_min_index=0\n\
    \    local factor_indexes_index_count_max_indexes_count_min_index=0\n    local\
    \ factor_indexes_index_count_min_indexes_count_min_index=0\n    local factor_indexes_index_count_max_indexes_count_min_index=0\n\
    \    local factor_indexes_index_count_min_indexes_count_min_index=0\n    local\
    \ factor_indexes_index_count_max_indexes_count_min_index=0\n    local factor_indexes_index_count_min_indexes_count_min_index=0\n\
    \    local factor_indexes_index_count_max_indexes_count_min_index=0\n    local\
    \ factor_indexes_index_count_min_indexes_count_min_index=0\n    local factor_indexes_index_count_max_indexes_count_min_index=0\n\
    \    local factor_indexes_index_count_min_indexes_count_min_index=0\n    local\
    \ factor_indexes_index_count_max_indexes_count_min_index=0\n    local factor_indexes_index_count_min_indexes_count_min_index=0\n\
    \    local factor_indexes_index_count_max_indexes_count_min_index=0\n    local\
    \ factor_indexes_index_count_min_indexes_count_min_index=0\n    local factor_indexes_index_count_max_indexes_count_min_index=0\n\
    \    local factor_indexes_index_count_min_indexes_count_min_index=0\n    local\
    \ factor_indexes_index_count_max_indexes_count_min_index=0\n    local factor_indexes_index_count_\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local i\n    local\
    \ j\n    local count\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor\n    local factor_count\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count=0\n\
    \    local factor_index\n    local factor_count\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    local factor_index\n    local factor\n\
    \    local factor_count\n    local factor_index\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor\n    local factor_count\n    local factor_index\n\
    \    local factor\n    local factor_count\n    \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local factor_count\n    local factor_index\n    local\
    \ factor_count\n    local factor_index\n    local factor_count\n    local factor_index\n\
    \    local factor_count\n    local factor_index\n    local factor_count\n    local\
    \ factor_index\n    local factor_count\n    local factor_index\n    local factor_count\n\
    \    local factor_index\n    local \n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n#\n# $1 is an integer\n\
    factorize() {\n  local factors=()\n  local factor\n  local factor_count\n  local\
    \ factor_index\n  local factor_count\n  local factor\n  local factor_index\n \
    \ local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local factor_count\n  local factor\n\
    \  local factor_index\n  local factor_count\n  local factor\n  local factor_index\n\
    \  local factor_count\n  local factor\n  local factor_index\n  local factor_count\n\
    \  local factor\n  local factor_index\n  local \n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037332

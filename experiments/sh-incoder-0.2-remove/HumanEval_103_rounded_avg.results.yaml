language: sh
name: HumanEval_103_rounded_avg
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n++ ))\n \
    \ (( m++ ))\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n\
    \ >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return\
    \ -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m ))\
    \ && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  ((\
    \ n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return\
    \ -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m ))\
    \ && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  ((\
    \ n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return\
    \ -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m ))\
    \ && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  ((\
    \ n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return\
    \ -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m ))\
    \ && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  ((\
    \ n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return\
    \ -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  (( n >= m ))\
    \ && return -1\n  (( n >= m )) && return -1\n  (( n >= m )) && return -1\n  ((\
    \ n >= m )) && return -1\n  (( n >= m )) && return -1\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    ((sum+=$i))\n  done\n  ((sum+=$n))\n\
    \  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n \
    \ ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n\
    \  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n \
    \ ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n\
    \  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n \
    \ ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n\
    \  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n \
    \ ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n\
    \  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n \
    \ ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n\
    \  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n \
    \ ((sum+=$m))\n  ((sum+=$n))\n\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[\
    \ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\"\
    ) = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n = n % m ))\n  (( m = m % n ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n\
    \  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n\
    \  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n\
    \  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n\
    \  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n\
    \  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n\
    \  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n\
    \  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n\
    \  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n\
    \  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n\
    \  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n\
    \  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n\
    \  (( n = n % 2 ))\n  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n\
    \  (( m = m % 2 ))\n  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n\
    \  (( n = n + m ))\n  (( n = n % 2 ))\n  (( m = m % 2 ))\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]; then\n    return -1\n  fi\n  local sum=0\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    sum=$((sum + i))\n  done\n  echo $((sum / $m))\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n\
    \  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local\
    \ sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n\
    \  local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n \
    \ local sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local\
    \ sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n\
    \  local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n \
    \ local sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local\
    \ sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n\
    \  local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n \
    \ local sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local\
    \ sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n\
    \  local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n \
    \ local sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local\
    \ sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n\
    \  local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n \
    \ local sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local\
    \ sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n\
    \  local sum97\n  local sum98\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n = n >= m ))\
    \ && return -1\n  (( n = n )) && return $(( n / 2 + m / 2 ))\n  (( m = m )) &&\
    \ return $(( n / 2 + m / 2 ))\n  (( n = n )) && return $(( n / 2 + m / 2 ))\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=14 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=${1:?integer required}\n  m=${2:?integer\
    \ required}\n  (( n > m )) && return -1\n  (( n == m )) && return 0\n  (( n <=\
    \ m )) && return $(( n + ( m - n ) / 2 ))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m sum\n    read n m <<< \"$@\"\n\
    \    sum=$(( ((n + m) / 2) ))\n    echo $(( sum % 2 ))\n}\n\ncandidate() {\n \
    \   rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n <= m ))\
    \ && return -1 || return $(( n + ( m / 2 ) ))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n++ ))\n  (( m++\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- \n}\n\ncandidate() {\n \
    \   rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn4gpcp0y.sh: line 84: unexpected EOF while looking for matching
    `)''

    /tmp/tmpn4gpcp0y.sh: line 108: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local avg\n  local count\n  local remainder\n  \n  if\
    \ [ $n -gt $m ]\n  then\n    return -1\n  fi\n  \n  for i in $(seq 1 $n)\n  do\n\
    \    sum=$((sum+i))\n  done\n  \n  avg=$((sum/$n))\n  \n  for i in $(seq 1 $m)\n\
    \  do\n    count=$((count+1))\n  done\n  \n  remainder=$((avg%$count))\n  \n \
    \ for i in $(seq 1 $remainder)\n  do\n    avg=$((avg+1))\n  done\n  \n  avg=$((avg-1))\n\
    \  \n  echo $avg\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  local sum\n  ((sum=0))\n\
    \  while ((n<m))\n  do\n    ((sum+=n))\n    ((n++))\n  done\n  ((sum+=m))\n  ((sum=sum%2))\n\
    \  echo $sum\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n  (( n -= m ))\n\
    \  (( n -= m ))\n  (( \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsn7dydhh.sh: line 75: unexpected EOF while looking for matching
    `)''

    /tmp/tmpsn7dydhh.sh: line 99: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    read n m <<< \"$1\"\n   \
    \ if [ \"$m\" -gt \"$n\" ]; then\n        echo \"-1\"\n    else\n        echo\
    \ \"$(( (n+m)/2 ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnpjw0ugi.sh: line 13: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + i))\n  done\n  if [ $n\
    \ -gt $m ]; then\n    return -1\n  fi\n  echo $(( $sum / $n ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1; m=$2\n  local sum\n  sum=0\n\
    \  while (( n <= m )); do\n    sum=$(( sum + n ))\n    n=$(( n + 1 ))\n  done\n\
    \  echo \"$sum / $n\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n >= m\
    \ ? n : m ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n =\
    \ n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( \n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzeybvrx7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzeybvrx7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  local sum\n \
    \ sum=0\n  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum+i))\n  done\n \
    \ if [ $n -gt $m ]; then\n    return -1\n  fi\n  echo $(( $sum / $m ))\n}\n\n\
    candidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n > m )) &&\
    \ return -1\n  (( n == m )) && return $(( n / 2 ))\n  (( n < m )) && return -1\n\
    \  (( n == 0 )) && return 0\n  (( n == 1 )) && return 1\n  (( n == 2 )) && return\
    \ 2\n  (( n == 3 )) && return 3\n  (( n == 4 )) && return 4\n  (( n == 5 )) &&\
    \ return 5\n  (( n == 6 )) && return 6\n  (( n == 7 )) && return 7\n  (( n ==\
    \ 8 )) && return 8\n  (( n == 9 )) && return 9\n  (( n == 10 )) && return 10\n\
    \  (( n == 11 )) && return 11\n  (( n == 12 )) && return 12\n  (( n == 13 )) &&\
    \ return 13\n  (( n == 14 )) && return 14\n  (( n == 15 )) && return 15\n  ((\
    \ n == 16 )) && return 16\n  (( n == 17 )) && return 17\n  (( n == 18 )) && return\
    \ 18\n  (( n == 19 )) && return 19\n  (( n == 20 )) && return 20\n  (( n == 21\
    \ )) && return 21\n  (( n == 22 )) && return 22\n  (( n == 23 )) && return 23\n\
    \  (( n == 24 )) && return 24\n  (( n == 25 )) && return 25\n  (( n == 26 )) &&\
    \ return 26\n  (( n == 27 )) && return 27\n  (( n == 28 )) && return 28\n  ((\
    \ n == 29 )) && return 29\n  (( n == 30 )) && return 30\n  (( n == 31 )) && return\
    \ 31\n  (( n == 32 )) && return 32\n  (( n == 33 )) && return 33\n  (( n == 34\
    \ )) && return 34\n  (( n == 35 )) && return 35\n  (( n == 36 )) && return 36\n\
    \  (( n == 37 )) && return 37\n  (( n == 38 )) && return 38\n  (( n == 39 )) &&\
    \ return 39\n  (( n == 40 )) && return 40\n  (( n == 41 )) && return 41\n  ((\
    \ n == 42 )) && return 42\n  (( n == 43 )) && return 43\n  (( n == 44 )) && return\
    \ 44\n  ((\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0im31iah.sh: line 62: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0im31iah.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n = n <= m ? n : m ))\n  (( n = n <= 0 ? -1 : n ))\n  (( n = n >= m ? -1\
    \ : n ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n\
    \ >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n\
    \  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n\
    \ : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n =\
    \ n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n\
    \  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n\
    \ : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n =\
    \ n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n\
    \  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n\
    \ : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n =\
    \ n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n\
    \  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n\
    \ : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n =\
    \ n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n  (( n = n >= 0 ? n : -1 ))\n\
    \  (( n = n >= 0 ? n : -1 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local remainder\n  \n  for i in $(seq 1 $m); do\n \
    \   sum=$((sum + $i))\n  done\n  avg=$((sum / $m))\n  remainder=$((n % $m))\n\
    \  \n  if [ $remainder -eq 0 ]; then\n    rounded_avg=$avg\n  else\n    rounded_avg=$((\
    \ $avg + 1 ))\n  fi\n  \n  echo $rounded_avg\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n++ ))\n \
    \ (( m++ ))\n  (( n >= m )) && return -1\n  (( n <= m )) && return $(( n / 2 +\
    \ m / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n >= m\
    \ ? n : m ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n =\
    \ n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( \n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzeybvrx7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzeybvrx7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n++ ))\n \
    \ (( m++ ))\n  (( n >= m )) && return -1\n  (( n <= m )) && return $(( n / m ))\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]; then\n    return -1\n  fi\n  local sum=0\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    sum=$(( $sum + $i ))\n  done\n  echo $(( $sum / $n ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local sum96\n  local sum97\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n++ ))\n \
    \ (( m++ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m sum\n  n=$1\n  m=$2\n  sum=0\n \
    \ while [ $n -le $m ]; do\n    sum=$(($sum + $n))\n    n=$(($n + 1))\n  done\n\
    \  echo $(($sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local count\n  local remainder\n  \n  for i in $(seq\
    \ 1 $m); do\n    sum=$((sum+i))\n  done\n  \n  avg=$((sum / $m))\n  \n  if [ $n\
    \ -gt $m ]; then\n    return -1\n  fi\n  \n  count=0\n  remainder=$(( $n % 2 ))\n\
    \  \n  for i in $(seq 1 $m); do\n    if [ $i -eq $n ]; then\n      count=$(( $count\
    \ + 1 ))\n    else\n      if [ $remainder -eq 0 ]; then\n        avg=$(( $avg\
    \ + $i ))\n      else\n        avg=$(( $avg - $i ))\n      fi\n    fi\n  done\n\
    \  \n  avg=$(( $avg / $count ))\n  \n  printf \"%.1f\" $avg\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        (( avg = ($n + ($m+1))\
    \ / 2 ))\n        echo \"$(( avg % 2 ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n >= m )) && return\
    \ -1\n  (( n == m )) && return 0\n  (( n <= m )) && return $(( n + ( n - m ) /\
    \ 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=3 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=32 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  local\
    \ avg=$((sum / $m))\n  local rounded_avg=$(( $avg + 0.5 ))\n  local rounded_sum=0\n\
    \  for i in $(seq 1 $n); do\n    rounded_sum=$((rounded_sum + $i))\n  done\n \
    \ local rounded_sum=$(( $rounded_sum + 0.5 ))\n  if [ $n -gt $m ]; then\n    return\
    \ -1\n  fi\n  echo $rounded_avg\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n   \
    \ [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"\
    977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp49a0_vvh.sh: line 19: 3 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n >= m )) && return -1\n  (( n > m )) && return -1\n  (( n <= m )) && return\
    \ $(( n + ( n - m ) / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  local avg\n \
    \ avg=$(( (n+m)/2 ))\n  local bin\n  bin=$(( 10#$avg ))\n  echo $bin\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n >= m )) && return -1\n  (( n <= m )) && return $(( n + ( m / 2 )))\n}\n\
    \ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum+i))\n  done\n  echo $((sum/${m}))\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]\n  then\n    return -1\n  fi\n  local sum\n  sum=0\n  while [ $n -le $m ]\n\
    \  do\n    sum=$(( $sum + $n ))\n    n=$(( $n + 1 ))\n  done\n  echo $(( $sum\
    \ / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local count\n  local remainder\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_avg\n  local remainder_n\n  local remainder_m\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_avg\n  local\
    \ remainder_n\n  local remainder_m\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_avg\n  local remainder_n\n  local remainder_m\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_avg\n  local remainder_n\n  local remainder_m\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_avg\n  local\
    \ remainder_n\n  local remainder_m\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_avg\n  local remainder_n\n  local remainder_m\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_avg\n  local remainder_n\n  local remainder_m\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_avg\n  local\
    \ remainder_n\n  local remainder_m\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_avg\n  local remainder_n\n  local remainder_m\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_avg\n  local remainder_n\n  local remainder_m\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_avg\n  local\
    \ remainder_n\n  local remainder_m\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_avg\n  local remainder_n\n  local remainder_m\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_avg\n  local remainder_n\n  local remainder_m\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_avg\n  local\
    \ remainder_n\n  local remainder_m\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_avg\n  local remainder_n\n  local remainder_m\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_avg\n  local remainder_n\n  local remainder_\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n = n >= m ))\
    \ && return -1\n  (( n = n <= m )) && return $(( n / 2 + m / 2 ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=52 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=22 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $m\n  ((\
    \ n == 0 )) && return 0\n  (( m == 0 )) && return 0\n  (( n <= m )) && return\
    \ $(( n + ( m / 2 )))\n  (( n == m )) && return $(( n / 2 ))\n  (( n >= m )) &&\
    \ return $(( n + ( m / 2 )))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m sum\n  n=$1\n  m=$2\n  sum=0\n \
    \ while [ $n -le $m ]; do\n    sum=$(($sum + $n))\n    n=$(($n + 1))\n  done\n\
    \  echo $(($sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local avg\n    local count\n    local\
    \ remainder\n    local remainder_count\n    local remainder_sum\n    local remainder_n\n\
    \    local remainder_m\n    local remainder_k\n    local remainder_i\n    local\
    \ remainder_j\n    local remainder_k\n    local remainder_i\n    local remainder_j\n\
    \    local remainder_k\n    local remainder_i\n    local remainder_j\n    local\
    \ remainder_k\n    local remainder_i\n    local remainder_j\n    local remainder_k\n\
    \    local remainder_i\n    local remainder_j\n    local remainder_k\n    local\
    \ remainder_i\n    local remainder_j\n    local remainder_k\n    local remainder_i\n\
    \    local remainder_j\n    local remainder_k\n    local remainder_i\n    local\
    \ remainder_j\n    local remainder_k\n    local remainder_i\n    local remainder_j\n\
    \    local remainder_k\n    local remainder_i\n    local remainder_j\n    local\
    \ remainder_k\n    local remainder_i\n    local remainder_j\n    local remainder_k\n\
    \    local remainder_i\n    local remainder_j\n    local remainder_k\n    local\
    \ remainder_i\n    local remainder_j\n    local remainder_k\n    local remainder_i\n\
    \    local remainder_j\n    local remainder_k\n    local remainder_i\n    local\
    \ remainder_j\n    local remainder_k\n    local remainder_i\n    local remainder_j\n\
    \    local remainder_k\n    local remainder_i\n    local remainder_j\n    local\
    \ remainder_k\n    local remainder_i\n    local remainder_j\n    local remainder_k\n\
    \    local remainder_i\n    local remainder_j\n    local remainder_k\n    local\
    \ remainder_i\n    local remainder_j\n    local remainder_k\n    local remainder_i\n\
    \    local remainder_j\n    local remainder_k\n    local remainder_i\n    local\
    \ remainder_j\n    local remainder_k\n    local remainder_i\n    local remainder_j\n\
    \    local remainder_k\n    local remainder_i\n    local remainder_j\n    local\
    \ remainder_k\n    local remainder_i\n    local \n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local avg\n    local rounded_avg\n    \n    if\
    \ [ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        for i in $(seq 1\
    \ $n); do\n            sum=$((sum+i))\n        done\n        avg=$((sum/$n))\n\
    \        rounded_avg=$(( $avg + 0.5 ))\n        echo $rounded_avg\n    fi\n}\n\
    \ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcbtkltyx.sh: line 26: 1 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n > m )) &&\
    \ return -1\n  (( n == m )) && return 0\n  (( n == 0 )) && return 0\n  (( m ==\
    \ 0 )) && return 0\n  (( n <= m )) && return $(( n + ( n - m ) / 2 ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n-- ))\n \
    \ (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ ( m / 2 ) ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n > m )) &&\
    \ return -1\n  (( n == m )) && return $(( n / 2 ))\n  (( n <= m )) && return $((\
    \ n / 2 + m / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m--\
    \ ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- \n}\n\ncandidate() {\n \
    \   rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0puyeg77.sh: line 84: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0puyeg77.sh: line 108: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  if [\
    \ $n -gt $m ]; then\n    return -1\n  fi\n  echo $(( $sum / $m ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return 0\n  (( n <= m )) && return $(( n + (\
    \ m / 2 ) ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n++ ))\n  (( m++\
    \ ))\n  (( n -= m ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -=\
    \ 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n\
    \ -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  ((\
    \ n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n  (( n -= 1 ))\n\
    \  (( n -= 1 ))\n  (( n -= 1 ))\n\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n   \
    \ [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"\
    977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=46 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=25 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    ((sum+=$i))\n  done\n  ((sum+=$n))\n\
    \  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n \
    \ ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n\
    \  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n \
    \ ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n\
    \  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n \
    \ ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n\
    \  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n \
    \ ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n\
    \  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n \
    \ ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n\
    \  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n  ((sum+=$m))\n  ((sum+=$n))\n \
    \ ((sum+=$m))\n  ((sum+=$n))\n\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[\
    \ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\"\
    ) = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n-- ))\n \
    \ (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum+i))\n  done\n  echo $((sum/($m+1)))\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ ( m - n ) / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum+i))\n  done\n  echo $((sum\
    \ / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ ( m - n ) / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ ( m - n ) / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum+i))\n  done\n  echo $((\
    \ $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    ((sum+=i))\n  done\n  ((sum+=n))\n\
    \  ((sum+=m))\n  ((sum=sum%2))\n  echo $sum\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local rounded_avg\n  \n  for\
    \ i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  avg=$((sum / $n))\n \
    \ \n  if [ $n -gt $m ]; then\n    rounded_avg=-1\n  else\n    rounded_avg=$((\
    \ $(echo \"$avg\" | bc -l) / 2 ))\n  fi\n  \n  echo \"$rounded_avg\"\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local remainder\n  \n  if [ $n -gt $m ]\n  then\n \
    \   return -1\n  fi\n  \n  for i in $(seq 1 $m); do\n    sum=$(( sum + $i ))\n\
    \  done\n  \n  avg=$(( sum / $m ))\n  \n  remainder=$(( $n % $m ))\n  \n  if [\
    \ $remainder -eq 0 ]\n  then\n    rounded_avg=$avg\n  else\n    rounded_avg=$((\
    \ $avg + 1 ))\n  fi\n  \n  printf \"%b\" $rounded_avg\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local sum2\n    local sum3\n    local\
    \ sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n    local\
    \ sum9\n    local sum10\n    local sum11\n    local sum12\n    local sum13\n \
    \   local sum14\n    local sum15\n    local sum16\n    local sum17\n    local\
    \ sum18\n    local sum19\n    local sum20\n    local sum21\n    local sum22\n\
    \    local sum23\n    local sum24\n    local sum25\n    local sum26\n    local\
    \ sum27\n    local sum28\n    local sum29\n    local sum30\n    local sum31\n\
    \    local sum32\n    local sum33\n    local sum34\n    local sum35\n    local\
    \ sum36\n    local sum37\n    local sum38\n    local sum39\n    local sum40\n\
    \    local sum41\n    local sum42\n    local sum43\n    local sum44\n    local\
    \ sum45\n    local sum46\n    local sum47\n    local sum48\n    local sum49\n\
    \    local sum50\n    local sum51\n    local sum52\n    local sum53\n    local\
    \ sum54\n    local sum55\n    local sum56\n    local sum57\n    local sum58\n\
    \    local sum59\n    local sum60\n    local sum61\n    local sum62\n    local\
    \ sum63\n    local sum64\n    local sum65\n    local sum66\n    local sum67\n\
    \    local sum68\n    local sum69\n    local sum70\n    local sum71\n    local\
    \ sum72\n    local sum73\n    local sum74\n    local sum75\n    local sum76\n\
    \    local sum77\n    local sum78\n    local sum79\n    local sum80\n    local\
    \ sum81\n    local sum82\n    local sum83\n    local sum84\n    local sum85\n\
    \    local sum86\n    local sum87\n    local sum88\n    local sum89\n    local\
    \ sum90\n    local sum91\n    local sum92\n    local sum93\n    local sum94\n\
    \    local sum95\n    local sum96\n    local sum97\n    local sum\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    local\
    \ avg\n    avg=0\n    local i\n    for i in $(seq 1 $n); do\n        avg=$(( $avg\
    \ + $i ))\n    done\n    avg=$(( $avg / $n ))\n    echo $avg\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $(( $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    local\
    \ sum\n    sum=0\n    local i\n    for i in $(seq 1 $m); do\n        sum=$(( $sum\
    \ + $n ))\n    done\n    echo $(( $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum+i))\n  done\n  local avg=$((sum/$m))\n\
    \  local rounded_avg=$(( $avg + 0.5 ))\n  if [ $n -gt $m ]; then\n    return -1\n\
    \  fi\n  echo $rounded_avg\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7xu29vln.sh: line 19: 0 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local sum1\n    local sum2\n    local sum3\n  \
    \  local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    local sum97\n    local \n}\n\n\
    candidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m sum\n  n=$1\n  m=$2\n  sum=0\n \
    \ while [ $n -le $m ]; do\n    sum=$((sum+n))\n    n=$((n+1))\n  done\n  echo\
    \ \"$((sum / 2))\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local sum96\n  local sum97\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local avg\n    local rounded_avg\n\
    \    \n    if [ $n -le $m ]; then\n        avg=$(( $n + $m ))\n        rounded_avg=$((\
    \ $avg / 2 ))\n        \n        if [ $rounded_avg -eq $n ]; then\n          \
    \  rounded_avg=$(( $n - 1 ))\n        fi\n        \n        echo $rounded_avg\n\
    \    else\n        echo \"-1\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    ((sum+=i))\n  done\n  ((sum+=n))\n\
    \  ((sum=sum%2))\n  echo $sum\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[\
    \ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\"\
    ) = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n >= m\
    \ ? n : m ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n =\
    \ n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( \n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzeybvrx7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzeybvrx7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    local\
    \ sum\n    sum=0\n    while [ $n -le $m ]\n    do\n        sum=$(($sum + $n))\n\
    \        n=$(($n + 1))\n    done\n    echo $(($sum / $m))\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]\n  then\n    echo -1\n  else\n    echo $(( ($n + $m) / 2 ))\n  fi\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    local\
    \ sum\n    sum=0\n    local i\n    for i in $(seq 1 $n); do\n        sum=$((sum\
    \ + $i))\n    done\n    if [ $n -gt $m ]; then\n        echo \"-1\"\n    else\n\
    \        echo $(( $sum / $n ))\n    fi\n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n >= m )) && return -1\n  (( n <= 0 )) && return -1\n  (( m <= 0 )) && return\
    \ -1\n  (( m >= n )) && return -1\n  (( n == 0 )) && return 0\n  (( m == 0 ))\
    \ && return 0\n  (( n == m )) && return 0\n  (( n <= m )) && return 0\n  (( m\
    \ <= n )) && return 0\n  (( n == m )) && return 0\n  (( n <= m )) && return 0\n\
    \  (( m <= n )) && return 0\n  (( n == m )) && return 0\n  (( n <= m )) && return\
    \ 0\n  (( m <= n )) && return 0\n  (( n == m )) && return 0\n  (( n <= m )) &&\
    \ return 0\n  (( m <= n )) && return 0\n  (( n == m )) && return 0\n  (( n <=\
    \ m )) && return 0\n  (( m <= n )) && return 0\n  (( n == m )) && return 0\n \
    \ (( n <= m )) && return 0\n  (( m <= n )) && return 0\n  (( n == m )) && return\
    \ 0\n  (( n <= m )) && return 0\n  (( m <= n )) && return 0\n  (( n == m )) &&\
    \ return 0\n  (( n <= m )) && return 0\n  (( m <= n )) && return 0\n  (( n ==\
    \ m )) && return 0\n  (( n <= m )) && return 0\n  (( m <= n )) && return 0\n \
    \ (( n == m )) && return 0\n  (( n <= m )) && return 0\n  (( m <= n )) && return\
    \ 0\n  (( n == m )) && return 0\n  (( n <= m )) && return 0\n  (( m <= n )) &&\
    \ return 0\n  (( n == m )) && return 0\n  (( n <= m )) && return 0\n  (( m <=\
    \ n )) && return 0\n  (( n == m )) && return 0\n  (( n <= m )) && return 0\n \
    \ (( m <= n )) && return 0\n  (( n == m )) && return 0\n\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum+i))\n  done\n  echo $((sum\
    \ / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  local sum\n \
    \ sum=0\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  local avg\n\
    \  avg=$((sum / $n))\n  local rounded_avg\n  rounded_avg=$((avg + 0.5))\n  local\
    \ bin\n  bin=$((10#$rounded_avg))\n  echo $bin\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzibx960c.sh: line 22: avg + 0.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  local\
    \ avg=$((sum / $m))\n  local rounded_avg=$(( $avg + 0.5 ))\n  echo $rounded_avg\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1ezkkrfc.sh: line 19: 0 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local sum1\n  local sum2\n  local sum3\n \
    \ local sum4\n  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local\
    \ sum9\n  local sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n\
    \  local sum15\n  local sum16\n  local sum17\n  local sum18\n  local sum19\n \
    \ local sum20\n  local sum21\n  local sum22\n  local sum23\n  local sum24\n  local\
    \ sum25\n  local sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n\
    \  local sum31\n  local sum32\n  local sum33\n  local sum34\n  local sum35\n \
    \ local sum36\n  local sum37\n  local sum38\n  local sum39\n  local sum40\n  local\
    \ sum41\n  local sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n\
    \  local sum47\n  local sum48\n  local sum49\n  local sum50\n  local sum51\n \
    \ local sum52\n  local sum53\n  local sum54\n  local sum55\n  local sum56\n  local\
    \ sum57\n  local sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n\
    \  local sum63\n  local sum64\n  local sum65\n  local sum66\n  local sum67\n \
    \ local sum68\n  local sum69\n  local sum70\n  local sum71\n  local sum72\n  local\
    \ sum73\n  local sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n\
    \  local sum79\n  local sum80\n  local sum81\n  local sum82\n  local sum83\n \
    \ local sum84\n  local sum85\n  local sum86\n  local sum87\n  local sum88\n  local\
    \ sum89\n  local sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n\
    \  local sum95\n  local sum96\n  local sum\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n < m )) && return -1\n  ((\
    \ n == 0 )) && return 0\n  (( n == 1 )) && return 1\n  (( n == 2 )) && return\
    \ 2\n  (( n == 3 )) && return 3\n  (( n == 4 )) && return 4\n  (( n == 5 )) &&\
    \ return 5\n  (( n == 6 )) && return 6\n  (( n == 7 )) && return 7\n  (( n ==\
    \ 8 )) && return 8\n  (( n == 9 )) && return 9\n  (( n == 10 )) && return 10\n\
    \  (( n == 11 )) && return 11\n  (( n == 12 )) && return 12\n  (( n == 13 )) &&\
    \ return 13\n  (( n == 14 )) && return 14\n  (( n == 15 )) && return 15\n  ((\
    \ n == 16 )) && return 16\n  (( n == 17 )) && return 17\n  (( n == 18 )) && return\
    \ 18\n  (( n == 19 )) && return 19\n  (( n == 20 )) && return 20\n  (( n == 21\
    \ )) && return 21\n  (( n == 22 )) && return 22\n  (( n == 23 )) && return 23\n\
    \  (( n == 24 )) && return 24\n  (( n == 25 )) && return 25\n  (( n == 26 )) &&\
    \ return 26\n  (( n == 27 )) && return 27\n  (( n == 28 )) && return 28\n  ((\
    \ n == 29 )) && return 29\n  (( n == 30 )) && return 30\n  (( n == 31 )) && return\
    \ 31\n  (( n == 32 )) && return 32\n  (( n == 33 )) && return 33\n  (( n == 34\
    \ )) && return 34\n  (( n == 35 )) && return 35\n  (( n == 36 )) && return 36\n\
    \  (( n == 37 )) && return 37\n  (( n == 38 )) && return 38\n  (( n == 39 )) &&\
    \ return 39\n  (( n == 40 )) && return 40\n  (( n == 41 )) && return 41\n  ((\
    \ n == 42 )) && return 42\n  (( n == 43 )) && return 43\n  (( n == 44 )) && return\
    \ 44\n  (( n == 45 )) \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local rounded_avg\n  \n  for i in $(seq 1 $n); do\n\
    \    sum=$((sum + $i))\n  done\n  avg=$((sum / $n))\n  rounded_avg=$((avg + 0.5))\n\
    \  \n  if [ \"$rounded_avg\" -gt \"$m\" ]; then\n    return -1\n  else\n    echo\
    \ \"$rounded_avg\"\n  fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4ghaz4ah.sh: line 22: avg + 0.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1; m=$2\n  if [ $n -gt $m\
    \ ]\n  then\n    echo -1\n  else\n    echo $(( $n + $m ))\n  fi\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n >= m\
    \ ? n : m ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n =\
    \ n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( \n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzeybvrx7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzeybvrx7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    local\
    \ sum\n    sum=0\n    while [ $n -le $m ]; do\n        sum=$(($sum + $n))\n  \
    \      n=$(($n + 1))\n    done\n    echo $(($sum / $m))\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  local sum\n \
    \ sum=0\n  while [ \"$n\" -le \"$m\" ]; do\n    sum=$((sum + n))\n    n=$((n +\
    \ 1))\n  done\n  echo \"$((sum / 2))\"\n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n > m )) && return\
    \ -1\n  (( n == m )) && return 0\n  (( n <= m )) && return $(( n + ( m / 2 ) ))\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=51 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1; m=$2\n  if [ $n -gt $m\
    \ ]; then\n    return -1\n  fi\n  local sum=0\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    sum=$((sum + $i))\n  done\n  echo $(( $sum / $n ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m sum\n    read n m <<< \"$1\"\n\
    \    sum=$(( (n+m)/2 ))\n    echo $(( sum % 2 ))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local rounded_avg\n  local remainder\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_count\n  local\
    \ remainder_sum\n  local remainder_count\n  local remainder_sum\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_count\n  local remainder_sum\n  local\
    \ remainder_count\n  local remainder_sum\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_count\n  local\
    \ remainder_sum\n  local remainder_count\n  local remainder_sum\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_count\n  local remainder_sum\n  local\
    \ remainder_count\n  local remainder_sum\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_count\n  local\
    \ remainder_sum\n  local remainder_count\n  local remainder_sum\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_count\n  local remainder_sum\n  local\
    \ remainder_count\n  local remainder_sum\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_count\n  local\
    \ remainder_sum\n  local remainder_count\n  local remainder_sum\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_count\n  local remainder_sum\n  local\
    \ remainder_count\n  local remainder_sum\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_count\n  local\
    \ remainder_sum\n  local remainder_count\n  local remainder_sum\n  local remainder_count\n\
    \  local remainder_sum\n  local remainder_count\n  local remainder_sum\n  local\
    \ remainder_count\n  local remainder_sum\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_count\n  local\
    \ remainder_sum\n  local remainder_count\n  local remainder_sum\n  local remainder_count\n\
    \  local remainder_sum\n\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]; then\n    return -1\n  fi\n  local sum\n  sum=0\n  for i in $(seq 1 $n);\
    \ do\n    sum=$(( $sum + $i ))\n  done\n  echo $(( $sum / $n ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ ( m / 2 )))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local rounded_avg\n  \n  if [\
    \ $n -le $m ]; then\n    avg=$(( $n + $m ))\n    rounded_avg=$(( $avg / 2 ))\n\
    \  else\n    avg=$(( $m + $n ))\n    rounded_avg=$(( $avg / 2 ))\n  fi\n  \n \
    \ for i in $(seq 0 $(( $n - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n  \n\
    \  j=$(( $n - 1 ))\n  k=$(( $m - 1 ))\n  \n  for i in $(seq 0 $(( $n - 1 )));\
    \ do\n    sum=$(( $sum + $j ))\n    j=$(( $j - 1 ))\n  done\n  \n  for i in $(seq\
    \ 0 $(( $m - 1 ))); do\n    sum=$(( $sum + $k ))\n    k=$(( $k - 1 ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $n - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $m - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $n - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $m - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $n - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $m - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $n - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $m - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $n - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n\
    \  \n  for i in $(seq 0 $(( $m - 1 ))); \n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw4uiygq4.sh: line 82: syntax error near unexpected token `}''

    /tmp/tmpw4uiygq4.sh: line 82: `}''

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=${1:?'Input a positive integer'}\n\
    \  m=${2:?'Input a positive integer'}\n  (( n>m )) && return -1\n  (( n==m ))\
    \ && return 0\n  (( n<m )) && return -1\n  (( n>0 && m>0 )) && return $(( (n+m)/2\
    \ ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + i))\n  done\n  local\
    \ avg=$((sum / $n))\n  local rounded_avg=$(( $avg + $m ))\n  echo $rounded_avg\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n <= m ))\
    \ && return -1 || return $(( n + ( m / 2 ) ))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n>m )) &&\
    \ return -1\n  (( n<m )) && return -1\n  (( n==m )) && return 0\n  (( n==0 ))\
    \ && return 0\n  (( n==1 )) && return 0\n  (( n==2 )) && return 0\n  (( n==3 ))\
    \ && return 0\n  (( n==4 )) && return 0\n  (( n==5 )) && return 0\n  (( n==6 ))\
    \ && return 0\n  (( n==7 )) && return 0\n  (( n==8 )) && return 0\n  (( n==9 ))\
    \ && return 0\n  (( n==10 )) && return 0\n  (( n==11 )) && return 0\n  (( n==12\
    \ )) && return 0\n  (( n==13 )) && return 0\n  (( n==14 )) && return 0\n  (( n==15\
    \ )) && return 0\n  (( n==16 )) && return 0\n  (( n==17 )) && return 0\n  (( n==18\
    \ )) && return 0\n  (( n==19 )) && return 0\n  (( n==20 )) && return 0\n  (( n==21\
    \ )) && return 0\n  (( n==22 )) && return 0\n  (( n==23 )) && return 0\n  (( n==24\
    \ )) && return 0\n  (( n==25 )) && return 0\n  (( n==26 )) && return 0\n  (( n==27\
    \ )) && return 0\n  (( n==28 )) && return 0\n  (( n==29 )) && return 0\n  (( n==30\
    \ )) && return 0\n  (( n==31 )) && return 0\n  (( n==32 )) && return 0\n  (( n==33\
    \ )) && return 0\n  (( n==34 )) && return 0\n  (( n==35 )) && return 0\n  (( n==36\
    \ )) && return 0\n  (( n==37 )) && return 0\n  (( n==38 )) && return 0\n  (( n==39\
    \ )) && return 0\n  (( n==40 )) && return 0\n  (( n==41 )) && return \n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$(( $sum + $i ))\n  done\n  echo\
    \ $(( $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n >= m\
    \ ? n : m ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n =\
    \ n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( \n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzeybvrx7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzeybvrx7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$(echo \"$1\" | bc)\n  m=$(echo\
    \ \"$2\" | bc)\n  if [ \"$n\" -gt \"$m\" ]; then\n    return -1\n  fi\n  echo\
    \ \"$(( ($n + $m) / 2 ))\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    ((sum+=i))\n  done\n  ((sum+=m))\n\
    \  ((sum=sum%2))\n  echo $sum\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[\
    \ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\"\
    ) = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n\
    \  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local\
    \ sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n\
    \  local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n \
    \ local sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local\
    \ sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n\
    \  local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n \
    \ local sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local\
    \ sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n\
    \  local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n \
    \ local sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local\
    \ sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n\
    \  local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n \
    \ local sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local\
    \ sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n\
    \  local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n \
    \ local sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local\
    \ sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n\
    \  local sum97\n  local sum98\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n < m )) && return -1\n  ((\
    \ n == 0 )) && return 0\n  (( n == 1 )) && return 1\n  (( n == 2 )) && return\
    \ 2\n  (( n == 3 )) && return 3\n  (( n == 4 )) && return 4\n  (( n == 5 )) &&\
    \ return 5\n  (( n == 6 )) && return 6\n  (( n == 7 )) && return 7\n  (( n ==\
    \ 8 )) && return 8\n  (( n == 9 )) && return 9\n  (( n == 10 )) && return 10\n\
    \  (( n == 11 )) && return 11\n  (( n == 12 )) && return 12\n  (( n == 13 )) &&\
    \ return 13\n  (( n == 14 )) && return 14\n  (( n == 15 )) && return 15\n  ((\
    \ n == 16 )) && return 16\n  (( n == 17 )) && return 17\n  (( n == 18 )) && return\
    \ 18\n  (( n == 19 )) && return 19\n  (( n == 20 )) && return 20\n  (( n == 21\
    \ )) && return 21\n  (( n == 22 )) && return 22\n  (( n == 23 )) && return 23\n\
    \  (( n == 24 )) && return 24\n  (( n == 25 )) && return 25\n  (( n == 26 )) &&\
    \ return 26\n  (( n == 27 )) && return 27\n  (( n == 28 )) && return 28\n  ((\
    \ n == 29 )) && return 29\n  (( n == 30 )) && return 30\n  (( n == 31 )) && return\
    \ 31\n  (( n == 32 )) && return 32\n  (( n == 33 )) && return 33\n  (( n == 34\
    \ )) && return 34\n  (( n == 35 )) && return 35\n  (( n == 36 )) && return 36\n\
    \  (( n == 37 )) && return 37\n  (( n == 38 )) && return 38\n  (( n == 39 )) &&\
    \ return 39\n  (( n == 40 )) && return 40\n  (( n == 41 )) && return 41\n  ((\
    \ n == 42 )) && return 42\n  (( n == 43 )) && return 43\n  (( n == 44 )) && return\
    \ 44\n  (( n == 45 )) \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]\n    then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n    local\
    \ sum5=0\n    local sum6=0\n    local sum7=0\n    local sum8=0\n    local sum9=0\n\
    \    local sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n\
    \    local sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n\
    \    local sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n\
    \    local sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n\
    \    local sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n\
    \    local sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n\
    \    local sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n\
    \    local sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n\
    \    local sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n\
    \    local sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n\
    \    local sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n\
    \    local sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n\
    \    local sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n\
    \    local sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n\
    \    local sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n\
    \    local sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n\
    \    local sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n\
    \    local sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n\
    \    local sum82=0\n    local sum83=0\n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  local sum\n \
    \ sum=0\n  while [ \"$n\" -le \"$m\" ]; do\n    sum=$(( sum + n ))\n    n=$((\
    \ n + 1 ))\n  done\n  echo \"$(( sum / m ))\"\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n-- ))\n \
    \ (( m-- ))\n  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n\
    \  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n\
    \  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n\
    \  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n\
    \  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n\
    \  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n\
    \  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n\
    \  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n\
    \  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n\
    \  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n\
    \  (( m += n ))\n  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n\
    \  (( n %= 2 ))\n  (( m %= 2 ))\n  (( n += m ))\n  (( m += n ))\n  (( n %= 2 ))\n\
    \  (( m %= 2 ))\n  (( \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk50bjz7w.sh: line 76: unexpected EOF while looking for matching
    `)''

    /tmp/tmpk50bjz7w.sh: line 100: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + i))\n  done\n  local\
    \ avg=$((sum / $m))\n  local rounded_avg=$(( $avg + 0.5 ))\n  echo $rounded_avg\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdhstxuom.sh: line 19: 0 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]; then\n    return -1\n  fi\n  local sum\n  sum=0\n  for i in $(seq 1 $n);\
    \ do\n    sum=$(( $sum + $i ))\n  done\n  echo $(( $sum / $n ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local rounded_avg\n  local remainder\n\
    \  local remainder_sum\n  local remainder_count\n  local remainder_count2\n  local\
    \ remainder_count3\n  local remainder_count4\n  local remainder_count5\n  local\
    \ remainder_count6\n  local remainder_count7\n  local remainder_count8\n  local\
    \ remainder_count9\n  local remainder_count10\n  local remainder_count11\n  local\
    \ remainder_count12\n  local remainder_count13\n  local remainder_count14\n  local\
    \ remainder_count15\n  local remainder_count16\n  local remainder_count17\n  local\
    \ remainder_count18\n  local remainder_count19\n  local remainder_count20\n  local\
    \ remainder_count21\n  local remainder_count22\n  local remainder_count23\n  local\
    \ remainder_count24\n  local remainder_count25\n  local remainder_count26\n  local\
    \ remainder_count27\n  local remainder_count28\n  local remainder_count29\n  local\
    \ remainder_count30\n  local remainder_count31\n  local remainder_count32\n  local\
    \ remainder_count33\n  local remainder_count34\n  local remainder_count35\n  local\
    \ remainder_count36\n  local remainder_count37\n  local remainder_count38\n  local\
    \ remainder_count39\n  local remainder_count40\n  local remainder_count41\n  local\
    \ remainder_count42\n  local remainder_count43\n  local remainder_count44\n  local\
    \ remainder_count45\n  local remainder_count46\n  local remainder_count47\n  local\
    \ remainder_count48\n  local remainder_count49\n  local remainder_count50\n  local\
    \ remainder_count51\n  local remainder_count52\n  local remainder_count53\n  local\
    \ remainder_count54\n  local remainder_count55\n  local remainder_count56\n  local\
    \ remainder_count57\n  local remainder_count58\n  local remainder_count59\n  local\
    \ remainder_count60\n  local remainder_count61\n  local remainder_count62\n  local\
    \ remainder_count63\n  local remainder_count64\n  local remainder_count65\n  local\
    \ remainder_count66\n  \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=${1:?Please enter a positive\
    \ integer}\n  m=${2:?Please enter a positive integer}\n  (( n > m )) && return\
    \ -1\n  (( n == m )) && return 0\n  (( n <= m )) && return $(( n + ( n - m ) /\
    \ 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local rounded_avg\n  \n  if [\
    \ $n -le $m ]; then\n    avg=$(( $n / $m ))\n    rounded_avg=$(( $avg * 2 ))\n\
    \  else\n    avg=$(( $m / $n ))\n    rounded_avg=$(( $avg * 2 ))\n  fi\n  \n \
    \ for i in $(seq 0 $(( $n - 1 ))); do\n    sum=$(( $sum + $i ))\n  done\n  \n\
    \  for j in $(seq 0 $(( $m - 1 ))); do\n    sum=$(( $sum + $j ))\n  done\n  \n\
    \  for i in $(seq 0 $(( $n - 1 ))); do\n    for j in $(seq 0 $(( $m - 1 ))); do\n\
    \      k=$(( $i + $j ))\n      avg=$(( $avg + $k ))\n    done\n  done\n  \n  avg=$((\
    \ $avg / $n ))\n  rounded_avg=$(( $avg * 2 ))\n  \n  echo $rounded_avg\n}\n\n\
    candidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local avg\n    local remainder\n    \n    if [ $n -gt $m ];\
    \ then\n        echo \"-1\"\n        return\n    fi\n    \n    for i in $(seq\
    \ 1 $n); do\n        sum=$((sum+i))\n    done\n    avg=$((sum/$n))\n    remainder=$((m%$n))\n\
    \    \n    if [ $remainder -eq 0 ]; then\n        echo \"$avg\"\n    else\n  \
    \      echo \"$((avg+1))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n \
    \   [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"\
    977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1; m=$2\n  local sum\n  sum=0\n\
    \  while [ $n -le $m ]; do\n    sum=$(( $sum + $n ))\n    n=$(( $n + 1 ))\n  done\n\
    \  echo $(( $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n >= m\
    \ ? n : m ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n =\
    \ n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( \n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzeybvrx7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzeybvrx7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n = n <= m ))\
    \ && return -1\n  (( n = n >= m )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  (( n = n + (m - n) )) && return\
    \ -1\n  (( n = n + (m - n) )) && return -1\n  ((\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo7fbbl6s.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmpo7fbbl6s.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n++ ))\n  (( m++\
    \ ))\n  (( n >= m )) && return -1\n  (( n <= m )) && return $(( n / 2 + m / 2\
    \ ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m sum\n  n=$1\n  m=$2\n  sum=0\n \
    \ while [ $n -le $m ]; do\n    sum=$(($sum + $n))\n    n=$(($n + 1))\n  done\n\
    \  echo $(($sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    ((sum+=i))\n  done\n  ((sum+=n))\n\
    \  ((sum+=m))\n  ((sum=sum%2))\n  echo $((sum))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum+$i))\n  done\n  echo $((sum/${m}))\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  local avg\n \
    \ avg=0\n  local i\n  for i in $(seq 1 $m); do\n    avg=$(( $avg + $n ))\n  done\n\
    \  avg=$(( $avg / $m ))\n  echo \"$avg\"\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  local\
    \ avg=$((sum / $m))\n  local rounded_avg=$(( $avg + 0.5 ))\n  echo $rounded_avg\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp07h643e2.sh: line 19: 3 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local avg\n    local rounded_avg\n\
    \    local remainder\n    local remainder_sum\n    local remainder_count\n   \
    \ local remainder_count2\n    local remainder_count3\n    local remainder_count4\n\
    \    local remainder_count5\n    local remainder_count6\n    local remainder_count7\n\
    \    local remainder_count8\n    local remainder_count9\n    local remainder_count10\n\
    \    local remainder_count11\n    local remainder_count12\n    local remainder_count13\n\
    \    local remainder_count14\n    local remainder_count15\n    local remainder_count16\n\
    \    local remainder_count17\n    local remainder_count18\n    local remainder_count19\n\
    \    local remainder_count20\n    local remainder_count21\n    local remainder_count22\n\
    \    local remainder_count23\n    local remainder_count24\n    local remainder_count25\n\
    \    local remainder_count26\n    local remainder_count27\n    local remainder_count28\n\
    \    local remainder_count29\n    local remainder_count30\n    local remainder_count31\n\
    \    local remainder_count32\n    local remainder_count33\n    local remainder_count34\n\
    \    local remainder_count35\n    local remainder_count36\n    local remainder_count37\n\
    \    local remainder_count38\n    local remainder_count39\n    local remainder_count40\n\
    \    local remainder_count41\n    local remainder_count42\n    local remainder_count43\n\
    \    local remainder_count44\n    local remainder_count45\n    local remainder_count46\n\
    \    local remainder_count47\n    local remainder_count48\n    local remainder_count49\n\
    \    local remainder_count50\n    local remainder_count51\n    local remainder_count52\n\
    \    local remainder_count53\n    local remainder_count54\n    local remainder_count55\n\
    \    local remainder_count56\n    local remainder_count57\n    local remainder_count58\n\
    \    local remainder_count59\n    local remainder_count60\n    local remainder_count61\n\
    \    local remainder_count62\n    local remainder_count63\n    local remainder_count64\n\
    \    local remainder_count65\n    local remainder_count66\n    \n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n >= m ))\
    \ && return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n +\
    \ ( m - n ) / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  local\
    \ avg=$((sum / $m))\n  local rounded_avg=$(( $avg + 0.5 ))\n  echo $rounded_avg\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1ezkkrfc.sh: line 19: 0 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n >= m\
    \ ? n : m ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n =\
    \ n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n\
    \  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m :\
    \ n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >=\
    \ m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( n\
    \ = n >= m ? m : n ))\n  (( n = n >= m ? m : n ))\n  (( \n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzeybvrx7.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpzeybvrx7.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m sum\n  n=$1\n  m=$2\n  sum=0\n \
    \ while [ $n -le $m ]; do\n    sum=$(( $sum + $n ))\n    n=$(( $n + 1 ))\n  done\n\
    \  echo $(( $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum+i))\n  done\n  for i in\
    \ $(seq 1 $m); do\n    sum=$((sum+$i))\n  done\n  echo $((sum / $m))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    local\
    \ sum\n    sum=0\n    local i\n    for i in $(seq 1 $n); do\n        sum=$((sum\
    \ + $i))\n    done\n    echo $(( $sum / $n ))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local sum96\n  local sum97\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum+$i))\n  done\n  echo $((sum\
    \ / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local sum96\n  local sum97\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=${1:?'Please provide two positive\
    \ integers n and m'}\n  m=${2:?'Please provide two positive integers n and m'}\n\
    \  local sum\n  sum=0\n  while [ $n -le $m ]\n  do\n    sum=$(( $sum + $n ))\n\
    \    n=$(( $n + 1 ))\n  done\n  echo $(( $sum / $m ))\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]\n    then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$(echo \"$1\" | awk '{print\
    \ $1}')\n  m=$(echo \"$2\" | awk '{print $1}')\n  if [ \"$n\" -gt \"$m\" ]; then\n\
    \    return -1\n  fi\n  local sum\n  sum=0\n  for i in $(seq 1 \"$n\"); do\n \
    \   sum=$((sum + $i))\n  done\n  echo \"$((sum / $m))\"\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    read n m\n    local sum\n\
    \    sum=0\n    local i\n    for i in $(seq 1 $n); do\n        sum=$(( $sum +\
    \ $i ))\n    done\n    if [ $n -gt $m ]; then\n        echo \"-1\"\n    else\n\
    \        echo \"$(( $sum / $n ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=38 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=35 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        (( n+=m ))\n     \
    \   (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n \
    \       (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( n+=m ))\n\
    \        (( m+=n ))\n        (( n+=m ))\n        (( m+=n ))\n        (( \n}\n\n\
    candidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvrsnsw8j.sh: line 77: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvrsnsw8j.sh: line 101: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local remainder\n  \n  for i in $(seq 1 $n); do\n \
    \   sum=$((sum+i))\n  done\n  avg=$((sum / $n))\n  \n  remainder=$(( $(echo \"\
    $avg * $m\" | bc -l) - $avg ))\n  \n  if [ $remainder -eq 0 ]; then\n    echo\
    \ \"$avg\"\n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local rounded_avg\n  local remainder\n\
    \  local remainder_bin\n  local remainder_dec\n  local remainder_hex\n  local\
    \ remainder_oct\n  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n\
    \  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local\
    \ remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local remainder_dec\n\
    \  local remainder_hex\n  local remainder_oct\n  local remainder_dec\n  local\
    \ remainder_hex\n  local remainder_oct\n  local remainder_dec\n  local remainder_hex\n\
    \  local remainder_oct\n  local remainder_dec\n  local remainder_hex\n  local\
    \ remainder_oct\n  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n\
    \  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local\
    \ remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local remainder_dec\n\
    \  local remainder_hex\n  local remainder_oct\n  local remainder_dec\n  local\
    \ remainder_hex\n  local remainder_oct\n  local remainder_dec\n  local remainder_hex\n\
    \  local remainder_oct\n  local remainder_dec\n  local remainder_hex\n  local\
    \ remainder_oct\n  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n\
    \  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local\
    \ remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local remainder_dec\n\
    \  local remainder_hex\n  local remainder_oct\n  local remainder_dec\n  local\
    \ remainder_hex\n  local remainder_oct\n  local remainder_dec\n  local remainder_hex\n\
    \  local remainder_oct\n  local remainder_dec\n  local remainder_hex\n  local\
    \ remainder_oct\n  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n\
    \  local remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local\
    \ remainder_dec\n  local remainder_hex\n  local remainder_oct\n  local remainder_dec\n\
    \  local remainder_hex\n\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local m\n\
    \  local sum\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local m\n  local sum\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local m\n  local sum\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local m\n  local sum\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local m\n  local sum\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local m\n  local sum\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local m\n  local sum\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local m\n\
    \  local sum\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local m\n  local sum\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local m\n  local sum\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local m\n  local sum\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local m\n  local sum\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local m\n  local sum\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local m\n  local sum\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local m\n\
    \  local sum\n  local i\n  local j\n  local k\n  local l\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local sum96\n  local sum97\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    local\
    \ sum\n    sum=0\n    while (( n <= m )); do\n        sum=$(( $sum + $n ))\n \
    \       n=$(( $n + 1 ))\n    done\n    echo $(( $sum / $m ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n-- ))\n \
    \ (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n + m\
    \ ))\n  (( m = m - n ))\n  (( n = n / 2 ))\n  (( m = m / 2 ))\n  (( n = n | m\
    \ ))\n  (( n = n & m ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >>\
    \ 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n\
    \ >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n\
    \ = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  ((\
    \ n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n\
    \  (( n = n >> 1 ))\n  (( m = m >> 1 ))\n  (( n = n >> 1 ))\n  (( m = \n}\n\n\
    candidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp81hljz64.sh: line 69: unexpected EOF while looking for matching
    `)''

    /tmp/tmp81hljz64.sh: line 93: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum+i))\n  done\n  for i in\
    \ $(seq 1 $m); do\n    sum=$((sum+$i))\n  done\n  echo $((sum / $m))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum+i))\n  done\n  echo $((sum\
    \ / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]\n    then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n-- ))\n \
    \ (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\
    \  (( m-- ))\n  (( n-- ))\n  (( m-- ))\n  (( n-- ))\n\n}\n\ncandidate() {\n  \
    \  rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local sum1\n    local sum2\n    local sum3\n  \
    \  local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    local sum97\n    local \n}\n\n\
    candidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local count\n  local remainder\n\
    \  local remainder_count\n  local remainder_sum\n  local remainder_i\n  local\
    \ remainder_j\n  local remainder_k\n  local remainder_avg\n  local remainder_count\n\
    \  local remainder_i\n  local remainder_j\n  local remainder_k\n  local remainder_avg\n\
    \  local remainder_count\n  local remainder_i\n  local remainder_j\n  local remainder_k\n\
    \  local remainder_avg\n  local remainder_count\n  local remainder_i\n  local\
    \ remainder_j\n  local remainder_k\n  local remainder_avg\n  local remainder_count\n\
    \  local remainder_i\n  local remainder_j\n  local remainder_k\n  local remainder_avg\n\
    \  local remainder_count\n  local remainder_i\n  local remainder_j\n  local remainder_k\n\
    \  local remainder_avg\n  local remainder_count\n  local remainder_i\n  local\
    \ remainder_j\n  local remainder_k\n  local remainder_avg\n  local remainder_count\n\
    \  local remainder_i\n  local remainder_j\n  local remainder_k\n  local remainder_avg\n\
    \  local remainder_count\n  local remainder_i\n  local remainder_j\n  local remainder_k\n\
    \  local remainder_avg\n  local remainder_count\n  local remainder_i\n  local\
    \ remainder_j\n  local remainder_k\n  local remainder_avg\n  local remainder_count\n\
    \  local remainder_i\n  local remainder_j\n  local remainder_k\n  local remainder_avg\n\
    \  local remainder_count\n  local remainder_i\n  local remainder_j\n  local remainder_k\n\
    \  local remainder_avg\n  local remainder_count\n  local remainder_i\n  local\
    \ remainder_j\n  local remainder_k\n  local remainder_avg\n  local remainder_count\n\
    \  local remainder_i\n  local remainder_j\n  local remainder_k\n  local remainder_avg\n\
    \  local remainder_count\n  local remainder_i\n  local remainder_j\n  local remainder_k\n\
    \  local remainder_avg\n  local remainder_count\n  local remainder_i\n  local\
    \ \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n = n >= m ))\
    \ && return -1\n  (( n = n <= m )) && return 0\n  (( n = n + (m - n) )) && return\
    \ 1\n  (( n = n + (m - n) )) && return 0\n  (( n = n + (m - n) )) && return -1\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=57 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=55 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]\n    then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local sum96\n  local sum97\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]; then\n        echo \"-1\"\n    else\n        (( n = n + m ))\n\
    \        (( m = n - m ))\n        (( n = n / 2 ))\n        (( m = m / 2 ))\n \
    \       (( n = n * 2 ))\n        (( m = m * 2 ))\n        (( n = n + m ))\n  \
    \      (( m = n - m ))\n        (( n = n / 2 ))\n        (( m = m / 2 ))\n   \
    \     (( n = n * 2 ))\n        (( m = m * 2 ))\n        (( n = n + m ))\n    \
    \    (( m = n - m ))\n        (( n = n / 2 ))\n        (( m = m / 2 ))\n     \
    \   (( n = n * 2 ))\n        (( m = m * 2 ))\n        (( n = n + m ))\n      \
    \  (( m = n - m ))\n        (( n = n / 2 ))\n        (( m = m / 2 ))\n       \
    \ (( n = n * 2 ))\n        (( m = m * 2 ))\n        (( n = n + m ))\n        ((\
    \ m = n - m ))\n        (( n = n / 2 ))\n        (( m = m / 2 ))\n        (( n\
    \ = n * 2 ))\n        (( m = m * 2 ))\n        (( n = n + m ))\n        (( m =\
    \ n - m ))\n        (( n = n / 2 ))\n        (( m = m / 2 ))\n        (( n = n\
    \ * 2 ))\n        (( m = m * 2 ))\n        (( n = n + m ))\n        (( m = n -\
    \ m ))\n        (( n = n / 2 ))\n        (( m = m / 2 ))\n        (( n = n * 2\
    \ ))\n        (( m = m * 2 ))\n        (( n = n + m ))\n        (( m = n - m ))\n\
    \        (( n = n / 2 ))\n        (( m = m / 2 ))\n        (( n = n * 2 ))\n \
    \       (( m = m * 2 ))\n        (( n = n + m ))\n        (( m = n - m ))\n  \
    \      (( n = n / 2 ))\n        (( m = m / 2 ))\n        (( n = n * 2 ))\n   \
    \     (( m = m * 2 ))\n        (( n = n + m ))\n        (( m = n - m ))\n    \
    \    (( n = n / 2 ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphfni66vg.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmphfni66vg.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local avg\n    local rounded_avg\n\
    \    local remainder\n    local remainder_sum\n    local remainder_count\n   \
    \ local remainder_count2\n    local remainder_count3\n    local remainder_count4\n\
    \    local remainder_count5\n    local remainder_count6\n    local remainder_count7\n\
    \    local remainder_count8\n    local remainder_count9\n    local remainder_count10\n\
    \    local remainder_count11\n    local remainder_count12\n    local remainder_count13\n\
    \    local remainder_count14\n    local remainder_count15\n    local remainder_count16\n\
    \    local remainder_count17\n    local remainder_count18\n    local remainder_count19\n\
    \    local remainder_count20\n    local remainder_count21\n    local remainder_count22\n\
    \    local remainder_count23\n    local remainder_count24\n    local remainder_count25\n\
    \    local remainder_count26\n    local remainder_count27\n    local remainder_count28\n\
    \    local remainder_count29\n    local remainder_count30\n    local remainder_count31\n\
    \    local remainder_count32\n    local remainder_count33\n    local remainder_count34\n\
    \    local remainder_count35\n    local remainder_count36\n    local remainder_count37\n\
    \    local remainder_count38\n    local remainder_count39\n    local remainder_count40\n\
    \    local remainder_count41\n    local remainder_count42\n    local remainder_count43\n\
    \    local remainder_count44\n    local remainder_count45\n    local remainder_count46\n\
    \    local remainder_count47\n    local remainder_count48\n    local remainder_count49\n\
    \    local remainder_count50\n    local remainder_count51\n    local remainder_count52\n\
    \    local remainder_count53\n    local remainder_count54\n    local remainder_count55\n\
    \    local remainder_count56\n    local remainder_count57\n    local remainder_count58\n\
    \    local remainder_count59\n    local remainder_count60\n    local remainder_count61\n\
    \    local remainder_count62\n    local remainder_count63\n    local remainder_count64\n\
    \    local remainder_count65\n    local remainder_count66\n    \n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local avg\n    local rounded_avg\n    local remainder\n    local\
    \ remainder_binary\n    local remainder_binary_string\n    local remainder_binary_string_length\n\
    \    local remainder_binary_string_length_string\n    local remainder_binary_string_length_string_binary\n\
    \    local remainder_binary_string_length_string_binary_string\n    local remainder_binary_string_length_string_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length_binary_string_length\n\
    \    local remainder_binary_string_length_string\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]\n  then\n    return -1\n  fi\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n)\n  do\n    sum=$((sum+$i))\n  done\n  echo $((sum/n))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local remainder\n  local remainder_count\n  local remainder_sum\n\
    \  local remainder_count2\n  local remainder_sum2\n  local remainder_count3\n\
    \  local remainder_sum3\n  local remainder_count4\n  local remainder_sum4\n  local\
    \ remainder_count5\n  local remainder_sum5\n  local remainder_count6\n  local\
    \ remainder_sum6\n  local remainder_count7\n  local remainder_sum7\n  local remainder_count8\n\
    \  local remainder_sum8\n  local remainder_count9\n  local remainder_sum9\n  local\
    \ remainder_count10\n  local remainder_sum10\n  local remainder_count11\n  local\
    \ remainder_sum11\n  local remainder_count12\n  local remainder_sum12\n  local\
    \ remainder_count13\n  local remainder_sum13\n  local remainder_count14\n  local\
    \ remainder_sum14\n  local remainder_count15\n  local remainder_sum15\n  local\
    \ remainder_count16\n  local remainder_sum16\n  local remainder_count17\n  local\
    \ remainder_sum17\n  local remainder_count18\n  local remainder_sum18\n  local\
    \ remainder_count19\n  local remainder_sum19\n  local remainder_count20\n  local\
    \ remainder_sum20\n  local remainder_count21\n  local remainder_sum21\n  local\
    \ remainder_count22\n  local remainder_sum22\n  local remainder_count23\n  local\
    \ remainder_sum23\n  local remainder_count24\n  local remainder_sum24\n  local\
    \ remainder_count25\n  local remainder_sum25\n  local remainder_count26\n  local\
    \ remainder_sum26\n  local remainder_count27\n  local remainder_sum27\n  local\
    \ remainder_count28\n  local remainder_sum28\n  local remainder_count29\n  local\
    \ remainder_sum29\n  local remainder_count30\n  local remainder_sum30\n  local\
    \ remainder_count31\n  local remainder_sum31\n  local remainder_count32\n  local\
    \ remainder_sum32\n  local remainder_count33\n  local remainder_sum33\n  local\
    \ remainder_count34\n  local remainder_sum34\n  local remainder_count35\n  \n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n m\n    n=$1\n    m=$2\n    if [\
    \ $n -gt $m ]\n    then\n        echo \"-1\"\n    else\n        echo \"$(( (n+m)/2\
    \ ))\"\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n\
    \  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local\
    \ sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n\
    \  local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n \
    \ local sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local\
    \ sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n\
    \  local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n \
    \ local sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local\
    \ sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n\
    \  local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n \
    \ local sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local\
    \ sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n\
    \  local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n \
    \ local sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local\
    \ sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n\
    \  local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n \
    \ local sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local\
    \ sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n\
    \  local sum97\n  local sum98\n  local \n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local sum1\n  local sum2\n  local sum3\n \
    \ local sum4\n  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local\
    \ sum9\n  local sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n\
    \  local sum15\n  local sum16\n  local sum17\n  local sum18\n  local sum19\n \
    \ local sum20\n  local sum21\n  local sum22\n  local sum23\n  local sum24\n  local\
    \ sum25\n  local sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n\
    \  local sum31\n  local sum32\n  local sum33\n  local sum34\n  local sum35\n \
    \ local sum36\n  local sum37\n  local sum38\n  local sum39\n  local sum40\n  local\
    \ sum41\n  local sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n\
    \  local sum47\n  local sum48\n  local sum49\n  local sum50\n  local sum51\n \
    \ local sum52\n  local sum53\n  local sum54\n  local sum55\n  local sum56\n  local\
    \ sum57\n  local sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n\
    \  local sum63\n  local sum64\n  local sum65\n  local sum66\n  local sum67\n \
    \ local sum68\n  local sum69\n  local sum70\n  local sum71\n  local sum72\n  local\
    \ sum73\n  local sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n\
    \  local sum79\n  local sum80\n  local sum81\n  local sum82\n  local sum83\n \
    \ local sum84\n  local sum85\n  local sum86\n  local sum87\n  local sum88\n  local\
    \ sum89\n  local sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n\
    \  local sum95\n  local sum96\n  local sum\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  if ((\
    \ $n >= $m )); then\n    return -1\n  fi\n  echo $(( $sum / $m ))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n <= m ))\
    \ && return -1 || return $(( n + m / 2 ))\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local j\n    local k\n    local avg\n    local rounded_avg\n\
    \    \n    if [ $n -le $m ]\n    then\n        avg=$(( $n / $m ))\n        rounded_avg=$((\
    \ $avg * 2 ))\n        \n        if [ $n -le $m ]\n        then\n            rounded_avg=$((\
    \ $rounded_avg + $n ))\n        fi\n        \n        rounded_avg=$(( $rounded_avg\
    \ / 2 ))\n        \n        rounded_avg=$(( $rounded_avg + $m ))\n        \n \
    \       rounded_avg=$(( $rounded_avg / 2 ))\n        \n        rounded_avg=$((\
    \ $rounded_avg + $m ))\n        \n        rounded_avg=$(( $rounded_avg / 2 ))\n\
    \        \n        rounded_avg=$(( $rounded_avg + $m ))\n        \n        rounded_avg=$((\
    \ $rounded_avg / 2 ))\n        \n        rounded_avg=$(( $rounded_avg + $m ))\n\
    \        \n        rounded_avg=$(( $rounded_avg / 2 ))\n        \n        rounded_avg=$((\
    \ $rounded_avg + $m ))\n        \n        rounded_avg=$(( $rounded_avg / 2 ))\n\
    \        \n        rounded_avg=$(( $rounded_avg + $m ))\n        \n        rounded_avg=$((\
    \ $rounded_avg / 2 ))\n        \n        rounded_avg=$(( $rounded_avg + $m ))\n\
    \        \n        rounded_avg=$(( $rounded_avg / 2 ))\n        \n        rounded_avg=$((\
    \ $rounded_avg + $m ))\n        \n        rounded_avg=$(( $rounded_avg / 2 ))\n\
    \        \n        rounded_avg=$(( $rounded_avg + $m ))\n        \n        rounded_avg=$((\
    \ $rounded_avg / 2 ))\n        \n        rounded_avg=$(( $rounded_avg + $m ))\n\
    \        \n        rounded_avg=$(( $rounded_avg / 2 ))\n        \n        rounded_avg=$((\
    \ $rounded_avg + $m ))\n        \n        rounded_avg=$(( $rounded_avg / 2 ))\n\
    \        \n        rounded_avg=$(( $rounded_avg + $m ))\n        \n        rounded_avg=$((\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfufoi449.sh: line 78: unexpected EOF while looking for matching
    `)''

    /tmp/tmpfufoi449.sh: line 102: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n >= m )) && return -1\n  (( n <= m )) && return $(( n + ( m / 2 )))\n}\n\
    \ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n\
    \    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  (( n = n >= m ))\
    \ && return -1\n  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n\
    \  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n  (( n = n <=\
    \ m )) && return 0\n  (( n = n >= m )) && return -1\n  (( n = n <= m )) && return\
    \ 0\n  (( n = n >= m )) && return -1\n  (( n = n <= m )) && return 0\n  (( n =\
    \ n >= m )) && return -1\n  (( n = n <= m )) && return 0\n  (( n = n >= m )) &&\
    \ return -1\n  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n\
    \  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n  (( n = n <=\
    \ m )) && return 0\n  (( n = n >= m )) && return -1\n  (( n = n <= m )) && return\
    \ 0\n  (( n = n >= m )) && return -1\n  (( n = n <= m )) && return 0\n  (( n =\
    \ n >= m )) && return -1\n  (( n = n <= m )) && return 0\n  (( n = n >= m )) &&\
    \ return -1\n  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n\
    \  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n  (( n = n <=\
    \ m )) && return 0\n  (( n = n >= m )) && return -1\n  (( n = n <= m )) && return\
    \ 0\n  (( n = n >= m )) && return -1\n  (( n = n <= m )) && return 0\n  (( n =\
    \ n >= m )) && return -1\n  (( n = n <= m )) && return 0\n  (( n = n >= m )) &&\
    \ return -1\n  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n\
    \  (( n = n <= m )) && return 0\n  (( n = n >= m )) && return -1\n  (( n = n <=\
    \ m )) && return \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=8 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n > m )) &&\
    \ return -1\n  (( n == m )) && return $n\n  (( n <= m )) && return $(( n + ( m\
    \ / 2 ) ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  local\
    \ avg=$((sum / $m))\n  local rounded_avg=$(( $avg + 0.5 ))\n  echo $rounded_avg\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1ezkkrfc.sh: line 19: 0 + 0.5 : syntax error: invalid arithmetic
    operator (error token is ".5 ")

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  if [ $n -gt $m\
    \ ]\n  then\n    return -1\n  fi\n  local sum\n  sum=0\n  while [ $n -le $m ]\n\
    \  do\n    sum=$(( $sum + $n ))\n    n=$(( $n + 1 ))\n  done\n  echo $(( $sum\
    \ / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m sum\n  n=$1\n  m=$2\n  sum=0\n \
    \ while (( n <= m )); do\n    sum=$(( sum + n ))\n    n=$(( n + 1 ))\n  done\n\
    \  echo \"$(( sum / 2 ))\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local rounded_avg\n  local binary_string\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local binary_string_length\n  local binary_string_length\n  local binary_string_length\n\
    \  local \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$(( $sum + $i ))\n  done\n  echo\
    \ $(( $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  (( n = $1 ))\n  (( m = $2 ))\n\
    \  (( n >= m )) && return -1\n  (( n <= m )) && return $(( n + m ))\n  (( n >=\
    \ m )) && return -1\n  (( n <= m )) && return $(( n + ( m - n )))\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $n); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: -1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  read n m\n  local sum=0\n  local\
    \ i\n  for i in $(seq 1 $m); do\n    sum=$(( $sum + $i ))\n  done\n  echo $((\
    \ $sum / $m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660035640
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n++ ))\n \
    \ (( m++ ))\n  (( n >= m )) && return -1\n  (( n <= m )) && return $(( n / m +\
    \ n / m ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    sum=$((sum + $i))\n  done\n  echo\
    \ $((sum / $m))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local avg\n  local rounded_avg\n  \n  if [ $n -le $m ]\n  then\n\
    \    avg=$(( $n + $m ))\n    rounded_avg=$(( $avg / 2 ))\n    \n    for i in $(seq\
    \ 0 $(( $n - $m ))); do\n      sum=$(( $sum + $i ))\n    done\n    \n    rounded_avg=$((\
    \ $sum / $n ))\n    \n  else\n    rounded_avg=-1\n  fi\n  \n  echo $rounded_avg\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  local j\n  local k\n  local avg\n  local rounded_avg\n  \n  if [\
    \ $n -le $m ]; then\n    avg=$(( $n + $m ))\n    rounded_avg=$(( $avg / 2 ))\n\
    \  else\n    avg=$(( $n - $m ))\n    rounded_avg=$(( $avg / 2 ))\n  fi\n  \n \
    \ i=1\n  j=1\n  k=1\n  while [ $i -le $n ]; do\n    sum=$(( $sum + $i ))\n   \
    \ i=$(( $i + 1 ))\n  done\n  \n  while [ $j -le $m ]; do\n    sum=$(( $sum + $j\
    \ ))\n    j=$(( $j + 1 ))\n  done\n  \n  while [ $k -le $n ]; do\n    sum=$((\
    \ $sum + $k ))\n    k=$(( $k + 1 ))\n  done\n  \n  avg=$(( $sum / $n ))\n  \n\
    \  rounded_avg=$(( $avg / 2 ))\n  \n  echo $rounded_avg\n}\n\ncandidate() {\n\
    \    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"\
    5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate\
    \ \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\")\
    \ = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\"\
    \ ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n=$1\n  local m=$2\n  local sum=0\n\
    \  local i\n  for i in $(seq 1 $m); do\n    ((sum+=i))\n  done\n  ((sum+=n))\n\
    \  ((sum=sum%2))\n  echo $sum\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[\
    \ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\"\
    ) = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n  local n m\n  n=$1\n  m=$2\n  (( n = n % m\
    \ ))\n  (( m = m % n ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  ((\
    \ n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m\
    \ = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n =\
    \ n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m\
    \ + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n +\
    \ (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n\
    \ / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m /\
    \ 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2)\
    \ ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n\
    \  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n \
    \ (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  ((\
    \ m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n\
    \ = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m =\
    \ m + (n / 2) ))\n  (( n = n + (m / 2) ))\n  (( m = m + (n / 2) ))\n  (( n = n\
    \ + (m / 2) ))\n  (( m = m + (n \n}\n\ncandidate() {\n    rounded_avg \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n   \
    \ [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"\
    977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphko61at3.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmphko61at3.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660035635
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n#\n# $1 is an integer\n# $2\
    \ is an integer\nrounded_avg() {\n    local n=$1\n    local m=$2\n    local sum=0\n\
    \    local i\n    local avg\n    local remainder\n    local remainder_sum\n  \
    \  local remainder_count\n    local remainder_count2\n    local remainder_count3\n\
    \    local remainder_count4\n    local remainder_count5\n    local remainder_count6\n\
    \    local remainder_count7\n    local remainder_count8\n    local remainder_count9\n\
    \    local remainder_count10\n    local remainder_count11\n    local remainder_count12\n\
    \    local remainder_count13\n    local remainder_count14\n    local remainder_count15\n\
    \    local remainder_count16\n    local remainder_count17\n    local remainder_count18\n\
    \    local remainder_count19\n    local remainder_count20\n    local remainder_count21\n\
    \    local remainder_count22\n    local remainder_count23\n    local remainder_count24\n\
    \    local remainder_count25\n    local remainder_count26\n    local remainder_count27\n\
    \    local remainder_count28\n    local remainder_count29\n    local remainder_count30\n\
    \    local remainder_count31\n    local remainder_count32\n    local remainder_count33\n\
    \    local remainder_count34\n    local remainder_count35\n    local remainder_count36\n\
    \    local remainder_count37\n    local remainder_count38\n    local remainder_count39\n\
    \    local remainder_count40\n    local remainder_count41\n    local remainder_count42\n\
    \    local remainder_count43\n    local remainder_count44\n    local remainder_count45\n\
    \    local remainder_count46\n    local remainder_count47\n    local remainder_count48\n\
    \    local remainder_count49\n    local remainder_count50\n    local remainder_count51\n\
    \    local remainder_count52\n    local remainder_count53\n    local remainder_count54\n\
    \    local remainder_count55\n    local remainder_count56\n    local remainder_count57\n\
    \    local remainder_count58\n    local remainder_count59\n    local remainder_count60\n\
    \    local remainder_count61\n    local remainder_count62\n    local remainder_count63\n\
    \    local remainder_count64\n    local remainder_count65\n    local remainder_count66\n\
    \    local remainder_count67\n    local remainder_count68\n    \n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660035635

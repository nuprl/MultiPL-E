language: sh
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_34\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_index\n  local vowel_index2\n  local vowel_index3\n\
    \  local vowel_index4\n  local vowel_index5\n  local vowel_index6\n  local vowel_index7\n\
    \  local vowel_index8\n  local vowel_index9\n  local vowel_index10\n  local vowel_index11\n\
    \  local vowel_index12\n  local vowel_index13\n  local vowel_index14\n  local\
    \ vowel_index15\n  local vowel_index16\n  local vowel_index17\n  local vowel_index18\n\
    \  local vowel_index19\n  local vowel_index20\n  local vowel_index21\n  local\
    \ vowel_index22\n  local vowel_index23\n  local vowel_index24\n  local vowel_index25\n\
    \  local vowel_index26\n  local vowel_index27\n  local vowel_index28\n  local\
    \ vowel_index29\n  local vowel_index30\n  local vowel_index31\n  local vowel_index32\n\
    \  local vowel_index33\n  local vowel_index34\n  local vowel_index35\n  local\
    \ vowel_index36\n  local vowel_index37\n  local vowel_index38\n  local vowel_index39\n\
    \  local vowel_index40\n  local vowel_index41\n  local vowel_index42\n  local\
    \ vowel_index43\n  local vowel_index44\n  local vowel_index45\n  local vowel_index46\n\
    \  local vowel_index47\n  local vowel_index48\n  local vowel_index49\n  local\
    \ vowel_index50\n  local vowel_index51\n  local vowel_index52\n  local vowel_index53\n\
    \  local vowel_index54\n  local vowel_index55\n  local vowel_index56\n  local\
    \ vowel_index57\n  local vowel_index58\n  local vowel_index59\n  local vowel_index60\n\
    \  local vowel_index61\n  local vowel_index62\n  local vowel_index63\n  local\
    \ vowel_index64\n  local vowel_index65\n  local vowel_index66\n  local vowel_index67\n\
    \  local vowel_index68\n  local vowel_index69\n  local vowel_index70\n  local\
    \ vowel_index71\n  local vowel_index72\n  local vowel_index73\n  local vowel_index74\n\
    \  local vowel_index75\n  local vowel_index76\n  local vowel_index77\n  local\
    \ vowel_index78\n  local vowel_index79\n  local vowel_index80\n  local vowel_index81\n\
    \  local vowel_index82\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local vowels_count=${#vowels}\n  local vowels_string=${vowels:0:1}\n  local\
    \ vowels_string_count=${#vowels_string}\n  local vowels_string_index=$((${#1}\
    \ - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string}\
    \ - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local\
    \ vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1}\
    \ - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string}\
    \ - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local\
    \ vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1}\
    \ - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string}\
    \ - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local\
    \ vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1}\
    \ - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string}\
    \ - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local\
    \ vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1}\
    \ - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string}\
    \ - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local\
    \ vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1}\
    \ - ${#vowels_string} - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string}\
    \ - 1))\n  local vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local\
    \ vowels_string_index=$\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\";\n\
    \    local word=$1;\n    local vowel_found=\"\";\n    local vowel_found_index=0;\n\
    \    local vowel_index=0;\n    local consonant_found=\"\";\n    local consonant_found_index=0;\n\
    \    local consonant_index=0;\n    local consonant_count=$((${#word} % 2));\n\
    \    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word} % 2));\n    local consonant_count=$((${#word}\
    \ % 2));\n    local consonant_count=$((${#word\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa4xdwwcz.sh: line 48: unexpected EOF while looking for matching
    `)''

    /tmp/tmpa4xdwwcz.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=\"$1\"\n    local\
    \ vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_found=\"\"\n\
    \    local vowel_index=0\n    local vowel_position=0\n    local vowel_position_count=0\n\
    \    local vowel_position_index=0\n    local vowel_position_count=0\n    local\
    \ consonant_position=0\n    local consonant_position_count=0\n    local consonant_index=0\n\
    \    local consonant_count=0\n    local consonant_found=\"\"\n    local consonant_position_index=0\n\
    \    local consonant_position_count=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local string=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_length\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_length\n\
    \  local vowel_found_index\n  local vowel_found_length\n  local vowel_found_index\n\
    \  local vowel_found_length\n  local vowel_found_index\n  local vowel_found_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local word=$1\n  local vowel\n  local vowel_index\n  local vowel_length\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found_length\n \
    \ local vowel_found_count\n  local vowel_found_count1\n  local vowel_found_count2\n\
    \  local vowel_found_count3\n  local vowel_found_count4\n  local vowel_found_count5\n\
    \  local vowel_found_count6\n  local vowel_found_count7\n  local vowel_found_count8\n\
    \  local vowel_found_count9\n  local vowel_found_count10\n  local vowel_found_count11\n\
    \  local vowel_found_count12\n  local vowel_found_count13\n  local vowel_found_count14\n\
    \  local vowel_found_count15\n  local vowel_found_count16\n  local vowel_found_count17\n\
    \  local vowel_found_count18\n  local vowel_found_count19\n  local vowel_found_count20\n\
    \  local vowel_found_count21\n  local vowel_found_count22\n  local vowel_found_count23\n\
    \  local vowel_found_count24\n  local vowel_found_count25\n  local vowel_found_count26\n\
    \  local vowel_found_count27\n  local vowel_found_count28\n  local vowel_found_count29\n\
    \  local vowel_found_count30\n  local vowel_found_count31\n  local vowel_found_count32\n\
    \  local vowel_found_count33\n  local vowel_found_count34\n  local vowel_found_count35\n\
    \  local vowel_found_count36\n  local vowel_found_count37\n  local vowel_found_count38\n\
    \  local vowel_found_count39\n  local vowel_found_count40\n  local vowel_found_count41\n\
    \  local vowel_found_count42\n  local vowel_found_count43\n  local vowel_found_count44\n\
    \  local vowel_found_count45\n  local vowel_found_count46\n  local vowel_found_count47\n\
    \  local vowel_found_count48\n  local vowel_found_count49\n  local vowel_found_count50\n\
    \  local vowel_found_count51\n  local vowel_found_count52\n  local vowel_found_count53\n\
    \  local vowel_found_count54\n  local vowel_found_count55\n  local vowel_found_count56\n\
    \  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\";\n\
    \    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$((${#1}\
    \ - 1))\n    local vowels_count_3=$((${#1} - 2))\n    local vowels_count_4=$((${#1}\
    \ - 3))\n    local vowels_count_5=$((${#1} - 4))\n    local vowels_count_6=$((${#1}\
    \ - 5))\n    local vowels_count_7=$((${#1} - 6))\n    local vowels_count_8=$((${#1}\
    \ - 7))\n    local vowels_count_9=$((${#1} - 8))\n    local vowels_count_10=$((${#1}\
    \ - 9))\n    local vowels_count_11=$((${#1} - 10))\n    local vowels_count_12=$((${#1}\
    \ - 11))\n    local vowels_count_13=$((${#1} - 12))\n    local vowels_count_14=$((${#1}\
    \ - 13))\n    local vowels_count_15=$((${#1} - 14))\n    local vowels_count_16=$((${#1}\
    \ - 15))\n    local vowels_count_17=$((${#1} - 16))\n    local vowels_count_18=$((${#1}\
    \ - 17))\n    local vowels_count_19=$((${#1} - 18))\n    local vowels_count_20=$((${#1}\
    \ - 19))\n    local vowels_count_21=$((${#1} - 20))\n    local vowels_count_22=$((${#1}\
    \ - 21))\n    local vowels_count_23=$((${#1} - 22))\n    local vowels_count_24=$((${#1}\
    \ - 23))\n    local vowels_count_25=$((${#1} - 24))\n    local vowels_count_26=$((${#1}\
    \ - 25))\n    local vowels_count_27=$((${#1} - 26))\n    local vowels_count_28=$((${#1}\
    \ - 27))\n    local vowels_count_29=$((${#1} - 28))\n    local vowels_count_30=$((${#1}\
    \ - 29))\n    local vowels_count_31=$((${#1} - 30))\n    local vowels_count_32=$((${#1}\
    \ - 31))\n    local vowels_count_33=$((${#1} - 32))\n    local vowels_count_34=$((${#1}\
    \ - 33))\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y A E\
    \ I O U Y\"\n    local word=$1\n    local vowel_found=\"\"\n    local vowel_position=\"\
    \"\n    local vowel_position_count=0\n    local vowel_position_count2=0\n    local\
    \ vowel_position_count3=0\n    local vowel_position_count4=0\n    local vowel_position_count5=0\n\
    \    local vowel_position_count6=0\n    local vowel_position_count7=0\n    local\
    \ vowel_position_count8=0\n    local vowel_position_count9=0\n    local vowel_position_count10=0\n\
    \    local vowel_position_count11=0\n    local vowel_position_count12=0\n    local\
    \ vowel_position_count13=0\n    local vowel_position_count14=0\n    local vowel_position_count15=0\n\
    \    local vowel_position_count16=0\n    local vowel_position_count17=0\n    local\
    \ vowel_position_count18=0\n    local vowel_position_count19=0\n    local vowel_position_count20=0\n\
    \    local vowel_position_count21=0\n    local vowel_position_count22=0\n    local\
    \ vowel_position_count23=0\n    local vowel_position_count24=0\n    local vowel_position_count25=0\n\
    \    local vowel_position_count26=0\n    local vowel_position_count27=0\n    local\
    \ vowel_position_count28=0\n    local vowel_position_count29=0\n    local vowel_position_count30=0\n\
    \    local vowel_position_count31=0\n    local vowel_position_count32=0\n    local\
    \ vowel_position_count33=0\n    local vowel_position_count34=0\n    local vowel_position_count35=0\n\
    \    local vowel_position_count36=0\n    local vowel_position_count37=0\n    local\
    \ vowel_position_count38=0\n    local vowel_position_count39=0\n    local vowel_position_count40=0\n\
    \    local vowel_position_count41=0\n    local vowel_position_count42=0\n    local\
    \ vowel_position_count43=0\n    local vowel_position_count44=0\n    local vowel_position_count45=0\n\
    \    local vowel_position_count46=0\n    local vowel_position_count47=0\n    local\
    \ vowel_position_count48=0\n    local vowel_position_count49=0\n    local vowel_position_count50=0\n\
    \    local vowel_position_count51=0\n    local vowel_position_count52=0\n    local\
    \ vowel_position_count53\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local input=\"$1\"\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_found_index=0\n  local vowel_found_index2=0\n  local vowel_found2=\"\
    \"\n  local vowel_found2_index=0\n  local vowel_found2_index2=0\n  local vowel_found3=\"\
    \"\n  local vowel_found3_index=0\n  local vowel_found3_index2=0\n  local vowel_found4=\"\
    \"\n  local vowel_found4_index=0\n  local vowel_found4_index2=0\n  local vowel_found5=\"\
    \"\n  local vowel_found5_index=0\n  local vowel_found5_index2=0\n  local vowel_found6=\"\
    \"\n  local vowel_found6_index=0\n  local vowel_found6_index2=0\n  local vowel_found7=\"\
    \"\n  local vowel_found7_index=0\n  local vowel_found7_index2=0\n  local vowel_found8=\"\
    \"\n  local vowel_found8_index=0\n  local vowel_found8_index2=0\n  local vowel_found9=\"\
    \"\n  local vowel_found9_index=0\n  local vowel_found9_index2=0\n  local vowel_found10=\"\
    \"\n  local vowel_found10_index=0\n  local vowel_found10_index2=0\n  local vowel_found11=\"\
    \"\n  local vowel_found11_index=0\n  local vowel_found11_index2=0\n  local vowel_found12=\"\
    \"\n  local vowel_found12_index=0\n  local vowel_found12_index2=0\n  local vowel_found13=\"\
    \"\n  local vowel_found13_index=0\n  local vowel_found13_index2=0\n  local vowel_found14=\"\
    \"\n  local vowel_found14_index=0\n  local vowel_found14_index2=0\n  local vowel_found15=\"\
    \"\n  local vowel_found15_index=0\n  local vowel_found15_index2=0\n  local vowel_found16=\"\
    \"\n  local vowel_found16_index=0\n  local vowel_found16_index2=0\n  local vowel_found17=\"\
    \"\n  local vowel_found17_index=0\n  local vowel_found17_index2=0\n  local vowel_found18=\"\
    \"\n  local vowel_found18_index=0\n  local vowel_found18_index2=0\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ vowels_count=${#vowels}\n  local vowels_string=${vowels}\n  local vowels_string_length=${#vowels_string}\n\
    \  local vowels_string_length=$((${vowels_string_length} - 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length} + 1))\n  local vowels_string_length=$((${vowels_string_length}\
    \ + 1))\n  local vowels_string_length=$((${vowels_string_length} + 1))\n  local\
    \ vowels_string_length=$((${vowels_string_length\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcpd6noh5.sh: line 42: unexpected EOF while looking for matching
    `)''

    /tmp/tmpcpd6noh5.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=\"$1\"\n  local vowel\n  local vowel_pos\n  local vowel_pos2\n  local\
    \ vowel_pos3\n  local vowel_pos4\n  local vowel_pos5\n  local vowel_pos6\n  local\
    \ vowel_pos7\n  local vowel_pos8\n  local vowel_pos9\n  local vowel_pos10\n  local\
    \ vowel_pos11\n  local vowel_pos12\n  local vowel_pos13\n  local vowel_pos14\n\
    \  local vowel_pos15\n  local vowel_pos16\n  local vowel_pos17\n  local vowel_pos18\n\
    \  local vowel_pos19\n  local vowel_pos20\n  local vowel_pos21\n  local vowel_pos22\n\
    \  local vowel_pos23\n  local vowel_pos24\n  local vowel_pos25\n  local vowel_pos26\n\
    \  local vowel_pos27\n  local vowel_pos28\n  local vowel_pos29\n  local vowel_pos30\n\
    \  local vowel_pos31\n  local vowel_pos32\n  local vowel_pos33\n  local vowel_pos34\n\
    \  local vowel_pos35\n  local vowel_pos36\n  local vowel_pos37\n  local vowel_pos38\n\
    \  local vowel_pos39\n  local vowel_pos40\n  local vowel_pos41\n  local vowel_pos42\n\
    \  local vowel_pos43\n  local vowel_pos44\n  local vowel_pos45\n  local vowel_pos46\n\
    \  local vowel_pos47\n  local vowel_pos48\n  local vowel_pos49\n  local vowel_pos50\n\
    \  local vowel_pos51\n  local vowel_pos52\n  local vowel_pos53\n  local vowel_pos54\n\
    \  local vowel_pos55\n  local vowel_pos56\n  local vowel_pos57\n  local vowel_pos58\n\
    \  local vowel_pos59\n  local vowel_pos60\n  local vowel_pos61\n  local vowel_pos62\n\
    \  local vowel_pos63\n  local vowel_pos64\n  local vowel_pos65\n  local vowel_pos66\n\
    \  local vowel_pos67\n  local vowel_pos68\n  local vowel_pos69\n  local vowel_pos70\n\
    \  local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y A E\
    \ I O U Y\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ vowel_count=0\n  local vowel_found=\"\"\n  local vowel_position=0\n  local vowel_position2=0\n\
    \  local consonant_position=0\n  local consonant_position2=0\n  local consonant_found=\"\
    \"\n  local consonant_position3=0\n  local consonant_position4=0\n  local consonant_found2=\"\
    \"\n  local consonant_position5=0\n  local consonant_found3=\"\"\n  local consonant_position6=0\n\
    \  local consonant_found4=\"\"\n  local consonant_position7=0\n  local consonant_found5=\"\
    \"\n  local consonant_position8=0\n  local consonant_found6=\"\"\n  local consonant_position9=0\n\
    \  local consonant_found7=\"\"\n  local consonant_position10=0\n  local consonant_found8=\"\
    \"\n  local consonant_position11=0\n  local consonant_found9=\"\"\n  local consonant_position12=0\n\
    \  local consonant_found10=\"\"\n  local consonant_position13=0\n  local consonant_found11=\"\
    \"\n  local consonant_position14=0\n  local consonant_found12=\"\"\n  local consonant_position15=0\n\
    \  local consonant_found13=\"\"\n  local consonant_position16=0\n  local consonant_found14=\"\
    \"\n  local consonant_position17=0\n  local consonant_found15=\"\"\n  local consonant_position18=0\n\
    \  local consonant_found16=\"\"\n  local consonant_position19=0\n  local consonant_found17=\"\
    \"\n  local consonant_position20=0\n  local consonant_found18=\"\"\n  local consonant_position21=0\n\
    \  local consonant_found19=\"\"\n  local consonant_position22=0\n  local consonant_found20=\"\
    \"\n  local consonant_position23=0\n  local consonant_found21=\"\"\n  local consonant_position24=0\n\
    \  local consonant_found22=\"\"\n  local consonant_position25=0\n  local consonant_found23=\"\
    \"\n  local consonant_position26=0\n  local consonant_found24=\"\"\n  local consonant_position27=0\n\
    \  local consonant_found25=\"\"\n  local consonant_position28\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowel_found=\"\"\n    local vowel_index=0\n\
    \    local vowel_found_index=0\n    local vowel_found_index2=0\n    local vowel_found_index3=0\n\
    \    local vowel_found_index4=0\n    local vowel_found_index5=0\n    local vowel_found_index6=0\n\
    \    local vowel_found_index7=0\n    local vowel_found_index8=0\n    local vowel_found_index9=0\n\
    \    local vowel_found_index10=0\n    local vowel_found_index11=0\n    local vowel_found_index12=0\n\
    \    local vowel_found_index13=0\n    local vowel_found_index14=0\n    local vowel_found_index15=0\n\
    \    local vowel_found_index16=0\n    local vowel_found_index17=0\n    local vowel_found_index18=0\n\
    \    local vowel_found_index19=0\n    local vowel_found_index20=0\n    local vowel_found_index21=0\n\
    \    local vowel_found_index22=0\n    local vowel_found_index23=0\n    local vowel_found_index24=0\n\
    \    local vowel_found_index25=0\n    local vowel_found_index26=0\n    local vowel_found_index27=0\n\
    \    local vowel_found_index28=0\n    local vowel_found_index29=0\n    local vowel_found_index30=0\n\
    \    local vowel_found_index31=0\n    local vowel_found_index32=0\n    local vowel_found_index33=0\n\
    \    local vowel_found_index34=0\n    local vowel_found_index35=0\n    local vowel_found_index36=0\n\
    \    local vowel_found_index37=0\n    local vowel_found_index38=0\n    local vowel_found_index39=0\n\
    \    local vowel_found_index40=0\n    local vowel_found_index41=0\n    local vowel_found_index42=0\n\
    \    local vowel_found_index43=0\n    local vowel_found_index44=0\n    local vowel_found_index45=0\n\
    \    local vowel_found_index46=0\n    local vowel_found_index47=0\n    local vowel_found_index48=0\n\
    \    local vowel_found_index49=0\n    local vowel_found_index50=0\n    local vowel_found_index51=0\n\
    \    local vowel_found_index52=0\n    local vowel_found_index53=0\n    local \n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n    local\
    \ vowel_found=\"\"\n    local consonant_count=0\n    local consonant_index=0\n\
    \    local consonant_found=\"\"\n    local consonant_last=\"\"\n    local consonant_first=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_next=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_prev=\"\"\n    local consonant_found=\"\"\n    local consonant_next=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_prev=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_next=\"\"\n    local consonant_found=\"\"\n    local consonant_prev=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_next=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_prev=\"\"\n    local consonant_found=\"\"\n    local consonant_next=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_prev=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_next=\"\"\n    local consonant_found=\"\"\n    local consonant_prev=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_next=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_prev=\"\"\n    local consonant_found=\"\"\n    local consonant_next=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_prev=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_next=\"\"\n    local consonant_found=\"\"\n    local consonant_prev=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_next=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_prev=\"\"\n    local consonant_found=\"\"\n    local consonant_next=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_prev=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_next=\"\"\n    local consonant_found=\"\"\n    local consonant_prev=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_next=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_prev=\"\"\n    local consonant_found=\"\"\n    local consonant_next=\"\
    \"\n    local conson\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_pos\n    local vowel_pos2\n\
    \    local vowel_pos3\n    local vowel_pos4\n    local vowel_pos5\n    local vowel_pos6\n\
    \    local vowel_pos7\n    local vowel_pos8\n    local vowel_pos9\n    local vowel_pos10\n\
    \    local vowel_pos11\n    local vowel_pos12\n    local vowel_pos13\n    local\
    \ vowel_pos14\n    local vowel_pos15\n    local vowel_pos16\n    local vowel_pos17\n\
    \    local vowel_pos18\n    local vowel_pos19\n    local vowel_pos20\n    local\
    \ vowel_pos21\n    local vowel_pos22\n    local vowel_pos23\n    local vowel_pos24\n\
    \    local vowel_pos25\n    local vowel_pos26\n    local vowel_pos27\n    local\
    \ vowel_pos28\n    local vowel_pos29\n    local vowel_pos30\n    local vowel_pos31\n\
    \    local vowel_pos32\n    local vowel_pos33\n    local vowel_pos34\n    local\
    \ vowel_pos35\n    local vowel_pos36\n    local vowel_pos37\n    local vowel_pos38\n\
    \    local vowel_pos39\n    local vowel_pos40\n    local vowel_pos41\n    local\
    \ vowel_pos42\n    local vowel_pos43\n    local vowel_pos44\n    local vowel_pos45\n\
    \    local vowel_pos46\n    local vowel_pos47\n    local vowel_pos48\n    local\
    \ vowel_pos49\n    local vowel_pos50\n    local vowel_pos51\n    local vowel_pos52\n\
    \    local vowel_pos53\n    local vowel_pos54\n    local vowel_pos55\n    local\
    \ vowel_pos56\n    local vowel_pos57\n    local vowel_pos58\n    local vowel_pos59\n\
    \    local vowel_pos60\n    local vowel_pos61\n    local vowel_pos62\n    local\
    \ vowel_pos63\n    local vowel_pos64\n    local vowel_pos65\n    local vowel_pos66\n\
    \    local vowel_pos67\n    local vowel_pos68\n    local vowel_pos69\n    local\
    \ vowel_pos70\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local vowels_count=$(echo $vowels | wc -l)\n    local vowels_count_2=$((${#1}\
    \ - 1))\n    local vowels_count_3=$((${#1} - 2))\n    local vowels_count_4=$((${#1}\
    \ - 3))\n    local vowels_count_5=$((${#1} - 4))\n    local vowels_count_6=$((${#1}\
    \ - 5))\n    local vowels_count_7=$((${#1} - 6))\n    local vowels_count_8=$((${#1}\
    \ - 7))\n    local vowels_count_9=$((${#1} - 8))\n    local vowels_count_10=$((${#1}\
    \ - 9))\n    local vowels_count_11=$((${#1} - 10))\n    local vowels_count_12=$((${#1}\
    \ - 11))\n    local vowels_count_13=$((${#1} - 12))\n    local vowels_count_14=$((${#1}\
    \ - 13))\n    local vowels_count_15=$((${#1} - 14))\n    local vowels_count_16=$((${#1}\
    \ - 15))\n    local vowels_count_17=$((${#1} - 16))\n    local vowels_count_18=$((${#1}\
    \ - 17))\n    local vowels_count_19=$((${#1} - 18))\n    local vowels_count_20=$((${#1}\
    \ - 19))\n    local vowels_count_21=$((${#1} - 20))\n    local vowels_count_22=$((${#1}\
    \ - 21))\n    local vowels_count_23=$((${#1} - 22))\n    local vowels_count_24=$((${#1}\
    \ - 23))\n    local vowels_count_25=$((${#1} - 24))\n    local vowels_count_26=$((${#1}\
    \ - 25))\n    local vowels_count_27=$((${#1} - 26))\n    local vowels_count_28=$((${#1}\
    \ - 27))\n    local vowels_count_29=$((${#1} - 28))\n    local vowels_count_30=$((${#1}\
    \ - 29))\n    local vowels_count_31=$((${#1} - 30))\n    local vowels_count_32=$((${#1}\
    \ - 31))\n    local vowels_count_33=$((${#1} - 32))\n    local vowels_count_34=$((${#1}\
    \ - 33))\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowels_count=${#vowels[@]}\n  local vowel_found=\"\"\n  local vowel_position=0\n\
    \  local vowel_position_count=0\n  local vowel_position_index=0\n  local vowel_position_indexes=()\n\
    \  local vowel_position_indexes_count=${#vowel_position_indexes[@]}\n  local vowel_position_indexes_index=0\n\
    \  local vowel_position_indexes_indexes=()\n  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_index=()\n\
    \  local vowel_position_indexes_indexes_count=${#vowel_position_indexes_indexes_indexes[@]}\n\
    \  local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local word=$1\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_position=0\n  local vowel_position_index=0\n  local vowel_position_count=0\n\
    \  local vowel_position_count2=0\n  local vowel_position_count3=0\n  local vowel_position_count4=0\n\
    \  local vowel_position_count5=0\n  local vowel_position_count6=0\n  local vowel_position_count7=0\n\
    \  local vowel_position_count8=0\n  local vowel_position_count9=0\n  local vowel_position_count10=0\n\
    \  local vowel_position_count11=0\n  local vowel_position_count12=0\n  local vowel_position_count13=0\n\
    \  local vowel_position_count14=0\n  local vowel_position_count15=0\n  local vowel_position_count16=0\n\
    \  local vowel_position_count17=0\n  local vowel_position_count18=0\n  local vowel_position_count19=0\n\
    \  local vowel_position_count20=0\n  local vowel_position_count21=0\n  local vowel_position_count22=0\n\
    \  local vowel_position_count23=0\n  local vowel_position_count24=0\n  local vowel_position_count25=0\n\
    \  local vowel_position_count26=0\n  local vowel_position_count27=0\n  local vowel_position_count28=0\n\
    \  local vowel_position_count29=0\n  local vowel_position_count30=0\n  local vowel_position_count31=0\n\
    \  local vowel_position_count32=0\n  local vowel_position_count33=0\n  local vowel_position_count34=0\n\
    \  local vowel_position_count35=0\n  local vowel_position_count36=0\n  local vowel_position_count37=0\n\
    \  local vowel_position_count38=0\n  local vowel_position_count39=0\n  local vowel_position_count40=0\n\
    \  local vowel_position_count41=0\n  local vowel_position_count42=0\n  local vowel_position_count43=0\n\
    \  local vowel_position_count44=0\n  local vowel_position_count45=0\n  local vowel_position_count46=0\n\
    \  local vowel_position_count47=0\n  local vowel_position_count48=0\n  local vowel_position_count49=0\n\
    \  local vowel_position_count50=0\n  local vowel_position_count51=0\n  local \n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y AE II\
    \ OO UU\"\n  local word=$1\n  local vowel\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_index\n  local vowel_length\n  local vowel_length_index\n  local\
    \ vowel_length_count\n  local vowel_length_count_index\n  local vowel_length_count\n\
    \  local vowel_length_count2\n  local vowel_length_count2_index\n  local vowel_length_count2\n\
    \  local vowel_length_count3\n  local vowel_length_count3_index\n  local vowel_length_count3\n\
    \  local vowel_length_count4\n  local vowel_length_count4_index\n  local vowel_length_count4\n\
    \  local vowel_length_count5\n  local vowel_length_count5_index\n  local vowel_length_count5\n\
    \  local vowel_length_count6\n  local vowel_length_count6_index\n  local vowel_length_count6\n\
    \  local vowel_length_count7\n  local vowel_length_count7_index\n  local vowel_length_count7\n\
    \  local vowel_length_count8\n  local vowel_length_count8_index\n  local vowel_length_count8\n\
    \  local vowel_length_count9\n  local vowel_length_count9_index\n  local vowel_length_count9\n\
    \  local vowel_length_count10\n  local vowel_length_count10_index\n  local vowel_length_count10\n\
    \  local vowel_length_count11\n  local vowel_length_count11_index\n  local vowel_length_count11\n\
    \  local vowel_length_count12\n  local vowel_length_count12_index\n  local vowel_length_count12\n\
    \  local vowel_length_count13\n  local vowel_length_count13_index\n  local vowel_length_count13\n\
    \  local vowel_length_count14\n  local vowel_length_count14_index\n  local vowel_length_count14\n\
    \  local vowel_length_count15\n  local vowel_length_count15_index\n  local vowel_length_count15\n\
    \  local vowel_length_count16\n  local vowel_length_count16_index\n  local vowel_length_count16\n\
    \  local vowel_length_count17\n  local vowel_length_count17_index\n  local vowel_length_count17\n\
    \  local vowel_length_count18\n  local vowel_length_count18_index\n  local vowel_length_count18\n\
    \  local vowel_length\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local input=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n   \
    \ local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\"\
    \n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowels_count=${#vowels}\n  local vowel_found=\"\"\n  local vowel_found_index=0\n\
    \  local vowel_found_index2=0\n  local vowel_found_index3=0\n  local vowel_found_index4=0\n\
    \  local vowel_found_index5=0\n  local vowel_found_index6=0\n  local vowel_found_index7=0\n\
    \  local vowel_found_index8=0\n  local vowel_found_index9=0\n  local vowel_found_index10=0\n\
    \  local vowel_found_index11=0\n  local vowel_found_index12=0\n  local vowel_found_index13=0\n\
    \  local vowel_found_index14=0\n  local vowel_found_index15=0\n  local vowel_found_index16=0\n\
    \  local vowel_found_index17=0\n  local vowel_found_index18=0\n  local vowel_found_index19=0\n\
    \  local vowel_found_index20=0\n  local vowel_found_index21=0\n  local vowel_found_index22=0\n\
    \  local vowel_found_index23=0\n  local vowel_found_index24=0\n  local vowel_found_index25=0\n\
    \  local vowel_found_index26=0\n  local vowel_found_index27=0\n  local vowel_found_index28=0\n\
    \  local vowel_found_index29=0\n  local vowel_found_index30=0\n  local vowel_found_index31=0\n\
    \  local vowel_found_index32=0\n  local vowel_found_index33=0\n  local vowel_found_index34=0\n\
    \  local vowel_found_index35=0\n  local vowel_found_index36=0\n  local vowel_found_index37=0\n\
    \  local vowel_found_index38=0\n  local vowel_found_index39=0\n  local vowel_found_index40=0\n\
    \  local vowel_found_index41=0\n  local vowel_found_index42=0\n  local vowel_found_index43=0\n\
    \  local vowel_found_index44=0\n  local vowel_found_index45=0\n  local vowel_found_index46=0\n\
    \  local vowel_found_index47=0\n  local vowel_found_index48=0\n  local vowel_found_index49=0\n\
    \  local vowel_found_index50=0\n  local vowel_found_index51=0\n  local vowel_found_index52=0\n\
    \  local vowel_found_index53=0\n  local vowel_found_index54=0\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_count_2=$((${#1} - 1))\n\
    \    local vowels_count_3=$((${#1} - 2))\n    local vowels_count_4=$((${#1} -\
    \ 3))\n    local vowels_count_5=$((${#1} - 4))\n    local vowels_count_6=$((${#1}\
    \ - 5))\n    local vowels_count_7=$((${#1} - 6))\n    local vowels_count_8=$((${#1}\
    \ - 7))\n    local vowels_count_9=$((${#1} - 8))\n    local vowels_count_10=$((${#1}\
    \ - 9))\n    local vowels_count_11=$((${#1} - 10))\n    local vowels_count_12=$((${#1}\
    \ - 11))\n    local vowels_count_13=$((${#1} - 12))\n    local vowels_count_14=$((${#1}\
    \ - 13))\n    local vowels_count_15=$((${#1} - 14))\n    local vowels_count_16=$((${#1}\
    \ - 15))\n    local vowels_count_17=$((${#1} - 16))\n    local vowels_count_18=$((${#1}\
    \ - 17))\n    local vowels_count_19=$((${#1} - 18))\n    local vowels_count_20=$((${#1}\
    \ - 19))\n    local vowels_count_21=$((${#1} - 20))\n    local vowels_count_22=$((${#1}\
    \ - 21))\n    local vowels_count_23=$((${#1} - 22))\n    local vowels_count_24=$((${#1}\
    \ - 23))\n    local vowels_count_25=$((${#1} - 24))\n    local vowels_count_26=$((${#1}\
    \ - 25))\n    local vowels_count_27=$((${#1} - 26))\n    local vowels_count_28=$((${#1}\
    \ - 27))\n    local vowels_count_29=$((${#1} - 28))\n    local vowels_count_30=$((${#1}\
    \ - 29))\n    local vowels_count_31=$((${#1} - 30))\n    local vowels_count_32=$((${#1}\
    \ - 31))\n    local vowels_count_33=$((${#1} - 32))\n    local vowels_count_34=$((${#1}\
    \ - 33))\n    local vowels_count_35=$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_count=${#vowels}\n    local vowel_found=\"\"\n    local word=$1\n\
    \    local consonants=${word//[^a-zA-Z]}\n    local consonants_count=${#consonants}\n\
    \    local consonant_found=\"\"\n    local vowel_index=0\n    local consonant_index=0\n\
    \    local consonant_count=0\n    local consonant_found=\"\"\n    local vowel_found=\"\
    \"\n    local vowel_count=0\n    local consonant_found=\"\"\n    local consonant_count=0\n\
    \    local vowel_found=\"\"\n    local vowel_count=0\n    local consonant_found=\"\
    \"\n    local consonant_count=0\n    local vowel_found=\"\"\n    local vowel_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_count=0\n    local vowel_found=\"\
    \"\n    local vowel_count=0\n    local consonant_found=\"\"\n    local consonant_count=0\n\
    \    local vowel_found=\"\"\n    local vowel_count=0\n    local consonant_found=\"\
    \"\n    local consonant_count=0\n    local vowel_found=\"\"\n    local vowel_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_count=0\n    local vowel_found=\"\
    \"\n    local vowel_count=0\n    local consonant_found=\"\"\n    local consonant_count=0\n\
    \    local vowel_found=\"\"\n    local vowel_count=0\n    local consonant_found=\"\
    \"\n    local consonant_count=0\n    local vowel_found=\"\"\n    local vowel_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_count=0\n    local vowel_found=\"\
    \"\n    local vowel_count=0\n    local consonant_found=\"\"\n    local consonant_count=0\n\
    \    local vowel_found=\"\"\n    local vowel_count=0\n    local consonant_found=\"\
    \"\n    local consonant_count=0\n    local vowel_found=\"\"\n    local vowel_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_count=0\n    local vowel_found=\"\
    \"\n    local vowel_count=0\n    local consonant_found=\"\"\n    local consonant_count=0\n\
    \    local vowel_found=\"\"\n    local vowel_count=0\n    local consonant_found=\"\
    \"\n    local consonant_count=0\n    local vowel_found=\"\"\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${vowels}\n    local\
    \ vowels_string_count=${#vowels_string}\n    local vowels_string_index=0\n   \
    \ local vowels_string_index2=0\n    local vowels_string_index3=0\n    local vowels_string_index4=0\n\
    \    local vowels_string_index5=0\n    local vowels_string_index6=0\n    local\
    \ vowels_string_index7=0\n    local vowels_string_index8=0\n    local vowels_string_index9=0\n\
    \    local vowels_string_index10=0\n    local vowels_string_index11=0\n    local\
    \ vowels_string_index12=0\n    local vowels_string_index13=0\n    local vowels_string_index14=0\n\
    \    local vowels_string_index15=0\n    local vowels_string_index16=0\n    local\
    \ vowels_string_index17=0\n    local vowels_string_index18=0\n    local vowels_string_index19=0\n\
    \    local vowels_string_index20=0\n    local vowels_string_index21=0\n    local\
    \ vowels_string_index22=0\n    local vowels_string_index23=0\n    local vowels_string_index24=0\n\
    \    local vowels_string_index25=0\n    local vowels_string_index26=0\n    local\
    \ vowels_string_index27=0\n    local vowels_string_index28=0\n    local vowels_string_index29=0\n\
    \    local vowels_string_index30=0\n    local vowels_string_index31=0\n    local\
    \ vowels_string_index32=0\n    local vowels_string_index33=0\n    local vowels_string_index34=0\n\
    \    local vowels_string_index35=0\n    local vowels_string_index36=0\n    local\
    \ vowels_string_index37=0\n    local vowels_string_index38=0\n    local vowels_string_index39=0\n\
    \    local vowels_string_index40=0\n    local vowels_string_index41=0\n    local\
    \ vowels_string_index42=0\n    local vowels_string_index43=0\n    local vowels_string_index44=0\n\
    \    local vowels_string_index45=0\n    local vowels_string_index46=0\n    local\
    \ vowels_string_index47=0\n    local vowels_string_index48=0\n    local vowels_string_index49=0\n\
    \    local vowels_string_index50=0\n    local vowels_string_index51=0\n    local\
    \ vowels_string_index52=0\n    local vowel\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_length\n  local\
    \ vowel_found\n  local vowel_found_index\n  local vowel_found_index2\n  local\
    \ vowel_found_index3\n  local vowel_found_index4\n  local vowel_found_index5\n\
    \  local vowel_found_index6\n  local vowel_found_index7\n  local vowel_found_index8\n\
    \  local vowel_found_index9\n  local vowel_found_index10\n  local vowel_found_index11\n\
    \  local vowel_found_index12\n  local vowel_found_index13\n  local vowel_found_index14\n\
    \  local vowel_found_index15\n  local vowel_found_index16\n  local vowel_found_index17\n\
    \  local vowel_found_index18\n  local vowel_found_index19\n  local vowel_found_index20\n\
    \  local vowel_found_index21\n  local vowel_found_index22\n  local vowel_found_index23\n\
    \  local vowel_found_index24\n  local vowel_found_index25\n  local vowel_found_index26\n\
    \  local vowel_found_index27\n  local vowel_found_index28\n  local vowel_found_index29\n\
    \  local vowel_found_index30\n  local vowel_found_index31\n  local vowel_found_index32\n\
    \  local vowel_found_index33\n  local vowel_found_index34\n  local vowel_found_index35\n\
    \  local vowel_found_index36\n  local vowel_found_index37\n  local vowel_found_index38\n\
    \  local vowel_found_index39\n  local vowel_found_index40\n  local vowel_found_index41\n\
    \  local vowel_found_index42\n  local vowel_found_index43\n  local vowel_found_index44\n\
    \  local vowel_found_index45\n  local vowel_found_index46\n  local vowel_found_index47\n\
    \  local vowel_found_index48\n  local vowel_found_index49\n  local vowel_found_index50\n\
    \  local vowel_found_index51\n  local vowel_found_index52\n  local vowel_found_index53\n\
    \  local vowel_found_index54\n  local vowel_found_index55\n  local vowel_found_index56\n\
    \  local vowel_found_index57\n  local vowel_found_index58\n  local vowel_found_index59\n\
    \  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local input=\"$1\"\n  local vowel\n  local output\n  local i\n  local j\n  local\
    \ len\n  local len2\n  local len3\n  local len4\n  local len5\n  local len6\n\
    \  local len7\n  local len8\n  local len9\n  local len10\n  local len11\n  local\
    \ len12\n  local len13\n  local len14\n  local len15\n  local len16\n  local len17\n\
    \  local len18\n  local len19\n  local len20\n  local len21\n  local len22\n \
    \ local len23\n  local len24\n  local len25\n  local len26\n  local len27\n  local\
    \ len28\n  local len29\n  local len30\n  local len31\n  local len32\n  local len33\n\
    \  local len34\n  local len35\n  local len36\n  local len37\n  local len38\n \
    \ local len39\n  local len40\n  local len41\n  local len42\n  local len43\n  local\
    \ len44\n  local len45\n  local len46\n  local len47\n  local len48\n  local len49\n\
    \  local len50\n  local len51\n  local len52\n  local len53\n  local len54\n \
    \ local len55\n  local len56\n  local len57\n  local len58\n  local len59\n  local\
    \ len60\n  local len61\n  local len62\n  local len63\n  local len64\n  local len65\n\
    \  local len66\n  local len67\n  local len68\n  local len69\n  local len70\n \
    \ local len71\n  local len72\n  local len73\n  local len74\n  local len75\n  local\
    \ len76\n  local len77\n  local len78\n  local len79\n  local len80\n  local len81\n\
    \  local len82\n  local len83\n  local len84\n  local len85\n  local len86\n \
    \ local len87\n  local len88\n  local len89\n  local len90\n  local len91\n  local\
    \ len92\n  local len93\n  local len94\n  local len95\n  local len96\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y AE II\
    \ OO UU\"\n  local vowels_count=$(echo $vowels | wc -w)\n  local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_3=$(echo $vowels | wc -w)\n  local vowels_count_4=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_5=$(echo $vowels | wc -w)\n  local vowels_count_6=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_7=$(echo $vowels | wc -w)\n  local vowels_count_8=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_9=$(echo $vowels | wc -w)\n  local vowels_count_10=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_11=$(echo $vowels | wc -w)\n  local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_13=$(echo $vowels | wc -w)\n  local vowels_count_14=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_15=$(echo $vowels | wc -w)\n  local vowels_count_16=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_17=$(echo $vowels | wc -w)\n  local vowels_count_18=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_19=$(echo $vowels | wc -w)\n  local vowels_count_20=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_21=$(echo $vowels | wc -w)\n  local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_23=$(echo $vowels | wc -w)\n  local vowels_count_24=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_25=$(echo $vowels | wc -w)\n  local vowels_count_26=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_27=$(echo $vowels | wc -w)\n  local vowels_count_28=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_29=$(echo $vowels | wc -w)\n  local vowels_count_30=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_31=$(echo $vowels | wc -w)\n  local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n  local vowels_count_33=$(echo $vowels | wc -w)\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${1:-}\n    local\
    \ vowels_string_length=${#vowels_string}\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\";\n\
    \    local string=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n \
    \   local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found2=\"\"\n    local vowel_found2_index=0\n    local vowel_found2_index2=0\n\
    \    local vowel_found3=\"\"\n    local vowel_found3_index=0\n    local vowel_found3_index2=0\n\
    \    local vowel_found4=\"\"\n    local vowel_found4_index=0\n    local vowel_found4_index2=0\n\
    \    local vowel_found5=\"\"\n    local vowel_found5_index=0\n    local vowel_found5_index2=0\n\
    \    local vowel_found6=\"\"\n    local vowel_found6_index=0\n    local vowel_found6_index2=0\n\
    \    local vowel_found7=\"\"\n    local vowel_found7_index=0\n    local vowel_found7_index2=0\n\
    \    local vowel_found8=\"\"\n    local vowel_found8_index=0\n    local vowel_found8_index2=0\n\
    \    local vowel_found9=\"\"\n    local vowel_found9_index=0\n    local vowel_found9_index2=0\n\
    \    local vowel_found10=\"\"\n    local vowel_found10_index=0\n    local vowel_found10_index2=0\n\
    \    local vowel_found11=\"\"\n    local vowel_found11_index=0\n    local vowel_found11_index2=0\n\
    \    local vowel_found12=\"\"\n    local vowel_found12_index=0\n    local vowel_found12_index2=0\n\
    \    local vowel_found13=\"\"\n    local vowel_found13_index=0\n    local vowel_found13_index2=0\n\
    \    local vowel_found14=\"\"\n    local vowel_found14_index=0\n    local vowel_found14_index2=0\n\
    \    local vowel_found15=\"\"\n    local vowel_found15_index=0\n    local vowel_found15_index2=0\n\
    \    local vowel_found16=\"\"\n    local vowel_found16_index=0\n    local vowel_found16_index2=0\n\
    \    local vowel_found17=\"\"\n    local vowel_found17_index=0\n    local vowel_found17_index2=0\n\
    \    local vowel_found18=\"\"\n    local vowel_found18_index=0\n    local vowel_found18_index2=0\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local input=\"$1\"\n    local vowel\n    local vowel_count\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel\n    local vowel_count\n    local vowel_index\n\
    \    local vowel_found\n    vowel_count=0\n    vowel_index=$((${#word} - 1))\n\
    \    while [[ ${vowel_index} -gt 0 ]]; do\n        vowel=${word:$vowel_index:1}\n\
    \        vowel_found=0\n        for vowel_letter in $vowels; do\n            if\
    \ [[ $vowel == $vowel_letter ]]; then\n                vowel_found=1\n       \
    \         break\n            fi\n        done\n        if [[ $vowel_found == 0\
    \ ]]; then\n            vowel_count=$((${vowel_count} + 1))\n        fi\n    \
    \    vowel_index=$((${vowel_index} - 1))\n    done\n    if [[ ${vowel_count} -gt\
    \ 0 ]]; then\n        vowel=${word:$((${#word} - 1)):1}\n    fi\n    echo \"$vowel\"\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel_found=\"\"\n    local vowel_index=0\n    local\
    \ vowel_position=0\n    local consonant_position=0\n    local consonant_index=0\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    \    local consonant_length=$((${#word} / 2))\n    local consonant_found=\"\"\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y A E\
    \ I O U Y\"\n    local vowel_found=\"\"\n    local vowel_position=\"\"\n    local\
    \ vowel_position_count=0\n    local vowel_position_count2=0\n    local vowel_position_count3=0\n\
    \    local vowel_position_count4=0\n    local vowel_position_count5=0\n    local\
    \ vowel_position_count6=0\n    local vowel_position_count7=0\n    local vowel_position_count8=0\n\
    \    local vowel_position_count9=0\n    local vowel_position_count10=0\n    local\
    \ vowel_position_count11=0\n    local vowel_position_count12=0\n    local vowel_position_count13=0\n\
    \    local vowel_position_count14=0\n    local vowel_position_count15=0\n    local\
    \ vowel_position_count16=0\n    local vowel_position_count17=0\n    local vowel_position_count18=0\n\
    \    local vowel_position_count19=0\n    local vowel_position_count20=0\n    local\
    \ vowel_position_count21=0\n    local vowel_position_count22=0\n    local vowel_position_count23=0\n\
    \    local vowel_position_count24=0\n    local vowel_position_count25=0\n    local\
    \ vowel_position_count26=0\n    local vowel_position_count27=0\n    local vowel_position_count28=0\n\
    \    local vowel_position_count29=0\n    local vowel_position_count30=0\n    local\
    \ vowel_position_count31=0\n    local vowel_position_count32=0\n    local vowel_position_count33=0\n\
    \    local vowel_position_count34=0\n    local vowel_position_count35=0\n    local\
    \ vowel_position_count36=0\n    local vowel_position_count37=0\n    local vowel_position_count38=0\n\
    \    local vowel_position_count39=0\n    local vowel_position_count40=0\n    local\
    \ vowel_position_count41=0\n    local vowel_position_count42=0\n    local vowel_position_count43=0\n\
    \    local vowel_position_count44=0\n    local vowel_position_count45=0\n    local\
    \ vowel_position_count46=0\n    local vowel_position_count47=0\n    local vowel_position_count48=0\n\
    \    local vowel_position_count49=0\n    local vowel_position_count50=0\n    local\
    \ vowel_position_count51=0\n    local vowel_position_count52=0\n    local vowel_position_count53=0\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local string=\"$1\"\n  local vowel\n  local count\n  local vowel_index\n  local\
    \ vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_index\n  local vowel_found\n  local vowel_found_index\n  local\
    \ vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_index\n  \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local vowels_count=$(echo \"$vowels\" | tr ' ' '\\n' | wc -l)\n  local vowels_count_2=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -u | wc -l)\n  local vowels_count_3=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | head -1 | wc -l)\n  local vowels_count_4=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | tail -1 | wc -l)\n  local vowels_count_5=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | head -2 | wc -l)\n  local vowels_count_6=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | tail -2 | wc -l)\n  local vowels_count_7=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | head -3 | wc -l)\n  local vowels_count_8=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | tail -3 | wc -l)\n  local vowels_count_9=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | head -4 | wc -l)\n  local vowels_count_10=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | tail -4 | wc -l)\n  local vowels_count_11=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | head -5 | wc -l)\n  local vowels_count_12=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | tail -5 | wc -l)\n  local vowels_count_13=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | head -6 | wc -l)\n  local vowels_count_14=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | tail -6 | wc -l)\n  local vowels_count_15=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | head -7 | wc -l)\n  local vowels_count_16=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 | tail -7 | wc -l)\n  local vowels_count_17=$(echo\
    \ \"$vowels\" | tr ' ' '\\n' | sort -k 2 \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_z9jhdr7.sh: line 28: unexpected EOF while looking for matching
    `)''

    /tmp/tmp_z9jhdr7.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_found_index=0\n  local vowel_found_index2=0\n  local vowel_found_index3=0\n\
    \  local vowel_found_index4=0\n  local vowel_found_index5=0\n  local vowel_found_index6=0\n\
    \  local vowel_found_index7=0\n  local vowel_found_index8=0\n  local vowel_found_index9=0\n\
    \  local vowel_found_index10=0\n  local vowel_found_index11=0\n  local vowel_found_index12=0\n\
    \  local vowel_found_index13=0\n  local vowel_found_index14=0\n  local vowel_found_index15=0\n\
    \  local vowel_found_index16=0\n  local vowel_found_index17=0\n  local vowel_found_index18=0\n\
    \  local vowel_found_index19=0\n  local vowel_found_index20=0\n  local vowel_found_index21=0\n\
    \  local vowel_found_index22=0\n  local vowel_found_index23=0\n  local vowel_found_index24=0\n\
    \  local vowel_found_index25=0\n  local vowel_found_index26=0\n  local vowel_found_index27=0\n\
    \  local vowel_found_index28=0\n  local vowel_found_index29=0\n  local vowel_found_index30=0\n\
    \  local vowel_found_index31=0\n  local vowel_found_index32=0\n  local vowel_found_index33=0\n\
    \  local vowel_found_index34=0\n  local vowel_found_index35=0\n  local vowel_found_index36=0\n\
    \  local vowel_found_index37=0\n  local vowel_found_index38=0\n  local vowel_found_index39=0\n\
    \  local vowel_found_index40=0\n  local vowel_found_index41=0\n  local vowel_found_index42=0\n\
    \  local vowel_found_index43=0\n  local vowel_found_index44=0\n  local vowel_found_index45=0\n\
    \  local vowel_found_index46=0\n  local vowel_found_index47=0\n  local vowel_found_index48=0\n\
    \  local vowel_found_index49=0\n  local vowel_found_index50=0\n  local vowel_found_index51=0\n\
    \  local vowel_found_index52=0\n  local vowel_found_index53=0\n  \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ vowels_count=${#vowels}\n  local vowels_string=${vowels:0:1}\n  local vowels_string_count=${#vowels_string}\n\
    \  local vowels_string_index=$((${#1} - ${#vowels_string} - 1))\n  local vowels_string_index_count=${#vowels_string_index}\n\
    \  local vowels_string_index_count=$((${#1} - ${#vowels_string_index} - 1))\n\
    \  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count} -\
    \ 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - 1))\n  local vowels_string_index_count=$((${#1} - ${#vowels_string_index_count}\
    \ - \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpedavayzp.sh: line 35: unexpected EOF while looking for matching
    `)''

    /tmp/tmpedavayzp.sh: line 60: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local vowels_count=${#vowels}\n    local vowels_count_2=$((${#1}-1))\n  \
    \  local vowels_count_3=$((${#1}-2))\n    local vowels_count_4=$((${#1}-3))\n\
    \    local vowels_count_5=$((${#1}-4))\n    local vowels_count_6=$((${#1}-5))\n\
    \    local vowels_count_7=$((${#1}-6))\n    local vowels_count_8=$((${#1}-7))\n\
    \    local vowels_count_9=$((${#1}-8))\n    local vowels_count_10=$((${#1}-9))\n\
    \    local vowels_count_11=$((${#1}-10))\n    local vowels_count_12=$((${#1}-11))\n\
    \    local vowels_count_13=$((${#1}-12))\n    local vowels_count_14=$((${#1}-13))\n\
    \    local vowels_count_15=$((${#1}-14))\n    local vowels_count_16=$((${#1}-15))\n\
    \    local vowels_count_17=$((${#1}-16))\n    local vowels_count_18=$((${#1}-17))\n\
    \    local vowels_count_19=$((${#1}-18))\n    local vowels_count_20=$((${#1}-19))\n\
    \    local vowels_count_21=$((${#1}-20))\n    local vowels_count_22=$((${#1}-21))\n\
    \    local vowels_count_23=$((${#1}-22))\n    local vowels_count_24=$((${#1}-23))\n\
    \    local vowels_count_25=$((${#1}-24))\n    local vowels_count_26=$((${#1}-25))\n\
    \    local vowels_count_27=$((${#1}-26))\n    local vowels_count_28=$((${#1}-27))\n\
    \    local vowels_count_29=$((${#1}-28))\n    local vowels_count_30=$((${#1}-29))\n\
    \    local vowels_count_31=$((${#1}-30))\n    local vowels_count_32=$((${#1}-31))\n\
    \    local vowels_count_33=$((${#1}-32))\n    local vowels_count_34=$((${#1}-33))\n\
    \    local vowels_count_35=$((${#1}-34))\n    local vowel\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=$1\n  local vowel_count=0\n  local vowel_found=\"\"\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_index=0\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local consonant_found=\"\
    \"\n  local consonant_found=\"\"\n  local consonant_found=\"\"\n  local \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ input=\"$1\"\n  local vowel\n  local output\n  local i\n  local j\n  local len\n\
    \  local len2\n  local len3\n  local len4\n  local len5\n  local len6\n  local\
    \ len7\n  local len8\n  local len9\n  local len10\n  local len11\n  local len12\n\
    \  local len13\n  local len14\n  local len15\n  local len16\n  local len17\n \
    \ local len18\n  local len19\n  local len20\n  local len21\n  local len22\n  local\
    \ len23\n  local len24\n  local len25\n  local len26\n  local len27\n  local len28\n\
    \  local len29\n  local len30\n  local len31\n  local len32\n  local len33\n \
    \ local len34\n  local len35\n  local len36\n  local len37\n  local len38\n  local\
    \ len39\n  local len40\n  local len41\n  local len42\n  local len43\n  local len44\n\
    \  local len45\n  local len46\n  local len47\n  local len48\n  local len49\n \
    \ local len50\n  local len51\n  local len52\n  local len53\n  local len54\n  local\
    \ len55\n  local len56\n  local len57\n  local len58\n  local len59\n  local len60\n\
    \  local len61\n  local len62\n  local len63\n  local len64\n  local len65\n \
    \ local len66\n  local len67\n  local len68\n  local len69\n  local len70\n  local\
    \ len71\n  local len72\n  local len73\n  local len74\n  local len75\n  local len76\n\
    \  local len77\n  local len78\n  local len79\n  local len80\n  local len81\n \
    \ local len82\n  local len83\n  local len84\n  local len85\n  local len86\n  local\
    \ len87\n  local len88\n  local len89\n  local len90\n  local len91\n  local len92\n\
    \  local len93\n  local len94\n  local len95\n  local len96\n  \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${1:-}\n    local\
    \ vowels_string_length=${#vowels_string}\n    local vowels_string_end=${vowels_string_length}\n\
    \    local vowels_string_start=$((vowels_string_length-1))\n    local vowels_string_start_index=${vowels_string_length}\n\
    \    local vowels_string_end_index=${vowels_string_length}\n    local vowels_string_start_vowel=${vowels_string:\
    \ ${vowels_string_start_index} ${vowels_string_end_index}}\n    local vowels_string_end_vowel=${vowels_string:\
    \ ${vowels_string_start_index} ${vowels_string_end_index}}\n    local vowels_string_start_vowel_length=${#vowels_string_start_vowel}\n\
    \    local vowels_string_end_vowel_length=${#vowels_string_end_vowel}\n    local\
    \ vowels_string_start_vowel_length_index=${vowels_string_start_vowel_length}\n\
    \    local vowels_string_end_vowel_length_index=${vowels_string_end_vowel_length}\n\
    \    local vowels_string_start_vowel_length_index_vowel=${vowels_string: ${vowels_string_start_index}\
    \ ${vowels_string_start_vowel_length_index}}\n    local vowels_string_end_vowel_length_index_vowel=${vowels_string:\
    \ ${vowels_string_end_index} ${vowels_string_end_vowel_length_index}}\n    local\
    \ vowels_string_start_vowel_length_index_vowel_length=${#vowels_string_start_vowel_length_index_vowel}\n\
    \    local vowels_string_end_vowel_length_index_vowel_length=${#vowels_string_end_vowel_length_index_vowel}\n\
    \    local vowels_string_start_vowel_length_index_vowel_length_index=${vowels_string_start_vowel_length_index_vowel}\n\
    \    local vowels_string_end_vowel_length_index_vowel_length_index=${vowels_string_end_vowel_length_index_vowel}\n\
    \    local vowels_string_start_vowel_length_index_vowel_length_index_vowel=${vowels_string:\
    \ ${vowels_string_start_index} ${vowels_string_start_vowel_length_index_vowel}}\n\
    \    local vowels_string_end_vowel_length_index_vowel_length_index_vowel=${vowels_string:\
    \ ${vowels_string_end_index} ${vowels_string_end_vowel_length_index_vowel}}\n\
    \    local vowels_string_start_vowel_length_index_vowel_length_index_vowel_length=${#vowels_string_start_vowel_length_index_vowel_length}\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmaaee6iq.sh: line 19: vowels_string: 6 6: syntax error in expression
    (error token is "6")

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" #\
    \ vowels list\n    local word=$1\n    local vowel_found=\"\"\n    local vowel_position=\"\
    \"\n    local vowel_position_count=0\n    local vowel_position_count2=0\n    local\
    \ vowel_position_count3=0\n    local vowel_position_count4=0\n    local vowel_position_count5=0\n\
    \    local vowel_position_count6=0\n    local vowel_position_count7=0\n    local\
    \ vowel_position_count8=0\n    local vowel_position_count9=0\n    local vowel_position_count10=0\n\
    \    local vowel_position_count11=0\n    local vowel_position_count12=0\n    local\
    \ vowel_position_count13=0\n    local vowel_position_count14=0\n    local vowel_position_count15=0\n\
    \    local vowel_position_count16=0\n    local vowel_position_count17=0\n    local\
    \ vowel_position_count18=0\n    local vowel_position_count19=0\n    local vowel_position_count20=0\n\
    \    local vowel_position_count21=0\n    local vowel_position_count22=0\n    local\
    \ vowel_position_count23=0\n    local vowel_position_count24=0\n    local vowel_position_count25=0\n\
    \    local vowel_position_count26=0\n    local vowel_position_count27=0\n    local\
    \ vowel_position_count28=0\n    local vowel_position_count29=0\n    local vowel_position_count30=0\n\
    \    local vowel_position_count31=0\n    local vowel_position_count32=0\n    local\
    \ vowel_position_count33=0\n    local vowel_position_count34=0\n    local vowel_position_count35=0\n\
    \    local vowel_position_count36=0\n    local vowel_position_count37=0\n    local\
    \ vowel_position_count38=0\n    local vowel_position_count39=0\n    local vowel_position_count40=0\n\
    \    local vowel_position_count41=0\n    local vowel_position_count42=0\n    local\
    \ vowel_position_count43=0\n    local vowel_position_count44=0\n    local vowel_position_count45=0\n\
    \    local vowel_position_count46=0\n    local vowel_position_count47=0\n    local\
    \ vowel_position_count48=0\n    local vowel_position_count49=0\n    local vowel_position_count50=0\n\
    \    local vowel_position_count51=0\n    local vowel_position_count52=0\n    local\
    \ vowel_position_count53=0\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel\n    local vowel_index\n    local vowel_length\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=$1\n  local vowel\n  local vowel_count\n  local vowel_index\n  local\
    \ vowel_found\n  local vowel_found_index\n  local vowel_found_index2\n  local\
    \ vowel_found_index3\n  local vowel_found_index4\n  local vowel_found_index5\n\
    \  local vowel_found_index6\n  local vowel_found_index7\n  local vowel_found_index8\n\
    \  local vowel_found_index9\n  local vowel_found_index10\n  local vowel_found_index11\n\
    \  local vowel_found_index12\n  local vowel_found_index13\n  local vowel_found_index14\n\
    \  local vowel_found_index15\n  local vowel_found_index16\n  local vowel_found_index17\n\
    \  local vowel_found_index18\n  local vowel_found_index19\n  local vowel_found_index20\n\
    \  local vowel_found_index21\n  local vowel_found_index22\n  local vowel_found_index23\n\
    \  local vowel_found_index24\n  local vowel_found_index25\n  local vowel_found_index26\n\
    \  local vowel_found_index27\n  local vowel_found_index28\n  local vowel_found_index29\n\
    \  local vowel_found_index30\n  local vowel_found_index31\n  local vowel_found_index32\n\
    \  local vowel_found_index33\n  local vowel_found_index34\n  local vowel_found_index35\n\
    \  local vowel_found_index36\n  local vowel_found_index37\n  local vowel_found_index38\n\
    \  local vowel_found_index39\n  local vowel_found_index40\n  local vowel_found_index41\n\
    \  local vowel_found_index42\n  local vowel_found_index43\n  local vowel_found_index44\n\
    \  local vowel_found_index45\n  local vowel_found_index46\n  local vowel_found_index47\n\
    \  local vowel_found_index48\n  local vowel_found_index49\n  local vowel_found_index50\n\
    \  local vowel_found_index51\n  local vowel_found_index52\n  local vowel_found_index53\n\
    \  local vowel_found_index54\n  local vowel_found_index55\n  local vowel_found_index56\n\
    \  local vowel_found_index57\n  local vowel_found_index58\n  local vowel_found_index59\n\
    \  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" #\
    \ vowel list\n    local word=$1\n    local vowel_found=\"\"\n    local vowel_index=0\n\
    \    local vowel_length=$((${#word} - 1))\n    local consonant_index=$((${#word}\
    \ - 1))\n    local consonant_length=$((${#word} - 2))\n    while [[ ${consonant_index}\
    \ -gt 0 ]]; do\n        local consonant=${word:${consonant_index}:1}\n       \
    \ local consonant_length=${#consonant}\n        if [[ ${consonant_length} -gt\
    \ 0 ]]; then\n            if [[ ${consonant} =~ ^[aeiouy]+$ ]]; then\n       \
    \         if [[ ${consonant_length} -gt ${vowel_length} ]]; then\n           \
    \         local vowel=${word:${vowel_index}:1}\n                    if [[ ${vowel}\
    \ =~ ^[aeiouy]+$ ]]; then\n                        local vowel_found=${vowel}\n\
    \                        local vowel_index=${consonant_index}\n              \
    \          local vowel_length=${consonant_length}\n                    fi\n  \
    \              fi\n            fi\n        fi\n        consonant_index=${consonant_index}-1\n\
    \    done\n    echo \"${vowel_found}\"\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${1}\n    local vowels_string_length=${#vowels_string}\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzuv__8b.sh: line 48: unexpected EOF while looking for matching
    `)''

    /tmp/tmpqzuv__8b.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\")\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=0\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found2=0\n    local vowel_found3=0\n    local vowel_found4=0\n\
    \    local vowel_found5=0\n    local vowel_found6=0\n    local vowel_found7=0\n\
    \    local vowel_found8=0\n    local vowel_found9=0\n    local vowel_found10=0\n\
    \    local vowel_found11=0\n    local vowel_found12=0\n    local vowel_found13=0\n\
    \    local vowel_found14=0\n    local vowel_found15=0\n    local vowel_found16=0\n\
    \    local vowel_found17=0\n    local vowel_found18=0\n    local vowel_found19=0\n\
    \    local vowel_found20=0\n    local vowel_found21=0\n    local vowel_found22=0\n\
    \    local vowel_found23=0\n    local vowel_found24=0\n    local vowel_found25=0\n\
    \    local vowel_found26=0\n    local vowel_found27=0\n    local vowel_found28=0\n\
    \    local vowel_found29=0\n    local vowel_found30=0\n    local vowel_found31=0\n\
    \    local vowel_found32=0\n    local vowel_found33=0\n    local vowel_found34=0\n\
    \    local vowel_found35=0\n    local vowel_found36=0\n    local vowel_found37=0\n\
    \    local vowel_found38=0\n    local vowel_found39=0\n    local vowel_found40=0\n\
    \    local vowel_found41=0\n    local vowel_found42=0\n    local vowel_found43=0\n\
    \    local vowel_found44=0\n    local vowel_found45=0\n    local vowel_found46=0\n\
    \    local vowel_found47=0\n    local vowel_found48=0\n    local vowel_found49=0\n\
    \    local vowel_found50=0\n    local vowel_found51=0\n    local vowel_found52=0\n\
    \    local vowel_found53=0\n    local vowel_found54=0\n    local vowel_found55=0\n\
    \    local vowel_found56=0\n    local vowel_found57=0\n    local vowel_found58\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local vowel_count=0\n    local vowel_found=\"\"\n    local vowel_position=0\n\
    \    local vowel_position2=0\n    local consonant_position=0\n    local consonant_position2=0\n\
    \    local consonant_found=\"\"\n    local consonant_position3=0\n    local consonant_position4=0\n\
    \    local consonant_found2=\"\"\n    local consonant_position5=0\n    local consonant_found3=\"\
    \"\n    local consonant_position6=0\n    local consonant_found4=\"\"\n    local\
    \ consonant_position7=0\n    local consonant_found5=\"\"\n    local consonant_position8=0\n\
    \    local consonant_found6=\"\"\n    local consonant_position9=0\n    local consonant_found7=\"\
    \"\n    local consonant_position10=0\n    local consonant_found8=\"\"\n    local\
    \ consonant_position11=0\n    local consonant_found9=\"\"\n    local consonant_position12=0\n\
    \    local consonant_found10=\"\"\n    local consonant_position13=0\n    local\
    \ consonant_found11=\"\"\n    local consonant_position14=0\n    local consonant_found12=\"\
    \"\n    local consonant_position15=0\n    local consonant_found13=\"\"\n    local\
    \ consonant_position16=0\n    local consonant_found14=\"\"\n    local consonant_position17=0\n\
    \    local consonant_found15=\"\"\n    local consonant_position18=0\n    local\
    \ consonant_found16=\"\"\n    local consonant_position19=0\n    local consonant_found17=\"\
    \"\n    local consonant_position20=0\n    local consonant_found18=\"\"\n    local\
    \ consonant_position21=0\n    local consonant_found19=\"\"\n    local consonant_position22=0\n\
    \    local consonant_found20=\"\"\n    local consonant_position23=0\n    local\
    \ consonant_found21=\"\"\n    local consonant_position24=0\n    local consonant_found22=\"\
    \"\n    local consonant_position25=0\n    local consonant_found23=\"\"\n    local\
    \ consonant_position26=0\n    local consonant_found24=\"\"\n    local consonant_position27=0\n\
    \    local consonant_found25=\"\"\n    local consonant_position28=0\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\";\n\
    \  local word=$1;\n  local vowel_count=1;\n  local vowel_index=$((${#word} - 1));\n\
    \  local vowel_found=\"\";\n  local vowel_found_index=0;\n  local vowel_found_index2=0;\n\
    \  local vowel_found_index3=0;\n  local vowel_found_index4=0;\n  local vowel_found_index5=0;\n\
    \  local vowel_found_index6=0;\n  local vowel_found_index7=0;\n  local vowel_found_index8=0;\n\
    \  local vowel_found_index9=0;\n  local vowel_found_index10=0;\n  local vowel_found_index11=0;\n\
    \  local vowel_found_index12=0;\n  local vowel_found_index13=0;\n  local vowel_found_index14=0;\n\
    \  local vowel_found_index15=0;\n  local vowel_found_index16=0;\n  local vowel_found_index17=0;\n\
    \  local vowel_found_index18=0;\n  local vowel_found_index19=0;\n  local vowel_found_index20=0;\n\
    \  local vowel_found_index21=0;\n  local vowel_found_index22=0;\n  local vowel_found_index23=0;\n\
    \  local vowel_found_index24=0;\n  local vowel_found_index25=0;\n  local vowel_found_index26=0;\n\
    \  local vowel_found_index27=0;\n  local vowel_found_index28=0;\n  local vowel_found_index29=0;\n\
    \  local vowel_found_index30=0;\n  local vowel_found_index31=0;\n  local vowel_found_index32=0;\n\
    \  local vowel_found_index33=0;\n  local vowel_found_index34=0;\n  local vowel_found_index35=0;\n\
    \  local vowel_found_index36=0;\n  local vowel_found_index37=0;\n  local vowel_found_index38=0;\n\
    \  local vowel_found_index39=0;\n  local vowel_found_index40=0;\n  local vowel_found_index41=0;\n\
    \  local vowel_found_index42=0;\n  local vowel_found_index43=0;\n  local vowel_found_index44=0;\n\
    \  local vowel_found_index45=0;\n  local vowel_found_index46=0;\n  local vowel_found_index47=0;\n\
    \  local vowel_found_index48=0;\n  local vowel_found_index49=0;\n  local vowel_found_index50=0;\n\
    \  local vowel_found_index51=0;\n  local vowel_found_index52\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n    local vowels=$2\n\
    \    local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index53=0\n\
    \    local vowel_found_index54=0\n    local vowel_found_index55\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_position\n\
    \  local vowel_length\n  local vowel_found\n  local vowel_found_index\n  local\
    \ vowel_found_position\n  local vowel_found_length\n  local vowel_found_found\n\
    \  local vowel_found_found_index\n  local vowel_found_found_position\n  local\
    \ vowel_found_found_length\n  local vowel_found_found_found\n  local vowel_found_found_found_index\n\
    \  local vowel_found_found_found_position\n  local vowel_found_found_found_length\n\
    \  local vowel_found_found_found_found\n  local vowel_found_found_found_found_index\n\
    \  local vowel_found_found_found_found_position\n  local vowel_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found\n  local vowel_found_found_found_found_found_index\n\
    \  local vowel_found_found_found_found_found_position\n  local vowel_found_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found_found\n  local vowel_found_found_found_found_found_found_index\n\
    \  local vowel_found_found_found_found_found_found_position\n  local vowel_found_found_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found_found_found\n  local vowel_found_found_found_found_found_found_found_index\n\
    \  local vowel_found_found_found_found_found_found_found_found_position\n  local\
    \ vowel_found_found_found_found_found_found_found_found_length\n  local vowel_found_found_found_found_found_found_found_found\n\
    \  local vowel_found_found_found_found_found_found_found_found_index\n  local\
    \ vowel_found_found_found_found_found_found_found_found_position\n  local vowel_found_found_found_found_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found_found_found_found_found\n  local\
    \ vowel_found_found_found_found_found_found_found_found_found_index\n  local vowel_found_found_found_found_found_found_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_index\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found_found_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local input=\"$1\"\n    local vowel_found=\"\"\n    local vowel_position=0\n\
    \    local vowel_position2=0\n    local vowel_position3=0\n    local vowel_position4=0\n\
    \    local vowel_position5=0\n    local vowel_position6=0\n    local vowel_position7=0\n\
    \    local vowel_position8=0\n    local vowel_position9=0\n    local vowel_position10=0\n\
    \    local vowel_position11=0\n    local vowel_position12=0\n    local vowel_position13=0\n\
    \    local vowel_position14=0\n    local vowel_position15=0\n    local vowel_position16=0\n\
    \    local vowel_position17=0\n    local vowel_position18=0\n    local vowel_position19=0\n\
    \    local vowel_position20=0\n    local vowel_position21=0\n    local vowel_position22=0\n\
    \    local vowel_position23=0\n    local vowel_position24=0\n    local vowel_position25=0\n\
    \    local vowel_position26=0\n    local vowel_position27=0\n    local vowel_position28=0\n\
    \    local vowel_position29=0\n    local vowel_position30=0\n    local vowel_position31=0\n\
    \    local vowel_position32=0\n    local vowel_position33=0\n    local vowel_position34=0\n\
    \    local vowel_position35=0\n    local vowel_position36=0\n    local vowel_position37=0\n\
    \    local vowel_position38=0\n    local vowel_position39=0\n    local vowel_position40=0\n\
    \    local vowel_position41=0\n    local vowel_position42=0\n    local vowel_position43=0\n\
    \    local vowel_position44=0\n    local vowel_position45=0\n    local vowel_position46=0\n\
    \    local vowel_position47=0\n    local vowel_position48=0\n    local vowel_position49=0\n\
    \    local vowel_position50=0\n    local vowel_position51=0\n    local vowel_position52=0\n\
    \    local vowel_position53=0\n    local vowel_position54=0\n    local vowel_position55=0\n\
    \    local vowel_position56=0\n    local vowel_position57=0\n    local vowel_position58=0\n\
    \    local vowel_position59=0\n    local vowel_position60=0\n    local vowel_position61=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local vowels_count=${#vowels}\n    local vowels_count_2=${#vowels}\n    local\
    \ vowels_count_3=${#vowels}\n    local vowels_count_4=${#vowels}\n    local vowels_count_5=${#vowels}\n\
    \    local vowels_count_6=${#vowels}\n    local vowels_count_7=${#vowels}\n  \
    \  local vowels_count_8=${#vowels}\n    local vowels_count_9=${#vowels}\n    local\
    \ vowels_count_10=${#vowels}\n    local vowels_count_11=${#vowels}\n    local\
    \ vowels_count_12=${#vowels}\n    local vowels_count_13=${#vowels}\n    local\
    \ vowels_count_14=${#vowels}\n    local vowels_count_15=${#vowels}\n    local\
    \ vowels_count_16=${#vowels}\n    local vowels_count_17=${#vowels}\n    local\
    \ vowels_count_18=${#vowels}\n    local vowels_count_19=${#vowels}\n    local\
    \ vowels_count_20=${#vowels}\n    local vowels_count_21=${#vowels}\n    local\
    \ vowels_count_22=${#vowels}\n    local vowels_count_23=${#vowels}\n    local\
    \ vowels_count_24=${#vowels}\n    local vowels_count_25=${#vowels}\n    local\
    \ vowels_count_26=${#vowels}\n    local vowels_count_27=${#vowels}\n    local\
    \ vowels_count_28=${#vowels}\n    local vowels_count_29=${#vowels}\n    local\
    \ vowels_count_30=${#vowels}\n    local vowels_count_31=${#vowels}\n    local\
    \ vowels_count_32=${#vowels}\n    local vowels_count_33=${#vowels}\n    local\
    \ vowels_count_34=${#vowels}\n    local vowels_count_35=${#vowels}\n    local\
    \ vowels_count_36=${#vowels}\n    local vowels_count_37=${#vowels}\n    local\
    \ vowels_count_38=${#vowels}\n    local vowels_count_39=${#vowels}\n    local\
    \ vowels_count_40=${#vowels}\n    local vowels_count_41=${#vowels}\n    local\
    \ vowels_count_42=${#vowels}\n    local vowels_count_43=${#vowels}\n    local\
    \ vowels_count_44=${#vowels}\n    local vowels_count_45=${#vowels}\n    local\
    \ vowels_count_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=\"$1\"\n    local\
    \ vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n   \
    \ local vowel_found=0\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found2=0\n    local vowel_found3=0\n    local vowel_found4=0\n\
    \    local vowel_found5=0\n    local vowel_found6=0\n    local vowel_found7=0\n\
    \    local vowel_found8=0\n    local vowel_found9=0\n    local vowel_found10=0\n\
    \    local vowel_found11=0\n    local vowel_found12=0\n    local vowel_found13=0\n\
    \    local vowel_found14=0\n    local vowel_found15=0\n    local vowel_found16=0\n\
    \    local vowel_found17=0\n    local vowel_found18=0\n    local vowel_found19=0\n\
    \    local vowel_found20=0\n    local vowel_found21=0\n    local vowel_found22=0\n\
    \    local vowel_found23=0\n    local vowel_found24=0\n    local vowel_found25=0\n\
    \    local vowel_found26=0\n    local vowel_found27=0\n    local vowel_found28=0\n\
    \    local vowel_found29=0\n    local vowel_found30=0\n    local vowel_found31=0\n\
    \    local vowel_found32=0\n    local vowel_found33=0\n    local vowel_found34=0\n\
    \    local vowel_found35=0\n    local vowel_found36=0\n    local vowel_found37=0\n\
    \    local vowel_found38=0\n    local vowel_found39=0\n    local vowel_found40=0\n\
    \    local vowel_found41=0\n    local vowel_found42=0\n    local vowel_found43=0\n\
    \    local vowel_found44=0\n    local vowel_found45=0\n    local vowel_found46=0\n\
    \    local vowel_found47=0\n    local vowel_found48=0\n    local vowel_found49=0\n\
    \    local vowel_found50=0\n    local vowel_found51=0\n    local vowel_found52=0\n\
    \    local vowel_found53=0\n    local vowel_found54=0\n    local vowel_found55=0\n\
    \    local vowel_found56=0\n    local vowel_found57=0\n    local vowel_found58=0\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowels_count=${#vowels[@]}\n  local vowels_string=${vowels[$((vowels_count-1))]}\n\
    \  local vowels_string_count=${#vowels_string}\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \  local vowels_string_index=$((vowels_string_count-1))\n  local vowels_string_index=$((vowels_string_count-1))\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_index2\n\
    \    local vowel_index3\n    local vowel_index4\n    local vowel_index5\n    local\
    \ vowel_index6\n    local vowel_index7\n    local vowel_index8\n    local vowel_index9\n\
    \    local vowel_index10\n    local vowel_index11\n    local vowel_index12\n \
    \   local vowel_index13\n    local vowel_index14\n    local vowel_index15\n  \
    \  local vowel_index16\n    local vowel_index17\n    local vowel_index18\n   \
    \ local vowel_index19\n    local vowel_index20\n    local vowel_index21\n    local\
    \ vowel_index22\n    local vowel_index23\n    local vowel_index24\n    local vowel_index25\n\
    \    local vowel_index26\n    local vowel_index27\n    local vowel_index28\n \
    \   local vowel_index29\n    local vowel_index30\n    local vowel_index31\n  \
    \  local vowel_index32\n    local vowel_index33\n    local vowel_index34\n   \
    \ local vowel_index35\n    local vowel_index36\n    local vowel_index37\n    local\
    \ vowel_index38\n    local vowel_index39\n    local vowel_index40\n    local vowel_index41\n\
    \    local vowel_index42\n    local vowel_index43\n    local vowel_index44\n \
    \   local vowel_index45\n    local vowel_index46\n    local vowel_index47\n  \
    \  local vowel_index48\n    local vowel_index49\n    local vowel_index50\n   \
    \ local vowel_index51\n    local vowel_index52\n    local vowel_index53\n    local\
    \ vowel_index54\n    local vowel_index55\n    local vowel_index56\n    local vowel_index57\n\
    \    local vowel_index58\n    local vowel_index59\n    local vowel_index60\n \
    \   local vowel_index61\n    local vowel_index62\n    local vowel_index63\n  \
    \  local vowel_index64\n    local vowel_index65\n    local vowel_index66\n   \
    \ local vowel_index67\n    local vowel_index68\n    local vowel_index69\n    local\
    \ vowel_index70\n    local vowel_index71\n    local vowel_index72\n    local vowel_index73\n\
    \    local vowel_index74\n    local vowel_index75\n    local vowel_index76\n \
    \   local vowel_index77\n    local vowel_index78\n    local vowel_index79\n  \
    \  local vowel_index80\n    local vowel_index81\n    local vowel_index82\n\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local word=\"$1\"\n    local vowel\n    local vowel_pos\n    local vowel_pos2\n\
    \    local vowel_pos3\n    local vowel_pos4\n    local vowel_pos5\n    local vowel_pos6\n\
    \    local vowel_pos7\n    local vowel_pos8\n    local vowel_pos9\n    local vowel_pos10\n\
    \    local vowel_pos11\n    local vowel_pos12\n    local vowel_pos13\n    local\
    \ vowel_pos14\n    local vowel_pos15\n    local vowel_pos16\n    local vowel_pos17\n\
    \    local vowel_pos18\n    local vowel_pos19\n    local vowel_pos20\n    local\
    \ vowel_pos21\n    local vowel_pos22\n    local vowel_pos23\n    local vowel_pos24\n\
    \    local vowel_pos25\n    local vowel_pos26\n    local vowel_pos27\n    local\
    \ vowel_pos28\n    local vowel_pos29\n    local vowel_pos30\n    local vowel_pos31\n\
    \    local vowel_pos32\n    local vowel_pos33\n    local vowel_pos34\n    local\
    \ vowel_pos35\n    local vowel_pos36\n    local vowel_pos37\n    local vowel_pos38\n\
    \    local vowel_pos39\n    local vowel_pos40\n    local vowel_pos41\n    local\
    \ vowel_pos42\n    local vowel_pos43\n    local vowel_pos44\n    local vowel_pos45\n\
    \    local vowel_pos46\n    local vowel_pos47\n    local vowel_pos48\n    local\
    \ vowel_pos49\n    local vowel_pos50\n    local vowel_pos51\n    local vowel_pos52\n\
    \    local vowel_pos53\n    local vowel_pos54\n    local vowel_pos55\n    local\
    \ vowel_pos56\n    local vowel_pos57\n    local vowel_pos58\n    local vowel_pos59\n\
    \    local vowel_pos60\n    local vowel_pos61\n    local vowel_pos62\n    local\
    \ vowel_pos63\n    local vowel_pos64\n    local vowel_pos65\n    local vowel_pos66\n\
    \    local vowel_pos67\n    local vowel_pos68\n    local vowel_pos69\n    local\
    \ vowel_pos70\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ input=\"$1\"\n  local vowel\n  local output\n  local i\n  local j\n  local len\n\
    \  local len2\n  local len3\n  local len4\n  local len5\n  local len6\n  local\
    \ len7\n  local len8\n  local len9\n  local len10\n  local len11\n  local len12\n\
    \  local len13\n  local len14\n  local len15\n  local len16\n  local len17\n \
    \ local len18\n  local len19\n  local len20\n  local len21\n  local len22\n  local\
    \ len23\n  local len24\n  local len25\n  local len26\n  local len27\n  local len28\n\
    \  local len29\n  local len30\n  local len31\n  local len32\n  local len33\n \
    \ local len34\n  local len35\n  local len36\n  local len37\n  local len38\n  local\
    \ len39\n  local len40\n  local len41\n  local len42\n  local len43\n  local len44\n\
    \  local len45\n  local len46\n  local len47\n  local len48\n  local len49\n \
    \ local len50\n  local len51\n  local len52\n  local len53\n  local len54\n  local\
    \ len55\n  local len56\n  local len57\n  local len58\n  local len59\n  local len60\n\
    \  local len61\n  local len62\n  local len63\n  local len64\n  local len65\n \
    \ local len66\n  local len67\n  local len68\n  local len69\n  local len70\n  local\
    \ len71\n  local len72\n  local len73\n  local len74\n  local len75\n  local len76\n\
    \  local len77\n  local len78\n  local len79\n  local len80\n  local len81\n \
    \ local len82\n  local len83\n  local len84\n  local len85\n  local len86\n  local\
    \ len87\n  local len88\n  local len89\n  local len90\n  local len91\n  local len92\n\
    \  local len93\n  local len94\n  local len95\n  local len96\n  \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_pos\n  local vowel_pos2\n  local vowel_pos3\n\
    \  local vowel_pos4\n  local vowel_pos5\n  local vowel_pos6\n  local vowel_pos7\n\
    \  local vowel_pos8\n  local vowel_pos9\n  local vowel_pos10\n  local vowel_pos11\n\
    \  local vowel_pos12\n  local vowel_pos13\n  local vowel_pos14\n  local vowel_pos15\n\
    \  local vowel_pos16\n  local vowel_pos17\n  local vowel_pos18\n  local vowel_pos19\n\
    \  local vowel_pos20\n  local vowel_pos21\n  local vowel_pos22\n  local vowel_pos23\n\
    \  local vowel_pos24\n  local vowel_pos25\n  local vowel_pos26\n  local vowel_pos27\n\
    \  local vowel_pos28\n  local vowel_pos29\n  local vowel_pos30\n  local vowel_pos31\n\
    \  local vowel_pos32\n  local vowel_pos33\n  local vowel_pos34\n  local vowel_pos35\n\
    \  local vowel_pos36\n  local vowel_pos37\n  local vowel_pos38\n  local vowel_pos39\n\
    \  local vowel_pos40\n  local vowel_pos41\n  local vowel_pos42\n  local vowel_pos43\n\
    \  local vowel_pos44\n  local vowel_pos45\n  local vowel_pos46\n  local vowel_pos47\n\
    \  local vowel_pos48\n  local vowel_pos49\n  local vowel_pos50\n  local vowel_pos51\n\
    \  local vowel_pos52\n  local vowel_pos53\n  local vowel_pos54\n  local vowel_pos55\n\
    \  local vowel_pos56\n  local vowel_pos57\n  local vowel_pos58\n  local vowel_pos59\n\
    \  local vowel_pos60\n  local vowel_pos61\n  local vowel_pos62\n  local vowel_pos63\n\
    \  local vowel_pos64\n  local vowel_pos65\n  local vowel_pos66\n  local vowel_pos67\n\
    \  local vowel_pos68\n  local vowel_pos69\n  local vowel_pos70\n  local \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\
    \n  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_found=\"\"\n\
    \  local vowel_left=\"\"\n  local vowel_right=\"\"\n  \n}\n\ncandidate() {\n \
    \   get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found_index2\n  local vowel_found_index3\n  local vowel_found_index4\n\
    \  local vowel_found_index5\n  local vowel_found_index6\n  local vowel_found_index7\n\
    \  local vowel_found_index8\n  local vowel_found_index9\n  local vowel_found_index10\n\
    \  local vowel_found_index11\n  local vowel_found_index12\n  local vowel_found_index13\n\
    \  local vowel_found_index14\n  local vowel_found_index15\n  local vowel_found_index16\n\
    \  local vowel_found_index17\n  local vowel_found_index18\n  local vowel_found_index19\n\
    \  local vowel_found_index20\n  local vowel_found_index21\n  local vowel_found_index22\n\
    \  local vowel_found_index23\n  local vowel_found_index24\n  local vowel_found_index25\n\
    \  local vowel_found_index26\n  local vowel_found_index27\n  local vowel_found_index28\n\
    \  local vowel_found_index29\n  local vowel_found_index30\n  local vowel_found_index31\n\
    \  local vowel_found_index32\n  local vowel_found_index33\n  local vowel_found_index34\n\
    \  local vowel_found_index35\n  local vowel_found_index36\n  local vowel_found_index37\n\
    \  local vowel_found_index38\n  local vowel_found_index39\n  local vowel_found_index40\n\
    \  local vowel_found_index41\n  local vowel_found_index42\n  local vowel_found_index43\n\
    \  local vowel_found_index44\n  local vowel_found_index45\n  local vowel_found_index46\n\
    \  local vowel_found_index47\n  local vowel_found_index48\n  local vowel_found_index49\n\
    \  local vowel_found_index50\n  local vowel_found_index51\n  local vowel_found_index52\n\
    \  local vowel_found_index53\n  local vowel_found_index54\n  local vowel_found_index55\n\
    \  local vowel_found_index56\n  local vowel_found_index57\n  local vowel_found_index58\n\
    \  local vowel_found_index59\n  local vowel_found_index60\n  local \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=\"$1\"\n  local vowel_found=\"\"\n  local vowel_index=0\n  local vowel_length=$((${#word}\
    \ - 1))\n  local vowel_found_index=0\n  local vowel_found_index2=0\n  local vowel_found_index3=0\n\
    \  local vowel_found_index4=0\n  local vowel_found_index5=0\n  local vowel_found_index6=0\n\
    \  local vowel_found_index7=0\n  local vowel_found_index8=0\n  local vowel_found_index9=0\n\
    \  local vowel_found_index10=0\n  local vowel_found_index11=0\n  local vowel_found_index12=0\n\
    \  local vowel_found_index13=0\n  local vowel_found_index14=0\n  local vowel_found_index15=0\n\
    \  local vowel_found_index16=0\n  local vowel_found_index17=0\n  local vowel_found_index18=0\n\
    \  local vowel_found_index19=0\n  local vowel_found_index20=0\n  local vowel_found_index21=0\n\
    \  local vowel_found_index22=0\n  local vowel_found_index23=0\n  local vowel_found_index24=0\n\
    \  local vowel_found_index25=0\n  local vowel_found_index26=0\n  local vowel_found_index27=0\n\
    \  local vowel_found_index28=0\n  local vowel_found_index29=0\n  local vowel_found_index30=0\n\
    \  local vowel_found_index31=0\n  local vowel_found_index32=0\n  local vowel_found_index33=0\n\
    \  local vowel_found_index34=0\n  local vowel_found_index35=0\n  local vowel_found_index36=0\n\
    \  local vowel_found_index37=0\n  local vowel_found_index38=0\n  local vowel_found_index39=0\n\
    \  local vowel_found_index40=0\n  local vowel_found_index41=0\n  local vowel_found_index42=0\n\
    \  local vowel_found_index43=0\n  local vowel_found_index44=0\n  local vowel_found_index45=0\n\
    \  local vowel_found_index46=0\n  local vowel_found_index47=0\n  local vowel_found_index48=0\n\
    \  local vowel_found_index49=0\n  local vowel_found_index50=0\n  local vowel_found_index51=0\n\
    \  local vowel_found_index52=0\n  local vowel\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${vowels:0:1}\n  \
    \  local vowels_string_count=${#vowels_string}\n    local vowels_string_end=${vowels_string:$vowels_string_count-1}\n\
    \    local vowels_string_end_count=${#vowels_string_end}\n    local vowels_string_start=${vowels_string:$vowels_string_count-2}\n\
    \    local vowels_string_start_count=${#vowels_string_start}\n    local vowels_string_middle=${vowels_string:$vowels_string_count-3}\n\
    \    local vowels_string_middle_count=${#vowels_string_middle}\n    local vowels_string_middle2=${vowels_string:$vowels_string_count-4}\n\
    \    local vowels_string_middle2_count=${#vowels_string_middle2}\n    local vowels_string_middle3=${vowels_string:$vowels_string_count-5}\n\
    \    local vowels_string_middle3_count=${#vowels_string_middle3}\n    local vowels_string_middle4=${vowels_string:$vowels_string_count-6}\n\
    \    local vowels_string_middle4_count=${#vowels_string_middle4}\n    local vowels_string_middle5=${vowels_string:$vowels_string_count-7}\n\
    \    local vowels_string_middle5_count=${#vowels_string_middle5}\n    local vowels_string_middle6=${vowels_string:$vowels_string_count-8}\n\
    \    local vowels_string_middle6_count=${#vowels_string_middle6}\n    local vowels_string_middle7=${vowels_string:$vowels_string_count-9}\n\
    \    local vowels_string_middle7_count=${#vowels_string_middle7}\n    local vowels_string_middle8=${vowels_string:$vowels_string_count-10}\n\
    \    local vowels_string_middle8_count=${#vowels_string_middle8}\n    local vowels_string_middle9=${vowels_string:$vowels_string_count-11}\n\
    \    local vowels_string_middle9_count=${#vowels_string_middle9}\n    local vowels_string_middle10=${vowels_string:$vowels_string_count-12}\n\
    \    local vowels_string_middle10_count=${#vowels_string_middle10}\n    local\
    \ vowels_string_middle11=${vowels_string:$vowels_string_count-13}\n    local vowels_string_middle11_count=${#vowels_string_middle11}\n\
    \    local vowels_string_middle12=${vowels_string:$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0tzn4l8x.sh: line 66: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=$1\n  local vowel_found=\"\"\n  local vowel_position=0\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_found=\"\"\n  \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local string=$1\n    local vowel\n    local vowel_count\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local word=$1\n  local vowel_found=\"\"\n  local vowel_index=0\n  local vowel_length=0\n\
    \  local consonant_index=0\n  local consonant_length=0\n  local consonant_found=\"\
    \"\n  local consonant_found_index=0\n  local consonant_found_index2=0\n  local\
    \ consonant_found_index3=0\n  local consonant_found_index4=0\n  local consonant_found_index5=0\n\
    \  local consonant_found_index6=0\n  local consonant_found_index7=0\n  local consonant_found_index8=0\n\
    \  local consonant_found_index9=0\n  local consonant_found_index10=0\n  local\
    \ consonant_found_index11=0\n  local consonant_found_index12=0\n  local consonant_found_index13=0\n\
    \  local consonant_found_index14=0\n  local consonant_found_index15=0\n  local\
    \ consonant_found_index16=0\n  local consonant_found_index17=0\n  local consonant_found_index18=0\n\
    \  local consonant_found_index19=0\n  local consonant_found_index20=0\n  local\
    \ consonant_found_index21=0\n  local consonant_found_index22=0\n  local consonant_found_index23=0\n\
    \  local consonant_found_index24=0\n  local consonant_found_index25=0\n  local\
    \ consonant_found_index26=0\n  local consonant_found_index27=0\n  local consonant_found_index28=0\n\
    \  local consonant_found_index29=0\n  local consonant_found_index30=0\n  local\
    \ consonant_found_index31=0\n  local consonant_found_index32=0\n  local consonant_found_index33=0\n\
    \  local consonant_found_index34=0\n  local consonant_found_index35=0\n  local\
    \ consonant_found_index36=0\n  local consonant_found_index37=0\n  local consonant_found_index38=0\n\
    \  local consonant_found_index39=0\n  local consonant_found_index40=0\n  local\
    \ consonant_found_index41=0\n  local consonant_found_index42=0\n  local consonant_found_index43=0\n\
    \  local consonant_found_index44=0\n  local consonant_found_index45=0\n  \n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local string=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local word=\"$1\"\n    local vowel_index=0\n    local vowel_found=\"\"\n\
    \    local vowel_found_index=0\n    local consonant_index=0\n    local consonant_found=\"\
    \"\n    local consonant_found_index=0\n    local consonant_count=0\n    local\
    \ consonant_count2=0\n    local consonant_count3=0\n    local consonant_count4=0\n\
    \    local consonant_count5=0\n    local consonant_count6=0\n    local consonant_count7=0\n\
    \    local consonant_count8=0\n    local consonant_count9=0\n    local consonant_count10=0\n\
    \    local consonant_count11=0\n    local consonant_count12=0\n    local consonant_count13=0\n\
    \    local consonant_count14=0\n    local consonant_count15=0\n    local consonant_count16=0\n\
    \    local consonant_count17=0\n    local consonant_count18=0\n    local consonant_count19=0\n\
    \    local consonant_count20=0\n    local consonant_count21=0\n    local consonant_count22=0\n\
    \    local consonant_count23=0\n    local consonant_count24=0\n    local consonant_count25=0\n\
    \    local consonant_count26=0\n    local consonant_count27=0\n    local consonant_count28=0\n\
    \    local consonant_count29=0\n    local consonant_count30=0\n    local consonant_count31=0\n\
    \    local consonant_count32=0\n    local consonant_count33=0\n    local consonant_count34=0\n\
    \    local consonant_count35=0\n    local consonant_count36=0\n    local consonant_count37=0\n\
    \    local consonant_count38=0\n    local consonant_count39=0\n    local consonant_count40=0\n\
    \    local consonant_count41=0\n    local consonant_count42=0\n    local consonant_count43=0\n\
    \    local consonant_count44=0\n    local consonant_count45=0\n    local consonant_count46=0\n\
    \    local consonant_count47=0\n    local consonant_count48=0\n    local consonant_count49=0\n\
    \    local consonant_count50=0\n\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel\n    local vowel_found\n    local vowel_found_index\n\
    \    local vowel_index\n    local vowel_length\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_count_index\n    local vowel_length_count\n\
    \    local vowel_length_count2\n    local vowel_length_count2_index\n    local\
    \ vowel_length_count2\n    local vowel_length_count3\n    local vowel_length_count3_index\n\
    \    local vowel_length_count3\n    local vowel_length_count4\n    local vowel_length_count4_index\n\
    \    local vowel_length_count4\n    local vowel_length_count5\n    local vowel_length_count5_index\n\
    \    local vowel_length_count5\n    local vowel_length_count6\n    local vowel_length_count6_index\n\
    \    local vowel_length_count6\n    local vowel_length_count7\n    local vowel_length_count7_index\n\
    \    local vowel_length_count7\n    local vowel_length_count8\n    local vowel_length_count8_index\n\
    \    local vowel_length_count8\n    local vowel_length_count9\n    local vowel_length_count9_index\n\
    \    local vowel_length_count9\n    local vowel_length_count10\n    local vowel_length_count10_index\n\
    \    local vowel_length_count10\n    local vowel_length_count11\n    local vowel_length_count11_index\n\
    \    local vowel_length_count11\n    local vowel_length_count12\n    local vowel_length_count12_index\n\
    \    local vowel_length_count12\n    local vowel_length_count13\n    local vowel_length_count13_index\n\
    \    local vowel_length_count13\n    local vowel_length_count14\n    local vowel_length_count14_index\n\
    \    local vowel_length_count14\n    local vowel_length_count15\n    local vowel_length_count15_index\n\
    \    local vowel_length_count15\n    local vowel_length_count16\n    local vowel_length_count16_index\n\
    \    local vowel_length_count16\n    local vowel_length_count17\n    local vowel_length_count17_index\n\
    \    local vowel_length_count17\n    local vowel_length_count18\n    local vowel_length_count18_index\n\
    \    local vowel_length_count18\n    local vowel_length_count19\n    local vowel_length_count\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel\n    local vowel_count\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_position\n    local vowel_position_index\n\
    \    local vowel_position_count\n    local vowel_position_count2\n    local vowel_position_count3\n\
    \    local vowel_position_count4\n    local vowel_position_count5\n    local vowel_position_count6\n\
    \    local vowel_position_count7\n    local vowel_position_count8\n    local vowel_position_count9\n\
    \    local vowel_position_count10\n    local vowel_position_count11\n    local\
    \ vowel_position_count12\n    local vowel_position_count13\n    local vowel_position_count14\n\
    \    local vowel_position_count15\n    local vowel_position_count16\n    local\
    \ vowel_position_count17\n    local vowel_position_count18\n    local vowel_position_count19\n\
    \    local vowel_position_count20\n    local vowel_position_count21\n    local\
    \ vowel_position_count22\n    local vowel_position_count23\n    local vowel_position_count24\n\
    \    local vowel_position_count25\n    local vowel_position_count26\n    local\
    \ vowel_position_count27\n    local vowel_position_count28\n    local vowel_position_count29\n\
    \    local vowel_position_count30\n    local vowel_position_count31\n    local\
    \ vowel_position_count32\n    local vowel_position_count33\n    local vowel_position_count34\n\
    \    local vowel_position_count35\n    local vowel_position_count36\n    local\
    \ vowel_position_count37\n    local vowel_position_count38\n    local vowel_position_count39\n\
    \    local vowel_position_count40\n    local vowel_position_count41\n    local\
    \ vowel_position_count42\n    local vowel_position_count43\n    local vowel_position_count44\n\
    \    local vowel_position_count45\n    local vowel_position_count46\n    local\
    \ vowel_position_count47\n    local vowel_position_count48\n    local vowel_position_count49\n\
    \    local vowel_position_count50\n    local vowel_position_count51\n    local\
    \ vowel_position_count52\n    local vowel_position_count53\n    local vowel_position_count54\n\
    \    local vowel_position_count55\n    local vowel_position_count56\n    local\
    \ vowel_position_count57\n    local vowel_position_count58\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel\n  local vowel_count\n  local vowel_index\n  local\
    \ vowel_found\n  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found_index\n\
    \  local vowel_found_index\n  local vowel_found_index\n\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local input=\"$1\"\n    local vowel\n    local output\n    local i\n    local\
    \ j\n    local len\n    local len2\n    local len3\n    local len4\n    local\
    \ len5\n    local len6\n    local len7\n    local len8\n    local len9\n    local\
    \ len10\n    local len11\n    local len12\n    local len13\n    local len14\n\
    \    local len15\n    local len16\n    local len17\n    local len18\n    local\
    \ len19\n    local len20\n    local len21\n    local len22\n    local len23\n\
    \    local len24\n    local len25\n    local len26\n    local len27\n    local\
    \ len28\n    local len29\n    local len30\n    local len31\n    local len32\n\
    \    local len33\n    local len34\n    local len35\n    local len36\n    local\
    \ len37\n    local len38\n    local len39\n    local len40\n    local len41\n\
    \    local len42\n    local len43\n    local len44\n    local len45\n    local\
    \ len46\n    local len47\n    local len48\n    local len49\n    local len50\n\
    \    local len51\n    local len52\n    local len53\n    local len54\n    local\
    \ len55\n    local len56\n    local len57\n    local len58\n    local len59\n\
    \    local len60\n    local len61\n    local len62\n    local len63\n    local\
    \ len64\n    local len65\n    local len66\n    local len67\n    local len68\n\
    \    local len69\n    local len70\n    local len71\n    local len72\n    local\
    \ len73\n    local len74\n    local len75\n    local len76\n    local len77\n\
    \    local len78\n    local len79\n    local len80\n    local len81\n    local\
    \ len82\n    local len83\n    local len84\n    local len85\n    local len86\n\
    \    local len87\n    local len88\n    local len89\n    local len90\n    local\
    \ len91\n    local len92\n    local len93\n    local len94\n    local len95\n\
    \    local len96\n    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ input=\"$1\"\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_left=\"\"\n  local vowel_right=\"\"\n  local vowel_left2=\"\"\
    \n  local vowel_right2=\"\"\n  local vowel_left3=\"\"\n  local vowel_right3=\"\
    \"\n  local vowel_left4=\"\"\n  local vowel_right4=\"\"\n  local vowel_left5=\"\
    \"\n  local vowel_right5=\"\"\n  local vowel_left6=\"\"\n  local vowel_right6=\"\
    \"\n  local vowel_left7=\"\"\n  local vowel_right7=\"\"\n  local vowel_left8=\"\
    \"\n  local vowel_right8=\"\"\n  local vowel_left9=\"\"\n  local vowel_right9=\"\
    \"\n  local vowel_left10=\"\"\n  local vowel_right10=\"\"\n  local vowel_left11=\"\
    \"\n  local vowel_right11=\"\"\n  local vowel_left12=\"\"\n  local vowel_right12=\"\
    \"\n  local vowel_left13=\"\"\n  local vowel_right13=\"\"\n  local vowel_left14=\"\
    \"\n  local vowel_right14=\"\"\n  local vowel_left15=\"\"\n  local vowel_right15=\"\
    \"\n  local vowel_left16=\"\"\n  local vowel_right16=\"\"\n  local vowel_left17=\"\
    \"\n  local vowel_right17=\"\"\n  local vowel_left18=\"\"\n  local vowel_right18=\"\
    \"\n  local vowel_left19=\"\"\n  local vowel_right19=\"\"\n  local vowel_left20=\"\
    \"\n  local vowel_right20=\"\"\n  local vowel_left21=\"\"\n  local vowel_right21=\"\
    \"\n  local vowel_left22=\"\"\n  local vowel_right22=\"\"\n  local vowel_left23=\"\
    \"\n  local vowel_right23=\"\"\n  local vowel_left24=\"\"\n  local vowel_right24=\"\
    \"\n  local vowel_left25=\"\"\n  local vowel_right25=\"\"\n  local vowel_left26=\"\
    \"\n  local vowel_right26=\"\"\n  local vowel_left27=\"\"\n  local vowel_right27=\"\
    \"\n  local vowel_left28=\"\"\n  local vowel_right28=\"\"\n  local vowel_left29=\"\
    \"\n  local vowel_right29=\"\"\n  local vowel_left30=\"\"\n  local vowel_right30=\"\
    \"\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\";\n\
    \    local vowels_count=${#vowels};\n    local vowels_count_2=${#vowels};\n  \
    \  local vowels_count_3=${#vowels};\n    local vowels_count_4=${#vowels};\n  \
    \  local vowels_count_5=${#vowels};\n    local vowels_count_6=${#vowels};\n  \
    \  local vowels_count_7=${#vowels};\n    local vowels_count_8=${#vowels};\n  \
    \  local vowels_count_9=${#vowels};\n    local vowels_count_10=${#vowels};\n \
    \   local vowels_count_11=${#vowels};\n    local vowels_count_12=${#vowels};\n\
    \    local vowels_count_13=${#vowels};\n    local vowels_count_14=${#vowels};\n\
    \    local vowels_count_15=${#vowels};\n    local vowels_count_16=${#vowels};\n\
    \    local vowels_count_17=${#vowels};\n    local vowels_count_18=${#vowels};\n\
    \    local vowels_count_19=${#vowels};\n    local vowels_count_20=${#vowels};\n\
    \    local vowels_count_21=${#vowels};\n    local vowels_count_22=${#vowels};\n\
    \    local vowels_count_23=${#vowels};\n    local vowels_count_24=${#vowels};\n\
    \    local vowels_count_25=${#vowels};\n    local vowels_count_26=${#vowels};\n\
    \    local vowels_count_27=${#vowels};\n    local vowels_count_28=${#vowels};\n\
    \    local vowels_count_29=${#vowels};\n    local vowels_count_30=${#vowels};\n\
    \    local vowels_count_31=${#vowels};\n    local vowels_count_32=${#vowels};\n\
    \    local vowels_count_33=${#vowels};\n    local vowels_count_34=${#vowels};\n\
    \    local vowels_count_35=${#vowels};\n    local vowels_count_36=${#vowels};\n\
    \    local vowels_count_37=${#vowels};\n    local vowels_count_38=${#vowels};\n\
    \    local vowels_count_39=${#vowels};\n    local vowels_count_40=${#vowels};\n\
    \    local vowels_count_41=${#vowels};\n    local vowels_count_42=${#\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpthm_moca.sh: line 78: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel\n  local vowel_found\n  local vowel_position\n\
    \  local vowel_position_count\n  local vowel_position_count_min\n  local vowel_position_count_max\n\
    \  local vowel_position_count_diff\n  local vowel_position_count_diff_min\n  local\
    \ vowel_position_count_diff_max\n  local vowel_position_count_diff_sum\n  local\
    \ vowel_position_count_diff_sum_min\n  local vowel_position_count_diff_sum_max\n\
    \  local vowel_position_count_diff_sum_diff\n  local vowel_position_count_diff_sum_diff_min\n\
    \  local vowel_position_count_diff_sum_diff_max\n  local vowel_position_count_diff_sum_diff_sum\n\
    \  local vowel_position_count_diff_sum_diff_sum_min\n  local vowel_position_count_diff_sum_diff_sum_max\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff\n  local vowel_position_count_diff_sum_diff_sum_diff_min\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff_max\n  local vowel_position_count_diff_sum_diff_sum_diff_sum\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff_sum_min\n  local vowel_position_count_diff_sum_diff_sum_diff_sum_max\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff\n  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_min\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_max\n  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_min\n  local\
    \ vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_max\n  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_min\n \
    \ local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_max\n  local\
    \ vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_sum\n  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_sum_min\n\
    \  local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_max\n \
    \ local vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_sum\n  local\
    \ vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_sum_min\n  local\
    \ vowel_position_count_diff_sum_diff_sum_diff_sum_diff_sum_diff_sum_max\n  local\
    \ vowel_position_count_diff_sum_diff_sum_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=\"$1\"\n    local\
    \ vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n   \
    \ local vowel_found=\"\"\n    local consonant_count=0\n    local consonant_index=0\n\
    \    local consonant_found=\"\"\n    local consonant_left=0\n    local consonant_right=0\n\
    \    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" #\
    \ vowels list\n    local vowels_count=${#vowels[@]}\n    local vowel_found=\"\"\
    \n    local vowel_found_index=0\n    local vowel_found_index2=0\n    local vowel_found_index3=0\n\
    \    local vowel_found_index4=0\n    local vowel_found_index5=0\n    local vowel_found_index6=0\n\
    \    local vowel_found_index7=0\n    local vowel_found_index8=0\n    local vowel_found_index9=0\n\
    \    local vowel_found_index10=0\n    local vowel_found_index11=0\n    local vowel_found_index12=0\n\
    \    local vowel_found_index13=0\n    local vowel_found_index14=0\n    local vowel_found_index15=0\n\
    \    local vowel_found_index16=0\n    local vowel_found_index17=0\n    local vowel_found_index18=0\n\
    \    local vowel_found_index19=0\n    local vowel_found_index20=0\n    local vowel_found_index21=0\n\
    \    local vowel_found_index22=0\n    local vowel_found_index23=0\n    local vowel_found_index24=0\n\
    \    local vowel_found_index25=0\n    local vowel_found_index26=0\n    local vowel_found_index27=0\n\
    \    local vowel_found_index28=0\n    local vowel_found_index29=0\n    local vowel_found_index30=0\n\
    \    local vowel_found_index31=0\n    local vowel_found_index32=0\n    local vowel_found_index33=0\n\
    \    local vowel_found_index34=0\n    local vowel_found_index35=0\n    local vowel_found_index36=0\n\
    \    local vowel_found_index37=0\n    local vowel_found_index38=0\n    local vowel_found_index39=0\n\
    \    local vowel_found_index40=0\n    local vowel_found_index41=0\n    local vowel_found_index42=0\n\
    \    local vowel_found_index43=0\n    local vowel_found_index44=0\n    local vowel_found_index45=0\n\
    \    local vowel_found_index46=0\n    local vowel_found_index47=0\n    local vowel_found_index48=0\n\
    \    local vowel_found_index49=0\n    local vowel_found_index50=0\n    local vowel_found_index51=0\n\
    \    local vowel_found_index52=0\n    local vowel_found_index53=0\n    \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_index=0\n    local vowels_string=\"\
    \"\n    local vowels_string_index=0\n    local vowels_string_length=$((${#1} -\
    \ 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_position\n    local\
    \ vowel_found\n    local vowel_position_count\n    local vowel_position_count2\n\
    \    local vowel_position_count3\n    local vowel_position_count4\n    local vowel_position_count5\n\
    \    local vowel_position_count6\n    local vowel_position_count7\n    local vowel_position_count8\n\
    \    local vowel_position_count9\n    local vowel_position_count10\n    local\
    \ vowel_position_count11\n    local vowel_position_count12\n    local vowel_position_count13\n\
    \    local vowel_position_count14\n    local vowel_position_count15\n    local\
    \ vowel_position_count16\n    local vowel_position_count17\n    local vowel_position_count18\n\
    \    local vowel_position_count19\n    local vowel_position_count20\n    local\
    \ vowel_position_count21\n    local vowel_position_count22\n    local vowel_position_count23\n\
    \    local vowel_position_count24\n    local vowel_position_count25\n    local\
    \ vowel_position_count26\n    local vowel_position_count27\n    local vowel_position_count28\n\
    \    local vowel_position_count29\n    local vowel_position_count30\n    local\
    \ vowel_position_count31\n    local vowel_position_count32\n    local vowel_position_count33\n\
    \    local vowel_position_count34\n    local vowel_position_count35\n    local\
    \ vowel_position_count36\n    local vowel_position_count37\n    local vowel_position_count38\n\
    \    local vowel_position_count39\n    local vowel_position_count40\n    local\
    \ vowel_position_count41\n    local vowel_position_count42\n    local vowel_position_count43\n\
    \    local vowel_position_count44\n    local vowel_position_count45\n    local\
    \ vowel_position_count46\n    local vowel_position_count47\n    local vowel_position_count48\n\
    \    local vowel_position_count49\n    local vowel_position_count50\n    local\
    \ vowel_position_count51\n    local vowel_position_count52\n    local vowel_position_count53\n\
    \    local vowel_position_count54\n    local vowel_position_count55\n    local\
    \ vowel_position_count56\n    local vowel_position_count57\n    local vowel_position_count58\n\
    \    local vowel_position_count59\n    local vowel_position_count60\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel\n  local vowel_count\n  local vowel_index\n  local\
    \ vowel_found\n  local vowel_found_index\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local vowels_count=${#vowels}\n    local vowels_index=0\n    local vowels_string=\"\
    \"\n    local vowels_string_index=0\n    local vowels_string_length=$((${#1} -\
    \ 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcaxk0y0c.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmpcaxk0y0c.sh: line 74: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local string=\"$1\"\n  local vowel\n  local vowel_count\n  local vowel_index\n\
    \  local vowel_found\n  local vowel_position\n  local vowel_position_index\n \
    \ local vowel_position_count\n  local vowel_position_count2\n  local vowel_position_count3\n\
    \  local vowel_position_count4\n  local vowel_position_count5\n  local vowel_position_count6\n\
    \  local vowel_position_count7\n  local vowel_position_count8\n  local vowel_position_count9\n\
    \  local vowel_position_count10\n  local vowel_position_count11\n  local vowel_position_count12\n\
    \  local vowel_position_count13\n  local vowel_position_count14\n  local vowel_position_count15\n\
    \  local vowel_position_count16\n  local vowel_position_count17\n  local vowel_position_count18\n\
    \  local vowel_position_count19\n  local vowel_position_count20\n  local vowel_position_count21\n\
    \  local vowel_position_count22\n  local vowel_position_count23\n  local vowel_position_count24\n\
    \  local vowel_position_count25\n  local vowel_position_count26\n  local vowel_position_count27\n\
    \  local vowel_position_count28\n  local vowel_position_count29\n  local vowel_position_count30\n\
    \  local vowel_position_count31\n  local vowel_position_count32\n  local vowel_position_count33\n\
    \  local vowel_position_count34\n  local vowel_position_count35\n  local vowel_position_count36\n\
    \  local vowel_position_count37\n  local vowel_position_count38\n  local vowel_position_count39\n\
    \  local vowel_position_count40\n  local vowel_position_count41\n  local vowel_position_count42\n\
    \  local vowel_position_count43\n  local vowel_position_count44\n  local vowel_position_count45\n\
    \  local vowel_position_count46\n  local vowel_position_count47\n  local vowel_position_count48\n\
    \  local vowel_position_count49\n  local vowel_position_count50\n  local vowel_position_count51\n\
    \  local vowel_position_count52\n  local vowel_position_count53\n  local vowel_position_count54\n\
    \  local vowel_position_count55\n  local vowel_position_count56\n  local vowel_position_count57\n\
    \  local vowel_position_count\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_index2\n\
    \    local vowel_index3\n    local vowel_index4\n    local vowel_index5\n    local\
    \ vowel_index6\n    local vowel_index7\n    local vowel_index8\n    local vowel_index9\n\
    \    local vowel_index10\n    local vowel_index11\n    local vowel_index12\n \
    \   local vowel_index13\n    local vowel_index14\n    local vowel_index15\n  \
    \  local vowel_index16\n    local vowel_index17\n    local vowel_index18\n   \
    \ local vowel_index19\n    local vowel_index20\n    local vowel_index21\n    local\
    \ vowel_index22\n    local vowel_index23\n    local vowel_index24\n    local vowel_index25\n\
    \    local vowel_index26\n    local vowel_index27\n    local vowel_index28\n \
    \   local vowel_index29\n    local vowel_index30\n    local vowel_index31\n  \
    \  local vowel_index32\n    local vowel_index33\n    local vowel_index34\n   \
    \ local vowel_index35\n    local vowel_index36\n    local vowel_index37\n    local\
    \ vowel_index38\n    local vowel_index39\n    local vowel_index40\n    local vowel_index41\n\
    \    local vowel_index42\n    local vowel_index43\n    local vowel_index44\n \
    \   local vowel_index45\n    local vowel_index46\n    local vowel_index47\n  \
    \  local vowel_index48\n    local vowel_index49\n    local vowel_index50\n   \
    \ local vowel_index51\n    local vowel_index52\n    local vowel_index53\n    local\
    \ vowel_index54\n    local vowel_index55\n    local vowel_index56\n    local vowel_index57\n\
    \    local vowel_index58\n    local vowel_index59\n    local vowel_index60\n \
    \   local vowel_index61\n    local vowel_index62\n    local vowel_index63\n  \
    \  local vowel_index64\n    local vowel_index65\n    local vowel_index66\n   \
    \ local vowel_index67\n    local vowel_index68\n    local vowel_index69\n    local\
    \ vowel_index70\n    local vowel_index71\n    local vowel_index72\n    local vowel_index73\n\
    \    local vowel_index74\n    local vowel_index75\n    local vowel_index76\n \
    \   local vowel_index77\n    local vowel_index78\n    local vowel_index79\n  \
    \  local vowel_index80\n    local vowel_index81\n    local vowel_index82\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${vowels:0:1}\n  \
    \  local vowels_string_count=${#vowels_string}\n    local vowels_string_index=0\n\
    \    local vowels_string_index2=0\n    local vowels_string_index3=0\n    local\
    \ vowels_string_index4=0\n    local vowels_string_index5=0\n    local vowels_string_index6=0\n\
    \    local vowels_string_index7=0\n    local vowels_string_index8=0\n    local\
    \ vowels_string_index9=0\n    local vowels_string_index10=0\n    local vowels_string_index11=0\n\
    \    local vowels_string_index12=0\n    local vowels_string_index13=0\n    local\
    \ vowels_string_index14=0\n    local vowels_string_index15=0\n    local vowels_string_index16=0\n\
    \    local vowels_string_index17=0\n    local vowels_string_index18=0\n    local\
    \ vowels_string_index19=0\n    local vowels_string_index20=0\n    local vowels_string_index21=0\n\
    \    local vowels_string_index22=0\n    local vowels_string_index23=0\n    local\
    \ vowels_string_index24=0\n    local vowels_string_index25=0\n    local vowels_string_index26=0\n\
    \    local vowels_string_index27=0\n    local vowels_string_index28=0\n    local\
    \ vowels_string_index29=0\n    local vowels_string_index30=0\n    local vowels_string_index31=0\n\
    \    local vowels_string_index32=0\n    local vowels_string_index33=0\n    local\
    \ vowels_string_index34=0\n    local vowels_string_index35=0\n    local vowels_string_index36=0\n\
    \    local vowels_string_index37=0\n    local vowels_string_index38=0\n    local\
    \ vowels_string_index39=0\n    local vowels_string_index40=0\n    local vowels_string_index41=0\n\
    \    local vowels_string_index42=0\n    local vowels_string_index43=0\n    local\
    \ vowels_string_index44=0\n    local vowels_string_index45=0\n    local vowels_string_index46=0\n\
    \    local vowels_string_index47=0\n    local vowels_string_index48=0\n    local\
    \ vowels_string_index49=0\n    local vowels_string_index50=0\n    local vowels_string_index51=0\n\
    \    local vowels_string_index52=0\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\";\n\
    \  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n \
    \ local consonant_position=\"\";\n  local consonant_found=\"\";\n  local consonant_position=\"\
    \";\n  local consonant_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local vowel_found=\"\
    \";\n  local vowel_position=\"\";\n  local vowel_found=\"\";\n  local vowel_position=\"\
    \";\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n  local \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y AE II\
    \ OO UU\"\n  local word=$1\n  local vowel_found=\"\"\n  local vowel_position=\"\
    \"\n  local vowel_position_count=0\n  local vowel_position_index=0\n  local vowel_position_indexes=\"\
    \"\n  local vowel_position_indexes_count=0\n  local vowel_position_indexes_index=0\n\
    \  local vowel_position_indexes_indexes=\"\"\n  local vowel_position_indexes_indexes_count=0\n\
    \  local vowel_position_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_indexes=\"\
    \"\n  local vowel_position_indexes_indexes_indexes_count=0\n  local vowel_position_indexes_indexes_indexes_index=0\n\
    \  local vowel_position_indexes_indexes_indexes_indexes=\"\"\n  local vowel_position_indexes_indexes_indexes_indexes_count=0\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_index=0\n  local vowel_position_indexes_indexes_indexes_indexes_indexes=\"\
    \"\n  local vowel_position_indexes_indexes_indexes_indexes_indexes_count=0\n \
    \ local vowel_position_indexes_indexes_indexes_indexes_indexes_index=0\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes=\"\"\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes=\"\"\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes=\"\
    \"\n  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index=0\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes=\"\
    \"\n  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${1}\n    local vowels_string_size=${#vowels_string}\n\
    \    local vowels_string_length=${#vowels_string}\n    local vowels_string_last_char=${vowels_string:(-1)}\n\
    \    local vowels_string_first_char=${vowels_string:0:1}\n    local vowels_string_second_char=${vowels_string:1:1}\n\
    \    local vowels_string_third_char=${vowels_string:2:1}\n    local vowels_string_fourth_char=${vowels_string:3:1}\n\
    \    local vowels_string_fifth_char=${vowels_string:4:1}\n    local vowels_string_sixth_char=${vowels_string:5:1}\n\
    \    local vowels_string_seventh_char=${vowels_string:6:1}\n    local vowels_string_eighth_char=${vowels_string:7:1}\n\
    \    local vowels_string_ninth_char=${vowels_string:8:1}\n    local vowels_string_tenth_char=${vowels_string:9:1}\n\
    \    local vowels_string_eleventh_char=${vowels_string:10:1}\n    local vowels_string_twelfth_char=${vowels_string:11:1}\n\
    \    local vowels_string_thirteenth_char=${vowels_string:12:1}\n    local vowels_string_fourteenth_char=${vowels_string:13:1}\n\
    \    local vowels_string_fifteenth_char=${vowels_string:14:1}\n    local vowels_string_sixteenth_char=${vowels_string:15:1}\n\
    \    local vowels_string_seventeenth_char=${vowels_string:16:1}\n    local vowels_string_eighteenth_char=${vowels_string:17:1}\n\
    \    local vowels_string_nineteenth_char=${vowels_string:18:1}\n    local vowels_string_twentieth_char=${vowels_string:19:1}\n\
    \    local vowels_string_twenty_char=${vowels_string:20:1}\n    local vowels_string_twenty_oneth_char=${vowels_string:21:1}\n\
    \    local vowels_string_twenty_twoth_char=${vowels_string:22:1}\n    local vowels_string_twenty_threeth_char=${vowels_string:23:1}\n\
    \    local vowels_string_twenty_fourth_char=${vowels_string:24:1}\n    local vowels_string_twenty_fifth_char=${vowels_string:25:1}\n\
    \    local vowels_string_twenty_sixth_char=${vowels_string:26:1}\n    local vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n    local vowels=\"\
    a e i o u\"\n    local vowel_count=0\n    local vowel_found=\"\"\n    local vowel_position=0\n\
    \    local vowel_position2=0\n    local vowel_position3=0\n    local vowel_position4=0\n\
    \    local vowel_position5=0\n    local vowel_position6=0\n    local vowel_position7=0\n\
    \    local vowel_position8=0\n    local vowel_position9=0\n    local vowel_position10=0\n\
    \    local vowel_position11=0\n    local vowel_position12=0\n    local vowel_position13=0\n\
    \    local vowel_position14=0\n    local vowel_position15=0\n    local vowel_position16=0\n\
    \    local vowel_position17=0\n    local vowel_position18=0\n    local vowel_position19=0\n\
    \    local vowel_position20=0\n    local vowel_position21=0\n    local vowel_position22=0\n\
    \    local vowel_position23=0\n    local vowel_position24=0\n    local vowel_position25=0\n\
    \    local vowel_position26=0\n    local vowel_position27=0\n    local vowel_position28=0\n\
    \    local vowel_position29=0\n    local vowel_position30=0\n    local vowel_position31=0\n\
    \    local vowel_position32=0\n    local vowel_position33=0\n    local vowel_position34=0\n\
    \    local vowel_position35=0\n    local vowel_position36=0\n    local vowel_position37=0\n\
    \    local vowel_position38=0\n    local vowel_position39=0\n    local vowel_position40=0\n\
    \    local vowel_position41=0\n    local vowel_position42=0\n    local vowel_position43=0\n\
    \    local vowel_position44=0\n    local vowel_position45=0\n    local vowel_position46=0\n\
    \    local vowel_position47=0\n    local vowel_position48=0\n    local vowel_position49=0\n\
    \    local vowel_position50=0\n    local vowel_position51=0\n    local vowel_position52=0\n\
    \    local vowel_position53=0\n    local vowel_position54=0\n    local vowel_position55=0\n\
    \    local vowel_position56=0\n    local vowel_position57=0\n    local vowel_position58=0\n\
    \    local vowel_position59=0\n    local vowel_position60=0\n    local vowel_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local word=$1\n    local vowel\n    local count\n    local i\n    local j\n\
    \    local len\n    local min\n    local max\n    local vowel_count\n    local\
    \ vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n   \
    \ local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" #\
    \ vowels list\n    local word=$1\n    local vowel_found=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_index=0\n    local vowel_found2=\"\"\n    local vowel_index2=0\n\
    \    local vowel_found3=\"\"\n    local vowel_index3=0\n    local vowel_found4=\"\
    \"\n    local vowel_index4=0\n    local vowel_found5=\"\"\n    local vowel_index5=0\n\
    \    local vowel_found6=\"\"\n    local vowel_index6=0\n    local vowel_found7=\"\
    \"\n    local vowel_index7=0\n    local vowel_found8=\"\"\n    local vowel_index8=0\n\
    \    local vowel_found9=\"\"\n    local vowel_index9=0\n    local vowel_found10=\"\
    \"\n    local vowel_index10=0\n    local vowel_found11=\"\"\n    local vowel_index11=0\n\
    \    local vowel_found12=\"\"\n    local vowel_index12=0\n    local vowel_found13=\"\
    \"\n    local vowel_index13=0\n    local vowel_found14=\"\"\n    local vowel_index14=0\n\
    \    local vowel_found15=\"\"\n    local vowel_index15=0\n    local vowel_found16=\"\
    \"\n    local vowel_index16=0\n    local vowel_found17=\"\"\n    local vowel_index17=0\n\
    \    local vowel_found18=\"\"\n    local vowel_index18=0\n    local vowel_found19=\"\
    \"\n    local vowel_index19=0\n    local vowel_found20=\"\"\n    local vowel_index20=0\n\
    \    local vowel_found21=\"\"\n    local vowel_index21=0\n    local vowel_found22=\"\
    \"\n    local vowel_index22=0\n    local vowel_found23=\"\"\n    local vowel_index23=0\n\
    \    local vowel_found24=\"\"\n    local vowel_index24=0\n    local vowel_found25=\"\
    \"\n    local vowel_index25=0\n    local vowel_found26=\"\"\n    local vowel_index26=0\n\
    \    local vowel_found27=\"\"\n    local vowel_index27=0\n    local vowel_found28=\"\
    \"\n    local vowel_index28=0\n    local vowel_found29=\"\"\n    local vowel_index29=0\n\
    \    local vowel_found30=\"\"\n    local vowel_index30=0\n    local vowel_found31=\"\
    \"\n    local vowel_index31=0\n    local vowel_found32=\"\"\n    local vowel_index32=0\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_position=0\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_length\n\
    \    local consonant_index\n    local consonant_length\n    local consonant_count\n\
    \    local consonant_count2\n    local consonant_count3\n    local consonant_count4\n\
    \    local consonant_count5\n    local consonant_count6\n    local consonant_count7\n\
    \    local consonant_count8\n    local consonant_count9\n    local consonant_count10\n\
    \    local consonant_count11\n    local consonant_count12\n    local consonant_count13\n\
    \    local consonant_count14\n    local consonant_count15\n    local consonant_count16\n\
    \    local consonant_count17\n    local consonant_count18\n    local consonant_count19\n\
    \    local consonant_count20\n    local consonant_count21\n    local consonant_count22\n\
    \    local consonant_count23\n    local consonant_count24\n    local consonant_count25\n\
    \    local consonant_count26\n    local consonant_count27\n    local consonant_count28\n\
    \    local consonant_count29\n    local consonant_count30\n    local consonant_count31\n\
    \    local consonant_count32\n    local consonant_count33\n    local consonant_count34\n\
    \    local consonant_count35\n    local consonant_count36\n    local consonant_count37\n\
    \    local consonant_count38\n    local consonant_count39\n    local consonant_count40\n\
    \    local consonant_count41\n    local consonant_count42\n    local consonant_count43\n\
    \    local consonant_count44\n    local consonant_count45\n    local consonant_count46\n\
    \    local consonant_count47\n    local consonant_count48\n    local consonant_count49\n\
    \    local consonant_count50\n    local consonant_count51\n    local consonant_count52\n\
    \    local consonant_count53\n    local consonant_count54\n    local consonant_count55\n\
    \    local consonant_count56\n    local consonant_count57\n    local consonant_count58\n\
    \    local con\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" # vowel\
    \ list\n  local string=\"$1\" # input string\n  local vowel_index=$((${#string}\
    \ - 1)) # vowel index\n  local vowel_found=\"\" # vowel found\n  local vowel_found_index=0\n\
    \  local consonant_index=$((${#string} - 2)) # consonant index\n  local consonant_found=\"\
    \" # consonant found\n  local consonant_found_index=0\n  local vowel_found_index=$((${#string}\
    \ - 1)) # vowel found index\n  local consonant_found_index=$((${#string} - 2))\
    \ # consonant found index\n  local consonant_found=\"\" # consonant found\n  local\
    \ vowel_found=\"\" # vowel found\n  local consonant_found=\"\" # consonant found\n\
    \  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\" # consonant\
    \ found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\"\
    \ # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant found\n  local vowel_found=\"\" # vowel found\n  local consonant_found=\"\
    \" # consonant \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local input=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n  \
    \  local vowel_found=\"\"\n    local vowel_position=0\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_index=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_count=0\n\
    \    local conson\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel\n    local vowel_count\n    local vowel_found\n\
    \    local vowel_found_index\n    local vowel_index\n    local vowel_length\n\
    \    local vowel_length_index\n    local vowel_length_count\n    local vowel_length_index\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \    local vowel_length_count\n    local vowel_length_count\n    local vowel_length_count\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_found\n\
    \    local vowel_found_index\n    local vowel_found_index2\n    local vowel_found_index3\n\
    \    local vowel_found_index4\n    local vowel_found_index5\n    local vowel_found_index6\n\
    \    local vowel_found_index7\n    local vowel_found_index8\n    local vowel_found_index9\n\
    \    local vowel_found_index10\n    local vowel_found_index11\n    local vowel_found_index12\n\
    \    local vowel_found_index13\n    local vowel_found_index14\n    local vowel_found_index15\n\
    \    local vowel_found_index16\n    local vowel_found_index17\n    local vowel_found_index18\n\
    \    local vowel_found_index19\n    local vowel_found_index20\n    local vowel_found_index21\n\
    \    local vowel_found_index22\n    local vowel_found_index23\n    local vowel_found_index24\n\
    \    local vowel_found_index25\n    local vowel_found_index26\n    local vowel_found_index27\n\
    \    local vowel_found_index28\n    local vowel_found_index29\n    local vowel_found_index30\n\
    \    local vowel_found_index31\n    local vowel_found_index32\n    local vowel_found_index33\n\
    \    local vowel_found_index34\n    local vowel_found_index35\n    local vowel_found_index36\n\
    \    local vowel_found_index37\n    local vowel_found_index38\n    local vowel_found_index39\n\
    \    local vowel_found_index40\n    local vowel_found_index41\n    local vowel_found_index42\n\
    \    local vowel_found_index43\n    local vowel_found_index44\n    local vowel_found_index45\n\
    \    local vowel_found_index46\n    local vowel_found_index47\n    local vowel_found_index48\n\
    \    local vowel_found_index49\n    local vowel_found_index50\n    local vowel_found_index51\n\
    \    local vowel_found_index52\n    local vowel_found_index53\n    local vowel_found_index54\n\
    \    local vowel_found_index55\n    local vowel_found_index56\n    local vowel_found_index57\n\
    \    local vowel_found_index58\n    local vowel_found_index59\n    local vowel_found_index60\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n    local\
    \ vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index53=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\")\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=0\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_length\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowels_count=${#vowels[@]}\n  local vowels_string=\"\"\n  local vowels_index=0\n\
    \  local vowels_string_index=0\n  local vowels_string_index2=0\n  local vowels_string_index3=0\n\
    \  local vowels_string_index4=0\n  local vowels_string_index5=0\n  local vowels_string_index6=0\n\
    \  local vowels_string_index7=0\n  local vowels_string_index8=0\n  local vowels_string_index9=0\n\
    \  local vowels_string_index10=0\n  local vowels_string_index11=0\n  local vowels_string_index12=0\n\
    \  local vowels_string_index13=0\n  local vowels_string_index14=0\n  local vowels_string_index15=0\n\
    \  local vowels_string_index16=0\n  local vowels_string_index17=0\n  local vowels_string_index18=0\n\
    \  local vowels_string_index19=0\n  local vowels_string_index20=0\n  local vowels_string_index21=0\n\
    \  local vowels_string_index22=0\n  local vowels_string_index23=0\n  local vowels_string_index24=0\n\
    \  local vowels_string_index25=0\n  local vowels_string_index26=0\n  local vowels_string_index27=0\n\
    \  local vowels_string_index28=0\n  local vowels_string_index29=0\n  local vowels_string_index30=0\n\
    \  local vowels_string_index31=0\n  local vowels_string_index32=0\n  local vowels_string_index33=0\n\
    \  local vowels_string_index34=0\n  local vowels_string_index35=0\n  local vowels_string_index36=0\n\
    \  local vowels_string_index37=0\n  local vowels_string_index38=0\n  local vowels_string_index39=0\n\
    \  local vowels_string_index40=0\n  local vowels_string_index41=0\n  local vowels_string_index42=0\n\
    \  local vowels_string_index43=0\n  local vowels_string_index44=0\n  local vowels_string_index45=0\n\
    \  local vowels_string_index46=0\n  local vowels_string_index47=0\n  local vowels_string_index48=0\n\
    \  local vowels_string_index49=0\n  local vowels_string_index50=0\n  local vowels_string_index51=0\n\
    \  local vowels_string_index52=0\n  local vowels_string_index53=0\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found_index2\n  local vowel_found_index3\n\
    \  local vowel_found_index4\n  local vowel_found_index5\n  local vowel_found_index6\n\
    \  local vowel_found_index7\n  local vowel_found_index8\n  local vowel_found_index9\n\
    \  local vowel_found_index10\n  local vowel_found_index11\n  local vowel_found_index12\n\
    \  local vowel_found_index13\n  local vowel_found_index14\n  local vowel_found_index15\n\
    \  local vowel_found_index16\n  local vowel_found_index17\n  local vowel_found_index18\n\
    \  local vowel_found_index19\n  local vowel_found_index20\n  local vowel_found_index21\n\
    \  local vowel_found_index22\n  local vowel_found_index23\n  local vowel_found_index24\n\
    \  local vowel_found_index25\n  local vowel_found_index26\n  local vowel_found_index27\n\
    \  local vowel_found_index28\n  local vowel_found_index29\n  local vowel_found_index30\n\
    \  local vowel_found_index31\n  local vowel_found_index32\n  local vowel_found_index33\n\
    \  local vowel_found_index34\n  local vowel_found_index35\n  local vowel_found_index36\n\
    \  local vowel_found_index37\n  local vowel_found_index38\n  local vowel_found_index39\n\
    \  local vowel_found_index40\n  local vowel_found_index41\n  local vowel_found_index42\n\
    \  local vowel_found_index43\n  local vowel_found_index44\n  local vowel_found_index45\n\
    \  local vowel_found_index46\n  local vowel_found_index47\n  local vowel_found_index48\n\
    \  local vowel_found_index49\n  local vowel_found_index50\n  local vowel_found_index51\n\
    \  local vowel_found_index52\n  local vowel_found_index53\n  local vowel_found_index54\n\
    \  local vowel_found_index55\n  local vowel_found_index56\n  local vowel_found_index57\n\
    \  local vowel_found_index58\n  local vowel_found_index59\n  local vowel_found_index60\n\
    \  local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y AE II\
    \ OO UU\"\n  local input=\"$1\"\n  local vowel_count=0\n  local vowel_found=\"\
    \"\n  local vowel_position=0\n  local vowel_position2=0\n  local vowel_position3=0\n\
    \  local vowel_position4=0\n  local vowel_position5=0\n  local vowel_position6=0\n\
    \  local vowel_position7=0\n  local vowel_position8=0\n  local vowel_position9=0\n\
    \  local vowel_position10=0\n  local vowel_position11=0\n  local vowel_position12=0\n\
    \  local vowel_position13=0\n  local vowel_position14=0\n  local vowel_position15=0\n\
    \  local vowel_position16=0\n  local vowel_position17=0\n  local vowel_position18=0\n\
    \  local vowel_position19=0\n  local vowel_position20=0\n  local vowel_position21=0\n\
    \  local vowel_position22=0\n  local vowel_position23=0\n  local vowel_position24=0\n\
    \  local vowel_position25=0\n  local vowel_position26=0\n  local vowel_position27=0\n\
    \  local vowel_position28=0\n  local vowel_position29=0\n  local vowel_position30=0\n\
    \  local vowel_position31=0\n  local vowel_position32=0\n  local vowel_position33=0\n\
    \  local vowel_position34=0\n  local vowel_position35=0\n  local vowel_position36=0\n\
    \  local vowel_position37=0\n  local vowel_position38=0\n  local vowel_position39=0\n\
    \  local vowel_position40=0\n  local vowel_position41=0\n  local vowel_position42=0\n\
    \  local vowel_position43=0\n  local vowel_position44=0\n  local vowel_position45=0\n\
    \  local vowel_position46=0\n  local vowel_position47=0\n  local vowel_position48=0\n\
    \  local vowel_position49=0\n  local vowel_position50=0\n  local vowel_position51=0\n\
    \  local vowel_position52=0\n  local vowel_position53=0\n  local vowel_position54=0\n\
    \  local vowel_position55=0\n  local vowel_position56=0\n  local vowel_position57=0\n\
    \  local vowel_position58=0\n  local vowel_position59=0\n  local vowel\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowels_count=${#vowels}\n  local vowels_count_2=$((${#1} - 1))\n  local\
    \ vowels_count_3=$((${#1} - 2))\n  local vowels_count_4=$((${#1} - 3))\n  local\
    \ vowels_count_5=$((${#1} - 4))\n  local vowels_count_6=$((${#1} - 5))\n  local\
    \ vowels_count_7=$((${#1} - 6))\n  local vowels_count_8=$((${#1} - 7))\n  local\
    \ vowels_count_9=$((${#1} - 8))\n  local vowels_count_10=$((${#1} - 9))\n  local\
    \ vowels_count_11=$((${#1} - 10))\n  local vowels_count_12=$((${#1} - 11))\n \
    \ local vowels_count_13=$((${#1} - 12))\n  local vowels_count_14=$((${#1} - 13))\n\
    \  local vowels_count_15=$((${#1} - 14))\n  local vowels_count_16=$((${#1} - 15))\n\
    \  local vowels_count_17=$((${#1} - 16))\n  local vowels_count_18=$((${#1} - 17))\n\
    \  local vowels_count_19=$((${#1} - 18))\n  local vowels_count_20=$((${#1} - 19))\n\
    \  local vowels_count_21=$((${#1} - 20))\n  local vowels_count_22=$((${#1} - 21))\n\
    \  local vowels_count_23=$((${#1} - 22))\n  local vowels_count_24=$((${#1} - 23))\n\
    \  local vowels_count_25=$((${#1} - 24))\n  local vowels_count_26=$((${#1} - 25))\n\
    \  local vowels_count_27=$((${#1} - 26))\n  local vowels_count_28=$((${#1} - 27))\n\
    \  local vowels_count_29=$((${#1} - 28))\n  local vowels_count_30=$((${#1} - 29))\n\
    \  local vowels_count_31=$((${#1} - 30))\n  local vowels_count_32=$((${#1} - 31))\n\
    \  local vowels_count_33=$((${#1} - 32))\n  local vowels_count_34=$((${#1} - 33))\n\
    \  local vowels_count_35=$\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=$1\n  local vowel_found=\"\"\n  local vowel_index=0\n  local vowel_left=0\n\
    \  local vowel_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_found_left=0\n\
    \  local vowel_found_right=0\n  local vowel_found_index=0\n  local vowel_\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local input=\"$1\"\n    local output=\"\"\n    local vowel_count=0\n    local\
    \ vowel_index=0\n    local vowel_found=0\n    local consonant_count=0\n    local\
    \ consonant_index=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n    local consonant_found=0\n    local consonant_last=0\n\
    \    local consonant_first=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_index\n  local vowel_length\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found_index2\n  local vowel_found_index3\n\
    \  local vowel_found_index4\n  local vowel_found_index5\n  local vowel_found_index6\n\
    \  local vowel_found_index7\n  local vowel_found_index8\n  local vowel_found_index9\n\
    \  local vowel_found_index10\n  local vowel_found_index11\n  local vowel_found_index12\n\
    \  local vowel_found_index13\n  local vowel_found_index14\n  local vowel_found_index15\n\
    \  local vowel_found_index16\n  local vowel_found_index17\n  local vowel_found_index18\n\
    \  local vowel_found_index19\n  local vowel_found_index20\n  local vowel_found_index21\n\
    \  local vowel_found_index22\n  local vowel_found_index23\n  local vowel_found_index24\n\
    \  local vowel_found_index25\n  local vowel_found_index26\n  local vowel_found_index27\n\
    \  local vowel_found_index28\n  local vowel_found_index29\n  local vowel_found_index30\n\
    \  local vowel_found_index31\n  local vowel_found_index32\n  local vowel_found_index33\n\
    \  local vowel_found_index34\n  local vowel_found_index35\n  local vowel_found_index36\n\
    \  local vowel_found_index37\n  local vowel_found_index38\n  local vowel_found_index39\n\
    \  local vowel_found_index40\n  local vowel_found_index41\n  local vowel_found_index42\n\
    \  local vowel_found_index43\n  local vowel_found_index44\n  local vowel_found_index45\n\
    \  local vowel_found_index46\n  local vowel_found_index47\n  local vowel_found_index48\n\
    \  local vowel_found_index49\n  local vowel_found_index50\n  local vowel_found_index51\n\
    \  local vowel_found_index52\n  local vowel_found_index53\n  local vowel_found_index54\n\
    \  local vowel_found_index55\n  local vowel_found_index56\n  local vowel_found_index57\n\
    \  local vowel_found_index58\n  local vowel_found_index59\n  local vowel\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel_count=0\n    local vowel_index=0\n    local\
    \ vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index53=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${vowels:0:1}\n  \
    \  local vowels_string_count=${#vowels_string}\n    local vowels_string_index=$((${#1}\
    \ - vowels_string_count))\n    local vowels_string_index=$((${vowels_string_index}\
    \ - 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowels_string_index} + 1))\n    local vowels_string_index=$((${vowels_string_index}\
    \ + 1))\n    local vowels_string_index=$((${vowels_string_index} + 1))\n    local\
    \ vowels_string_index=$((${vowel\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmmybnxlr.sh: line 42: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmmybnxlr.sh: line 67: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=\"$1\"\n  local vowel_count=0\n  local vowel_found=\"\"\n  local\
    \ vowel_position=0\n  local vowel_position_count=0\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_position_count=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU YY \"\n    local vowels_count=${#vowels}\n    local vowels_count_2=$((${#1}-1))\n\
    \    local vowels_count_3=$((${#1}-2))\n    local vowels_count_4=$((${#1}-3))\n\
    \    local vowels_count_5=$((${#1}-4))\n    local vowels_count_6=$((${#1}-5))\n\
    \    local vowels_count_7=$((${#1}-6))\n    local vowels_count_8=$((${#1}-7))\n\
    \    local vowels_count_9=$((${#1}-8))\n    local vowels_count_10=$((${#1}-9))\n\
    \    local vowels_count_11=$((${#1}-10))\n    local vowels_count_12=$((${#1}-11))\n\
    \    local vowels_count_13=$((${#1}-12))\n    local vowels_count_14=$((${#1}-13))\n\
    \    local vowels_count_15=$((${#1}-14))\n    local vowels_count_16=$((${#1}-15))\n\
    \    local vowels_count_17=$((${#1}-16))\n    local vowels_count_18=$((${#1}-17))\n\
    \    local vowels_count_19=$((${#1}-18))\n    local vowels_count_20=$((${#1}-19))\n\
    \    local vowels_count_21=$((${#1}-20))\n    local vowels_count_22=$((${#1}-21))\n\
    \    local vowels_count_23=$((${#1}-22))\n    local vowels_count_24=$((${#1}-23))\n\
    \    local vowels_count_25=$((${#1}-24))\n    local vowels_count_26=$((${#1}-25))\n\
    \    local vowels_count_27=$((${#1}-26))\n    local vowels_count_28=$((${#1}-27))\n\
    \    local vowels_count_29=$((${#1}-28))\n    local vowels_count_30=$((${#1}-29))\n\
    \    local vowels_count_31=$((${#1}-30))\n    local vowels_count_32=$((${#1}-31))\n\
    \    local vowels_count_33=$((${#1}-32))\n    local vowels_count_34=$((${#1}-33))\n\
    \    local vowels_count_35=$((\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp8msct7z.sh: line 46: unexpected EOF while looking for matching
    `)''

    /tmp/tmpp8msct7z.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" #\
    \ vowels to search for\n    local word=$1\n    local vowel_found=\"\"\n    local\
    \ vowel_position=\"\"\n    local vowel_position_count=0\n    local vowel_position_count2=0\n\
    \    local vowel_position_count3=0\n    local vowel_position_count4=0\n    local\
    \ vowel_position_count5=0\n    local vowel_position_count6=0\n    local vowel_position_count7=0\n\
    \    local vowel_position_count8=0\n    local vowel_position_count9=0\n    local\
    \ vowel_position_count10=0\n    local vowel_position_count11=0\n    local vowel_position_count12=0\n\
    \    local vowel_position_count13=0\n    local vowel_position_count14=0\n    local\
    \ vowel_position_count15=0\n    local vowel_position_count16=0\n    local vowel_position_count17=0\n\
    \    local vowel_position_count18=0\n    local vowel_position_count19=0\n    local\
    \ vowel_position_count20=0\n    local vowel_position_count21=0\n    local vowel_position_count22=0\n\
    \    local vowel_position_count23=0\n    local vowel_position_count24=0\n    local\
    \ vowel_position_count25=0\n    local vowel_position_count26=0\n    local vowel_position_count27=0\n\
    \    local vowel_position_count28=0\n    local vowel_position_count29=0\n    local\
    \ vowel_position_count30=0\n    local vowel_position_count31=0\n    local vowel_position_count32=0\n\
    \    local vowel_position_count33=0\n    local vowel_position_count34=0\n    local\
    \ vowel_position_count35=0\n    local vowel_position_count36=0\n    local vowel_position_count37=0\n\
    \    local vowel_position_count38=0\n    local vowel_position_count39=0\n    local\
    \ vowel_position_count40=0\n    local vowel_position_count41=0\n    local vowel_position_count42=0\n\
    \    local vowel_position_count43=0\n    local vowel_position_count44=0\n    local\
    \ vowel_position_count45=0\n    local vowel_position_count46=0\n    local vowel_position_count47=0\n\
    \    local vowel_position_count48=0\n    local vowel_position_count49=0\n    local\
    \ vowel_position_count50=0\n    local vowel_position_count51=0\n    local vowel_position_count52=0\n\
    \    local vowel_position_count53=0\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_index=0\n    local vowels_string=\"\
    \"\n    local vowels_string_index=0\n    local vowels_string_length=$((${#1} -\
    \ 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$((${#1} - 1))\n    local vowels_string_length=$((${#1}\
    \ - 1))\n    local vowels_string_length=$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel\n    local vowel_found\n    local vowel_index\n\
    \    local vowel_length\n    local vowel_length_index\n    local vowel_length_index2\n\
    \    local vowel_length_index3\n    local vowel_length_index4\n    local vowel_length_index5\n\
    \    local vowel_length_index6\n    local vowel_length_index7\n    local vowel_length_index8\n\
    \    local vowel_length_index9\n    local vowel_length_index10\n    local vowel_length_index11\n\
    \    local vowel_length_index12\n    local vowel_length_index13\n    local vowel_length_index14\n\
    \    local vowel_length_index15\n    local vowel_length_index16\n    local vowel_length_index17\n\
    \    local vowel_length_index18\n    local vowel_length_index19\n    local vowel_length_index20\n\
    \    local vowel_length_index21\n    local vowel_length_index22\n    local vowel_length_index23\n\
    \    local vowel_length_index24\n    local vowel_length_index25\n    local vowel_length_index26\n\
    \    local vowel_length_index27\n    local vowel_length_index28\n    local vowel_length_index29\n\
    \    local vowel_length_index30\n    local vowel_length_index31\n    local vowel_length_index32\n\
    \    local vowel_length_index33\n    local vowel_length_index34\n    local vowel_length_index35\n\
    \    local vowel_length_index36\n    local vowel_length_index37\n    local vowel_length_index38\n\
    \    local vowel_length_index39\n    local vowel_length_index40\n    local vowel_length_index41\n\
    \    local vowel_length_index42\n    local vowel_length_index43\n    local vowel_length_index44\n\
    \    local vowel_length_index45\n    local vowel_length_index46\n    local vowel_length_index47\n\
    \    local vowel_length_index48\n    local vowel_length_index49\n    local vowel_length_index50\n\
    \    local vowel_length_index51\n    local vowel_length_index52\n    local vowel_length_index53\n\
    \    local vowel_length_index54\n    local vowel_length_index55\n    local vowel_length_index56\n\
    \    local vowel_length_index57\n    local vowel_length_index58\n    local vowel_length_index59\n\
    \    local vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel\n    local count\n    local i\n    local j\n\
    \    local vowel_count\n    local vowel_index\n    local vowel_found\n    local\
    \ vowel_found_index\n    local vowel_found_index2\n    local vowel_found_index3\n\
    \    local vowel_found_index4\n    local vowel_found_index5\n    local vowel_found_index6\n\
    \    local vowel_found_index7\n    local vowel_found_index8\n    local vowel_found_index9\n\
    \    local vowel_found_index10\n    local vowel_found_index11\n    local vowel_found_index12\n\
    \    local vowel_found_index13\n    local vowel_found_index14\n    local vowel_found_index15\n\
    \    local vowel_found_index16\n    local vowel_found_index17\n    local vowel_found_index18\n\
    \    local vowel_found_index19\n    local vowel_found_index20\n    local vowel_found_index21\n\
    \    local vowel_found_index22\n    local vowel_found_index23\n    local vowel_found_index24\n\
    \    local vowel_found_index25\n    local vowel_found_index26\n    local vowel_found_index27\n\
    \    local vowel_found_index28\n    local vowel_found_index29\n    local vowel_found_index30\n\
    \    local vowel_found_index31\n    local vowel_found_index32\n    local vowel_found_index33\n\
    \    local vowel_found_index34\n    local vowel_found_index35\n    local vowel_found_index36\n\
    \    local vowel_found_index37\n    local vowel_found_index38\n    local vowel_found_index39\n\
    \    local vowel_found_index40\n    local vowel_found_index41\n    local vowel_found_index42\n\
    \    local vowel_found_index43\n    local vowel_found_index44\n    local vowel_found_index45\n\
    \    local vowel_found_index46\n    local vowel_found_index47\n    local vowel_found_index48\n\
    \    local vowel_found_index49\n    local vowel_found_index50\n    local vowel_found_index51\n\
    \    local vowel_found_index52\n    local vowel_found_index53\n    local vowel_found_index54\n\
    \    local vowel_found_index55\n    local vowel_found_index56\n    local vowel_found_index57\n\
    \    local vowel_found_index58\n    \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=$1\n  local vowel\n  local vowel_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ input=\"$1\"\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_found_index=0\n  local vowel_found_index2=0\n  local vowel_found_index3=0\n\
    \  local vowel_found_index4=0\n  local vowel_found_index5=0\n  local vowel_found_index6=0\n\
    \  local vowel_found_index7=0\n  local vowel_found_index8=0\n  local vowel_found_index9=0\n\
    \  local vowel_found_index10=0\n  local vowel_found_index11=0\n  local vowel_found_index12=0\n\
    \  local vowel_found_index13=0\n  local vowel_found_index14=0\n  local vowel_found_index15=0\n\
    \  local vowel_found_index16=0\n  local vowel_found_index17=0\n  local vowel_found_index18=0\n\
    \  local vowel_found_index19=0\n  local vowel_found_index20=0\n  local vowel_found_index21=0\n\
    \  local vowel_found_index22=0\n  local vowel_found_index23=0\n  local vowel_found_index24=0\n\
    \  local vowel_found_index25=0\n  local vowel_found_index26=0\n  local vowel_found_index27=0\n\
    \  local vowel_found_index28=0\n  local vowel_found_index29=0\n  local vowel_found_index30=0\n\
    \  local vowel_found_index31=0\n  local vowel_found_index32=0\n  local vowel_found_index33=0\n\
    \  local vowel_found_index34=0\n  local vowel_found_index35=0\n  local vowel_found_index36=0\n\
    \  local vowel_found_index37=0\n  local vowel_found_index38=0\n  local vowel_found_index39=0\n\
    \  local vowel_found_index40=0\n  local vowel_found_index41=0\n  local vowel_found_index42=0\n\
    \  local vowel_found_index43=0\n  local vowel_found_index44=0\n  local vowel_found_index45=0\n\
    \  local vowel_found_index46=0\n  local vowel_found_index47=0\n  local vowel_found_index48=0\n\
    \  local vowel_found_index49=0\n  local vowel_found_index50=0\n  local vowel_found_index51=0\n\
    \  local vowel_found_index52=0\n  local vowel_found_index53=0\n  \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=\"$1\"\n    local\
    \ vowels=\"a e i o u\"\n    local vowels_count=$(echo \"$vowels\" | wc -w)\n \
    \   local vowels_count_1=$(echo \"$vowels\" | sed 's/ //g' | wc -w)\n    local\
    \ vowels_count_2=$(echo \"$vowels\" | sed 's/ //g' | sed 's/ //g' | wc -w)\n \
    \   local vowels_count_3=$(echo \"$vowels\" | sed 's/ //g' | sed 's/ //g' | sed\
    \ 's/ //g' | wc -w)\n    local vowels_count_4=$(echo \"$vowels\" | sed 's/ //g'\
    \ | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_5=$(echo\
    \ \"$vowels\" | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed\
    \ 's/ //g' | wc -w)\n    local vowels_count_6=$(echo \"$vowels\" | sed 's/ //g'\
    \ | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' |\
    \ wc -w)\n    local vowels_count_7=$(echo \"$vowels\" | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g'\
    \ | wc -w)\n    local vowels_count_8=$(echo \"$vowels\" | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g'\
    \ | sed 's/ //g' | wc -w)\n    local vowels_count_9=$(echo \"$vowels\" | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g'\
    \ | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_10=$(echo\
    \ \"$vowels\" | \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl69wlc_6.sh: line 23: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl69wlc_6.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU\"\n    local input=\"$1\"\n    local vowel\n    local output\n    local\
    \ i\n    local j\n    local len\n    local len2\n    local len3\n    local len4\n\
    \    local len5\n    local len6\n    local len7\n    local len8\n    local len9\n\
    \    local len10\n    local len11\n    local len12\n    local len13\n    local\
    \ len14\n    local len15\n    local len16\n    local len17\n    local len18\n\
    \    local len19\n    local len20\n    local len21\n    local len22\n    local\
    \ len23\n    local len24\n    local len25\n    local len26\n    local len27\n\
    \    local len28\n    local len29\n    local len30\n    local len31\n    local\
    \ len32\n    local len33\n    local len34\n    local len35\n    local len36\n\
    \    local len37\n    local len38\n    local len39\n    local len40\n    local\
    \ len41\n    local len42\n    local len43\n    local len44\n    local len45\n\
    \    local len46\n    local len47\n    local len48\n    local len49\n    local\
    \ len50\n    local len51\n    local len52\n    local len53\n    local len54\n\
    \    local len55\n    local len56\n    local len57\n    local len58\n    local\
    \ len59\n    local len60\n    local len61\n    local len62\n    local len63\n\
    \    local len64\n    local len65\n    local len66\n    local len67\n    local\
    \ len68\n    local len69\n    local len70\n    local len71\n    local len72\n\
    \    local len73\n    local len74\n    local len75\n    local len76\n    local\
    \ len77\n    local len78\n    local len79\n    local len80\n    local len81\n\
    \    local len82\n    local len83\n    local len84\n    local len85\n    local\
    \ len86\n    local len87\n    local len88\n    local len89\n    local len90\n\
    \    local len91\n    local len92\n    local len93\n    local len94\n    local\
    \ \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=\"$1\"\n    local\
    \ vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n   \
    \ local vowel_found=\"\"\n    local vowel_position=0\n    local vowel_position_count=0\n\
    \    local vowel_position_index=0\n    local vowel_position_found=\"\"\n    local\
    \ vowel_position_position=0\n    local vowel_position_position_count=0\n    local\
    \ vowel_position_position_index=0\n    local vowel_position_position_found=\"\"\
    \n    local vowel_position_position_position=0\n    local vowel_position_position_position_count=0\n\
    \    local vowel_position_position_position_index=0\n    local vowel_position_position_position_found=\"\
    \"\n    local vowel_position_position_position_position=0\n    local vowel_position_position_position_position_count=0\n\
    \    local vowel_position_position_position_position_index=0\n    local vowel_position_position_position_position_found=\"\
    \"\n    local vowel_position_position_position_position_position=0\n    local\
    \ vowel_position_position_position_position_position_count=0\n    local vowel_position_position_position_position_position_index=0\n\
    \    local vowel_position_position_position_position_position_found=\"\"\n   \
    \ local vowel_position_position_position_position_position_position=0\n    local\
    \ vowel_position_position_position_position_position_position_count=0\n    local\
    \ vowel_position_position_position_position_position_position_index=0\n    local\
    \ vowel_position_position_position_position_position_position_found=\"\"\n   \
    \ local vowel_position_position_position_position_position_position_position=0\n\
    \    local vowel_position_position_position_position_position_position_position_count=0\n\
    \    local vowel_position_position_position_position_position_position_position_index=0\n\
    \    local vowel_position_position_position_position_position_position_position_found=\"\
    \"\n    local vowel_position_position_position_position_position_position_position_position=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_count=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_index=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_found=\"\
    \"\n    local vowel_position_position_position_position_position_position_position_position_position=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_count=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_index=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_found=\"\
    \"\n    local vowel_position_position_position_position_position_position_position_position_position=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_position_count=0\n\
    \    local vowel_position_position_position_position_position_position_position_position_position_index=0\n\
    \    local vowel_position_position_position_position_position_position_\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local word=$1\n    local vowel_found=\"\"\n    local vowel_index=0\n    local\
    \ vowel_length=0\n    local consonant_index=0\n    local consonant_length=0\n\
    \    local consonant_found=\"\"\n    local consonant_found_index=0\n    local\
    \ consonant_found_length=0\n    local consonant_found2=\"\"\n    local consonant_found2_index=0\n\
    \    local consonant_found2_length=0\n    local consonant_found3=\"\"\n    local\
    \ consonant_found3_index=0\n    local consonant_found3_length=0\n    local consonant_found4=\"\
    \"\n    local consonant_found4_index=0\n    local consonant_found4_length=0\n\
    \    local consonant_found5=\"\"\n    local consonant_found5_index=0\n    local\
    \ consonant_found5_length=0\n    local consonant_found6=\"\"\n    local consonant_found6_index=0\n\
    \    local consonant_found6_length=0\n    local consonant_found7=\"\"\n    local\
    \ consonant_found7_index=0\n    local consonant_found7_length=0\n    local consonant_found8=\"\
    \"\n    local consonant_found8_index=0\n    local consonant_found8_length=0\n\
    \    local consonant_found9=\"\"\n    local consonant_found9_index=0\n    local\
    \ consonant_found9_length=0\n    local consonant_found10=\"\"\n    local consonant_found10_index=0\n\
    \    local consonant_found10_length=0\n    local consonant_found11=\"\"\n    local\
    \ consonant_found11_index=0\n    local consonant_found11_length=0\n    local consonant_found12=\"\
    \"\n    local consonant_found12_index=0\n    local consonant_found12_length=0\n\
    \    local consonant_found13=\"\"\n    local consonant_found13_index=0\n    local\
    \ consonant_found13_length=0\n    local consonant_found14=\"\"\n    local consonant_found14_index=0\n\
    \    local consonant_found14_length=0\n    local consonant_found15=\"\"\n    local\
    \ consonant_found15_index=0\n    local consonant_found15_length=0\n    local consonant_found16=\"\
    \"\n    local consonant_found16_index=0\n    local consonant_found16_length\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowel_count=0\n    local vowel_found=\"\"\n    local vowel_position=0\n\
    \    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\";\n\
    \    local word=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n   \
    \ local vowel_found=\"\"\n    local consonant_count=0\n    local consonant_index=0\n\
    \    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local con\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ input=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_length\n  local\
    \ vowel_found\n  local vowel_found_index\n  local vowel_found_index2\n  local\
    \ vowel_found_index3\n  local vowel_found_index4\n  local vowel_found_index5\n\
    \  local vowel_found_index6\n  local vowel_found_index7\n  local vowel_found_index8\n\
    \  local vowel_found_index9\n  local vowel_found_index10\n  local vowel_found_index11\n\
    \  local vowel_found_index12\n  local vowel_found_index13\n  local vowel_found_index14\n\
    \  local vowel_found_index15\n  local vowel_found_index16\n  local vowel_found_index17\n\
    \  local vowel_found_index18\n  local vowel_found_index19\n  local vowel_found_index20\n\
    \  local vowel_found_index21\n  local vowel_found_index22\n  local vowel_found_index23\n\
    \  local vowel_found_index24\n  local vowel_found_index25\n  local vowel_found_index26\n\
    \  local vowel_found_index27\n  local vowel_found_index28\n  local vowel_found_index29\n\
    \  local vowel_found_index30\n  local vowel_found_index31\n  local vowel_found_index32\n\
    \  local vowel_found_index33\n  local vowel_found_index34\n  local vowel_found_index35\n\
    \  local vowel_found_index36\n  local vowel_found_index37\n  local vowel_found_index38\n\
    \  local vowel_found_index39\n  local vowel_found_index40\n  local vowel_found_index41\n\
    \  local vowel_found_index42\n  local vowel_found_index43\n  local vowel_found_index44\n\
    \  local vowel_found_index45\n  local vowel_found_index46\n  local vowel_found_index47\n\
    \  local vowel_found_index48\n  local vowel_found_index49\n  local vowel_found_index50\n\
    \  local vowel_found_index51\n  local vowel_found_index52\n  local vowel_found_index53\n\
    \  local vowel_found_index54\n  local vowel_found_index55\n  local vowel_found_index56\n\
    \  local vowel_found_index57\n  local vowel_found_index58\n  local vowel_found_index59\n\
    \  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_pos\n    local vowel_pos2\n\
    \    local vowel_pos3\n    local vowel_pos4\n    local vowel_pos5\n    local vowel_pos6\n\
    \    local vowel_pos7\n    local vowel_pos8\n    local vowel_pos9\n    local vowel_pos10\n\
    \    local vowel_pos11\n    local vowel_pos12\n    local vowel_pos13\n    local\
    \ vowel_pos14\n    local vowel_pos15\n    local vowel_pos16\n    local vowel_pos17\n\
    \    local vowel_pos18\n    local vowel_pos19\n    local vowel_pos20\n    local\
    \ vowel_pos21\n    local vowel_pos22\n    local vowel_pos23\n    local vowel_pos24\n\
    \    local vowel_pos25\n    local vowel_pos26\n    local vowel_pos27\n    local\
    \ vowel_pos28\n    local vowel_pos29\n    local vowel_pos30\n    local vowel_pos31\n\
    \    local vowel_pos32\n    local vowel_pos33\n    local vowel_pos34\n    local\
    \ vowel_pos35\n    local vowel_pos36\n    local vowel_pos37\n    local vowel_pos38\n\
    \    local vowel_pos39\n    local vowel_pos40\n    local vowel_pos41\n    local\
    \ vowel_pos42\n    local vowel_pos43\n    local vowel_pos44\n    local vowel_pos45\n\
    \    local vowel_pos46\n    local vowel_pos47\n    local vowel_pos48\n    local\
    \ vowel_pos49\n    local vowel_pos50\n    local vowel_pos51\n    local vowel_pos52\n\
    \    local vowel_pos53\n    local vowel_pos54\n    local vowel_pos55\n    local\
    \ vowel_pos56\n    local vowel_pos57\n    local vowel_pos58\n    local vowel_pos59\n\
    \    local vowel_pos60\n    local vowel_pos61\n    local vowel_pos62\n    local\
    \ vowel_pos63\n    local vowel_pos64\n    local vowel_pos65\n    local vowel_pos66\n\
    \    local vowel_pos67\n    local vowel_pos68\n    local vowel_pos69\n    local\
    \ vowel_pos70\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local vowels_count=${#vowels}\n    local vowels_count_2=${#vowels}\n    local\
    \ vowels_count_3=${#vowels}\n    local vowels_count_4=${#vowels}\n    local vowels_count_5=${#vowels}\n\
    \    local vowels_count_6=${#vowels}\n    local vowels_count_7=${#vowels}\n  \
    \  local vowels_count_8=${#vowels}\n    local vowels_count_9=${#vowels}\n    local\
    \ vowels_count_10=${#vowels}\n    local vowels_count_11=${#vowels}\n    local\
    \ vowels_count_12=${#vowels}\n    local vowels_count_13=${#vowels}\n    local\
    \ vowels_count_14=${#vowels}\n    local vowels_count_15=${#vowels}\n    local\
    \ vowels_count_16=${#vowels}\n    local vowels_count_17=${#vowels}\n    local\
    \ vowels_count_18=${#vowels}\n    local vowels_count_19=${#vowels}\n    local\
    \ vowels_count_20=${#vowels}\n    local vowels_count_21=${#vowels}\n    local\
    \ vowels_count_22=${#vowels}\n    local vowels_count_23=${#vowels}\n    local\
    \ vowels_count_24=${#vowels}\n    local vowels_count_25=${#vowels}\n    local\
    \ vowels_count_26=${#vowels}\n    local vowels_count_27=${#vowels}\n    local\
    \ vowels_count_28=${#vowels}\n    local vowels_count_29=${#vowels}\n    local\
    \ vowels_count_30=${#vowels}\n    local vowels_count_31=${#vowels}\n    local\
    \ vowels_count_32=${#vowels}\n    local vowels_count_33=${#vowels}\n    local\
    \ vowels_count_34=${#vowels}\n    local vowels_count_35=${#vowels}\n    local\
    \ vowels_count_36=${#vowels}\n    local vowels_count_37=${#vowels}\n    local\
    \ vowels_count_38=${#vowels}\n    local vowels_count_39=${#vowels}\n    local\
    \ vowels_count_40=${#vowels}\n    local vowels_count_41=${#vowels}\n    local\
    \ vowels_count_42=${#vowels}\n    local vowels_count_43=${#vowels}\n    local\
    \ vowels_count_44=${#vowels}\n    local vowels_count_45=${#vowels}\n    local\
    \ vowels_count_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local word=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_index2\n\
    \    local vowel_index3\n    local vowel_index4\n    local vowel_index5\n    local\
    \ vowel_index6\n    local vowel_index7\n    local vowel_index8\n    local vowel_index9\n\
    \    local vowel_index10\n    local vowel_index11\n    local vowel_index12\n \
    \   local vowel_index13\n    local vowel_index14\n    local vowel_index15\n  \
    \  local vowel_index16\n    local vowel_index17\n    local vowel_index18\n   \
    \ local vowel_index19\n    local vowel_index20\n    local vowel_index21\n    local\
    \ vowel_index22\n    local vowel_index23\n    local vowel_index24\n    local vowel_index25\n\
    \    local vowel_index26\n    local vowel_index27\n    local vowel_index28\n \
    \   local vowel_index29\n    local vowel_index30\n    local vowel_index31\n  \
    \  local vowel_index32\n    local vowel_index33\n    local vowel_index34\n   \
    \ local vowel_index35\n    local vowel_index36\n    local vowel_index37\n    local\
    \ vowel_index38\n    local vowel_index39\n    local vowel_index40\n    local vowel_index41\n\
    \    local vowel_index42\n    local vowel_index43\n    local vowel_index44\n \
    \   local vowel_index45\n    local vowel_index46\n    local vowel_index47\n  \
    \  local vowel_index48\n    local vowel_index49\n    local vowel_index50\n   \
    \ local vowel_index51\n    local vowel_index52\n    local vowel_index53\n    local\
    \ vowel_index54\n    local vowel_index55\n    local vowel_index56\n    local vowel_index57\n\
    \    local vowel_index58\n    local vowel_index59\n    local vowel_index60\n \
    \   local vowel_index61\n    local vowel_index62\n    local vowel_index63\n  \
    \  local vowel_index64\n    local vowel_index65\n    local vowel_index66\n   \
    \ local vowel_index67\n    local vowel_index68\n    local vowel_index69\n    local\
    \ vowel_index70\n    local vowel_index71\n    local vowel_index72\n    local vowel_index73\n\
    \    local vowel_index74\n    local vowel_index75\n    local vowel_index76\n \
    \   local vowel_index77\n    local vowel_index78\n    local vowel_index79\n  \
    \  local vowel_index80\n    local vowel_index81\n    local vowel_index82\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n    local vowels=(\"\
    a\" \"e\" \"i\" \"o\" \"u\")\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=false\n    local vowel_found_index=-1\n    local vowel_found_count=-1\n\
    \    local vowel_found_string=\"\"\n    local vowel_found_count=0\n    local vowel_found_string=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_string=\"\"\n    local\
    \ vowel_found_count=0\n    local vowel_found_string=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_found_string=\"\"\n    local vowel_found_count=0\n    local vowel_found_string=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_string=\"\"\n    local\
    \ vowel_found_count=0\n    local vowel_found_string=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_found_string=\"\"\n    local vowel_found_count=0\n    local vowel_found_string=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_string=\"\"\n    local\
    \ vowel_found_count=0\n    local vowel_found_string=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_found_string=\"\"\n    local vowel_found_count=0\n    local vowel_found_string=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_string=\"\"\n    local\
    \ vowel_found_count=0\n    local vowel_found_string=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_found_string=\"\"\n    local vowel_found_count=0\n    local vowel_found_string=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_string=\"\"\n    local\
    \ vowel_found_count=0\n    local vowel_found_string=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_found_string=\"\"\n    local vowel_found_count=0\n    local vowel_found_string=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_string=\"\"\n    local\
    \ vowel_found_count=0\n    local vowel_found_string=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_found_string=\"\"\n    local vowel_found_count=0\n    local vowel_found_string=\"\
    \"\n    local vowel_found_index=0\n    local vowel_found_string=\"\"\n    local\
    \ vowel_found_count=0\n    local vowel_found_string=\"\"\n    local vowel_found_index=0\n\
    \    local vowel_found_string\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local vowels_count=${#vowels}\n    local vowels_count_2=$((${#1} - 1))\n \
    \   local vowels_count_3=$((${#1} - 2))\n    local vowels_count_4=$((${#1} - 3))\n\
    \    local vowels_count_5=$((${#1} - 4))\n    local vowels_count_6=$((${#1} -\
    \ 5))\n    local vowels_count_7=$((${#1} - 6))\n    local vowels_count_8=$((${#1}\
    \ - 7))\n    local vowels_count_9=$((${#1} - 8))\n    local vowels_count_10=$((${#1}\
    \ - 9))\n    local vowels_count_11=$((${#1} - 10))\n    local vowels_count_12=$((${#1}\
    \ - 11))\n    local vowels_count_13=$((${#1} - 12))\n    local vowels_count_14=$((${#1}\
    \ - 13))\n    local vowels_count_15=$((${#1} - 14))\n    local vowels_count_16=$((${#1}\
    \ - 15))\n    local vowels_count_17=$((${#1} - 16))\n    local vowels_count_18=$((${#1}\
    \ - 17))\n    local vowels_count_19=$((${#1} - 18))\n    local vowels_count_20=$((${#1}\
    \ - 19))\n    local vowels_count_21=$((${#1} - 20))\n    local vowels_count_22=$((${#1}\
    \ - 21))\n    local vowels_count_23=$((${#1} - 22))\n    local vowels_count_24=$((${#1}\
    \ - 23))\n    local vowels_count_25=$((${#1} - 24))\n    local vowels_count_26=$((${#1}\
    \ - 25))\n    local vowels_count_27=$((${#1} - 26))\n    local vowels_count_28=$((${#1}\
    \ - 27))\n    local vowels_count_29=$((${#1} - 28))\n    local vowels_count_30=$((${#1}\
    \ - 29))\n    local vowels_count_31=$((${#1} - 30))\n    local vowels_count_32=$((${#1}\
    \ - 31))\n    local vowels_count_33=$((${#1} - 32))\n    local vowels_count_34=$((${#1}\
    \ - 33))\n    local vowels_count_35=$((\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqfzf3dng.sh: line 46: unexpected EOF while looking for matching
    `)''

    /tmp/tmpqfzf3dng.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel\n    local vowel_index\n    local vowel_length\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local word=$1\n    local vowel\n    local vowel_index\n    local vowel_index2\n\
    \    local vowel_index3\n    local vowel_index4\n    local vowel_index5\n    local\
    \ vowel_index6\n    local vowel_index7\n    local vowel_index8\n    local vowel_index9\n\
    \    local vowel_index10\n    local vowel_index11\n    local vowel_index12\n \
    \   local vowel_index13\n    local vowel_index14\n    local vowel_index15\n  \
    \  local vowel_index16\n    local vowel_index17\n    local vowel_index18\n   \
    \ local vowel_index19\n    local vowel_index20\n    local vowel_index21\n    local\
    \ vowel_index22\n    local vowel_index23\n    local vowel_index24\n    local vowel_index25\n\
    \    local vowel_index26\n    local vowel_index27\n    local vowel_index28\n \
    \   local vowel_index29\n    local vowel_index30\n    local vowel_index31\n  \
    \  local vowel_index32\n    local vowel_index33\n    local vowel_index34\n   \
    \ local vowel_index35\n    local vowel_index36\n    local vowel_index37\n    local\
    \ vowel_index38\n    local vowel_index39\n    local vowel_index40\n    local vowel_index41\n\
    \    local vowel_index42\n    local vowel_index43\n    local vowel_index44\n \
    \   local vowel_index45\n    local vowel_index46\n    local vowel_index47\n  \
    \  local vowel_index48\n    local vowel_index49\n    local vowel_index50\n   \
    \ local vowel_index51\n    local vowel_index52\n    local vowel_index53\n    local\
    \ vowel_index54\n    local vowel_index55\n    local vowel_index56\n    local vowel_index57\n\
    \    local vowel_index58\n    local vowel_index59\n    local vowel_index60\n \
    \   local vowel_index61\n    local vowel_index62\n    local vowel_index63\n  \
    \  local vowel_index64\n    local vowel_index65\n    local vowel_index66\n   \
    \ local vowel_index67\n    local vowel_index68\n    local vowel_index69\n    local\
    \ vowel_index70\n    local vowel_index71\n    local vowel_index72\n    local vowel_index73\n\
    \    local vowel_index74\n    local vowel_index75\n    local vowel_index76\n \
    \   local vowel_index77\n    local vowel_index78\n    local vowel_index79\n  \
    \  local vowel_index80\n    local vowel_index81\n    local vowel_index82\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel\n    local vowel_count\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_count_2=$((${#1} - 1))\n\
    \    local vowels_count_3=$((${#1} - 2))\n    local vowels_count_4=$((${#1} -\
    \ 3))\n    local vowels_count_5=$((${#1} - 4))\n    local vowels_count_6=$((${#1}\
    \ - 5))\n    local vowels_count_7=$((${#1} - 6))\n    local vowels_count_8=$((${#1}\
    \ - 7))\n    local vowels_count_9=$((${#1} - 8))\n    local vowels_count_10=$((${#1}\
    \ - 9))\n    local vowels_count_11=$((${#1} - 10))\n    local vowels_count_12=$((${#1}\
    \ - 11))\n    local vowels_count_13=$((${#1} - 12))\n    local vowels_count_14=$((${#1}\
    \ - 13))\n    local vowels_count_15=$((${#1} - 14))\n    local vowels_count_16=$((${#1}\
    \ - 15))\n    local vowels_count_17=$((${#1} - 16))\n    local vowels_count_18=$((${#1}\
    \ - 17))\n    local vowels_count_19=$((${#1} - 18))\n    local vowels_count_20=$((${#1}\
    \ - 19))\n    local vowels_count_21=$((${#1} - 20))\n    local vowels_count_22=$((${#1}\
    \ - 21))\n    local vowels_count_23=$((${#1} - 22))\n    local vowels_count_24=$((${#1}\
    \ - 23))\n    local vowels_count_25=$((${#1} - 24))\n    local vowels_count_26=$((${#1}\
    \ - 25))\n    local vowels_count_27=$((${#1} - 26))\n    local vowels_count_28=$((${#1}\
    \ - 27))\n    local vowels_count_29=$((${#1} - 28))\n    local vowels_count_30=$((${#1}\
    \ - 29))\n    local vowels_count_31=$((${#1} - 30))\n    local vowels_count_32=$((${#1}\
    \ - 31))\n    local vowels_count_33=$((${#1} - 32))\n    local vowels_count_34=$((${#1}\
    \ - 33))\n    local vowels_count_35=$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n    local\
    \ vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found_index3=0\n    local vowel_found_index4=0\n    local vowel_found_index5=0\n\
    \    local vowel_found_index6=0\n    local vowel_found_index7=0\n    local vowel_found_index8=0\n\
    \    local vowel_found_index9=0\n    local vowel_found_index10=0\n    local vowel_found_index11=0\n\
    \    local vowel_found_index12=0\n    local vowel_found_index13=0\n    local vowel_found_index14=0\n\
    \    local vowel_found_index15=0\n    local vowel_found_index16=0\n    local vowel_found_index17=0\n\
    \    local vowel_found_index18=0\n    local vowel_found_index19=0\n    local vowel_found_index20=0\n\
    \    local vowel_found_index21=0\n    local vowel_found_index22=0\n    local vowel_found_index23=0\n\
    \    local vowel_found_index24=0\n    local vowel_found_index25=0\n    local vowel_found_index26=0\n\
    \    local vowel_found_index27=0\n    local vowel_found_index28=0\n    local vowel_found_index29=0\n\
    \    local vowel_found_index30=0\n    local vowel_found_index31=0\n    local vowel_found_index32=0\n\
    \    local vowel_found_index33=0\n    local vowel_found_index34=0\n    local vowel_found_index35=0\n\
    \    local vowel_found_index36=0\n    local vowel_found_index37=0\n    local vowel_found_index38=0\n\
    \    local vowel_found_index39=0\n    local vowel_found_index40=0\n    local vowel_found_index41=0\n\
    \    local vowel_found_index42=0\n    local vowel_found_index43=0\n    local vowel_found_index44=0\n\
    \    local vowel_found_index45=0\n    local vowel_found_index46=0\n    local vowel_found_index47=0\n\
    \    local vowel_found_index48=0\n    local vowel_found_index49=0\n    local vowel_found_index50=0\n\
    \    local vowel_found_index51=0\n    local vowel_found_index52=0\n    local vowel_found_index53=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local word=$1\n    local vowel\n    local vowel_pos\n    local vowel_pos2\n\
    \    local vowel_pos3\n    local vowel_pos4\n    local vowel_pos5\n    local vowel_pos6\n\
    \    local vowel_pos7\n    local vowel_pos8\n    local vowel_pos9\n    local vowel_pos10\n\
    \    local vowel_pos11\n    local vowel_pos12\n    local vowel_pos13\n    local\
    \ vowel_pos14\n    local vowel_pos15\n    local vowel_pos16\n    local vowel_pos17\n\
    \    local vowel_pos18\n    local vowel_pos19\n    local vowel_pos20\n    local\
    \ vowel_pos21\n    local vowel_pos22\n    local vowel_pos23\n    local vowel_pos24\n\
    \    local vowel_pos25\n    local vowel_pos26\n    local vowel_pos27\n    local\
    \ vowel_pos28\n    local vowel_pos29\n    local vowel_pos30\n    local vowel_pos31\n\
    \    local vowel_pos32\n    local vowel_pos33\n    local vowel_pos34\n    local\
    \ vowel_pos35\n    local vowel_pos36\n    local vowel_pos37\n    local vowel_pos38\n\
    \    local vowel_pos39\n    local vowel_pos40\n    local vowel_pos41\n    local\
    \ vowel_pos42\n    local vowel_pos43\n    local vowel_pos44\n    local vowel_pos45\n\
    \    local vowel_pos46\n    local vowel_pos47\n    local vowel_pos48\n    local\
    \ vowel_pos49\n    local vowel_pos50\n    local vowel_pos51\n    local vowel_pos52\n\
    \    local vowel_pos53\n    local vowel_pos54\n    local vowel_pos55\n    local\
    \ vowel_pos56\n    local vowel_pos57\n    local vowel_pos58\n    local vowel_pos59\n\
    \    local vowel_pos60\n    local vowel_pos61\n    local vowel_pos62\n    local\
    \ vowel_pos63\n    local vowel_pos64\n    local vowel_pos65\n    local vowel_pos66\n\
    \    local vowel_pos67\n    local vowel_pos68\n    local vowel_pos69\n    local\
    \ vowel_pos70\n    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_count=0\n    local vowel_position=0\n    local vowel_found=\"\
    \"\n    local vowel_positions=()\n    local vowel_founds=()\n    local word=$1\n\
    \    local word_length=${#word}\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \    local consonant_founds=()\n    local consonant_positions=()\n    local consonant_founds=()\n\
    \    local consonant_position=0\n    local consonant_found=0\n    local consonant_count=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU\"\n    local vowels_count=${#vowels}\n    local vowels_string=${vowels:0:1}\n\
    \    local vowels_string_count=${#vowels_string}\n    local vowels_string_last=${vowels_string:$((vowels_string_count-1))}\n\
    \    local vowels_string_first=${vowels_string:0:$((vowels_string_count-1))}\n\
    \    local vowels_string_first_count=${#vowels_string_first}\n    local vowels_string_last_count=${#vowels_string_last}\n\
    \    local vowels_string_first_last=${vowels_string_first:$((vowels_string_first_count-1))}\n\
    \    local vowels_string_last_first=${vowels_string_last:0:$((vowels_string_last_count-1))}\n\
    \    local vowels_string_first_last_count=${#vowels_string_first_last}\n    local\
    \ vowels_string_last_first_count=${#vowels_string_last_first}\n    local vowels_string_first_last_last=${vowels_string_first_last:$((vowels_string_first_last_count-1))}\n\
    \    local vowels_string_last_first_last=${vowels_string_last_first:0:$((vowels_string_last_first_count-1))}\n\
    \    local vowels_string_first_last_last_count=${#vowels_string_first_last_last}\n\
    \    local vowels_string_last_first_last_count=${#vowels_string_last_first_last}\n\
    \    local vowels_string_first_last_last_last=${vowels_string_first_last_last:$((vowels_string_first_last_last_count-1))}\n\
    \    local vowels_string_last_first_last_last=${vowels_string_last_first_last:0:$((vowels_string_last_first_last_count-1))}\n\
    \    local vowels_string_first_last_last_last_count=${#vowels_string_first_last_last_last}\n\
    \    local vowels_string_last_first_last_last_count=${#vowels_string_last_first_last_last}\n\
    \    local vowels_string_first_last_last_last_last=${vowels_string_first_last_last_last:$((vowels_string_first_last_last_last_count-1))}\n\
    \    local vowels_string_last_first_last_last_last=${vowels_string_last_first_last_last:0:$((vowels_string_last_first_last_last_count-1))}\n\
    \    local vowels_string_first_last_last_last_last_count=${#vowels_string_first_last_last_last_last}\n\
    \    local vowels_string_last_first_last_last_last_count=${#vowels_string_last_first_last_last_last}\n\
    \    local vowels_string_first_last_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_bru16q7.sh: line 24: $((vowels_string_last_first_count-1)): substring
    expression < 0

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=\"$1\"\n  local vowel\n  local vowel_pos\n  local vowel_pos_count\n  local\
    \ vowel_pos_count2\n  local vowel_pos_count3\n  local vowel_pos_count4\n  local\
    \ vowel_pos_count5\n  local vowel_pos_count6\n  local vowel_pos_count7\n  local\
    \ vowel_pos_count8\n  local vowel_pos_count9\n  local vowel_pos_count10\n  local\
    \ vowel_pos_count11\n  local vowel_pos_count12\n  local vowel_pos_count13\n  local\
    \ vowel_pos_count14\n  local vowel_pos_count15\n  local vowel_pos_count16\n  local\
    \ vowel_pos_count17\n  local vowel_pos_count18\n  local vowel_pos_count19\n  local\
    \ vowel_pos_count20\n  local vowel_pos_count21\n  local vowel_pos_count22\n  local\
    \ vowel_pos_count23\n  local vowel_pos_count24\n  local vowel_pos_count25\n  local\
    \ vowel_pos_count26\n  local vowel_pos_count27\n  local vowel_pos_count28\n  local\
    \ vowel_pos_count29\n  local vowel_pos_count30\n  local vowel_pos_count31\n  local\
    \ vowel_pos_count32\n  local vowel_pos_count33\n  local vowel_pos_count34\n  local\
    \ vowel_pos_count35\n  local vowel_pos_count36\n  local vowel_pos_count37\n  local\
    \ vowel_pos_count38\n  local vowel_pos_count39\n  local vowel_pos_count40\n  local\
    \ vowel_pos_count41\n  local vowel_pos_count42\n  local vowel_pos_count43\n  local\
    \ vowel_pos_count44\n  local vowel_pos_count45\n  local vowel_pos_count46\n  local\
    \ vowel_pos_count47\n  local vowel_pos_count48\n  local vowel_pos_count49\n  local\
    \ vowel_pos_count50\n  local vowel_pos_count51\n  local vowel_pos_count52\n  local\
    \ vowel_pos_count53\n  local vowel_pos_count54\n  local vowel_pos_count55\n  local\
    \ vowel_pos_count56\n  local vowel_pos_count57\n  local vowel_pos_count58\n  local\
    \ vowel_pos_count59\n  local vowel_pos_count60\n  local vowel_pos_count61\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowel_count=0\n  local vowel_found=\"\"\n  local vowel_position=0\n  local\
    \ consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\"\
    \n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=$1\n    local vowels=\"\
    a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n    local vowel_found=\"\
    \"\n    local vowel_position=0\n    local vowel_position_index=0\n    local vowel_position_found=0\n\
    \    local vowel_position_count=0\n    local vowel_position_found=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count=0\n    local\
    \ vowel_position_count=0\n    local vowel_position_count=0\n    local vowel_position_count=0\n\
    \    local vowel_position_count=0\n    local vowel_position_count\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local string=\"$1\"\n  local vowel\n  local vowel_index\n  local vowel_count\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found_index2\n\
    \  local vowel_found_index3\n  local vowel_found_index4\n  local vowel_found_index5\n\
    \  local vowel_found_index6\n  local vowel_found_index7\n  local vowel_found_index8\n\
    \  local vowel_found_index9\n  local vowel_found_index10\n  local vowel_found_index11\n\
    \  local vowel_found_index12\n  local vowel_found_index13\n  local vowel_found_index14\n\
    \  local vowel_found_index15\n  local vowel_found_index16\n  local vowel_found_index17\n\
    \  local vowel_found_index18\n  local vowel_found_index19\n  local vowel_found_index20\n\
    \  local vowel_found_index21\n  local vowel_found_index22\n  local vowel_found_index23\n\
    \  local vowel_found_index24\n  local vowel_found_index25\n  local vowel_found_index26\n\
    \  local vowel_found_index27\n  local vowel_found_index28\n  local vowel_found_index29\n\
    \  local vowel_found_index30\n  local vowel_found_index31\n  local vowel_found_index32\n\
    \  local vowel_found_index33\n  local vowel_found_index34\n  local vowel_found_index35\n\
    \  local vowel_found_index36\n  local vowel_found_index37\n  local vowel_found_index38\n\
    \  local vowel_found_index39\n  local vowel_found_index40\n  local vowel_found_index41\n\
    \  local vowel_found_index42\n  local vowel_found_index43\n  local vowel_found_index44\n\
    \  local vowel_found_index45\n  local vowel_found_index46\n  local vowel_found_index47\n\
    \  local vowel_found_index48\n  local vowel_found_index49\n  local vowel_found_index50\n\
    \  local vowel_found_index51\n  local vowel_found_index52\n  local vowel_found_index53\n\
    \  local vowel_found_index54\n  local vowel_found_index55\n  local vowel_found_index56\n\
    \  local vowel_found_index57\n  local vowel_found_index58\n  local vowel_found_index59\n\
    \  local vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_count\n  local vowel_found\n  local vowel_position\n\
    \  local vowel_position_count\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n  local vowel_position_found\n\
    \  local vowel_position_found\n  local vowel_position_found\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${1}\n    local vowels_string_length=${#vowels_string}\n\
    \    local vowels_string_end=${vowels_string#*$}\n    local vowels_string_start=${vowels_string%$*}\n\
    \    local vowels_string_start_index=${#vowels_string_start}\n    local vowels_string_end_index=${#vowels_string_end}\n\
    \    local vowels_string_start_vowel=${vowels_string_start:$vowels_string_start_index}\n\
    \    local vowels_string_end_vowel=${vowels_string_end:$vowels_string_end_index}\n\
    \    local vowels_string_start_vowel_count=${#vowels_string_start_vowel}\n   \
    \ local vowels_string_end_vowel_count=${#vowels_string_end_vowel}\n    local vowels_string_start_vowel_count_diff=${#vowels_string_start_vowel}-1\n\
    \    local vowels_string_end_vowel_count_diff=${#vowels_string_end_vowel}-1\n\
    \    local vowels_string_start_vowel_count_diff_index=$((vowels_string_start_vowel_count_diff+1))\n\
    \    local vowels_string_end_vowel_count_diff_index=$((vowels_string_end_vowel_count_diff+1))\n\
    \    local vowels_string_start_vowel_count_diff_index=$((vowels_string_start_vowel_count_diff_index+1))\n\
    \    local vowels_string_end_vowel_count_diff_index=$((vowels_string_end_vowel_count_diff_index+1))\n\
    \    local vowels_string_start_vowel_count_diff_index=$((vowels_string_start_vowel_count_diff_index+1))\n\
    \    local vowels_string_end_vowel_count_diff_index=$((vowels_string_end_vowel_count_diff_index+1))\n\
    \    local vowels_string_start_vowel_count_diff_index=$((vowels_string_start_vowel_count_diff_index+1))\n\
    \    local vowels_string_end_vowel_count_diff_index=$((vowels_string_end_vowel_count_diff_index+1))\n\
    \    local vowels_string_start_vowel_count_diff_index=$((vowels_string_start_vowel_count_diff_index+1))\n\
    \    local vowels_string_end_vowel_count_diff_index=$((vowels_string_end_vowel_count_diff_index+1))\n\
    \    local vowels_string_start_vowel_count_diff_index=$((vowels_string_start_vowel_count_diff_index+1))\n\
    \    local vowels_string_end_vowel_count_diff_index=$((vowels_string_end_vowel_count_diff_index+\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3ulta8o5.sh: line 36: unexpected EOF while looking for matching
    `)''

    /tmp/tmp3ulta8o5.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" # vowels\
    \ list\n  local word=$1\n  local vowel\n  local vowel_count\n  local vowel_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found_index2\n\
    \  local vowel_found_index3\n  local vowel_found_index4\n  local vowel_found_index5\n\
    \  local vowel_found_index6\n  local vowel_found_index7\n  local vowel_found_index8\n\
    \  local vowel_found_index9\n  local vowel_found_index10\n  local vowel_found_index11\n\
    \  local vowel_found_index12\n  local vowel_found_index13\n  local vowel_found_index14\n\
    \  local vowel_found_index15\n  local vowel_found_index16\n  local vowel_found_index17\n\
    \  local vowel_found_index18\n  local vowel_found_index19\n  local vowel_found_index20\n\
    \  local vowel_found_index21\n  local vowel_found_index22\n  local vowel_found_index23\n\
    \  local vowel_found_index24\n  local vowel_found_index25\n  local vowel_found_index26\n\
    \  local vowel_found_index27\n  local vowel_found_index28\n  local vowel_found_index29\n\
    \  local vowel_found_index30\n  local vowel_found_index31\n  local vowel_found_index32\n\
    \  local vowel_found_index33\n  local vowel_found_index34\n  local vowel_found_index35\n\
    \  local vowel_found_index36\n  local vowel_found_index37\n  local vowel_found_index38\n\
    \  local vowel_found_index39\n  local vowel_found_index40\n  local vowel_found_index41\n\
    \  local vowel_found_index42\n  local vowel_found_index43\n  local vowel_found_index44\n\
    \  local vowel_found_index45\n  local vowel_found_index46\n  local vowel_found_index47\n\
    \  local vowel_found_index48\n  local vowel_found_index49\n  local vowel_found_index50\n\
    \  local vowel_found_index51\n  local vowel_found_index52\n  local vowel_found_index53\n\
    \  local vowel_found_index54\n  local vowel_found_index55\n  local vowel_found_index56\n\
    \  local vowel_found_index57\n  local vowel_found_index58\n  local vowel_found_index59\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local count\n    local vowel_count\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel_found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_count\n  local vowel_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found_index\n  local vowel_found\n \
    \ local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local\
    \ vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n \
    \ local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local vowel_found_index\n\
    \  local vowel_found\n  local vowel_found_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found\n  local vowel_found_index\n  local vowel_found\n\
    \  \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local vowels_count=${#vowels}\n    local vowels_index=0\n    local vowels_string=\"\
    \"\n    local vowels_string_index=0\n    local vowels_string_index2=0\n    local\
    \ vowels_string_index3=0\n    local vowels_string_index4=0\n    local vowels_string_index5=0\n\
    \    local vowels_string_index6=0\n    local vowels_string_index7=0\n    local\
    \ vowels_string_index8=0\n    local vowels_string_index9=0\n    local vowels_string_index10=0\n\
    \    local vowels_string_index11=0\n    local vowels_string_index12=0\n    local\
    \ vowels_string_index13=0\n    local vowels_string_index14=0\n    local vowels_string_index15=0\n\
    \    local vowels_string_index16=0\n    local vowels_string_index17=0\n    local\
    \ vowels_string_index18=0\n    local vowels_string_index19=0\n    local vowels_string_index20=0\n\
    \    local vowels_string_index21=0\n    local vowels_string_index22=0\n    local\
    \ vowels_string_index23=0\n    local vowels_string_index24=0\n    local vowels_string_index25=0\n\
    \    local vowels_string_index26=0\n    local vowels_string_index27=0\n    local\
    \ vowels_string_index28=0\n    local vowels_string_index29=0\n    local vowels_string_index30=0\n\
    \    local vowels_string_index31=0\n    local vowels_string_index32=0\n    local\
    \ vowels_string_index33=0\n    local vowels_string_index34=0\n    local vowels_string_index35=0\n\
    \    local vowels_string_index36=0\n    local vowels_string_index37=0\n    local\
    \ vowels_string_index38=0\n    local vowels_string_index39=0\n    local vowels_string_index40=0\n\
    \    local vowels_string_index41=0\n    local vowels_string_index42=0\n    local\
    \ vowels_string_index43=0\n    local vowels_string_index44=0\n    local vowels_string_index45=0\n\
    \    local vowels_string_index46=0\n    local vowels_string_index47=0\n    local\
    \ vowels_string_index48=0\n    local vowels_string_index49=0\n    local vowels_string_index50=0\n\
    \    local vowels_string_index51=0\n    local vowels_string_index52=0\n    local\
    \ vowels_string_index53=0\n    local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ vowels_count=${#vowels}\n  local vowels_string=${vowels}\n  local vowels_string_count=${#vowels_string}\n\
    \  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${#1}\
    \ - 1))\n  local vowels_string_index=$((${#1} - 1))\n  local vowels_string_index=$((${\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu3gxdk23.sh: line 48: unexpected EOF while looking for matching
    `)''

    /tmp/tmpu3gxdk23.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ word=$1\n  local vowel_found=\"\"\n  local vowel_index=0\n  local vowel_length=$((${#word}\
    \ - 1))\n  local vowel_found_index=0\n  local vowel_found_length=0\n  local vowel_found2_index=0\n\
    \  local vowel_found2_length=0\n  local vowel_found3_index=0\n  local vowel_found3_length=0\n\
    \  local vowel_found4_index=0\n  local vowel_found4_length=0\n  local vowel_found5_index=0\n\
    \  local vowel_found5_length=0\n  local vowel_found6_index=0\n  local vowel_found6_length=0\n\
    \  local vowel_found7_index=0\n  local vowel_found7_length=0\n  local vowel_found8_index=0\n\
    \  local vowel_found8_length=0\n  local vowel_found9_index=0\n  local vowel_found9_length=0\n\
    \  local vowel_found10_index=0\n  local vowel_found10_length=0\n  local vowel_found11_index=0\n\
    \  local vowel_found11_length=0\n  local vowel_found12_index=0\n  local vowel_found12_length=0\n\
    \  local vowel_found13_index=0\n  local vowel_found13_length=0\n  local vowel_found14_index=0\n\
    \  local vowel_found14_length=0\n  local vowel_found15_index=0\n  local vowel_found15_length=0\n\
    \  local vowel_found16_index=0\n  local vowel_found16_length=0\n  local vowel_found17_index=0\n\
    \  local vowel_found17_length=0\n  local vowel_found18_index=0\n  local vowel_found18_length=0\n\
    \  local vowel_found19_index=0\n  local vowel_found19_length=0\n  local vowel_found20_index=0\n\
    \  local vowel_found20_length=0\n  local vowel_found21_index=0\n  local vowel_found21_length=0\n\
    \  local vowel_found22_index=0\n  local vowel_found22_length=0\n  local vowel_found23_index=0\n\
    \  local vowel_found23_length=0\n  local vowel_found24_index=0\n  local vowel_found24_length=0\n\
    \  local vowel_found25_index=0\n  local vowel_found25_length=0\n  local vowel_found26_index=0\n\
    \  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_length\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local vowels_count=${#vowels[@]}\n    local vowels_index=0\n    local vowels_string=\"\
    \"\n    local vowels_string_index=0\n    local vowels_string_index2=0\n    local\
    \ vowels_string_index3=0\n    local vowels_string_index4=0\n    local vowels_string_index5=0\n\
    \    local vowels_string_index6=0\n    local vowels_string_index7=0\n    local\
    \ vowels_string_index8=0\n    local vowels_string_index9=0\n    local vowels_string_index10=0\n\
    \    local vowels_string_index11=0\n    local vowels_string_index12=0\n    local\
    \ vowels_string_index13=0\n    local vowels_string_index14=0\n    local vowels_string_index15=0\n\
    \    local vowels_string_index16=0\n    local vowels_string_index17=0\n    local\
    \ vowels_string_index18=0\n    local vowels_string_index19=0\n    local vowels_string_index20=0\n\
    \    local vowels_string_index21=0\n    local vowels_string_index22=0\n    local\
    \ vowels_string_index23=0\n    local vowels_string_index24=0\n    local vowels_string_index25=0\n\
    \    local vowels_string_index26=0\n    local vowels_string_index27=0\n    local\
    \ vowels_string_index28=0\n    local vowels_string_index29=0\n    local vowels_string_index30=0\n\
    \    local vowels_string_index31=0\n    local vowels_string_index32=0\n    local\
    \ vowels_string_index33=0\n    local vowels_string_index34=0\n    local vowels_string_index35=0\n\
    \    local vowels_string_index36=0\n    local vowels_string_index37=0\n    local\
    \ vowels_string_index38=0\n    local vowels_string_index39=0\n    local vowels_string_index40=0\n\
    \    local vowels_string_index41=0\n    local vowels_string_index42=0\n    local\
    \ vowels_string_index43=0\n    local vowels_string_index44=0\n    local vowels_string_index45=0\n\
    \    local vowels_string_index46=0\n    local vowels_string_index47=0\n    local\
    \ vowels_string_index48=0\n    local vowels_string_index49=0\n    local vowels_string_index50=0\n\
    \    local vowels_string_index51=0\n    local vowels_string_index52=0\n    local\
    \ vowels_string_index53\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=$1\n  local vowel\n  local vowel_count\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_index\n  local vowel_length\n  local vowel_position\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  local vowel_end_index\n\
    \  local vowel_start_index\n  local vowel_end_index\n  local vowel_start_index\n\
    \  local vowel_end_index\n  local vowel_start_index\n  \n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_found\n\
    \    local vowel_found_index\n    local vowel_found_index2\n    local vowel_found_index3\n\
    \    local vowel_found_index4\n    local vowel_found_index5\n    local vowel_found_index6\n\
    \    local vowel_found_index7\n    local vowel_found_index8\n    local vowel_found_index9\n\
    \    local vowel_found_index10\n    local vowel_found_index11\n    local vowel_found_index12\n\
    \    local vowel_found_index13\n    local vowel_found_index14\n    local vowel_found_index15\n\
    \    local vowel_found_index16\n    local vowel_found_index17\n    local vowel_found_index18\n\
    \    local vowel_found_index19\n    local vowel_found_index20\n    local vowel_found_index21\n\
    \    local vowel_found_index22\n    local vowel_found_index23\n    local vowel_found_index24\n\
    \    local vowel_found_index25\n    local vowel_found_index26\n    local vowel_found_index27\n\
    \    local vowel_found_index28\n    local vowel_found_index29\n    local vowel_found_index30\n\
    \    local vowel_found_index31\n    local vowel_found_index32\n    local vowel_found_index33\n\
    \    local vowel_found_index34\n    local vowel_found_index35\n    local vowel_found_index36\n\
    \    local vowel_found_index37\n    local vowel_found_index38\n    local vowel_found_index39\n\
    \    local vowel_found_index40\n    local vowel_found_index41\n    local vowel_found_index42\n\
    \    local vowel_found_index43\n    local vowel_found_index44\n    local vowel_found_index45\n\
    \    local vowel_found_index46\n    local vowel_found_index47\n    local vowel_found_index48\n\
    \    local vowel_found_index49\n    local vowel_found_index50\n    local vowel_found_index51\n\
    \    local vowel_found_index52\n    local vowel_found_index53\n    local vowel_found_index54\n\
    \    local vowel_found_index55\n    local vowel_found_index56\n    local vowel_found_index57\n\
    \    local vowel_found_index58\n    local vowel_found_index59\n    local vowel_found_index60\n\
    \    local \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ word=$1\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_position=0\n  local consonant_position=0\n  local consonant_found=\"\
    \"\n  local consonant_count=0\n  local consonant_index=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_index=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_index=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_count=0\n  local consonant_index=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_index=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_index=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_count=0\n  local consonant_index=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_index=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_index=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_count=0\n  local consonant_index=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_index=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_count=0\n\
    \  local consonant_index=0\n  local consonant_found=\"\"\n  local consonant_position=0\n\
    \  local consonant_count=0\n  local consonant_index=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_index=0\n\
    \  local consonant_found=\"\"\n  local consonant_position=0\n  local consonant_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\";\n\
    \  local word=$1;\n  local vowel_found=\"\";\n  local vowel_position=\"\";\n \
    \ local vowel_position_count=0;\n  local vowel_position_index=0;\n  local vowel_position_indexes=\"\
    \";\n  local vowel_position_indexes_count=0;\n  local vowel_position_indexes_index=0;\n\
    \  local vowel_position_indexes_indexes=\"\";\n  local vowel_position_indexes_indexes_count=0;\n\
    \  local vowel_position_indexes_indexes_index=0;\n  local vowel_position_indexes_indexes_indexes=\"\
    \";\n  local vowel_position_indexes_indexes_indexes_count=0;\n  local vowel_position_indexes_indexes_indexes_index=0;\n\
    \  local vowel_position_indexes_indexes_indexes_indexes=\"\";\n  local vowel_position_indexes_indexes_indexes_count=0;\n\
    \  local vowel_position_indexes_indexes_indexes_index=0;\n  local vowel_position_indexes_indexes_indexes_indexes=\"\
    \";\n  local vowel_position_indexes_indexes_indexes_indexes_count=0;\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_index=0;\n  local vowel_position_indexes_indexes_indexes_indexes_indexes=\"\
    \";\n  local vowel_position_indexes_indexes_indexes_indexes_count=0;\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_index=0;\n  local vowel_position_indexes_indexes_indexes_indexes_indexes=\"\
    \";\n  local vowel_position_indexes_indexes_indexes_indexes_indexes_count=0;\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_index=0;\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes=\"\";\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_count=0;\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_index=0;\n  local\
    \ vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes=\"\"\
    ;\n  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_count=0;\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_index=0;\n\
    \  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_indexes_indexes=\"\
    \";\n  local vowel_position_indexes_indexes_indexes_indexes_indexes_indexes_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_found\n  local vowel_index\n  local vowel_length\n\
    \  local vowel_position\n  local vowel_position_index\n  local vowel_position_length\n\
    \  local vowel_position_position\n  local vowel_position_position_index\n  local\
    \ vowel_position_position_length\n  local vowel_position_position_position\n \
    \ local vowel_position_position_position_index\n  local vowel_position_position_position_length\n\
    \  local vowel_position_position_position_position\n  local vowel_position_position_position_position_index\n\
    \  local vowel_position_position_position_position_length\n  local vowel_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_index\n  local vowel_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position\n  local\
    \ vowel_position_position_position_position_position_position_index\n  local vowel_position_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_position_position_index\n\
    \  local vowel_position_position_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_position_position_position_index\n\
    \  local vowel_position_position_position_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_index\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_index\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position_index\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position_position_index\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position_length\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position_position_position\n\
    \  local vowel_position_position_position_position_position_position_position_position_position_position_position_position_position_index\n\
    \  \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local word=\"$1\"\n  local vowel\n  local vowel_pos\n  local vowel_pos2\n \
    \ local vowel_pos3\n  local vowel_pos4\n  local vowel_pos5\n  local vowel_pos6\n\
    \  local vowel_pos7\n  local vowel_pos8\n  local vowel_pos9\n  local vowel_pos10\n\
    \  local vowel_pos11\n  local vowel_pos12\n  local vowel_pos13\n  local vowel_pos14\n\
    \  local vowel_pos15\n  local vowel_pos16\n  local vowel_pos17\n  local vowel_pos18\n\
    \  local vowel_pos19\n  local vowel_pos20\n  local vowel_pos21\n  local vowel_pos22\n\
    \  local vowel_pos23\n  local vowel_pos24\n  local vowel_pos25\n  local vowel_pos26\n\
    \  local vowel_pos27\n  local vowel_pos28\n  local vowel_pos29\n  local vowel_pos30\n\
    \  local vowel_pos31\n  local vowel_pos32\n  local vowel_pos33\n  local vowel_pos34\n\
    \  local vowel_pos35\n  local vowel_pos36\n  local vowel_pos37\n  local vowel_pos38\n\
    \  local vowel_pos39\n  local vowel_pos40\n  local vowel_pos41\n  local vowel_pos42\n\
    \  local vowel_pos43\n  local vowel_pos44\n  local vowel_pos45\n  local vowel_pos46\n\
    \  local vowel_pos47\n  local vowel_pos48\n  local vowel_pos49\n  local vowel_pos50\n\
    \  local vowel_pos51\n  local vowel_pos52\n  local vowel_pos53\n  local vowel_pos54\n\
    \  local vowel_pos55\n  local vowel_pos56\n  local vowel_pos57\n  local vowel_pos58\n\
    \  local vowel_pos59\n  local vowel_pos60\n  local vowel_pos61\n  local vowel_pos62\n\
    \  local vowel_pos63\n  local vowel_pos64\n  local vowel_pos65\n  local vowel_pos66\n\
    \  local vowel_pos67\n  local vowel_pos68\n  local vowel_pos69\n  local vowel_pos70\n\
    \  \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local string=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n  \
    \  local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found2=\"\"\n    local vowel_found2_index=0\n    local vowel_found2_index2=0\n\
    \    local vowel_found3=\"\"\n    local vowel_found3_index=0\n    local vowel_found3_index2=0\n\
    \    local vowel_found4=\"\"\n    local vowel_found4_index=0\n    local vowel_found4_index2=0\n\
    \    local vowel_found5=\"\"\n    local vowel_found5_index=0\n    local vowel_found5_index2=0\n\
    \    local vowel_found6=\"\"\n    local vowel_found6_index=0\n    local vowel_found6_index2=0\n\
    \    local vowel_found7=\"\"\n    local vowel_found7_index=0\n    local vowel_found7_index2=0\n\
    \    local vowel_found8=\"\"\n    local vowel_found8_index=0\n    local vowel_found8_index2=0\n\
    \    local vowel_found9=\"\"\n    local vowel_found9_index=0\n    local vowel_found9_index2=0\n\
    \    local vowel_found10=\"\"\n    local vowel_found10_index=0\n    local vowel_found10_index2=0\n\
    \    local vowel_found11=\"\"\n    local vowel_found11_index=0\n    local vowel_found11_index2=0\n\
    \    local vowel_found12=\"\"\n    local vowel_found12_index=0\n    local vowel_found12_index2=0\n\
    \    local vowel_found13=\"\"\n    local vowel_found13_index=0\n    local vowel_found13_index2=0\n\
    \    local vowel_found14=\"\"\n    local vowel_found14_index=0\n    local vowel_found14_index2=0\n\
    \    local vowel_found15=\"\"\n    local vowel_found15_index=0\n    local vowel_found15_index2=0\n\
    \    local vowel_found16=\"\"\n    local vowel_found16_index=0\n    local vowel_found16_index2=0\n\
    \    local vowel_found17=\"\"\n    local vowel_found17_index=0\n    local vowel_found17_index2=0\n\
    \    local vowel_found18=\"\"\n    local vowel_found18_index=0\n    local vowel_found18_index2=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local vowel_count=0\n  local vowel_found=\"\"\n  local vowel_position=0\n \
    \ local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n  local consonant_position=0\n  local consonant_count=0\n  local consonant_found=\"\
    \"\n\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=\"$1\"\n    local\
    \ vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_found=\"\"\n\
    \    local vowel_position=0\n    local vowel_position_count=0\n    local consonant_position=0\n\
    \    local consonant_position_count=0\n    local consonant_found=\"\"\n    local\
    \ consonant_count=0\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_position_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local \n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_found_index=0\n  local vowel_found_index2=0\n  local vowel_found2=\"\
    \"\n  local vowel_found2_index=0\n  local vowel_found3=\"\"\n  local vowel_found3_index=0\n\
    \  local vowel_found4=\"\"\n  local vowel_found4_index=0\n  local vowel_found5=\"\
    \"\n  local vowel_found5_index=0\n  local vowel_found6=\"\"\n  local vowel_found6_index=0\n\
    \  local vowel_found7=\"\"\n  local vowel_found7_index=0\n  local vowel_found8=\"\
    \"\n  local vowel_found8_index=0\n  local vowel_found9=\"\"\n  local vowel_found9_index=0\n\
    \  local vowel_found10=\"\"\n  local vowel_found10_index=0\n  local vowel_found11=\"\
    \"\n  local vowel_found11_index=0\n  local vowel_found12=\"\"\n  local vowel_found12_index=0\n\
    \  local vowel_found13=\"\"\n  local vowel_found13_index=0\n  local vowel_found14=\"\
    \"\n  local vowel_found14_index=0\n  local vowel_found15=\"\"\n  local vowel_found15_index=0\n\
    \  local vowel_found16=\"\"\n  local vowel_found16_index=0\n  local vowel_found17=\"\
    \"\n  local vowel_found17_index=0\n  local vowel_found18=\"\"\n  local vowel_found18_index=0\n\
    \  local vowel_found19=\"\"\n  local vowel_found19_index=0\n  local vowel_found20=\"\
    \"\n  local vowel_found20_index=0\n  local vowel_found21=\"\"\n  local vowel_found21_index=0\n\
    \  local vowel_found22=\"\"\n  local vowel_found22_index=0\n  local vowel_found23=\"\
    \"\n  local vowel_found23_index=0\n  local vowel_found24=\"\"\n  local vowel_found24_index=0\n\
    \  local vowel_found25=\"\"\n  local vowel_found25_index=0\n  local vowel_found26=\"\
    \"\n  local vowel_found26_index=0\n  local vowel_found27=\"\"\n  local vowel_found27_index=0\n\
    \  local vowel_found28=\"\"\n  local vowel_found28_index=0\n  \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU\"\n    local vowels_count=$(echo $vowels | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_3=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_4=$(echo $vowels | wc -w)\n    local vowels_count_5=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_6=$(echo $vowels | wc -w)\n    local vowels_count_7=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_8=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_9=$(echo $vowels | wc -w)\n    local vowels_count_10=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_11=$(echo $vowels | wc -w)\n    local vowels_count_12=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_13=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_14=$(echo $vowels | wc -w)\n    local vowels_count_15=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_16=$(echo $vowels | wc -w)\n    local vowels_count_17=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_18=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_19=$(echo $vowels | wc -w)\n    local vowels_count_20=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_21=$(echo $vowels | wc -w)\n    local vowels_count_22=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_23=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_24=$(echo $vowels | wc -w)\n    local vowels_count_25=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_26=$(echo $vowels | wc -w)\n    local vowels_count_27=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_28=$(echo $vowels | wc -w)\n    local\
    \ vowels_count_29=$(echo $vowels | wc -w)\n    local vowels_count_30=$(echo $vowels\
    \ | wc -w)\n    local vowels_count_31=$(echo $vowels | wc -w)\n    local vowels_count_32=$(echo\
    \ $vowels | wc -w)\n    local vowels_count_33=$(echo $vowels | wc -w)\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowels_count=${#vowels}\n  local vowels_string=${vowels}\n  local vowels_string_count=${#vowels_string}\n\
    \  local vowels_string_index=0\n  local vowels_string_index2=0\n  local vowels_string_index3=0\n\
    \  local vowels_string_index4=0\n  local vowels_string_index5=0\n  local vowels_string_index6=0\n\
    \  local vowels_string_index7=0\n  local vowels_string_index8=0\n  local vowels_string_index9=0\n\
    \  local vowels_string_index10=0\n  local vowels_string_index11=0\n  local vowels_string_index12=0\n\
    \  local vowels_string_index13=0\n  local vowels_string_index14=0\n  local vowels_string_index15=0\n\
    \  local vowels_string_index16=0\n  local vowels_string_index17=0\n  local vowels_string_index18=0\n\
    \  local vowels_string_index19=0\n  local vowels_string_index20=0\n  local vowels_string_index21=0\n\
    \  local vowels_string_index22=0\n  local vowels_string_index23=0\n  local vowels_string_index24=0\n\
    \  local vowels_string_index25=0\n  local vowels_string_index26=0\n  local vowels_string_index27=0\n\
    \  local vowels_string_index28=0\n  local vowels_string_index29=0\n  local vowels_string_index30=0\n\
    \  local vowels_string_index31=0\n  local vowels_string_index32=0\n  local vowels_string_index33=0\n\
    \  local vowels_string_index34=0\n  local vowels_string_index35=0\n  local vowels_string_index36=0\n\
    \  local vowels_string_index37=0\n  local vowels_string_index38=0\n  local vowels_string_index39=0\n\
    \  local vowels_string_index40=0\n  local vowels_string_index41=0\n  local vowels_string_index42=0\n\
    \  local vowels_string_index43=0\n  local vowels_string_index44=0\n  local vowels_string_index45=0\n\
    \  local vowels_string_index46=0\n  local vowels_string_index47=0\n  local vowels_string_index48=0\n\
    \  local vowels_string_index49=0\n  local vowels_string_index50=0\n  local vowels_string_index51=0\n\
    \  local vowels_string_index52=0\n  local vowel\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel\n    local vowel_count\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_index2\n\
    \    local vowel_found_index3\n    local vowel_found_index4\n    local vowel_found_index5\n\
    \    local vowel_found_index6\n    local vowel_found_index7\n    local vowel_found_index8\n\
    \    local vowel_found_index9\n    local vowel_found_index10\n    local vowel_found_index11\n\
    \    local vowel_found_index12\n    local vowel_found_index13\n    local vowel_found_index14\n\
    \    local vowel_found_index15\n    local vowel_found_index16\n    local vowel_found_index17\n\
    \    local vowel_found_index18\n    local vowel_found_index19\n    local vowel_found_index20\n\
    \    local vowel_found_index21\n    local vowel_found_index22\n    local vowel_found_index23\n\
    \    local vowel_found_index24\n    local vowel_found_index25\n    local vowel_found_index26\n\
    \    local vowel_found_index27\n    local vowel_found_index28\n    local vowel_found_index29\n\
    \    local vowel_found_index30\n    local vowel_found_index31\n    local vowel_found_index32\n\
    \    local vowel_found_index33\n    local vowel_found_index34\n    local vowel_found_index35\n\
    \    local vowel_found_index36\n    local vowel_found_index37\n    local vowel_found_index38\n\
    \    local vowel_found_index39\n    local vowel_found_index40\n    local vowel_found_index41\n\
    \    local vowel_found_index42\n    local vowel_found_index43\n    local vowel_found_index44\n\
    \    local vowel_found_index45\n    local vowel_found_index46\n    local vowel_found_index47\n\
    \    local vowel_found_index48\n    local vowel_found_index49\n    local vowel_found_index50\n\
    \    local vowel_found_index51\n    local vowel_found_index52\n    local vowel_found_index53\n\
    \    local vowel_found_index54\n    local vowel_found_index55\n    local vowel_found_index56\n\
    \    local vowel_found_index57\n    local vowel_found_index58\n    local vowel_found_index59\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local word=$1\n    local vowel\n    local vowel_index\n    local vowel_length\n\
    \    local consonant_index\n    local consonant_length\n    local consonant_count\n\
    \    local consonant_count2\n    local consonant_count3\n    local consonant_count4\n\
    \    local consonant_count5\n    local consonant_count6\n    local consonant_count7\n\
    \    local consonant_count8\n    local consonant_count9\n    local consonant_count10\n\
    \    local consonant_count11\n    local consonant_count12\n    local consonant_count13\n\
    \    local consonant_count14\n    local consonant_count15\n    local consonant_count16\n\
    \    local consonant_count17\n    local consonant_count18\n    local consonant_count19\n\
    \    local consonant_count20\n    local consonant_count21\n    local consonant_count22\n\
    \    local consonant_count23\n    local consonant_count24\n    local consonant_count25\n\
    \    local consonant_count26\n    local consonant_count27\n    local consonant_count28\n\
    \    local consonant_count29\n    local consonant_count30\n    local consonant_count31\n\
    \    local consonant_count32\n    local consonant_count33\n    local consonant_count34\n\
    \    local consonant_count35\n    local consonant_count36\n    local consonant_count37\n\
    \    local consonant_count38\n    local consonant_count39\n    local consonant_count40\n\
    \    local consonant_count41\n    local consonant_count42\n    local consonant_count43\n\
    \    local consonant_count44\n    local consonant_count45\n    local consonant_count46\n\
    \    local consonant_count47\n    local consonant_count48\n    local consonant_count49\n\
    \    local consonant_count50\n    local consonant_count51\n    local consonant_count52\n\
    \    local consonant_count53\n    local consonant_count54\n    local consonant_count55\n\
    \    local consonant_count56\n    local consonant_count57\n    local consonant_count58\n\
    \    local con\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_index\n  local vowel_position\n  local\
    \ vowel_length\n  local vowel_found\n  local vowel_found_index\n  local vowel_found_position\n\
    \  local vowel_found_length\n  local vowel_found_found\n  local vowel_found_found_index\n\
    \  local vowel_found_found_position\n  local vowel_found_found_length\n  local\
    \ vowel_found_found_found\n  local vowel_found_found_found_index\n  local vowel_found_found_found_position\n\
    \  local vowel_found_found_found_length\n  local vowel_found_found_found_found\n\
    \  local vowel_found_found_found_found_index\n  local vowel_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_length\n  local vowel_found_found_found_found_found\n\
    \  local vowel_found_found_found_found_found_index\n  local vowel_found_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_found_length\n  local vowel_found_found_found_found_found_found\n\
    \  local vowel_found_found_found_found_found_found_index\n  local vowel_found_found_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_found_found_length\n  local vowel_found_found_found_found_found_found_found\n\
    \  local vowel_found_found_found_found_found_found_found_index\n  local vowel_found_found_found_found_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_found_found_found_found_length\n  local\
    \ vowel_found_found_found_found_found_found_found_found\n  local vowel_found_found_found_found_found_found_found_found_index\n\
    \  local vowel_found_found_found_found_found_found_found_found_position\n  local\
    \ vowel_found_found_found_found_found_found_found_found_length\n  local vowel_found_found_found_found_found_found_found_found_found\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_index\n \
    \ local vowel_found_found_found_found_found_found_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found_index\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found_found_position\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found_found_length\n\
    \  local vowel_found_found_found_found_found_found_found_found_found_found_found_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local word=\"$1\"\n    local vowel_count=0\n    local vowel_index=0\n   \
    \ local vowel_found=\"\"\n    local consonant_count=0\n    local consonant_index=0\n\
    \    local consonant_found=\"\"\n    local consonant_last=\"\"\n    local consonant_first=\"\
    \"\n    local consonant_middle=\"\"\n    local consonant_first_index=0\n    local\
    \ consonant_first_index=0\n    local consonant_middle_index=0\n    local consonant_last_index=0\n\
    \    local consonant_last_index=0\n    local consonant_middle_index=0\n    local\
    \ consonant_first_count=0\n    local consonant_last_count=0\n    local consonant_middle_count=0\n\
    \    local consonant_first_index=0\n    local consonant_last_index=0\n    local\
    \ consonant_middle_index=0\n    local consonant_first_count=0\n    local consonant_last_count=0\n\
    \    local consonant_middle_count=0\n    local consonant_first_index=0\n    local\
    \ consonant_last_index=0\n    local consonant_middle_index=0\n    local consonant_first_count=0\n\
    \    local consonant_last_count=0\n    local consonant_middle_count=0\n    local\
    \ consonant_first_index=0\n    local consonant_last_index=0\n    local consonant_middle_index=0\n\
    \    local consonant_first_count=0\n    local consonant_last_count=0\n    local\
    \ consonant_middle_count=0\n    local consonant_first_index=0\n    local consonant_last_index=0\n\
    \    local consonant_middle_index=0\n    local consonant_first_count=0\n    local\
    \ consonant_last_count=0\n    local consonant_middle_count=0\n    local consonant_first_index=0\n\
    \    local consonant_last_index=0\n    local consonant_middle_index=0\n    local\
    \ consonant_first_count=0\n    local consonant_last_count=0\n    local consonant_middle_count=0\n\
    \    local consonant_first_index=0\n    local consonant_last_index=0\n    local\
    \ consonant_middle_index=0\n    local consonant_first_count=0\n    local consonant_last_count=0\n\
    \    local consonant_middle_count=0\n    local consonant_first_index=0\n    local\
    \ consonant_last_index=0\n    local conson\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ vowels_count=${#vowels[@]}\n  local vowel_found=\"\"\n  local vowel_found_index=0\n\
    \  local vowel_found_index2=0\n  local vowel_found_index3=0\n  local vowel_found_index4=0\n\
    \  local vowel_found_index5=0\n  local vowel_found_index6=0\n  local vowel_found_index7=0\n\
    \  local vowel_found_index8=0\n  local vowel_found_index9=0\n  local vowel_found_index10=0\n\
    \  local vowel_found_index11=0\n  local vowel_found_index12=0\n  local vowel_found_index13=0\n\
    \  local vowel_found_index14=0\n  local vowel_found_index15=0\n  local vowel_found_index16=0\n\
    \  local vowel_found_index17=0\n  local vowel_found_index18=0\n  local vowel_found_index19=0\n\
    \  local vowel_found_index20=0\n  local vowel_found_index21=0\n  local vowel_found_index22=0\n\
    \  local vowel_found_index23=0\n  local vowel_found_index24=0\n  local vowel_found_index25=0\n\
    \  local vowel_found_index26=0\n  local vowel_found_index27=0\n  local vowel_found_index28=0\n\
    \  local vowel_found_index29=0\n  local vowel_found_index30=0\n  local vowel_found_index31=0\n\
    \  local vowel_found_index32=0\n  local vowel_found_index33=0\n  local vowel_found_index34=0\n\
    \  local vowel_found_index35=0\n  local vowel_found_index36=0\n  local vowel_found_index37=0\n\
    \  local vowel_found_index38=0\n  local vowel_found_index39=0\n  local vowel_found_index40=0\n\
    \  local vowel_found_index41=0\n  local vowel_found_index42=0\n  local vowel_found_index43=0\n\
    \  local vowel_found_index44=0\n  local vowel_found_index45=0\n  local vowel_found_index46=0\n\
    \  local vowel_found_index47=0\n  local vowel_found_index48=0\n  local vowel_found_index49=0\n\
    \  local vowel_found_index50=0\n  local vowel_found_index51=0\n  local vowel_found_index52=0\n\
    \  local vowel_found_index53=0\n  local vowel_found_index54\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local vowel_count=$(echo $1 | grep -o -E \"[aeiouy]\" | wc -l)\n  local vowel_found=\"\
    \"\n  local vowel_position=0\n  local vowel_position_count=0\n  local vowel_position_count2=0\n\
    \  local vowel_position_count3=0\n  local vowel_position_count4=0\n  local vowel_position_count5=0\n\
    \  local vowel_position_count6=0\n  local vowel_position_count7=0\n  local vowel_position_count8=0\n\
    \  local vowel_position_count9=0\n  local vowel_position_count10=0\n  local vowel_position_count11=0\n\
    \  local vowel_position_count12=0\n  local vowel_position_count13=0\n  local vowel_position_count14=0\n\
    \  local vowel_position_count15=0\n  local vowel_position_count16=0\n  local vowel_position_count17=0\n\
    \  local vowel_position_count18=0\n  local vowel_position_count19=0\n  local vowel_position_count20=0\n\
    \  local vowel_position_count21=0\n  local vowel_position_count22=0\n  local vowel_position_count23=0\n\
    \  local vowel_position_count24=0\n  local vowel_position_count25=0\n  local vowel_position_count26=0\n\
    \  local vowel_position_count27=0\n  local vowel_position_count28=0\n  local vowel_position_count29=0\n\
    \  local vowel_position_count30=0\n  local vowel_position_count31=0\n  local vowel_position_count32=0\n\
    \  local vowel_position_count33=0\n  local vowel_position_count34=0\n  local vowel_position_count35=0\n\
    \  local vowel_position_count36=0\n  local vowel_position_count37=0\n  local vowel_position_count38=0\n\
    \  local vowel_position_count39=0\n  local vowel_position_count40=0\n  local vowel_position_count41=0\n\
    \  local vowel_position_count42=0\n  local vowel_position_count43=0\n  local vowel_position_count44=0\n\
    \  local vowel_position_count45=0\n  local vowel_position_count46=0\n  local vowel_position_count47=0\n\
    \  local vowel_position_count48=0\n  local vowel_position_count49=0\n  local vowel_position_count50=0\n\
    \  local vowel_position_count51=0\n  local vowel_position_count\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y \xE6\
    \ \xF8 \xE5 \xC6 \xD8 \xC5\"\n    local vowels_count=$(echo $vowels | wc -w)\n\
    \    local vowels_count_1=$(echo $vowels | sed 's/ //g' | wc -w)\n    local vowels_count_2=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_3=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_4=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n\
    \    local vowels_count_5=$(echo $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_6=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_7=$(echo $vowels | sed\
    \ 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_8=$(echo $vowels | sed\
    \ 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n    local vowels_count_9=$(echo\
    \ $vowels | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/\
    \ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | sed 's/ //g' | wc -w)\n\
    \    local vowels_count_10=$(echo $vowels | sed 's/ //g' | sed 's/\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8hsrdlta.sh: line 22: unexpected EOF while looking for matching
    `''''

    /tmp/tmp8hsrdlta.sh: line 47: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local word=$1\n    local vowel_count=0\n    local vowel_index=0\n    local\
    \ vowel_found=false\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_found_index=-1\n    local vowel_found_index=-1\n    local vowel_found_index=-1\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y AE II\
    \ OO UU\"\n  local word=$1\n  local vowel_found=\"\"\n  local vowel_found_index=0\n\
    \  local vowel_index=0\n  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n\
    \  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local\
    \ vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n\
    \  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local\
    \ vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n\
    \  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local\
    \ vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n\
    \  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local\
    \ vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n\
    \  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local\
    \ vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n\
    \  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local\
    \ vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n\
    \  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local\
    \ vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n\
    \  local vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local\
    \ vowel_end_index=${#word}\n  local vowel_start_index=${#word}\n  local vowel_end_index=${#word}\n\
    \  local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local input=\"$1\"\n    local vowel\n    local vowel_count\n    local vowel_index\n\
    \    local vowel_found\n    local vowel_position\n    local vowel_position_index\n\
    \    local vowel_position_count\n    local vowel_position_count2\n    local vowel_position_count3\n\
    \    local vowel_position_count4\n    local vowel_position_count5\n    local vowel_position_count6\n\
    \    local vowel_position_count7\n    local vowel_position_count8\n    local vowel_position_count9\n\
    \    local vowel_position_count10\n    local vowel_position_count11\n    local\
    \ vowel_position_count12\n    local vowel_position_count13\n    local vowel_position_count14\n\
    \    local vowel_position_count15\n    local vowel_position_count16\n    local\
    \ vowel_position_count17\n    local vowel_position_count18\n    local vowel_position_count19\n\
    \    local vowel_position_count20\n    local vowel_position_count21\n    local\
    \ vowel_position_count22\n    local vowel_position_count23\n    local vowel_position_count24\n\
    \    local vowel_position_count25\n    local vowel_position_count26\n    local\
    \ vowel_position_count27\n    local vowel_position_count28\n    local vowel_position_count29\n\
    \    local vowel_position_count30\n    local vowel_position_count31\n    local\
    \ vowel_position_count32\n    local vowel_position_count33\n    local vowel_position_count34\n\
    \    local vowel_position_count35\n    local vowel_position_count36\n    local\
    \ vowel_position_count37\n    local vowel_position_count38\n    local vowel_position_count39\n\
    \    local vowel_position_count40\n    local vowel_position_count41\n    local\
    \ vowel_position_count42\n    local vowel_position_count43\n    local vowel_position_count44\n\
    \    local vowel_position_count45\n    local vowel_position_count46\n    local\
    \ vowel_position_count47\n    local vowel_position_count48\n    local vowel_position_count49\n\
    \    local vowel_position_count50\n    local vowel_position_count51\n    local\
    \ vowel_position_count52\n    local vowel_position_count53\n    local vowel_position_count54\n\
    \    local vowel_position_count55\n    local vowel_position_count56\n    local\
    \ vowel_position_count57\n    local vowel_position_count58\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=$1\n  local vowel\n  local vowel_count\n  local vowel_index\n  local vowel_found\n\
    \  local vowel_found_index\n  local vowel_found_index2\n  local vowel_found_index3\n\
    \  local vowel_found_index4\n  local vowel_found_index5\n  local vowel_found_index6\n\
    \  local vowel_found_index7\n  local vowel_found_index8\n  local vowel_found_index9\n\
    \  local vowel_found_index10\n  local vowel_found_index11\n  local vowel_found_index12\n\
    \  local vowel_found_index13\n  local vowel_found_index14\n  local vowel_found_index15\n\
    \  local vowel_found_index16\n  local vowel_found_index17\n  local vowel_found_index18\n\
    \  local vowel_found_index19\n  local vowel_found_index20\n  local vowel_found_index21\n\
    \  local vowel_found_index22\n  local vowel_found_index23\n  local vowel_found_index24\n\
    \  local vowel_found_index25\n  local vowel_found_index26\n  local vowel_found_index27\n\
    \  local vowel_found_index28\n  local vowel_found_index29\n  local vowel_found_index30\n\
    \  local vowel_found_index31\n  local vowel_found_index32\n  local vowel_found_index33\n\
    \  local vowel_found_index34\n  local vowel_found_index35\n  local vowel_found_index36\n\
    \  local vowel_found_index37\n  local vowel_found_index38\n  local vowel_found_index39\n\
    \  local vowel_found_index40\n  local vowel_found_index41\n  local vowel_found_index42\n\
    \  local vowel_found_index43\n  local vowel_found_index44\n  local vowel_found_index45\n\
    \  local vowel_found_index46\n  local vowel_found_index47\n  local vowel_found_index48\n\
    \  local vowel_found_index49\n  local vowel_found_index50\n  local vowel_found_index51\n\
    \  local vowel_found_index52\n  local vowel_found_index53\n  local vowel_found_index54\n\
    \  local vowel_found_index55\n  local vowel_found_index56\n  local vowel_found_index57\n\
    \  local vowel_found_index58\n  local vowel_found_index59\n  local vowel_found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y AE\
    \ II OO UU\"\n    local input=\"$1\"\n    local vowel_count=0\n    local vowel_found=\"\
    \"\n    local vowel_position=0\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_count=0\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local consonant_found=\"\"\n    local consonant_position=0\n    local consonant_found=\"\
    \"\n    local consonant_position=0\n    local consonant_found=\"\"\n    local\
    \ consonant_position=0\n    local consonant_found=\"\"\n    local consonant_position=0\n\
    \    local con\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local vowel_count=0\n  local vowel_found=\"\"\n  local word=$1\n  local vowel_index=0\n\
    \  local vowel_position=0\n  local vowel_length=$((${#word} - 1))\n  local consonant_position=$((${#word}\
    \ - 1))\n  local consonant_length=$((${#word} - 1))\n  local consonant_found=\"\
    \"\n  local consonant_index=0\n  local consonant_position=0\n  local consonant_length=$((${#word}\
    \ - 1))\n  local consonant_found=\"\"\n  local consonant_index=0\n  local consonant_position=0\n\
    \  local consonant_length=$((${#word} - 1))\n  local consonant_found=\"\"\n  local\
    \ consonant_index=0\n  local consonant_position=0\n  local consonant_length=$((${#word}\
    \ - 1))\n  local consonant_found=\"\"\n  local consonant_index=0\n  local consonant_position=0\n\
    \  local consonant_length=$((${#word} - 1))\n  local consonant_found=\"\"\n  local\
    \ consonant_index=0\n  local consonant_position=0\n  local consonant_length=$((${#word}\
    \ - 1))\n  local consonant_found=\"\"\n  local consonant_index=0\n  local consonant_position=0\n\
    \  local consonant_length=$((${#word} - 1))\n  local consonant_found=\"\"\n  local\
    \ consonant_index=0\n  local consonant_position=0\n  local consonant_length=$((${#word}\
    \ - 1))\n  local consonant_found=\"\"\n  local consonant_index=0\n  local consonant_position=0\n\
    \  local consonant_length=$((${#word} - 1))\n  local consonant_found=\"\"\n  local\
    \ consonant_index=0\n  local consonant_position=0\n  local consonant_length=$((${#word}\
    \ - 1))\n  local consonant_found=\"\"\n  local consonant_index=0\n  local consonant_position=0\n\
    \  local consonant_length=$((${#word} - 1))\n  local consonant_found=\"\"\n  local\
    \ consonant_index=0\n  local consonant_position=0\n  local consonant_length=$((${#word}\
    \ - 1))\n  local consonant_found=\"\"\n  local \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local vowels_count=${#vowels}\n  local vowels_index=0\n  local vowels_string=\"\
    \"\n  local vowels_string_index=0\n  local vowels_string_length=$((${#1} - 1))\n\
    \  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length=$((${#1} - 1))\n  local vowels_string_length=$((${#1}\
    \ - 1))\n  local vowels_string_length\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_string=${1:-}\n    local\
    \ vowels_string_length=${#vowels_string}\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$((vowels_string_length-1))\n    local vowels_string_length=$((vowels_string_length-1))\n\
    \    local vowels_string_length=$\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_count=${#vowels}\n    local vowels_count_2=$((${#1} - 1))\n\
    \    local vowels_count_3=$((${#1} - 2))\n    local vowels_count_4=$((${#1} -\
    \ 3))\n    local vowels_count_5=$((${#1} - 4))\n    local vowels_count_6=$((${#1}\
    \ - 5))\n    local vowels_count_7=$((${#1} - 6))\n    local vowels_count_8=$((${#1}\
    \ - 7))\n    local vowels_count_9=$((${#1} - 8))\n    local vowels_count_10=$((${#1}\
    \ - 9))\n    local vowels_count_11=$((${#1} - 10))\n    local vowels_count_12=$((${#1}\
    \ - 11))\n    local vowels_count_13=$((${#1} - 12))\n    local vowels_count_14=$((${#1}\
    \ - 13))\n    local vowels_count_15=$((${#1} - 14))\n    local vowels_count_16=$((${#1}\
    \ - 15))\n    local vowels_count_17=$((${#1} - 16))\n    local vowels_count_18=$((${#1}\
    \ - 17))\n    local vowels_count_19=$((${#1} - 18))\n    local vowels_count_20=$((${#1}\
    \ - 19))\n    local vowels_count_21=$((${#1} - 20))\n    local vowels_count_22=$((${#1}\
    \ - 21))\n    local vowels_count_23=$((${#1} - 22))\n    local vowels_count_24=$((${#1}\
    \ - 23))\n    local vowels_count_25=$((${#1} - 24))\n    local vowels_count_26=$((${#1}\
    \ - 25))\n    local vowels_count_27=$((${#1} - 26))\n    local vowels_count_28=$((${#1}\
    \ - 27))\n    local vowels_count_29=$((${#1} - 28))\n    local vowels_count_30=$((${#1}\
    \ - 29))\n    local vowels_count_31=$((${#1} - 30))\n    local vowels_count_32=$((${#1}\
    \ - 31))\n    local vowels_count_33=$((${#1} - 32))\n    local vowels_count_34=$((${#1}\
    \ - 33))\n    local vowels_count_35=$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" \n\
    \    local word=$1\n    local vowel\n    local vowel_index\n    local vowel_found\n\
    \    local vowel_found_index\n    local vowel_found_index2\n    local vowel_found_index3\n\
    \    local vowel_found_index4\n    local vowel_found_index5\n    local vowel_found_index6\n\
    \    local vowel_found_index7\n    local vowel_found_index8\n    local vowel_found_index9\n\
    \    local vowel_found_index10\n    local vowel_found_index11\n    local vowel_found_index12\n\
    \    local vowel_found_index13\n    local vowel_found_index14\n    local vowel_found_index15\n\
    \    local vowel_found_index16\n    local vowel_found_index17\n    local vowel_found_index18\n\
    \    local vowel_found_index19\n    local vowel_found_index20\n    local vowel_found_index21\n\
    \    local vowel_found_index22\n    local vowel_found_index23\n    local vowel_found_index24\n\
    \    local vowel_found_index25\n    local vowel_found_index26\n    local vowel_found_index27\n\
    \    local vowel_found_index28\n    local vowel_found_index29\n    local vowel_found_index30\n\
    \    local vowel_found_index31\n    local vowel_found_index32\n    local vowel_found_index33\n\
    \    local vowel_found_index34\n    local vowel_found_index35\n    local vowel_found_index36\n\
    \    local vowel_found_index37\n    local vowel_found_index38\n    local vowel_found_index39\n\
    \    local vowel_found_index40\n    local vowel_found_index41\n    local vowel_found_index42\n\
    \    local vowel_found_index43\n    local vowel_found_index44\n    local vowel_found_index45\n\
    \    local vowel_found_index46\n    local vowel_found_index47\n    local vowel_found_index48\n\
    \    local vowel_found_index49\n    local vowel_found_index50\n    local vowel_found_index51\n\
    \    local vowel_found_index52\n    local vowel_found_index53\n    local vowel_found_index54\n\
    \    local vowel_found_index55\n    local vowel_found_index56\n    local vowel_found_index57\n\
    \    local vowel_found_index58\n    local vowel_found_index59\n    local vowel_found_index60\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local word=$1\n  local vowel\n  local vowel_index\n  local vowel_found\n  local\
    \ vowel_found_index\n  local vowel_found_index2\n  local vowel_found_index3\n\
    \  local vowel_found_index4\n  local vowel_found_index5\n  local vowel_found_index6\n\
    \  local vowel_found_index7\n  local vowel_found_index8\n  local vowel_found_index9\n\
    \  local vowel_found_index10\n  local vowel_found_index11\n  local vowel_found_index12\n\
    \  local vowel_found_index13\n  local vowel_found_index14\n  local vowel_found_index15\n\
    \  local vowel_found_index16\n  local vowel_found_index17\n  local vowel_found_index18\n\
    \  local vowel_found_index19\n  local vowel_found_index20\n  local vowel_found_index21\n\
    \  local vowel_found_index22\n  local vowel_found_index23\n  local vowel_found_index24\n\
    \  local vowel_found_index25\n  local vowel_found_index26\n  local vowel_found_index27\n\
    \  local vowel_found_index28\n  local vowel_found_index29\n  local vowel_found_index30\n\
    \  local vowel_found_index31\n  local vowel_found_index32\n  local vowel_found_index33\n\
    \  local vowel_found_index34\n  local vowel_found_index35\n  local vowel_found_index36\n\
    \  local vowel_found_index37\n  local vowel_found_index38\n  local vowel_found_index39\n\
    \  local vowel_found_index40\n  local vowel_found_index41\n  local vowel_found_index42\n\
    \  local vowel_found_index43\n  local vowel_found_index44\n  local vowel_found_index45\n\
    \  local vowel_found_index46\n  local vowel_found_index47\n  local vowel_found_index48\n\
    \  local vowel_found_index49\n  local vowel_found_index50\n  local vowel_found_index51\n\
    \  local vowel_found_index52\n  local vowel_found_index53\n  local vowel_found_index54\n\
    \  local vowel_found_index55\n  local vowel_found_index56\n  local vowel_found_index57\n\
    \  local vowel_found_index58\n  local vowel_found_index59\n  local vowel_found_index60\n\
    \  \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ string=\"$1\"\n  local vowel_found=\"\"\n  local vowel_position=\"\"\n  local\
    \ vowel_position_count=0\n  local vowel_position_count2=0\n  local vowel_position_count3=0\n\
    \  local vowel_position_count4=0\n  local vowel_position_count5=0\n  local vowel_position_count6=0\n\
    \  local vowel_position_count7=0\n  local vowel_position_count8=0\n  local vowel_position_count9=0\n\
    \  local vowel_position_count10=0\n  local vowel_position_count11=0\n  local vowel_position_count12=0\n\
    \  local vowel_position_count13=0\n  local vowel_position_count14=0\n  local vowel_position_count15=0\n\
    \  local vowel_position_count16=0\n  local vowel_position_count17=0\n  local vowel_position_count18=0\n\
    \  local vowel_position_count19=0\n  local vowel_position_count20=0\n  local vowel_position_count21=0\n\
    \  local vowel_position_count22=0\n  local vowel_position_count23=0\n  local vowel_position_count24=0\n\
    \  local vowel_position_count25=0\n  local vowel_position_count26=0\n  local vowel_position_count27=0\n\
    \  local vowel_position_count28=0\n  local vowel_position_count29=0\n  local vowel_position_count30=0\n\
    \  local vowel_position_count31=0\n  local vowel_position_count32=0\n  local vowel_position_count33=0\n\
    \  local vowel_position_count34=0\n  local vowel_position_count35=0\n  local vowel_position_count36=0\n\
    \  local vowel_position_count37=0\n  local vowel_position_count38=0\n  local vowel_position_count39=0\n\
    \  local vowel_position_count40=0\n  local vowel_position_count41=0\n  local vowel_position_count42=0\n\
    \  local vowel_position_count43=0\n  local vowel_position_count44=0\n  local vowel_position_count45=0\n\
    \  local vowel_position_count46=0\n  local vowel_position_count47=0\n  local vowel_position_count48=0\n\
    \  local vowel_position_count49=0\n  local vowel_position_count50=0\n  local vowel_position_count51=0\n\
    \  local vowel_position_count52=0\n  local vowel_position_count53=0\n  local vowel_position_count\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" #\
    \ vowel list\n    local word=$1\n    local vowel_count=0\n    local vowel_index=0\n\
    \    local vowel_found=\"\"\n    local vowel_left=\"\"\n    local vowel_right=\"\
    \"\n    local consonant_index=0\n    local consonant_found=\"\"\n    local consonant_left=\"\
    \"\n    local consonant_right=\"\"\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_left=\"\"\n    local consonant_right=\"\"\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_count=0\n    local consonant_found=\"\"\n    local consonant_left=\"\
    \"\n    local consonant_right=\"\"\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_left=\"\"\n    local consonant_right=\"\"\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_count=0\n    local consonant_found=\"\"\n    local consonant_left=\"\
    \"\n    local consonant_right=\"\"\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_left=\"\"\n    local consonant_right=\"\"\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_count=0\n    local consonant_found=\"\"\n    local consonant_left=\"\
    \"\n    local consonant_right=\"\"\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_left=\"\"\n    local consonant_right=\"\"\n    local consonant_count=0\n\
    \    local consonant_found=\"\"\n    local consonant_left=\"\"\n    local consonant_right=\"\
    \"\n    local consonant_count=0\n    local consonant_found=\"\"\n    local consonant_left=\"\
    \"\n    local consonant_right=\"\"\n    local consonant_count=0\n    local consonant_found=\"\
    \"\n    local consonant_left=\"\"\n    local consonant_right=\"\"\n    local consonant_count=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\";\n\
    \    local word=$1;\n    local vowel_found=\"\";\n    local vowel_position=\"\"\
    ;\n    local vowel_position_count=0;\n    local vowel_position_index=0;\n    local\
    \ vowel_position_index_count=0;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=0;\n\
    \    local vowel_position_index_count_step_max=2;\n    local vowel_position_index_count_step_min=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=0;\n\
    \    local vowel_position_index_count_step_max=2;\n    local vowel_position_index_count_step_min=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=0;\n\
    \    local vowel_position_index_count_step_max=2;\n    local vowel_position_index_count_step_min=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=0;\n\
    \    local vowel_position_index_count_step_max=2;\n    local vowel_position_index_count_step_min=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=0;\n\
    \    local vowel_position_index_count_step_max=2;\n    local vowel_position_index_count_step_min=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=0;\n\
    \    local vowel_position_index_count_step_max=2;\n    local vowel_position_index_count_step_min=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n    local vowel_position_index_count_step=0;\n\
    \    local vowel_position_index_count_step_max=2;\n    local vowel_position_index_count_step_min=1;\n\
    \    local vowel_position_index_count_step=1;\n    local vowel_position_index_count_max=2;\n\
    \    local vowel_position_index_count_min=1;\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local input=\"$1\"\n  local output=\"\"\n  local vowel_count=0\n  local consonant_count=0\n\
    \  local consonant_index=0\n  local vowel_index=0\n  local consonant_left=0\n\
    \  local vowel_left=0\n  local consonant_right=0\n  local vowel_right=0\n  local\
    \ consonant_found=0\n  local vowel_found=0\n  local consonant_found_index=0\n\
    \  local vowel_found_index=0\n  local consonant_found2=0\n  local vowel_found2=0\n\
    \  local consonant_found3=0\n  local vowel_found3=0\n  local consonant_found4=0\n\
    \  local vowel_found4=0\n  local consonant_found5=0\n  local vowel_found5=0\n\
    \  local consonant_found6=0\n  local vowel_found6=0\n  local consonant_found7=0\n\
    \  local vowel_found7=0\n  local consonant_found8=0\n  local vowel_found8=0\n\
    \  local consonant_found9=0\n  local vowel_found9=0\n  local consonant_found10=0\n\
    \  local vowel_found10=0\n  local consonant_found11=0\n  local vowel_found11=0\n\
    \  local consonant_found12=0\n  local vowel_found12=0\n  local consonant_found13=0\n\
    \  local vowel_found13=0\n  local consonant_found14=0\n  local vowel_found14=0\n\
    \  local consonant_found15=0\n  local vowel_found15=0\n  local consonant_found16=0\n\
    \  local vowel_found16=0\n  local consonant_found17=0\n  local vowel_found17=0\n\
    \  local consonant_found18=0\n  local vowel_found18=0\n  local consonant_found19=0\n\
    \  local vowel_found19=0\n  local consonant_found20=0\n  local vowel_found20=0\n\
    \  local consonant_found21=0\n  local vowel_found21=0\n  local consonant_found22=0\n\
    \  local vowel_found22=0\n  local consonant_found23=0\n  local vowel_found23=0\n\
    \  local consonant_found24=0\n  local vowel_found24=0\n  local consonant_found25=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u\"\n  local\
    \ word=\"$1\"\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_found=\"\
    \"\n  local vowel_position=0\n  local vowel_position_index=0\n  local vowel_position_index2=0\n\
    \  local vowel_position_index3=0\n  local vowel_position_index4=0\n  local vowel_position_index5=0\n\
    \  local vowel_position_index6=0\n  local vowel_position_index7=0\n  local vowel_position_index8=0\n\
    \  local vowel_position_index9=0\n  local vowel_position_index10=0\n  local vowel_position_index11=0\n\
    \  local vowel_position_index12=0\n  local vowel_position_index13=0\n  local vowel_position_index14=0\n\
    \  local vowel_position_index15=0\n  local vowel_position_index16=0\n  local vowel_position_index17=0\n\
    \  local vowel_position_index18=0\n  local vowel_position_index19=0\n  local vowel_position_index20=0\n\
    \  local vowel_position_index21=0\n  local vowel_position_index22=0\n  local vowel_position_index23=0\n\
    \  local vowel_position_index24=0\n  local vowel_position_index25=0\n  local vowel_position_index26=0\n\
    \  local vowel_position_index27=0\n  local vowel_position_index28=0\n  local vowel_position_index29=0\n\
    \  local vowel_position_index30=0\n  local vowel_position_index31=0\n  local vowel_position_index32=0\n\
    \  local vowel_position_index33=0\n  local vowel_position_index34=0\n  local vowel_position_index35=0\n\
    \  local vowel_position_index36=0\n  local vowel_position_index37=0\n  local vowel_position_index38=0\n\
    \  local vowel_position_index39=0\n  local vowel_position_index40=0\n  local vowel_position_index41=0\n\
    \  local vowel_position_index42=0\n  local vowel_position_index43=0\n  local vowel_position_index44=0\n\
    \  local vowel_position_index45=0\n  local vowel_position_index46=0\n  local vowel_position_index47=0\n\
    \  local vowel_position_index48=0\n  local vowel_position_index49=0\n  local vowel_position_index50=0\n\
    \  local vowel_position_index51=0\n  local vowel_position_index52=0\n  local vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ vowels_count=${#vowels[@]}\n  local vowels_count_from_right=${#${1##*$vowels}}\n\
    \  local vowel_found=\"\"\n  local vowel_found_count=0\n  local vowel_found_index=0\n\
    \  local vowel_found_index_from_right=0\n  local vowel_found_index_from_left=0\n\
    \  local vowel_found_index_from_middle=0\n  local vowel_found_index_from_middle2=0\n\
    \  local vowel_found_index_from_middle3=0\n  local vowel_found_index_from_middle4=0\n\
    \  local vowel_found_index_from_middle5=0\n  local vowel_found_index_from_middle6=0\n\
    \  local vowel_found_index_from_middle7=0\n  local vowel_found_index_from_middle8=0\n\
    \  local vowel_found_index_from_middle9=0\n  local vowel_found_index_from_middle10=0\n\
    \  local vowel_found_index_from_middle11=0\n  local vowel_found_index_from_middle12=0\n\
    \  local vowel_found_index_from_middle13=0\n  local vowel_found_index_from_middle14=0\n\
    \  local vowel_found_index_from_middle15=0\n  local vowel_found_index_from_middle16=0\n\
    \  local vowel_found_index_from_middle17=0\n  local vowel_found_index_from_middle18=0\n\
    \  local vowel_found_index_from_middle19=0\n  local vowel_found_index_from_middle20=0\n\
    \  local vowel_found_index_from_middle21=0\n  local vowel_found_index_from_middle22=0\n\
    \  local vowel_found_index_from_middle23=0\n  local vowel_found_index_from_middle24=0\n\
    \  local vowel_found_index_from_middle25=0\n  local vowel_found_index_from_middle26=0\n\
    \  local vowel_found_index_from_middle27=0\n  local vowel_found_index_from_middle28=0\n\
    \  local vowel_found_index_from_middle29=0\n  local vowel_found_index_from_middle30=0\n\
    \  local vowel_found_index_from_middle31=0\n  local vowel_found_index_from_middle32=0\n\
    \  local vowel_found_index_from_middle33=0\n  local vowel_found_index_from_middle34=0\n\
    \  local vowel_found_index_from_middle35=0\n  local vowel_found_index_from_middle36=0\n\
    \  local vowel_found_index_from_middle37=0\n  local vowel_found_index_from_middle38=0\n\
    \  local vowel_found_index_from_middle39=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphbm5uy7j.sh: line 13: vowels_count_from_right=${#${1##*$vowels}}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\" #\
    \ vowel list\n    local word=$1\n    local vowel_count=0\n    local vowel_found=\"\
    \"\n    local consonant_count=0\n    local consonant_found=\"\"\n    local consonant_index=0\n\
    \    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_found=\"\"\n    local consonant_found=\"\
    \"\n    local consonant_found=\"\"\n    local consonant_found=\"\"\n    local\
    \ consonant_found=\"\"\n    local consonant_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u\"\n \
    \   local vowels_count=${#vowels}\n    local vowels_count_2=$((${#1} - 1))\n \
    \   local vowels_count_3=$((${#1} - 2))\n    local vowels_count_4=$((${#1} - 3))\n\
    \    local vowels_count_5=$((${#1} - 4))\n    local vowels_count_6=$((${#1} -\
    \ 5))\n    local vowels_count_7=$((${#1} - 6))\n    local vowels_count_8=$((${#1}\
    \ - 7))\n    local vowels_count_9=$((${#1} - 8))\n    local vowels_count_10=$((${#1}\
    \ - 9))\n    local vowels_count_11=$((${#1} - 10))\n    local vowels_count_12=$((${#1}\
    \ - 11))\n    local vowels_count_13=$((${#1} - 12))\n    local vowels_count_14=$((${#1}\
    \ - 13))\n    local vowels_count_15=$((${#1} - 14))\n    local vowels_count_16=$((${#1}\
    \ - 15))\n    local vowels_count_17=$((${#1} - 16))\n    local vowels_count_18=$((${#1}\
    \ - 17))\n    local vowels_count_19=$((${#1} - 18))\n    local vowels_count_20=$((${#1}\
    \ - 19))\n    local vowels_count_21=$((${#1} - 20))\n    local vowels_count_22=$((${#1}\
    \ - 21))\n    local vowels_count_23=$((${#1} - 22))\n    local vowels_count_24=$((${#1}\
    \ - 23))\n    local vowels_count_25=$((${#1} - 24))\n    local vowels_count_26=$((${#1}\
    \ - 25))\n    local vowels_count_27=$((${#1} - 26))\n    local vowels_count_28=$((${#1}\
    \ - 27))\n    local vowels_count_29=$((${#1} - 28))\n    local vowels_count_30=$((${#1}\
    \ - 29))\n    local vowels_count_31=$((${#1} - 30))\n    local vowels_count_32=$((${#1}\
    \ - 31))\n    local vowels_count_33=$((${#1} - 32))\n    local vowels_count_34=$((${#1}\
    \ - 33))\n    local vowels_count_35=$((\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqfzf3dng.sh: line 46: unexpected EOF while looking for matching
    `)''

    /tmp/tmpqfzf3dng.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\" \n\
    \  local vowels_count=${#vowels}\n  local vowels_count_2=${#vowels}\n  local vowels_count_3=${#vowels}\n\
    \  local vowels_count_4=${#vowels}\n  local vowels_count_5=${#vowels}\n  local\
    \ vowels_count_6=${#vowels}\n  local vowels_count_7=${#vowels}\n  local vowels_count_8=${#vowels}\n\
    \  local vowels_count_9=${#vowels}\n  local vowels_count_10=${#vowels}\n  local\
    \ vowels_count_11=${#vowels}\n  local vowels_count_12=${#vowels}\n  local vowels_count_13=${#vowels}\n\
    \  local vowels_count_14=${#vowels}\n  local vowels_count_15=${#vowels}\n  local\
    \ vowels_count_16=${#vowels}\n  local vowels_count_17=${#vowels}\n  local vowels_count_18=${#vowels}\n\
    \  local vowels_count_19=${#vowels}\n  local vowels_count_20=${#vowels}\n  local\
    \ vowels_count_21=${#vowels}\n  local vowels_count_22=${#vowels}\n  local vowels_count_23=${#vowels}\n\
    \  local vowels_count_24=${#vowels}\n  local vowels_count_25=${#vowels}\n  local\
    \ vowels_count_26=${#vowels}\n  local vowels_count_27=${#vowels}\n  local vowels_count_28=${#vowels}\n\
    \  local vowels_count_29=${#vowels}\n  local vowels_count_30=${#vowels}\n  local\
    \ vowels_count_31=${#vowels}\n  local vowels_count_32=${#vowels}\n  local vowels_count_33=${#vowels}\n\
    \  local vowels_count_34=${#vowels}\n  local vowels_count_35=${#vowels}\n  local\
    \ vowels_count_36=${#vowels}\n  local vowels_count_37=${#vowels}\n  local vowels_count_38=${#vowels}\n\
    \  local vowels_count_39=${#vowels}\n  local vowels_count_40=${#vowels}\n  local\
    \ vowels_count_41=${#vowels}\n  local vowels_count_42=${#vowels}\n  local vowels_count_43=${#vowels}\n\
    \  local vowels_count_44=${#vowels}\n  local vowels_count_45=${#vowels}\n  local\
    \ vowels_count_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local string=\"$1\"\n    local\
    \ vowels=\"a e i o u\"\n    local vowel_count=0\n    local vowel_index=0\n   \
    \ local vowel_found=\"\"\n    local vowel_found_index=0\n    local vowel_found_index2=0\n\
    \    local vowel_found2=\"\"\n    local vowel_found2_index=0\n    local vowel_found2_index2=0\n\
    \    local vowel_found3=\"\"\n    local vowel_found3_index=0\n    local vowel_found3_index2=0\n\
    \    local vowel_found4=\"\"\n    local vowel_found4_index=0\n    local vowel_found4_index2=0\n\
    \    local vowel_found5=\"\"\n    local vowel_found5_index=0\n    local vowel_found5_index2=0\n\
    \    local vowel_found6=\"\"\n    local vowel_found6_index=0\n    local vowel_found6_index2=0\n\
    \    local vowel_found7=\"\"\n    local vowel_found7_index=0\n    local vowel_found7_index2=0\n\
    \    local vowel_found8=\"\"\n    local vowel_found8_index=0\n    local vowel_found8_index2=0\n\
    \    local vowel_found9=\"\"\n    local vowel_found9_index=0\n    local vowel_found9_index2=0\n\
    \    local vowel_found10=\"\"\n    local vowel_found10_index=0\n    local vowel_found10_index2=0\n\
    \    local vowel_found11=\"\"\n    local vowel_found11_index=0\n    local vowel_found11_index2=0\n\
    \    local vowel_found12=\"\"\n    local vowel_found12_index=0\n    local vowel_found12_index2=0\n\
    \    local vowel_found13=\"\"\n    local vowel_found13_index=0\n    local vowel_found13_index2=0\n\
    \    local vowel_found14=\"\"\n    local vowel_found14_index=0\n    local vowel_found14_index2=0\n\
    \    local vowel_found15=\"\"\n    local vowel_found15_index=0\n    local vowel_found15_index2=0\n\
    \    local vowel_found16=\"\"\n    local vowel_found16_index=0\n    local vowel_found16_index2=0\n\
    \    local vowel_found17=\"\"\n    local vowel_found17_index=0\n    local vowel_found17_index2=0\n\
    \    local vowel_found18=\"\"\n    local vowel_found18_index=0\n    local vowel_found18_index2=0\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel\n    local vowel_found\n    local vowel_found_index\n\
    \    local vowel_index\n    local vowel_length\n    local vowel_length_index\n\
    \    local vowel_length_index2\n    local vowel_length_index3\n    local vowel_length_index4\n\
    \    local vowel_length_index5\n    local vowel_length_index6\n    local vowel_length_index7\n\
    \    local vowel_length_index8\n    local vowel_length_index9\n    local vowel_length_index10\n\
    \    local vowel_length_index11\n    local vowel_length_index12\n    local vowel_length_index13\n\
    \    local vowel_length_index14\n    local vowel_length_index15\n    local vowel_length_index16\n\
    \    local vowel_length_index17\n    local vowel_length_index18\n    local vowel_length_index19\n\
    \    local vowel_length_index20\n    local vowel_length_index21\n    local vowel_length_index22\n\
    \    local vowel_length_index23\n    local vowel_length_index24\n    local vowel_length_index25\n\
    \    local vowel_length_index26\n    local vowel_length_index27\n    local vowel_length_index28\n\
    \    local vowel_length_index29\n    local vowel_length_index30\n    local vowel_length_index31\n\
    \    local vowel_length_index32\n    local vowel_length_index33\n    local vowel_length_index34\n\
    \    local vowel_length_index35\n    local vowel_length_index36\n    local vowel_length_index37\n\
    \    local vowel_length_index38\n    local vowel_length_index39\n    local vowel_length_index40\n\
    \    local vowel_length_index41\n    local vowel_length_index42\n    local vowel_length_index43\n\
    \    local vowel_length_index44\n    local vowel_length_index45\n    local vowel_length_index46\n\
    \    local vowel_length_index47\n    local vowel_length_index48\n    local vowel_length_index49\n\
    \    local vowel_length_index50\n    local vowel_length_index51\n    local vowel_length_index52\n\
    \    local vowel_length_index53\n    local vowel_length_index54\n    local vowel_length_index55\n\
    \    local vowel_length_index56\n    local vowel_length_index57\n    local vowel_length_index58\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local vowels=\"a e i o u y\"\n \
    \ local string=\"$1\"\n  local vowel\n  local vowel_found\n  local vowel_position\n\
    \  local vowel_position_count\n  local vowel_position_count2\n  local vowel_position_count3\n\
    \  local vowel_position_count4\n  local vowel_position_count5\n  local vowel_position_count6\n\
    \  local vowel_position_count7\n  local vowel_position_count8\n  local vowel_position_count9\n\
    \  local vowel_position_count10\n  local vowel_position_count11\n  local vowel_position_count12\n\
    \  local vowel_position_count13\n  local vowel_position_count14\n  local vowel_position_count15\n\
    \  local vowel_position_count16\n  local vowel_position_count17\n  local vowel_position_count18\n\
    \  local vowel_position_count19\n  local vowel_position_count20\n  local vowel_position_count21\n\
    \  local vowel_position_count22\n  local vowel_position_count23\n  local vowel_position_count24\n\
    \  local vowel_position_count25\n  local vowel_position_count26\n  local vowel_position_count27\n\
    \  local vowel_position_count28\n  local vowel_position_count29\n  local vowel_position_count30\n\
    \  local vowel_position_count31\n  local vowel_position_count32\n  local vowel_position_count33\n\
    \  local vowel_position_count34\n  local vowel_position_count35\n  local vowel_position_count36\n\
    \  local vowel_position_count37\n  local vowel_position_count38\n  local vowel_position_count39\n\
    \  local vowel_position_count40\n  local vowel_position_count41\n  local vowel_position_count42\n\
    \  local vowel_position_count43\n  local vowel_position_count44\n  local vowel_position_count45\n\
    \  local vowel_position_count46\n  local vowel_position_count47\n  local vowel_position_count48\n\
    \  local vowel_position_count49\n  local vowel_position_count50\n  local vowel_position_count51\n\
    \  local vowel_position_count52\n  local vowel_position_count53\n  local vowel_position_count54\n\
    \  local vowel_position_count55\n  local vowel_position_count56\n  local vowel_position_count57\n\
    \  local vowel_position_count58\n  local vowel_position_count59\n  local vowel_position_count60\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local string=\"$1\"\n    local vowel\n    local vowel_index\n    local vowel_length\n\
    \    local vowel_found\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_length\n\
    \    local vowel_found_index\n    local vowel_found_length\n    local vowel_found_index\n\
    \    local vowel_found_length\n    local vowel_found_index\n    local vowel_found_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local vowels=\"a e i o u y\"\n\
    \    local word=$1\n    local vowel\n    local vowel_index\n    local vowel_found\n\
    \    local vowel_found_index\n    local vowel_found_index2\n    local vowel_found_index3\n\
    \    local vowel_found_index4\n    local vowel_found_index5\n    local vowel_found_index6\n\
    \    local vowel_found_index7\n    local vowel_found_index8\n    local vowel_found_index9\n\
    \    local vowel_found_index10\n    local vowel_found_index11\n    local vowel_found_index12\n\
    \    local vowel_found_index13\n    local vowel_found_index14\n    local vowel_found_index15\n\
    \    local vowel_found_index16\n    local vowel_found_index17\n    local vowel_found_index18\n\
    \    local vowel_found_index19\n    local vowel_found_index20\n    local vowel_found_index21\n\
    \    local vowel_found_index22\n    local vowel_found_index23\n    local vowel_found_index24\n\
    \    local vowel_found_index25\n    local vowel_found_index26\n    local vowel_found_index27\n\
    \    local vowel_found_index28\n    local vowel_found_index29\n    local vowel_found_index30\n\
    \    local vowel_found_index31\n    local vowel_found_index32\n    local vowel_found_index33\n\
    \    local vowel_found_index34\n    local vowel_found_index35\n    local vowel_found_index36\n\
    \    local vowel_found_index37\n    local vowel_found_index38\n    local vowel_found_index39\n\
    \    local vowel_found_index40\n    local vowel_found_index41\n    local vowel_found_index42\n\
    \    local vowel_found_index43\n    local vowel_found_index44\n    local vowel_found_index45\n\
    \    local vowel_found_index46\n    local vowel_found_index47\n    local vowel_found_index48\n\
    \    local vowel_found_index49\n    local vowel_found_index50\n    local vowel_found_index51\n\
    \    local vowel_found_index52\n    local vowel_found_index53\n    local vowel_found_index54\n\
    \    local vowel_found_index55\n    local vowel_found_index56\n    local vowel_found_index57\n\
    \    local vowel_found_index58\n    local vowel_found_index59\n    local vowel_found_index60\n\
    \    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660039268

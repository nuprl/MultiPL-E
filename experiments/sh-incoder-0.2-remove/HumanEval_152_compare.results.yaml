language: sh
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff \n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkdeqgkow.sh: line 20: [: too many arguments

    /tmp/tmpkdeqgkow.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${scores[i]}\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    if [ ${guesses[i]} == ${scores[i]}\
    \ ]; then\n      result[i]=0\n    else\n      result[i]=$((${guesses[i]} - ${scores[i]}))\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgaa72zw8.sh: line 20: [: too many arguments

    /tmp/tmpgaa72zw8.sh: line 23: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local diff\n    local score\n   \
    \ local guess\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: -1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=$(\
    \ IFS=$'\\n' read -r -d '' -a result )\n  local score\n  score=$( IFS=$'\\n' read\
    \ -r -d '' -a score )\n  local guess\n  guess=$( IFS=$'\\n' read -r -d '' -a guess\
    \ )\n  local diff\n  diff=$( IFS=$'\\n' read -r -d '' -a diff )\n  local i\n \
    \ for i in \"${!result[@]}\"; do\n    if [ \"${guesses[i]}\" == \"${score[i]}\"\
    \ ]; then\n      diff[i]=0\n    else\n      diff[i]=$(( ${guess[i]} - ${score[i]}\
    \ ))\n    fi\n  done\n  echo \"${diff[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=16 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660036005
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess}-${score}\n    fi\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph0jv3t2d.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmph0jv3t2d.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local diff score\n  diff=0\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    score=${scores[i]}\n    guess=${guesses[i]}\n\
    \    if [ \"$guess\" == \"$score\" ]; then\n      diff=0\n    else\n      diff=$((\
    \ abs($guess - $score) ))\n    fi\n    scores[i]=$diff\n  done\n  echo \"${scores[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfgbcoa3v.sh: line 25: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[i]=$((${scores[i]} - ${guesses[i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_rkh82f.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local score\n  local guess\n\
    \  local diff\n  local i\n  local j\n  local diffs\n  local diff\n  local diffs\n\
    \  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local\
    \ diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n\
    \  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local\
    \ diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n\
    \  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local\
    \ diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n\
    \  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local\
    \ diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n\
    \  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local\
    \ diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n\
    \  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local\
    \ diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n\
    \  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local\
    \ diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n\
    \  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local\
    \ diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n\
    \  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n  local\
    \ diffs\n  local diff\n  local diffs\n  local diff\n  local diffs\n  local diff\n\
    \  local diffs\n  local diff\n  local diffs\n\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    result[i]=$(( ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmrsvmi1c.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=$(\
    \ IFS=$'\\n'; echo \"$guesses\" | sort -n | uniq -c | sort -n | awk '{ print $2\
    \ }')\n  result=$( IFS=$'\\n'; echo \"$scores\" | sort -n | uniq -c | sort -n\
    \ | awk '{ print $2 }')\n  result=$( IFS=$'\\n'; echo \"$result\" | sort -n |\
    \ uniq -c | sort -n | awk '{ print $2 }')\n  result=$( IFS=$'\\n'; echo \"$result\"\
    \ | sort -n | uniq -c | sort -n | awk '{ print $1 }')\n  result=$( IFS=$'\\n';\
    \ echo \"$result\" | sort -n | uniq -c | sort -n | awk '{ print $1 }')\n  result=$(\
    \ IFS=$'\\n'; echo \"$result\" | sort -n | uniq -c | sort -n | awk '{ print $1\
    \ }')\n  result=$( IFS=$'\\n'; echo \"$result\" | sort -n | uniq -c | sort -n\
    \ | awk '{ print $1 }')\n  result=$( IFS=$'\\n'; echo \"$result\" | sort -n |\
    \ uniq -c | sort -n | awk '{ print $1 }')\n  result=$( IFS=$'\\n'; echo \"$result\"\
    \ | sort -n | uniq -c | sort -n | awk '{ print $1 }')\n  result=$( IFS=$'\\n';\
    \ echo \"$result\" | sort -n | uniq -c | sort -n | awk '{ print $1 }')\n  result=$(\
    \ IFS=$'\\n'; echo \"$result\" | sort -n | uniq -c | sort -n | awk '{ print $1\
    \ }')\n  result=$( IFS=$'\\n'; echo \"$result\" | sort -n | uniq -c | sort -n\
    \ | awk '{ print $1 }')\n  result=$( IFS=$'\\n'; echo \"$result\" | sort -n |\
    \ uniq -c | sort -n | awk '{ print $1 }')\n  result=$( IFS=$'\\n'; echo \"$result\"\
    \ | sort -n | uniq -c | sort -n | awk '{ print $1 }')\n  result=$( IFS=$'\\n';\
    \ echo \"$result\" | sort -n | uniq -c | sort -n | \n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0__79orr.sh: line 32: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0__79orr.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpstk9jzde.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=${abs(${guesses[i]} -\
    \ ${scores[i]})}\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6vtf2lei.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    result[i]=$(( ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmrsvmi1c.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess}-${score}\n    fi\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkdeqgkow.sh: line 20: [: too many arguments

    /tmp/tmpkdeqgkow.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[i]=$((${scores[i]} - ${guesses[i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_rkh82f.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local diff\n    local score\n   \
    \ local guess\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[i]=$((${scores[i]} - ${guesses[i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_rkh82f.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_kjwr4sw.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local diff score\n  diff=0\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    score=${scores[i]}\n    guess=${guesses[i]}\n\
    \    if [[ ${guess} == ${score} ]]; then\n      diff=0\n    else\n      diff=$((\
    \ ${diff} + abs( ${guess} - ${score} ) ))\n    fi\n  done\n  echo \"${diff}\"\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdq06n_ex.sh: line 25: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpstk9jzde.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqt1eiuxc.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpqt1eiuxc.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess} - ${score}\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsbg143vu.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpsbg143vu.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${scores[i]}\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=${guesses[i]} - ${scores[i]}\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0yvuh2lj.sh: line 23: `result[i]'': not a valid identifier

    /tmp/tmp0yvuh2lj.sh: line 23: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwz7t9qok.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local score\n  local guess\n\
    \  local diff\n  local i\n  local j\n  local k\n  local len\n  local max\n  local\
    \ min\n  local len2\n  local max2\n  local min2\n  local len3\n  local max3\n\
    \  local min3\n  local len4\n  local max4\n  local min4\n  local len5\n  local\
    \ max5\n  local min5\n  local len6\n  local max6\n  local min6\n  local len7\n\
    \  local max7\n  local min7\n  local len8\n  local max8\n  local min8\n  local\
    \ len9\n  local max9\n  local min9\n  local len10\n  local max10\n  local min10\n\
    \  local len11\n  local max11\n  local min11\n  local len12\n  local max12\n \
    \ local min12\n  local len13\n  local max13\n  local min13\n  local len14\n  local\
    \ max14\n  local min14\n  local len15\n  local max15\n  local min15\n  local len16\n\
    \  local max16\n  local min16\n  local len17\n  local max17\n  local min17\n \
    \ local len18\n  local max18\n  local min18\n  local len19\n  local max19\n  local\
    \ min19\n  local len20\n  local max20\n  local min20\n  local len21\n  local max21\n\
    \  local min21\n  local len22\n  local max22\n  local min22\n  local len23\n \
    \ local max23\n  local min23\n  local len24\n  local max24\n  local min24\n  local\
    \ len25\n  local max25\n  local min25\n  local len26\n  local max26\n  local min26\n\
    \  local len27\n  local max27\n  local min27\n  local len28\n  local max28\n \
    \ local min28\n  local len29\n  local max29\n  local min29\n  local len30\n  local\
    \ max30\n  local min30\n  local len31\n  local max31\n  local min31\n  local len32\n\
    \  local \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2cd42cmr.sh: line 20: [: too many arguments

    /tmp/tmp2cd42cmr.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2cd42cmr.sh: line 20: [: too many arguments

    /tmp/tmp2cd42cmr.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses result\n  scores=$1\n  guesses=$2\n  result=()\n  for\
    \ (( i=0; i<${#scores[@]}; i++ )); do\n    if [ ${guesses[i]} == ${scores[i]}\
    \ ]; then\n      result[i]=0\n    else\n      result[i]=${abs(${guesses[i]} -\
    \ ${scores[i]})}\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4200cv59.sh: line 19: [: too many arguments

    /tmp/tmp4200cv59.sh: line 22: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local k\n    local diff\n    local\
    \ diff2\n    local diff3\n    local diff4\n    local diff5\n    local diff6\n\
    \    local diff7\n    local diff8\n    local diff9\n    local diff10\n    local\
    \ diff11\n    local diff12\n    local diff13\n    local diff14\n    local diff15\n\
    \    local diff16\n    local diff17\n    local diff18\n    local diff19\n    local\
    \ diff20\n    local diff21\n    local diff22\n    local diff23\n    local diff24\n\
    \    local diff25\n    local diff26\n    local diff27\n    local diff28\n    local\
    \ diff29\n    local diff30\n    local diff31\n    local diff32\n    local diff33\n\
    \    local diff34\n    local diff35\n    local diff36\n    local diff37\n    local\
    \ diff38\n    local diff39\n    local diff40\n    local diff41\n    local diff42\n\
    \    local diff43\n    local diff44\n    local diff45\n    local diff46\n    local\
    \ diff47\n    local diff48\n    local diff49\n    local diff50\n    local diff51\n\
    \    local diff52\n    local diff53\n    local diff54\n    local diff55\n    local\
    \ diff56\n    local diff57\n    local diff58\n    local diff59\n    local diff60\n\
    \    local diff61\n    local diff62\n    local diff63\n    local diff64\n    local\
    \ diff65\n    local diff66\n    local diff67\n    local diff68\n    local diff69\n\
    \    local diff70\n    local diff71\n    local diff72\n    local diff73\n    local\
    \ diff74\n    local diff75\n    local diff76\n    local diff77\n    local diff78\n\
    \    local diff79\n    local diff80\n    local diff81\n    local diff82\n    local\
    \ diff83\n    local diff84\n    local diff85\n    local diff86\n    local diff87\n\
    \    local diff88\n    local diff89\n    local diff90\n    local diff91\n    local\
    \ diff92\n    local diff93\n    local diff94\n    local diff95\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphwjk9ou5.sh: line 23: [: too many arguments

    /tmp/tmphwjk9ou5.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmphwjk9ou5.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  local i\n  for i in \"${!scores[@]}\"; do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=$((${guesses[i]} - ${scores[i]}))\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf3qx51es.sh: line 24: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} -eq ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj1xdf0ve.sh: line 20: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5vlj2tzm.sh: line 21: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=${guesses[i]} - ${scores[i]}\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0yvuh2lj.sh: line 23: `result[i]'': not a valid identifier

    /tmp/tmp0yvuh2lj.sh: line 23: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local diffs\n    local diff\n  \
    \  local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n    score=$(echo\
    \ \"${scores[i]}\" | cut -d' ' -f1)\n    local guess\n    guess=$(echo \"${guesses[i]}\"\
    \ | cut -d' ' -f1)\n    if [[ \"${guess}\" == \"${score}\" ]]; then\n      result[i]=0\n\
    \    else\n      result[i]=$(echo \"${guess} - ${score}\" | bc)\n    fi\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess}-${score}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local score\n    local guess\n  \
    \  local diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n\
    \    local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses diff score\n    scores=$1\n    guesses=$2\n    diff=()\n\
    \    for (( i = 0; i < ${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          diff[i]=0\n        else\n            diff[i]=${guess}-${score}\n  \
    \      fi\n    done\n    echo \"${diff[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          diff=0\n        else\n            diff=$(( ${diff} + abs( ${guess}\
    \ - ${score} ) ))\n        fi\n    done\n    echo ${diff}\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcarzcnsh.sh: line 25: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local score\n    local guess\n  \
    \  local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkdeqgkow.sh: line 20: [: too many arguments

    /tmp/tmpkdeqgkow.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${guesses[i]}-${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7mi89wum.sh: line 20: [: too many arguments

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess} - ${score}\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1s0wo1q.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpm1s0wo1q.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphwjk9ou5.sh: line 23: [: too many arguments

    /tmp/tmphwjk9ou5.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmphwjk9ou5.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkdeqgkow.sh: line 20: [: too many arguments

    /tmp/tmpkdeqgkow.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[$i]=$((${scores[$i]} - ${guesses[$i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpknrj_kwz.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess}-${score}\n        fi\n    done\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local k\n    local diff\n    local\
    \ diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n  \
    \  local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    \n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${result[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkdeqgkow.sh: line 20: [: too many arguments

    /tmp/tmpkdeqgkow.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpstk9jzde.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=$(\
    \ echo \"${guesses}\" | tr \" \" \"\\n\" | sort -n | uniq )\n  local i\n  for\
    \ i in \"${!result[@]}\"; do\n    local score\n    score=$( echo \"${scores}\"\
    \ | cut -d \" \" -f $i )\n    if [ \"$score\" == \"$result\" ]; then \n      result[i]=0\n\
    \    else\n      result[i]=$(( abs( ${score} - ${result[i]} ) ))\n    fi\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    /tmp/tmplk1o_e57.sh: line 26: abs(  - -2

    1

    2

    3

    4 ) : syntax error in expression (error token is "(  - -2

    1

    2

    3

    4 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=${abs(${guesses[i]} -\
    \ ${scores[i]})}\n    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n  \
    \  compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w8ypea_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    local diff\n    diff=$(( abs( ${guess}\
    \ - ${score} ) ))\n    result[i]=$diff\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpavx_t_wz.sh: line 25: abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local score\n    local guess\n  \
    \  local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    \n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjux9kxhq.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for ((i=0; i<${#scores[@]}; i++)); do\n      \
    \  if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n   \
    \     else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n     \
    \   fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6wtxbafe.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptgbhlysd.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff \n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          diff=0\n        else\n            diff=$(( abs(${guess} - ${score})\
    \ ))\n        fi\n        guesses[i]=${diff}\n    done\n}\n\ncandidate() {\n \
    \   compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz0ifvli2.sh: line 25: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess}-${score}\n    fi\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=${guesses[i]} - ${scores[i]}\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0yvuh2lj.sh: line 23: `result[i]'': not a valid identifier

    /tmp/tmp0yvuh2lj.sh: line 23: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local diffs\n    local diff\n  \
    \  local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpstk9jzde.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} -eq ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3mr9jdsk.sh: line 21: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess} - ${score}\n        fi\n    done\n   \
    \ echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm4hy1lri.sh: line 30: `result[i]'': not a valid identifier

    /tmp/tmpm4hy1lri.sh: line 30: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  local i\n  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n\
    \    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n    if [[ ${guess}\
    \ == ${score} ]]; then\n      result[i]=0\n    else\n      result[i]=${guess}\
    \ - ${score}\n    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2yr70t8m.sh: line 28: `result[i]'': not a valid identifier

    /tmp/tmp2yr70t8m.sh: line 28: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptgbhlysd.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n    done\n\
    \    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]} ==\
    \ ${scores[i]} ]]; then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf0opbkmw.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff result\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        diff=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n        if (( diff < 0 )); then\n            diff=$(( diff\
    \ * -1 ))\n        fi\n        result[i]=$diff\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8od8iw25.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpstk9jzde.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    result[i]=0\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n     \
    \       result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8jfao6os.sh: line 25: `result[i]'': not a valid identifier

    /tmp/tmp8jfao6os.sh: line 25: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${guesses[i]}-${scores[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    (( result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} )) ))\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgq4o_v94.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=${guesses[i]} - ${scores[i]}\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0yvuh2lj.sh: line 23: `result[i]'': not a valid identifier

    /tmp/tmp0yvuh2lj.sh: line 23: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n    score=$(echo\
    \ $scores | cut -d ' ' -f $i)\n    local guess\n    guess=$(echo $guesses | cut\
    \ -d ' ' -f $i)\n    if [ \"$guess\" == \"$score\" ]; then\n      result+=(0)\n\
    \    else\n      result+=($(echo \"$guess - $score\" | bc -l))\n    fi\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    cut: fields are numbered from 1

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n \
    \       else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n   \
    \     fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzes9odk2.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess} - ${score}\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1s0wo1q.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpm1s0wo1q.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local diffs\n    local diffslen\n\
    \    local diffslens\n    local diffslenslen\n    local diffslenslens\n    local\
    \ diffslenslenslen\n    local diffslenslenslens\n    local diffslenslenslenslen\n\
    \    local diffslenslenslenslens\n    local diffslenslenslenslenslen\n    local\
    \ diffslenslenslenslenslens\n    local diffslenslenslenslenslenslen\n    local\
    \ diffslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslen\n\
    \    local diffslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslen\n\
    \    local diffslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslen\n\
    \    local diffslenslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslenslen\n\
    \    local diffslenslenslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ $guess == $score ]]; then\n\
    \      result[i]=0\n    else\n      result[i]=$(( abs($guess - $score)))\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5f_9sjn_.sh: line 27: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1): syntax error
    in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1)")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[$i]}\
    \ == ${scores[$i]} ]]; then\n            result[$i]=0\n        else\n        \
    \    result[$i]=${abs(${guesses[$i]} - ${scores[$i]})}\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeha2_om7.sh: line 23: ${abs(${guesses[$i]} - ${scores[$i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [ \"$guess\" = \"$score\" ];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess}-${score}\n    fi\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjux9kxhq.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    result[i]=$(( ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmrsvmi1c.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess} - ${score}\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu_dpr351.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpu_dpr351.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} -eq ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzh8onvr.sh: line 21: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local diffs\n    local diff\n  \
    \  local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    result[i]=0\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n     \
    \       result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8jfao6os.sh: line 25: `result[i]'': not a valid identifier

    /tmp/tmp8jfao6os.sh: line 25: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${score} == ${guess} ]]; then\n  \
    \          diff=0\n        else\n            diff=$(( abs(score - guess) ))\n\
    \        fi\n        echo \"${diff}\"\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdiphrnqa.sh: line 25: abs(score - guess) : syntax error in expression
    (error token is "(score - guess) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for ((i=0; i<${#scores[@]}; i++)); do\n      \
    \  result[i]=$((${guesses[i]} - ${scores[i]}))\n        if ((result[i] < 0));\
    \ then\n            result[i]=0\n        fi\n    done\n}\n\ncandidate() {\n  \
    \  compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvb3h2jbm.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess}-${score}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local score\n  \
    \  local guess\n    local diff\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    \n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local score\n    local guess\n  \
    \  local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    \n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${result[i]}-${scores[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local diffs\n    local diff\n  \
    \  local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5vlj2tzm.sh: line 21: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i = 0; i < ${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${result[i]}\
    \ - ${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp16laqwv.sh: line 21: `result[i]'': not a valid identifier

    /tmp/tmpp16laqwv.sh: line 21: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess} - ${score}\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu_dpr351.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpu_dpr351.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in \"${!scores[@]}\"; do\n    local score\n    score=$(echo \"${scores[$i]}\"\
    \ | tr -d '[:space:]')\n    local guess\n    guess=$(echo \"${guesses[$i]}\" |\
    \ tr -d '[:space:]')\n    if [ \"$score\" == \"$guess\" ]; then\n      result[$i]=0\n\
    \    else\n      result[$i]=$(( abs($guess - $score)))\n    fi\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgl_oebo7.sh: line 27: abs(12342-2 - 123451): syntax error in expression
    (error token is "(12342-2 - 123451)")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=$(\
    \ IFS=' '; echo \"${guesses}\" | sort -n )\n  result=$( IFS=' '; echo \"${scores}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ | sort -n )\n  result=$( IFS=' '; echo \"${result}\" | sort -n )\n  result=$(\
    \ IFS=' '; echo \"${result}\" | sort -n )\n  result=$( IFS=' '; echo \"${result}\"\
    \ \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate\
    \ \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"\
    1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3\
    \ 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoyd76_9q.sh: line 43: unexpected EOF while looking for matching
    `)''

    /tmp/tmpoyd76_9q.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses result\n  scores=$1\n  guesses=$2\n  result=()\n  for\
    \ (( i=0; i<${#scores[@]}; i++ )); do\n    local score=${scores[i]}\n    local\
    \ guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]]; then\n      result[i]=0\n\
    \    else\n      result[i]=${guess}-${score}\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local diff2\n    local diff3\n \
    \   local diff4\n    local diff5\n    local diff6\n    local diff7\n    local\
    \ diff8\n    local diff9\n    local diff10\n    local diff11\n    local diff12\n\
    \    local diff13\n    local diff14\n    local diff15\n    local diff16\n    local\
    \ diff17\n    local diff18\n    local diff19\n    local diff20\n    local diff21\n\
    \    local diff22\n    local diff23\n    local diff24\n    local diff25\n    local\
    \ diff26\n    local diff27\n    local diff28\n    local diff29\n    local diff30\n\
    \    local diff31\n    local diff32\n    local diff33\n    local diff34\n    local\
    \ diff35\n    local diff36\n    local diff37\n    local diff38\n    local diff39\n\
    \    local diff40\n    local diff41\n    local diff42\n    local diff43\n    local\
    \ diff44\n    local diff45\n    local diff46\n    local diff47\n    local diff48\n\
    \    local diff49\n    local diff50\n    local diff51\n    local diff52\n    local\
    \ diff53\n    local diff54\n    local diff55\n    local diff56\n    local diff57\n\
    \    local diff58\n    local diff59\n    local diff60\n    local diff61\n    local\
    \ diff62\n    local diff63\n    local diff64\n    local diff65\n    local diff66\n\
    \    local diff67\n    local diff68\n    local diff69\n    local diff70\n    local\
    \ diff71\n    local diff72\n    local diff73\n    local diff74\n    local diff75\n\
    \    local diff76\n    local diff77\n    local diff78\n    local diff79\n    local\
    \ diff80\n    local diff81\n    local diff82\n    local diff83\n    local diff84\n\
    \    local diff85\n    local diff86\n    local diff87\n    local diff88\n    local\
    \ diff89\n    local diff90\n    local diff91\n    local diff92\n    local diff93\n\
    \    local diff94\n    local diff95\n    local diff96\n    local \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for ((i=0; i<${#scores[@]}; i++)); do\n      \
    \  result[i]=$((${guesses[i]} - ${scores[i]}))\n    done\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp1mjoytu.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess}-${score}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess} - ${score}\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu_dpr351.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpu_dpr351.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          diff=0\n        else\n            diff=$(( ${diff} + abs( ${guess}\
    \ - ${score} ) ))\n        fi\n    done\n    echo ${diff}\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcarzcnsh.sh: line 25: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ \"${guess}\" == \"${score}\" ]]; then\n\
    \            diff=0\n        else\n            diff=$(( ${diff} + abs( ${guess}\
    \ - ${score} ) ))\n        fi\n    done\n    echo ${diff}\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgw2y3598.sh: line 25: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8wdoippm.sh: line 23: [: too many arguments

    /tmp/tmp8wdoippm.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${score} -eq ${guess} ]]; then\n \
    \           diff=0\n        else\n            diff=$(( ${diff} + abs( ${guess}\
    \ - ${score} ) ))\n        fi\n    done\n    echo ${diff}\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsdqpqf9n.sh: line 22: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmpsdqpqf9n.sh: line 25: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax error
    in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${guess} - ${score}\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1s0wo1q.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpm1s0wo1q.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[i]=$((${scores[i]} - ${guesses[i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_rkh82f.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwz7t9qok.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n \
    \       else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n   \
    \     fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzes9odk2.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=${abs(${guesses[i]}\
    \ - ${scores[i]})}\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7qo1pn3q.sh: line 22: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n \
    \       else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n   \
    \     fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzes9odk2.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi4vjtf9j.sh: line 23: `result[i]'': not a valid identifier

    /tmp/tmpi4vjtf9j.sh: line 23: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${result[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[i]=$((${scores[i]} - ${guesses[i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_rkh82f.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local k\n    local diff\n    local\
    \ diffs\n    local diffslen\n    local diffslen2\n    local diffslen3\n    local\
    \ diffslen4\n    local diffslen5\n    local diffslen6\n    local diffslen7\n \
    \   local diffslen8\n    local diffslen9\n    local diffslen10\n    local diffslen11\n\
    \    local diffslen12\n    local diffslen13\n    local diffslen14\n    local diffslen15\n\
    \    local diffslen16\n    local diffslen17\n    local diffslen18\n    local diffslen19\n\
    \    local diffslen20\n    local diffslen21\n    local diffslen22\n    local diffslen23\n\
    \    local diffslen24\n    local diffslen25\n    local diffslen26\n    local diffslen27\n\
    \    local diffslen28\n    local diffslen29\n    local diffslen30\n    local diffslen31\n\
    \    local diffslen32\n    local diffslen33\n    local diffslen34\n    local diffslen35\n\
    \    local diffslen36\n    local diffslen37\n    local diffslen38\n    local diffslen39\n\
    \    local diffslen40\n    local diffslen41\n    local diffslen42\n    local diffslen43\n\
    \    local diffslen44\n    local diffslen45\n    local diffslen46\n    local diffslen47\n\
    \    local diffslen48\n    local diffslen49\n    local diffslen50\n    local diffslen51\n\
    \    local diffslen52\n    local diffslen53\n    local diffslen54\n    local diffslen55\n\
    \    local diffslen56\n    local diffslen57\n    local diffslen58\n    local diffslen59\n\
    \    local diffslen60\n    local diffslen61\n    local diffslen62\n    local diffslen63\n\
    \    local diffslen64\n    local diffslen65\n    local diffslen66\n    local diff\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[$i]=$((${guesses[$i]} - ${scores[$i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdni47ho9.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local diff\n    local score\n   \
    \ local guess\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjux9kxhq.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5hdnh6n5.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses score\n    scores=$1\n    guesses=$2\n    score=0\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        (( score+=${scores[i]}*${guesses[i]}\
    \ ))\n    done\n    echo $score\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxsyu_uyr.sh: line 19: ((: score+=1 2 3 4 5 1*1 2 3 4 2 -2 : syntax
    error in expression (error token is "2 3 4 5 1*1 2 3 4 2 -2 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    local diff\n    diff=$(( abs( guess\
    \ - score ) ))\n    result[i]=$diff\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw29z10ge.sh: line 25: abs( guess - score ) : syntax error in expression
    (error token is "( guess - score ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    result[i]=0\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n     \
    \       result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} -\
    \ ${scores[i]})}\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafkmz9pd.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    local diff\n    diff=$(( guess\
    \ - score ))\n    if [ $diff -eq 0 ]; then\n      result[i]=0\n    else\n    \
    \  result[i]=$diff\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphkizh4_m.sh: line 25: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score\n    score=$(echo\
    \ \"${scores[i]}\" | tr -d '[:space:]')\n    local guess\n    guess=$(echo \"\
    ${guesses[i]}\" | tr -d '[:space:]')\n    if [ \"${guess}\" == \"${score}\" ];\
    \ then\n      result[i]=0\n    else\n      result[i]=$((${guess} - ${score}))\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local diffs\n    local diff\n  \
    \  local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess} - ${score}\n        fi\n    done\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw5s0cbfj.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpw5s0cbfj.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${scores[i]}-${guesses[i]}\n\
    \        if [[ ${result[i]} == 0 ]]; then\n            result[i]=${guesses[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8wdoippm.sh: line 23: [: too many arguments

    /tmp/tmp8wdoippm.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[$i]=$((${guesses[$i]} - ${scores[$i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdni47ho9.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    if [[ ${score} == ${guess} ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${score}-${guess}\n    fi\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsjo9o9z2.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          diff=0\n        else\n            diff=$(( abs(${guess} - ${score})\
    \ ))\n        fi\n        guesses[i]=${diff}\n    done\n    echo ${guesses}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ceqzn7u.sh: line 25: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   local i\n    local j\n    local diff\n    local score\n    local guess\n \
    \   local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpstk9jzde.sh: line 20: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local diff\n    local diffs\n   \
    \ local diffslen\n    local diffslens\n    local diffslenslen\n    local diffslenslens\n\
    \    local diffslenslenslen\n    local diffslenslenslens\n    local diffslenslenslenslen\n\
    \    local diffslenslenslenslens\n    local diffslenslenslenslenslen\n    local\
    \ diffslenslenslenslenslens\n    local diffslenslenslenslenslenslen\n    local\
    \ diffslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslen\n\
    \    local diffslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslen\n\
    \    local diffslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslens\n    local diffslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslenslenslenslenslens\n    local\
    \ diffslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n    local\
    \ diffslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslenslens\n\
    \    local diffslenslenslenslenslenslenslenslenslens\n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n \
    \       else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n   \
    \     fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzes9odk2.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          diff=0\n        else\n            diff=$(( abs(${guess} - ${score})\
    \ ))\n        fi\n        guesses[i]=${diff}\n    done\n    echo \"${guesses}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpku3kwsgb.sh: line 25: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local score\n    local guess\n  \
    \  local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    \n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local diff\n    local score\n   \
    \ local guess\n    local diff\n    local score\n    local guess\n    local diff\n\
    \    local score\n    local guess\n    local diff\n    local score\n    local\
    \ guess\n    local diff\n    local score\n    local guess\n    local diff\n  \
    \  local score\n    local guess\n    local diff\n    local score\n    local guess\n\
    \    local diff\n    local score\n    local guess\n    local diff\n    local score\n\
    \    local guess\n    local diff\n    local score\n    local guess\n    local\
    \ diff\n    local score\n    local guess\n    local diff\n    local score\n  \
    \  local guess\n    local diff\n    local score\n    local guess\n    local diff\n\
    \    local score\n    local guess\n    local diff\n    local score\n    local\
    \ guess\n    local diff\n    local score\n    local guess\n    local diff\n  \
    \  local score\n    local guess\n    local diff\n    local score\n    local guess\n\
    \    local diff\n    local score\n    local guess\n    local diff\n    local score\n\
    \    local guess\n    local diff\n    local score\n    local guess\n    local\
    \ diff\n    local score\n    local guess\n    local diff\n    local score\n  \
    \  local guess\n    local diff\n    local score\n    local guess\n    local diff\n\
    \    local score\n    local guess\n    local diff\n    local score\n    local\
    \ guess\n    local diff\n    local score\n    local guess\n    local diff\n  \
    \  local score\n    local guess\n    local diff\n    local score\n    local guess\n\
    \    local diff\n    local score\n    local guess\n    local diff\n    local score\n\
    \    local guess\n    local diff\n    local score\n    local guess\n    local\
    \ diff\n    local score\n    local guess\n    local diff\n    local score\n  \
    \  local guess\n    local diff\n    local score\n    local guess\n    local diff\n\
    \    local score\n    local guess\n    local diff\n    local score\n    local\
    \ guess\n    local diff\n    local score\n    local guess\n    local diff\n  \
    \  local score\n    local guess\n    local diff\n    local score\n    \n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local diff\n    local diffs\n   \
    \ local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n    \
    \    result[i]=$(( ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmrsvmi1c.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]} - 1))); do\n\
    \        result[i]=$((${scores[i]} - ${guesses[i]}))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_rkh82f.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score\n\
    \        score=${scores[i]}\n        local guess\n        guess=${guesses[i]}\n\
    \        if [[ ${guess} == ${score} ]]; then\n            result[i]=0\n      \
    \  else\n            result[i]=${guess}\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local k\n    local diff\n    local\
    \ diff2\n    local diff3\n    local diff4\n    local diff5\n    local diff6\n\
    \    local diff7\n    local diff8\n    local diff9\n    local diff10\n    local\
    \ diff11\n    local diff12\n    local diff13\n    local diff14\n    local diff15\n\
    \    local diff16\n    local diff17\n    local diff18\n    local diff19\n    local\
    \ diff20\n    local diff21\n    local diff22\n    local diff23\n    local diff24\n\
    \    local diff25\n    local diff26\n    local diff27\n    local diff28\n    local\
    \ diff29\n    local diff30\n    local diff31\n    local diff32\n    local diff33\n\
    \    local diff34\n    local diff35\n    local diff36\n    local diff37\n    local\
    \ diff38\n    local diff39\n    local diff40\n    local diff41\n    local diff42\n\
    \    local diff43\n    local diff44\n    local diff45\n    local diff46\n    local\
    \ diff47\n    local diff48\n    local diff49\n    local diff50\n    local diff51\n\
    \    local diff52\n    local diff53\n    local diff54\n    local diff55\n    local\
    \ diff56\n    local diff57\n    local diff58\n    local diff59\n    local diff60\n\
    \    local diff61\n    local diff62\n    local diff63\n    local diff64\n    local\
    \ diff65\n    local diff66\n    local diff67\n    local diff68\n    local diff69\n\
    \    local diff70\n    local diff71\n    local diff72\n    local diff73\n    local\
    \ diff74\n    local diff75\n    local diff76\n    local diff77\n    local diff78\n\
    \    local diff79\n    local diff80\n    local diff81\n    local diff82\n    local\
    \ diff83\n    local diff84\n    local diff85\n    local diff86\n    local diff87\n\
    \    local diff88\n    local diff89\n    local diff90\n    local diff91\n    local\
    \ diff92\n    local diff93\n    local diff94\n    local diff95\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local score\n    local guess\n  \
    \  local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    \n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i = 0; i < ${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i = 0; i < ${#guesses[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpv9txzgcd.sh: line 23: [: too many arguments

    /tmp/tmpv9txzgcd.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpv9txzgcd.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [ \"$guess\" == \"$score\" ]; then\n\
    \            diff=0\n        else\n            diff=$(( abs($guess - $score) ))\n\
    \        fi\n        echo \"$diff $guess $score\"\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptmjplx2y.sh: line 25: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} -eq ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyzkqtirr.sh: line 20: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} != ${scores[i]} ]]; then\n            result[i]=${result[i]}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses result\n  scores=$1\n  guesses=$2\n  result=()\n  for\
    \ i in $(seq 0 $((${#scores[@]} - 1))); do\n    if [[ ${guesses[i]} == ${scores[i]}\
    \ ]]; then\n      result[i]=0\n    else\n      result[i]=$((${guesses[i]} - ${scores[i]}))\n\
    \    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa6enys6d.sh: line 22: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local diff score\n\
    \    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          diff=0\n        else\n            diff=$(( ${diff} + abs( ${guess}\
    \ - ${score} ) ))\n        fi\n    done\n    echo ${diff}\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcarzcnsh.sh: line 25: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp22gmymf_.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    local i\n    local j\n    local score\n    local guess\n  \
    \  local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    \n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores guesses\n  scores=$1\n  guesses=$2\n  local result\n  result=()\n\
    \  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n    score=${scores[i]}\n\
    \    local guess\n    guess=${guesses[i]}\n    local diff\n    diff=$(( guess\
    \ - score ))\n    if [[ ${diff} -eq 0 ]]; then\n      result[i]=0\n    else\n\
    \      result[i]=$(( diff ))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp93pnzkuv.sh: line 25: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses result\n    scores=$1\n    guesses=$2\n    result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${guesses[i]}\
    \ - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8n4wu_n.sh: line 19: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660036000
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores guesses\n    scores=$1\n    guesses=$2\n    local result\n \
    \   result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvhx82d9t.sh: line 23: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660036000

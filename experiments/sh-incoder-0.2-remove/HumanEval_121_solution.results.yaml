language: sh
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n \
    \       i=$(( $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd6lk31lp.sh: line 11: [: too many arguments

    /tmp/tmpd6lk31lp.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i\n  \
    \  local j\n    for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -eq\
    \ ${list[i+1]} ]]; then\n            ((sum+=${list[i]}))\n            ((j=i+1))\n\
    \        else\n            ((j=i))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0wlv__dq.sh: line 12: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmp0wlv__dq.sh: line 13: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp0wlv__dq.sh: line 13: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp0wlv__dq.sh: line 13: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp0wlv__dq.sh: line 13: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp0wlv__dq.sh: line 13: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp0wlv__dq.sh: line 13: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [[ ${input[$i]} -eq ${input[$(( $i + 1 ))]} ]];\
    \ then\n      sum=$(( $sum + ${input[$i]} ))\n    fi\n    i=$(( $i + 1 ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz8bnfgwn.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpz8bnfgwn.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ odds\n    local evens\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_count\n    local evens_count\n\
    \    local odds_sum\n    local evens_sum\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \    local odds_odd\n    local evens_even\n    local odds_even\n    local evens_odd\n\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n \
    \       i=$(( $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd6lk31lp.sh: line 11: [: too many arguments

    /tmp/tmpd6lk31lp.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [[ ${input[$i]} -eq ${input[$(( $i + 1 ))]} ]];\
    \ then\n      sum=$(( sum + ${input[$i]} ))\n      i=$(( $i + 1 ))\n    fi\n \
    \   i=$(( $i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzfdrp93t.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpzfdrp93t.sh: line 12: sum +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $i -eq 0 ]\n    then\n      continue\n    fi\n    if [ $i -eq\
    \ $(( ${#numbers} - 1 )) ]\n    then\n      sum=$(( sum + $i ))\n      continue\n\
    \    fi\n    if [ $i -eq $(( ${#numbers} - 2 )) ]\n    then\n      sum=$(( sum\
    \ + $i ))\n      continue\n    fi\n    sum=$(( sum + $i ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ for ((i=0; i<${#numbers[@]}; i++)); do\n        if (( ${numbers[$i]} % 2 ));\
    \ then\n            sum=$((sum + ${numbers[$i]}))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpscszdqgr.sh: line 11: ((: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [ $(( ${list[i]} % 2 )) -eq 0 ];\
    \ then\n            sum=$(( sum + ${list[i]} ))\n        fi\n        i=$(( i +\
    \ 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn7kok6v5.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    (( i % 2 )) && sum=$(( sum + i ))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i\n    for\
    \ ((i=1; i<${#input}; i++)); do\n        if [[ ${input[$i]}%2 -eq 0 ]]; then\n\
    \            sum=$((sum+${input[$i]}))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj3_dm0v2.sh: line 11: [[: %2: syntax error: operand expected (error
    token is "%2")

    /tmp/tmpj3_dm0v2.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpj3_dm0v2.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpj3_dm0v2.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpj3_dm0v2.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpj3_dm0v2.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  local i\n  for i in\
    \ \"${numbers[@]}\"; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum\
    \ + i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7i97dci7.sh: line 11: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [[ ${numbers[$i]} -eq 0 ]]; then\n\
    \            ((sum+=${numbers[$i]}))\n            ((i=i+1))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=19 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660037297
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [[ ${list[i]} == 2 ]]; then\n \
    \           sum=$((sum + ${list[i]}))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n\n    odds=$(echo $input | tr ' ' '\\n' | awk '{print $1}')\n\
    \    evens=$(echo $input | tr ' ' '\\n' | awk '{print $2}')\n\n    for ((i=0;\
    \ i<${#odds}; i++)); do\n        odds_value=$(echo $odds | cut -d'-' -f$i)\n \
    \       odds_index=$(echo $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo\
    \ $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n\
    \        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo\
    \ $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n\
    \        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo\
    \ $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n\
    \        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo\
    \ $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n\
    \        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo\
    \ $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n\
    \        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo\
    \ $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n\
    \        odds_value=$(echo $odds | cut -d'-' -f$((i+1)))\n        odds_value=$(echo\
    \ $odds | cut -d'-' -f$((i+1)))\n        \n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbqfcynx2.sh: line 47: syntax error near unexpected token `}''

    /tmp/tmpbqfcynx2.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$(( $sum\
    \ + $i ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ $(( $i % 2 )) -eq 0 ]; then\n \
    \           sum=$(( $sum + ${input[$i]} ))\n        fi\n        i=$(( $i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc87b2ys5.sh: line 12: 0 + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=$1\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt ${#list} ]; do\n        if [ $(( ${list[i]} % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + ${list[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptullnjqi.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input\n  input=$1\n  local sum\n  sum=0\n  for i\
    \ in $input; do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( sum + i ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i\n  \
    \  for (( i=0; i<${#list}; i++ )); do\n        if [[ ${list[i]}%2==1 ]]; then\n\
    \            sum=$((sum+${list[i]}))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgi94nky0.sh: line 12: sum+5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [ ${list[i]} -eq ${list[i+1]} ];\
    \ then\n            sum=$((sum + ${list[i]}))\n            i=$((i + 1))\n    \
    \    fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpumnyspbf.sh: line 11: [: too many arguments

    /tmp/tmpumnyspbf.sh: line 12: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n    local odds_length\n    local evens_length\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_length\n    local evens_length\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_length\n\
    \    local evens_length\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_length\n    local evens_length\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_length\n    local evens_length\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_length\n    local evens_length\n    local odds_index\n    local evens_index\n\
    \    local odds_value\n    local evens_value\n    local odds_length\n    local\
    \ evens_length\n    local odds_index\n    local evens_index\n    local odds_value\n\
    \    local evens_value\n    local odds_length\n    local evens_length\n    local\
    \ odds_index\n    local evens_index\n    local odds_value\n    local evens_value\n\
    \    local odds_length\n    local evens_length\n    local odds_index\n    local\
    \ evens_index\n    local odds_value\n    local evens_value\n    local odds_length\n\
    \    local evens_length\n    local odds_index\n    local evens_index\n    local\
    \ odds_value\n    local evens_value\n    local odds_length\n    local evens_length\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_length\n    local evens_length\n    local odds_index\n\
    \    local evens_index\n    local odds_value\n    local evens_value\n    local\
    \ odds_length\n    local evens_length\n    local odd\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local odds_index\n    local evens_index\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local odds_index\n    local evens_index\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odds_index\n    local evens_index\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local even\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    local j=$((i+1))\n    local k=$((j+1))\n    if [\
    \ $((j%2)) -eq 0 ]; then\n      sum=$((sum+${input[i]}))\n      i=$((j+1))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=33 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660037297
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    local j=$((i+1))\n    if [ $((j%2)) -eq 0 ]; then\n\
    \      sum=$((sum+${input[i]}))\n    fi\n    i=$((j+1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local nums\n    local nums_i\n    local nums_j\n \
    \   local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_odd\n  \
    \  local nums_even\n    local nums_odds\n    local nums_evens\n    local nums_i\n\
    \    local nums_j\n    local nums_k\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_i\n    local nums_j\n\
    \    local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_odd\n  \
    \  local nums_even\n    local nums_odds\n    local nums_evens\n    local nums_i\n\
    \    local nums_j\n    local nums_k\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_i\n    local nums_j\n\
    \    local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=$1\n  local sum=0\n  for i in $list; do\n \
    \   if [[ $((i % 2)) == 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local num\n    local\
    \ num2\n    local num3\n    local num4\n    local num5\n    local num6\n    local\
    \ num7\n    local num8\n    local num9\n    local num10\n    local num11\n   \
    \ local num12\n    local num13\n    local num14\n    local num15\n    local num16\n\
    \    local num17\n    local num18\n    local num19\n    local num20\n    local\
    \ num21\n    local num22\n    local num23\n    local num24\n    local num25\n\
    \    local num26\n    local num27\n    local num28\n    local num29\n    local\
    \ num30\n    local num31\n    local num32\n    local num33\n    local num34\n\
    \    local num35\n    local num36\n    local num37\n    local num38\n    local\
    \ num39\n    local num40\n    local num41\n    local num42\n    local num43\n\
    \    local num44\n    local num45\n    local num46\n    local num47\n    local\
    \ num48\n    local num49\n    local num50\n    local num51\n    local num52\n\
    \    local num53\n    local num54\n    local num55\n    local num56\n    local\
    \ num57\n    local num58\n    local num59\n    local num60\n    local num61\n\
    \    local num62\n    local num63\n    local num64\n    local num65\n    local\
    \ num66\n    local num67\n    local num68\n    local num69\n    local num70\n\
    \    local num71\n    local num72\n    local num73\n    local num74\n    local\
    \ num75\n    local num76\n    local num77\n    local num78\n    local num79\n\
    \    local num80\n    local num81\n    local num82\n    local num83\n    local\
    \ num84\n    local num85\n    local num86\n    local num87\n    local num88\n\
    \    local num89\n    local num90\n    local num91\n    local num92\n    local\
    \ num93\n    local num94\n    local num95\n    local num96\n    local \n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if\
    \ (( ${numbers[i]} % 2 )); then\n            sum=$(( sum + ${numbers[i]} ))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpktda4kou.sh: line 13: ((: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n   \
    \ fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_sum\n    local evens_sum\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_length\n    local evens_sum_length\n\
    \    local odds_sum_sum\n    local evens_sum_sum\n    local odds_sum_sum_index\n\
    \    local evens_sum_sum_index\n    local odds_sum_sum_length\n    local evens_sum_sum_length\n\
    \    local odds_sum_sum_sum\n    local evens_sum_sum_sum\n    local odds_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_index\n    local odds_sum_sum_sum_length\n    local\
    \ evens_sum_sum_sum_length\n    local odds_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum\n   \
    \ local odds_sum_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_sum_index\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    for i in $numbers\n\
    \    do\n        if [ $i -eq $(( ${#numbers} / 2 )) ]\n        then\n        \
    \    sum=$(( sum + $i ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i\n \
    \   for (( i=0; i<${#input}; i++ )); do\n        if [[ ${input:$i:1} == ${input:$i:1}\
    \ * 2 ]]; then\n            sum=$(( sum + ${input:$i:1} ))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv_u8zhou.sh: line 11: syntax error in conditional expression

    /tmp/tmpv_u8zhou.sh: line 11: syntax error near `*''

    /tmp/tmpv_u8zhou.sh: line 11: `        if [[ ${input:$i:1} == ${input:$i:1} *
    2 ]]; then''

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n\
    \        i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeppflwru.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpeppflwru.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=$1\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    \n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ sum\n    local odd\n    local even\n    local count\n    local sum\n    local\
    \ odd\n    local even\n    local count\n    local sum\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local odd\n    local even\n    local\
    \ count\n    local sum\n    local odd\n    local even\n    local count\n    local\
    \ sum\n    local odd\n    local even\n    local count\n    local sum\n    local\
    \ odd\n    local even\n    local count\n    local sum\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local odd\n    local even\n    local\
    \ count\n    local sum\n    local odd\n    local even\n    local count\n    local\
    \ sum\n    local odd\n    local even\n    local count\n    local sum\n    local\
    \ odd\n    local even\n    local count\n    local sum\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local odd\n    local even\n    local\
    \ count\n    local sum\n    local odd\n    local even\n    local count\n    local\
    \ sum\n    local odd\n    local even\n    local count\n    local sum\n    local\
    \ odd\n    local even\n    local count\n    local sum\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local odd\n    local even\n    local\
    \ count\n    local sum\n    local odd\n    local even\n    local count\n    local\
    \ sum\n    local odd\n    local even\n    local count\n    local sum\n    local\
    \ odd\n    local even\n    local count\n    local sum\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local odd\n    local even\n    local\
    \ count\n    local sum\n    local odd\n    local even\n    local count\n    local\
    \ sum\n    local odd\n    local even\n    local count\n    local sum\n    local\
    \ odd\n    local even\n    local count\n    local sum\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local odd\n    local even\n    local\
    \ count\n    local sum\n    local odd\n    local even\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ sum2\n    local sum3\n    local sum4\n    local sum5\n    local sum6\n    local\
    \ sum7\n    local sum8\n    local sum9\n    local sum10\n    local sum11\n   \
    \ local sum12\n    local sum13\n    local sum14\n    local sum15\n    local sum16\n\
    \    local sum17\n    local sum18\n    local sum19\n    local sum20\n    local\
    \ sum21\n    local sum22\n    local sum23\n    local sum24\n    local sum25\n\
    \    local sum26\n    local sum27\n    local sum28\n    local sum29\n    local\
    \ sum30\n    local sum31\n    local sum32\n    local sum33\n    local sum34\n\
    \    local sum35\n    local sum36\n    local sum37\n    local sum38\n    local\
    \ sum39\n    local sum40\n    local sum41\n    local sum42\n    local sum43\n\
    \    local sum44\n    local sum45\n    local sum46\n    local sum47\n    local\
    \ sum48\n    local sum49\n    local sum50\n    local sum51\n    local sum52\n\
    \    local sum53\n    local sum54\n    local sum55\n    local sum56\n    local\
    \ sum57\n    local sum58\n    local sum59\n    local sum60\n    local sum61\n\
    \    local sum62\n    local sum63\n    local sum64\n    local sum65\n    local\
    \ sum66\n    local sum67\n    local sum68\n    local sum69\n    local sum70\n\
    \    local sum71\n    local sum72\n    local sum73\n    local sum74\n    local\
    \ sum75\n    local sum76\n    local sum77\n    local sum78\n    local sum79\n\
    \    local sum80\n    local sum81\n    local sum82\n    local sum83\n    local\
    \ sum84\n    local sum85\n    local sum86\n    local sum87\n    local sum88\n\
    \    local sum89\n    local sum90\n    local sum91\n    local sum92\n    local\
    \ sum93\n    local sum94\n    local sum95\n    local sum96\n    local \n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [ ${input[$i]} -eq ${input[$(( $i + 1 ))]} ];\
    \ then\n      sum=$(( $sum + ${input[$i]} ))\n      i=$(( $i + 1 ))\n    fi\n\
    \    i=$(( $i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu5jdn1di.sh: line 11: [: too many arguments

    /tmp/tmpu5jdn1di.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $(( i % 2 )) -eq 0 ]\n    then\n      sum=$(( sum + i ))\n   \
    \ fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    for i in $numbers\n\
    \    do\n        if [ $(( i % 2 )) -eq 0 ]\n        then\n            sum=$((\
    \ $sum + $i ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local even_count\n    local odd_count\n    local number\n\
    \    local number_count\n    local number_odd\n    local number_even\n    local\
    \ number_odds\n    local number_evens\n    local number_odds_index\n    local\
    \ number_evens_index\n    local number_odds_count\n    local number_evens_count\n\
    \    local number_odds_sum\n    local number_evens_sum\n    local number_odds_even\n\
    \    local number_evens_odd\n    local number_odds_odd\n    local number_evens_even\n\
    \    local number_odds_evens\n    local number_evens_odds\n    local number_odds_odds\n\
    \    local number_evens_evens\n    local number_odds_odds\n    local number_evens_evens\n\
    \    local number_odds_evens\n    local number_evens_odds\n    local number_odds_odds\n\
    \    local number_evens_evens\n    local number_odds_evens\n    local number_evens_odds\n\
    \    local number_odds_odds\n    local number_evens_evens\n    local number_odds_evens\n\
    \    local number_evens_odds\n    local number_odds_odds\n    local number_evens_evens\n\
    \    local number_odds_evens\n    local number_evens_odds\n    local number_odds_evens\n\
    \    local number_evens_evens\n    local number_odds_evens\n    local number_evens_odds\n\
    \    local number_odds_odds\n    local number_evens_evens\n    local number_odds_evens\n\
    \    local number_evens_evens\n    local number_odds_evens\n    local number_evens_odds\n\
    \    local number_odds_odds\n    local number_evens_evens\n    local number_odds_evens\n\
    \    local number_evens_evens\n    local number_odds_evens\n    local number_evens_evens\n\
    \    local number_odds_evens\n    local number_evens_evens\n    local number_odds_odds\n\
    \    local number_evens_odds\n    local number_odds_odds\n    local number_evens_odds\n\
    \    local number_evens_odds\n    local number_odds_odds\n    local number_evens_odds\n\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ sum\n    local odd\n    local even\n    local count\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local sum\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local sum\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local sum\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local sum\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local sum\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local count\n    local sum\n    local i\n    local j\n    local k\n\
    \    local odd\n    local even\n    local count\n    local sum\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local sum\n    local i\n    local j\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  for i in $list; do\n\
    \    if [ \"$i\" -eq \"0\" ]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local nums\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_odds_even\n    local\
    \ nums_odds_odd\n    local nums_evens_even\n    local nums_evens_odd\n    local\
    \ nums_odds_evens_even\n    local nums_odds_odds_even\n    local nums_evens_evens_odd\n\
    \    local nums_evens_odds_even\n    local nums_odds_evens_evens_odd\n    local\
    \ nums_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_even\n    local\
    \ nums_evens_odds_evens_odds_even\n    local nums_odds_evens_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_evens_odds_even\n\
    \    local nums_evens_odds_evens_odds_evens_odds_even\n    local nums_odds_evens_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_even\n    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_even\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_even\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n\
    \    local nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( $sum + $i ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    while [ $i -lt ${#list} ]; do\n        if [\
    \ $(( ${list[i]} % 2 )) -eq 0 ]; then\n            sum=$(( ${sum} + ${list[i]}\
    \ ))\n            i=$(( ${i} + 1 ))\n        else\n            i=$(( ${i} + 1\
    \ ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp508dob2s.sh: line 13: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $(seq 0 $((${#numbers}-1))\
    \ )\n  do\n    if [ ${numbers[$i]} -eq ${numbers[$(($i+1))]} ]\n    then\n   \
    \   sum=$(( $sum + ${numbers[$i]} ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxq4icekh.sh: line 11: [: too many arguments

    /tmp/tmpxq4icekh.sh: line 13: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    for i in $numbers\n\
    \    do\n        if [ $((i%2)) -eq 0 ]\n        then\n            sum=$((sum+i))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    if [[ $i -eq 0 ]]; then\n      continue\n    fi\n    if [[ $i\
    \ -eq $(( ${#list} - 1 )) ]]; then\n      break\n    fi\n    if [[ $i -eq $((\
    \ ${#list} - 1 )) ]]; then\n      break\n    fi\n    if [[ $(( ${i} % 2 )) -eq\
    \ 0 ]]; then\n      sum=$(( sum + ${list[i]} ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgdg3agwi.sh: line 21: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  for i in $input; do\n\
    \    if [ $((i%2)) -eq 0 ]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local index\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_number\n    local evens_number\n    local\
    \ odds_number_index\n    local evens_number_index\n    local odds_number_length\n\
    \    local evens_number_length\n    local odds_number_value\n    local evens_number_value\n\
    \    local odds_number_value_index\n    local evens_number_value_index\n    local\
    \ odds_number_value_length\n    local evens_number_value_length\n    local odds_number_value_length_index\n\
    \    local evens_number_value_length_index\n    local odds_number_value_length_index_value\n\
    \    local evens_number_value_length_index_value\n    local odds_number_value_length_index_value_length\n\
    \    local evens_number_value_length_index_value_length\n    local odds_number_value_length_index_value_length_index\n\
    \    local evens_number_value_length_index_value_length_index\n    local odds_number_value_length_index_value_length_index_value\n\
    \    local evens_number_value_length_index_value_length_index_value\n    local\
    \ odds_number_value_length_index_value_length_index_value_length\n    local evens_number_value_length_index_value_length_index_value_length\n\
    \    local odds_number_value_length_index_value_length_index_value_length_index\n\
    \    local evens_number_value_length_index_value_length_index_value_length_index\n\
    \    local odds_number_value_length_index_value_length_index_value_length_index_value\n\
    \    local evens_number_value_length_index_value_length_index_value_length_index_value\n\
    \    local odds_number_value_length_index_value_length_index_value_length_index_value_length\n\
    \    local evens_number_value_length_index_value_length_index_value_length_index_value_length\n\
    \    local odds_number_value_length_index_value_length_index_value_length_index_value_length_index\n\
    \    local evens_number_value_length_index_value_length_index_value_length_index_value_length_index\n\
    \    local odds_number_value_length_index_value_length_index_value_length_index_value_length_index_value\n\
    \    local evens_number_value_length_index_value_length_index_value_length_index_value_length_index_value\n\
    \    local odds_number_value_length_index_value_length_index_value_length_index_value_length_index_value_length\n\
    \    local evens_number_value_length_index_value_length_index_value_length_index_value_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n\n    for (( i=1; i<${#numbers[@]}; i++ )); do\n      \
    \  odds=${numbers[$((i-1))]}\n        evens=${numbers[$i]}\n        odds_value=$(echo\
    \ $odds | cut -d \" \" -f 1)\n        evens_value=$(echo $evens | cut -d \" \"\
    \ -f 1)\n        odds_index=$(echo $odds | cut -d \" \" -f 2)\n        evens_index=$(echo\
    \ $evens | cut -d \" \" -f 2)\n        odds_value=$(echo $odds | cut -d \" \"\
    \ -f 2)\n        evens_value=$(echo $evens | cut -d \" \" -f 2)\n        odds_index=$(echo\
    \ $odds | cut -d \" \" -f 2)\n        evens_index=$(echo $evens | cut -d \" \"\
    \ -f 2)\n        if [ $((odds_index%2)) -eq 0 ]; then\n            sum=$((sum+$odds_value))\n\
    \        fi\n        if [ $((evens_index%2)) -eq 0 ]; then\n            sum=$((sum+$evens_value))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$((\
    \ $i + 1 ))]} ]]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n\
    \        i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdazm3431.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpdazm3431.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=\"$1\"\n  local sum=0\n  local i\n  for i\
    \ in $input; do\n    if [ \"$i\" -eq \"0\" ]; then\n      sum=$((sum+i))\n   \
    \ fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [[ ${numbers[$i]} -eq ${numbers[$(($i-1))]}\
    \ ]]; then\n            ((sum+=${numbers[$i]}))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5yr2l3ug.sh: line 11: numbers: bad array subscript

    /tmp/tmp5yr2l3ug.sh: line 11: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmp5yr2l3ug.sh: line 11: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmp5yr2l3ug.sh: line 12: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp5yr2l3ug.sh: line 12: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp5yr2l3ug.sh: line 12: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp5yr2l3ug.sh: line 12: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp5yr2l3ug.sh: line 12: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local i\n    local j\n    local k\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local odds\n    local evens\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    \n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_count\n    local evens_value_count\n    local odds_value_count_index\n\
    \    local evens_value_count_index\n    local odds_value_count_value\n    local\
    \ evens_value_count_value\n    local odds_value_count_value_index\n    local evens_value_count_value_index\n\
    \    local odds_value_count_value_count\n    local evens_value_count_value_count\n\
    \    local odds_value_count_value_count_index\n    local evens_value_count_value_count_index\n\
    \    local odds_value_count_value_count_value\n    local evens_value_count_value_count_value\n\
    \    local odds_value_count_value_count_value_index\n    local evens_value_count_value_count_value_index\n\
    \    local odds_value_count_value_count_value_count\n    local evens_value_count_value_count_value_count\n\
    \    local odds_value_count_value_count_value_count_index\n    local evens_value_count_value_count_value_count_index\n\
    \    local odds_value_count_value_count_value_count_value\n    local evens_value_count_value_count_value_count_value\n\
    \    local odds_value_count_value_count_value_count_value_index\n    local evens_value_count_value_count_value_count_value_index\n\
    \    local odds_value_count_value_count_value_count_value_count\n    local evens_value_count_value_count_value_count_value_count\n\
    \    local odds_value_count_value_count_value_count_value_count_index\n    local\
    \ evens_value_count_value_count_value_count_value_count_index\n    local odds_value_count_value_count_value_count_value_count_value\n\
    \    local evens_value_count_value_count_value_count_value_count_value\n    local\
    \ odds_value_count_value_count_value_count_value_count_value_index\n    local\
    \ evens_value_count_value_count_value_count_value_count_value_index\n    local\
    \ odds_value_count_value_count_value_count_value_count_value_count\n    local\
    \ evens_value_count_value_count_value_count_value_count_value_count\n    local\
    \ odds_value_count_value_count_value_count_value_count_value_count_index\n   \
    \ local evens_value_count_value_count_value_count_value_count_value_count_index\n\
    \    local odds_value_count_value_count_value_count_value_count_value_count_value\n\
    \    local even\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local odds_index\n    local evens_index\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local odds_index\n    local evens_index\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odds_index\n    local evens_index\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local even\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [ ${list[i]} -eq ${list[i+1]} ];\
    \ then\n            sum=$(( sum + ${list[i]} ))\n            i=$(( i + 2 ))\n\
    \        else\n            i=$(( i + 1 ))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvve1dw31.sh: line 11: [: too many arguments

    /tmp/tmpvve1dw31.sh: line 12: sum +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [[ ${input[$i]} -eq ${input[$(( $i + 1 ))]} ]];\
    \ then\n      sum=$(( $sum + ${input[$i]} ))\n      i=$(( $i + 1 ))\n    else\n\
    \      i=$(( $i + 1 ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_i02d099.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmp_i02d099.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( ${sum} + ${numbers[$i]} ))\n        fi\n    \
    \    i=$(( ${i} + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6gcvc1wz.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_value\n    local evens_value\n    local\
    \ odds_length\n    local evens_length\n    local odds_value\n    local evens_value\n\
    \    local odds_length\n    local evens_length\n    local odds_value\n    local\
    \ evens_value\n    local odds_length\n    local evens_length\n    local odds_value\n\
    \    local evens_value\n    local odds_length\n    local evens_length\n    local\
    \ odds_value\n    local evens_value\n    local odds_length\n    local evens_length\n\
    \    local odds_value\n    local evens_value\n    local odds_length\n    local\
    \ evens_length\n    local odds_value\n    local evens_value\n    local odds_length\n\
    \    local evens_length\n    local odds_value\n    local evens_value\n    local\
    \ odds_length\n    local evens_length\n    local odds_value\n    local evens_value\n\
    \    local odds_length\n    local evens_length\n    local odds_value\n    local\
    \ evens_value\n    local odds_length\n    local evens_length\n    local odds_value\n\
    \    local evens_value\n    local odds_length\n    local evens_length\n    local\
    \ odds_value\n    local evens_value\n    local odds_length\n    local evens_length\n\
    \    local odds_value\n    local evens_value\n    local odds_length\n    local\
    \ evens_length\n    local odds_value\n    local evens_value\n    local odds_length\n\
    \    local evens_length\n    local odds_value\n    local evens_value\n    local\
    \ odds_length\n    local evens_length\n    local odds_value\n    local evens_value\n\
    \    local odds_length\n    local evens_length\n    local odds_value\n    local\
    \ evens_value\n    local odds_length\n    local evens_length\n    local odds_value\n\
    \    local evens_value\n    local odds_length\n    local evens_length\n    local\
    \ odds_value\n    local evens_value\n    local odd\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if (( i % 2 )); then\n      sum=$(( $sum + $i ))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local count\n   \
    \ local oddCount\n    local evenCount\n    local inputArray\n    local outputArray\n\
    \    local inputArrayLength\n    local outputArrayLength\n    local inputArrayElement\n\
    \    local outputArrayElement\n    local inputArrayElementLength\n    local outputArrayElementLength\n\
    \    local inputArrayElementCount\n    local outputArrayElementCount\n    local\
    \ inputArrayElementCountLength\n    local outputArrayElementCountLength\n    local\
    \ inputArrayElementCountLengthLength\n    local outputArrayElementCountLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local outputArrayElementCountLengthLengthLength\n\
    \    local inputArrayElementCountLengthLengthLength\n    local \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( ${sum} + ${numbers[$i]} ))\n        fi\n    \
    \    i=$(( ${i} + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgibuxbmy.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [[ ${input[$i]} -eq ${input[$(( $i + 1 ))]} ]];\
    \ then\n      sum=$(( sum + ${input[$i]} ))\n      i=$(( $i + 1 ))\n    fi\n \
    \   i=$(( $i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzfdrp93t.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpzfdrp93t.sh: line 12: sum +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   local j=0\n    local k=0\n    local odd=0\n    local even=0\n    local even2=0\n\
    \    local odd2=0\n    local even3=0\n    local odd3=0\n    local even4=0\n  \
    \  local odd4=0\n    local even5=0\n    local odd5=0\n    local even6=0\n    local\
    \ odd6=0\n    local even7=0\n    local odd7=0\n    local even8=0\n    local odd8=0\n\
    \    local even9=0\n    local odd9=0\n    local even10=0\n    local odd10=0\n\
    \    local even11=0\n    local odd11=0\n    local even12=0\n    local odd12=0\n\
    \    local even13=0\n    local odd13=0\n    local even14=0\n    local odd14=0\n\
    \    local even15=0\n    local odd15=0\n    local even16=0\n    local odd16=0\n\
    \    local even17=0\n    local odd17=0\n    local even18=0\n    local odd18=0\n\
    \    local even19=0\n    local odd19=0\n    local even20=0\n    local odd20=0\n\
    \    local even21=0\n    local odd21=0\n    local even22=0\n    local odd22=0\n\
    \    local even23=0\n    local odd23=0\n    local even24=0\n    local odd24=0\n\
    \    local even25=0\n    local odd25=0\n    local even26=0\n    local odd26=0\n\
    \    local even27=0\n    local odd27=0\n    local even28=0\n    local odd28=0\n\
    \    local even29=0\n    local odd29=0\n    local even30=0\n    local odd30=0\n\
    \    local even31=0\n    local odd31=0\n    local even32=0\n    local odd32=0\n\
    \    local even33=0\n    local odd33=0\n    local even34=0\n    local odd34=0\n\
    \    local even35=0\n    local odd35=0\n    local even36=0\n    local odd36=0\n\
    \    local even37=0\n    local odd37=0\n    local even38=0\n    local odd38=0\n\
    \    local even39=0\n    local odd39=0\n    local even40=0\n    local odd40=0\n\
    \    local even41=0\n    local odd\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local odd\n    \n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i\n  \
    \  local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local i\n    local j\n    local k\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local odds\n    local evens\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    \n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ oddCount\n    local evenCount\n    local evenSum\n    local oddSum\n    local\
    \ evenOddSum\n    local oddEvenSum\n    local evenOddOddSum\n    local oddEvenOddSum\n\
    \    local evenOddEvenSum\n    local oddEvenOddEvenSum\n    local evenOddEvenOddSum\n\
    \    local oddEvenOddEvenOddSum\n    local evenOddEvenOddOddSum\n    local oddEvenOddEvenOddOddSum\n\
    \    local evenOddEvenOddOddEvenSum\n    local oddEvenOddEvenOddOddEvenSum\n \
    \   local evenOddEvenOddOddEvenOddSum\n    local oddEvenOddEvenOddOddEvenOddSum\n\
    \    local evenOddEvenOddOddEvenOddOddSum\n    local oddEvenOddEvenOddOddEvenOddOddSum\n\
    \    local evenOddEvenOddOddEvenOddOddEvenSum\n    local oddEvenOddEvenOddOddEvenOddOddEvenSum\n\
    \    local evenOddEvenOddOddEvenOddOddEvenOddSum\n    local oddEvenOddEvenOddOddEvenOddOddEvenOddSum\n\
    \    local evenOddEvenOddOddEvenOddOddEvenOddOddSum\n    local oddEvenOddEvenOddOddEvenOddOddEvenOddOddSum\n\
    \    local evenOddEvenOddOddEvenOddOddEvenOddOddEvenSum\n    local oddEvenOddEvenOddOddEvenOddOddEvenOddOddSum\n\
    \    local evenOddEvenOddOddEvenOddOddEvenOddOddEvenOddSum\n    local oddEvenOddEvenOddOddEvenOddOddEvenOddOddEvenSum\n\
    \    local evenOddEvenOddOddEvenOddOddEvenOddOddEvenOddSum\n    local oddEvenOddEvenOddOddEvenOddOddEvenOddOddEvenOddSum\n\
    \    local \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( sum\
    \ + ${input[$i]} ))\n    fi\n    i=$(( i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi7exmz9k.sh: line 12: sum + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local i\n    local j\n    local k\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local odds\n    local evens\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    \n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local odds_index\n    local evens_index\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local odds_index\n    local evens_index\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odds_index\n    local evens_index\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local even\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i=0\n  while\
    \ [ $i -lt ${#list} ]; do\n    if [[ ${list[i]}%2==1 ]]; then\n      sum=$((sum+${list[i]}))\n\
    \    fi\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0zporg4k.sh: line 12: sum+5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [[ ${list[i]} -eq ${list[i+1]}\
    \ ]]; then\n            sum=$(( sum + ${list[i]} ))\n            i=$(( i + 2 ))\n\
    \        fi\n        i=$(( i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfw1tplxg.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpfw1tplxg.sh: line 12: sum +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   local j=0\n    local k=0\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odds_count\n    local evens_count\n    local odds_sum\n\
    \    local evens_sum\n    local odds_sum2\n    local evens_sum2\n    local odds_sum3\n\
    \    local evens_sum3\n    local odds_sum4\n    local evens_sum4\n    local odds_sum5\n\
    \    local evens_sum5\n    local odds_sum6\n    local evens_sum6\n    local odds_sum7\n\
    \    local evens_sum7\n    local odds_sum8\n    local evens_sum8\n    local odds_sum9\n\
    \    local evens_sum9\n    local odds_sum10\n    local evens_sum10\n    local\
    \ odds_sum11\n    local evens_sum11\n    local odds_sum12\n    local evens_sum12\n\
    \    local odds_sum13\n    local evens_sum13\n    local odds_sum14\n    local\
    \ evens_sum14\n    local odds_sum15\n    local evens_sum15\n    local odds_sum16\n\
    \    local evens_sum16\n    local odds_sum17\n    local evens_sum17\n    local\
    \ odds_sum18\n    local evens_sum18\n    local odds_sum19\n    local evens_sum19\n\
    \    local odds_sum20\n    local evens_sum20\n    local odds_sum21\n    local\
    \ evens_sum21\n    local odds_sum22\n    local evens_sum22\n    local odds_sum23\n\
    \    local evens_sum23\n    local odds_sum24\n    local evens_sum24\n    local\
    \ odds_sum25\n    local evens_sum25\n    local odds_sum26\n    local evens_sum26\n\
    \    local odds_sum27\n    local evens_sum27\n    local odds_sum28\n    local\
    \ evens_sum28\n    local odds_sum29\n    local evens_sum29\n    local odds_sum30\n\
    \    local evens_sum30\n    local odds_sum31\n    local evens_sum31\n    local\
    \ odds_sum32\n    local evens_sum32\n    local odds_sum33\n    local evens_sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ for (( i=0; i<${#numbers[@]}; i++ )); do\n        if [[ ${numbers[$i]}%2==0\
    \ ]]; then\n            sum=$(( sum + ${numbers[$i]} ))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdsunbx3n.sh: line 12: sum + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [[ ${list[i]} == 2 ]]; then\n \
    \           sum=$((sum + ${list[i]}))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( $sum + ${numbers[$i]} ))\n        fi\n      \
    \  i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxtff6a73.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local count\n    local oddCount\n\
    \    local evenCount\n    local oddSum\n    local evenSum\n    local oddSum2\n\
    \    local evenSum2\n    local oddSum3\n    local evenSum3\n    local oddSum4\n\
    \    local evenSum4\n    local oddSum5\n    local evenSum5\n    local oddSum6\n\
    \    local evenSum6\n    local oddSum7\n    local evenSum7\n    local oddSum8\n\
    \    local evenSum8\n    local oddSum9\n    local evenSum9\n    local oddSum10\n\
    \    local evenSum10\n    local oddSum11\n    local evenSum11\n    local oddSum12\n\
    \    local evenSum12\n    local oddSum13\n    local evenSum13\n    local oddSum14\n\
    \    local evenSum14\n    local oddSum15\n    local evenSum15\n    local oddSum16\n\
    \    local evenSum16\n    local oddSum17\n    local evenSum17\n    local oddSum18\n\
    \    local evenSum18\n    local oddSum19\n    local evenSum19\n    local oddSum20\n\
    \    local evenSum20\n    local oddSum21\n    local evenSum21\n    local oddSum22\n\
    \    local evenSum22\n    local oddSum23\n    local evenSum23\n    local oddSum24\n\
    \    local evenSum24\n    local oddSum25\n    local evenSum25\n    local oddSum26\n\
    \    local evenSum26\n    local oddSum27\n    local evenSum27\n    local oddSum28\n\
    \    local evenSum28\n    local oddSum29\n    local evenSum29\n    local oddSum30\n\
    \    local evenSum30\n    local oddSum31\n    local evenSum31\n    local oddSum32\n\
    \    local evenSum32\n    local oddSum33\n    local evenSum33\n    local oddSum34\n\
    \    local evenSum34\n    local oddSum35\n    local evenSum35\n    local oddSum36\n\
    \    local evenSum36\n    local oddSum37\n    local evenSum37\n    local oddSum38\n\
    \    local evenSum38\n    local oddSum39\n    local evenSum39\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i\n  \
    \  for ((i=0; i<${#list}; i++)); do\n        if [[ ${list[i]} -eq ${list[i+1]}\
    \ ]]; then\n            sum=$((sum+${list[i]}))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppuyfo_2k.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmppuyfo_2k.sh: line 12: sum+: syntax error: operand expected (error token
    is "+")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( $sum + ${numbers[$i]} ))\n        fi\n      \
    \  i=$(( i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgcj32mdh.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=$1\n    local sum=0\n    for i in $(seq 1\
    \ ${#list}); do\n        if [ ${list[$i]} -eq ${list[$((i-1))] } ]; then\n   \
    \         sum=$((sum + ${list[$i]}))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp17gqvlb5.sh: line 10: ${list[$((i-1))] }: bad substitution

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   local j=0\n    while [ $i -lt ${#numbers} ]; do\n        if [ $((j+1)) -eq\
    \ ${#numbers} ]\n        then\n            sum=$((sum + ${numbers[i]}))\n    \
    \        i=$((i+1))\n        else\n            if [ ${numbers[i]} -eq ${numbers[j+1]}\
    \ ]\n            then\n                sum=$((sum + ${numbers[i]}))\n        \
    \        i=$((i+1))\n                j=$((j+1))\n            else\n          \
    \      j=$((j+1))\n            fi\n        fi\n    done\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprghyrq4u.sh: line 17: [: too many arguments

    /tmp/tmprghyrq4u.sh: line 17: [: too many arguments

    /tmp/tmprghyrq4u.sh: line 17: [: too many arguments

    /tmp/tmprghyrq4u.sh: line 17: [: too many arguments

    /tmp/tmprghyrq4u.sh: line 17: [: too many arguments

    /tmp/tmprghyrq4u.sh: line 17: [: too many arguments

    /tmp/tmprghyrq4u.sh: line 14: sum + 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local i\n    local j\n    local k\n    local odd\n \
    \   local even\n    local even_index\n    local odd_index\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local even_index\n    local\
    \ odd_index\n    local i\n    local j\n    local k\n    local odd\n    local even\n\
    \    local even_index\n    local odd_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ even_index\n    local odd_index\n    local i\n    local j\n    local k\n   \
    \ local odd\n    local even\n    local even_index\n    local odd_index\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local i\n    local j\n    local k\n    local odd\n \
    \   local even\n    local even_index\n    local odd_index\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local even_index\n    local\
    \ odd_index\n    local i\n    local j\n    local k\n    local odd\n    local even\n\
    \    local even_index\n    local odd_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local even_index\n    local odd_index\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ even_index\n    local odd_index\n    local i\n    local j\n    local k\n   \
    \ local odd\n    local even\n    local even_index\n    local odd_index\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local i\n    local j\n    local k\n    local odd\n \
    \   local even\n    local even_index\n    local odd_index\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    \n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [ $((i%2)) -eq 0 ]; then\n      sum=$((sum+i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [ ${numbers[$i]} -eq ${numbers[$(($i+1))]}\
    \ ]; then\n            sum=$((sum+${numbers[$i]}))\n        fi\n        i=$(($i+1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3rmdwhma.sh: line 11: [: too many arguments

    /tmp/tmp3rmdwhma.sh: line 12: sum+: syntax error: operand expected (error token
    is "+")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$((\
    \ $i + 1 ))]} ]]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n\
    \        i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdazm3431.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpdazm3431.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  for i in $(seq 0 $((${#list}-1)))\n\
    \  do\n    if [[ ${list[i]}%2==0 ]]\n    then\n      sum=$((sum+${list[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl9umk1zn.sh: line 13: sum+5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [ ${list[i]} -eq ${list[i+1]} ];\
    \ then\n            (( sum += ${list[i]} ))\n            (( i += 2 ))\n      \
    \  else\n            (( sum += ${list[i]} ))\n            (( i++ ))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzh0xpbvf.sh: line 11: [: too many arguments

    /tmp/tmpzh0xpbvf.sh: line 15: ((: sum += 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    /tmp/tmpzh0xpbvf.sh: line 12: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpzh0xpbvf.sh: line 12: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpzh0xpbvf.sh: line 12: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [[ ${list[i]} -eq ${list[i+1]}\
    \ ]]; then\n            sum=$((sum + ${list[i]}))\n            i=$((i + 2))\n\
    \        else\n            i=$((i + 1))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpquahmm8v.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpquahmm8v.sh: line 12: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [ $(( ${input[$i]} % 2 )) -eq 0 ]; then\n   \
    \   sum=$(( $sum + ${input[$i]} ))\n    fi\n    i=$(( ${i} + 1 ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbtb2a8wa.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local evens_index\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local odds_index\n    local\
    \ evens_index\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local odds_index\n    local evens_index\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local odds_index\n    local evens_index\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local odds_index\n    local evens_index\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local i\n    local j\n\
    \    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local i\n    local j\n    local\
    \ k\n    local odd\n    local even\n    local odds\n    local evens\n    local\
    \ odds_index\n    local evens_index\n    local i\n    local j\n    local k\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local odds_index\n\
    \    local even\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n\n   \
    \ count=0\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if [[ ${numbers[$i]}\
    \ -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n\n    for ((j=0;\
    \ j<${#numbers[@]}; j++)); do\n        if [[ ${numbers[$j]} -eq 0 ]]; then\n \
    \           ((count++))\n        fi\n    done\n\n    for ((k=0; k<${#numbers[@]};\
    \ k++)); do\n        if [[ ${numbers[$k]} -eq 0 ]]; then\n            ((count++))\n\
    \        fi\n    done\n\n    for ((j=0; j<${#numbers[@]}; j++)); do\n        if\
    \ [[ ${numbers[$j]} -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n\
    \n    for ((k=0; k<${#numbers[@]}; k++)); do\n        if [[ ${numbers[$k]} -eq\
    \ 0 ]]; then\n            ((count++))\n        fi\n    done\n\n    for ((j=0;\
    \ j<${#numbers[@]}; j++)); do\n        if [[ ${numbers[$j]} -eq 0 ]]; then\n \
    \           ((count++))\n        fi\n    done\n\n    for ((k=0; k<${#numbers[@]};\
    \ k++)); do\n        if [[ ${numbers[$k]} -eq 0 ]]; then\n            ((count++))\n\
    \        fi\n    done\n\n    for ((j=0; j<${#numbers[@]}; j++)); do\n        if\
    \ [[ ${numbers[$j]} -eq 0 ]]; then\n            ((count++))\n        fi\n    done\n\
    \n    for ((k=0; k<${#numbers[@]}; k++)); do\n        if [[ ${numbers[$k]} -eq\
    \ 0 ]]; then\n            ((count++))\n        fi\n    done\n\n    for ((j=0;\
    \ j<${#numbers[@]}; j++)); do\n        if [[ ${numbers[$j]} -eq 0 ]]; then\n \
    \           ((count++))\n        fi\n    done\n\n    for ((k=0; k<${#numbers[@]};\
    \ k++)); do\n        if [[ ${numbers[$k]} -\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoiapik34.sh: line 78: conditional binary operator expected

    /tmp/tmpoiapik34.sh: line 78: syntax error near `-''

    /tmp/tmpoiapik34.sh: line 78: `        if [[ ${numbers[$k]} -''

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input\n  input=$1\n  local sum\n  sum=0\n  for i\
    \ in $input; do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( $sum + $i\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i\n \
    \   local j\n    local k\n    local odd\n    local even\n    local num\n\n   \
    \ while read -r line; do\n        num=$(echo \"$line\" | awk '{print $1}')\n \
    \       odd=$(echo \"$line\" | awk '{print $2}')\n        even=$(echo \"$line\"\
    \ | awk '{print $3}')\n        if [ \"$num\" -eq \"$odd\" ] && [ \"$num\" -eq\
    \ \"$even\" ]; then\n            sum=$((sum + num))\n        fi\n    done <<<\
    \ \"$input\"\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    for i in $numbers\n\
    \    do\n        if [ $i -eq 0 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 1 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 2 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 3 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 4 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 5 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 6 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 7 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 8 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 9 ]\n        then\n            sum=$((sum + i))\n\
    \        fi\n        if [ $i -eq 10 ]\n        then\n            sum=$((sum +\
    \ i))\n        fi\n        if [ $i -eq 11 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 12 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 13 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 14 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 15 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 16 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 17 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 18 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 19 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 20 ]\n        then\n            sum=$((sum\
    \ + i))\n        fi\n        if [ $i -eq 21 ]\n        then\n\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph2qie4yh.sh: line 98: syntax error near unexpected token `}''

    /tmp/tmph2qie4yh.sh: line 98: `}''

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $i -eq 0 ]\n    then\n      continue\n    fi\n    if [ $i -eq\
    \ 2 ]\n    then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $(seq 1 $((${#numbers}\
    \ - 1))); do\n    if [[ ${numbers[$i]} -eq ${numbers[$((i + 1))]} ]]; then\n \
    \     sum=$((sum + ${numbers[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp74zryp6z.sh: line 11: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $((i % 2)) -eq 0 ]\n    then\n      sum=$((sum + i))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local even_index\n    local odd\n    local even\n  \
    \  local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ even_index\n    local odd_index\n    local even_index\n    local odd\n    local\
    \ even\n    local i\n    local j\n    local k\n    local odd\n    local even\n\
    \    local even_index\n    local odd_index\n    local even_index\n    local odd\n\
    \    local even\n    local i\n    local j\n    local k\n    local odd\n    local\
    \ even\n    local even_index\n    local odd_index\n    local even_index\n    local\
    \ odd\n    local even\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local even_index\n    local odd_index\n    local even_index\n\
    \    local odd\n    local even\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local even_index\n\
    \    local odd\n    local even\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local even_index\n\
    \    local odd\n    local even\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local even_index\n\
    \    local odd\n    local even\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local even_index\n\
    \    local odd\n    local even\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local even_index\n\
    \    local odd\n    local even\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local even_index\n\
    \    local odd\n    local even\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local count\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local k\n    local odd\n    local even\n    local count\n  \
    \  local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local count\n    local odds\n    local evens\n    local\
    \ i\n    local j\n    local k\n    local odd\n    local even\n    local count\n\
    \    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local odds_index\n    local evens_index\n    local odds_value\n    local\
    \ evens_value\n    local odds_value_index\n    local evens_value_index\n    local\
    \ odds_value_index\n    local odds_value_index\n    local odds_value_index\n \
    \   local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local odds_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if\
    \ (( ${numbers[i]} % 2 == 0 )); then\n            sum=$(( sum + ${numbers[i]}\
    \ ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd5ndgqi1.sh: line 13: ((: 5 8 7 1 % 2 == 0 : syntax error in expression
    (error token is "8 7 1 % 2 == 0 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   local j=0\n    local k=0\n    while [ $i -lt ${#numbers} ]; do\n        if\
    \ [ $(( ${numbers[$i]} % 2 )) -eq 0 ]; then\n            sum=$(( ${sum} + ${numbers[$i]}\
    \ ))\n        fi\n        i=$(( ${i} + 1 ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpypf_yfbh.sh: line 13: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local i\n    local j\n    local k\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local odds\n    local evens\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local k\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local k\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    \n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n  \
    \  local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n  \
    \  local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n  \
    \  local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n  \
    \  local e=0\n\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#input} ]; do\n        if [ $(( ${input[$i]} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( ${sum} + ${input[$i]} ))\n        fi\n      \
    \  i=$(( ${i} + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_7osqrh8.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local even_index\n    local\
    \ odd_index\n    local input_len\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local input_len\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ even_index\n    local odd_index\n    local input_len\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local even_index\n    local\
    \ odd_index\n    local input_len\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local input_len\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ even_index\n    local odd_index\n    local input_len\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local even_index\n    local\
    \ odd_index\n    local input_len\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local input_len\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ even_index\n    local odd_index\n    local input_len\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local even_index\n    local\
    \ odd_index\n    local input_len\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local input_len\n\
    \    local i\n    local j\n    local k\n    local odd\n    local even\n    local\
    \ even_index\n    local odd_index\n    local input_len\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local even_index\n    local\
    \ odd_index\n    local input_len\n    local i\n    local j\n    local k\n    local\
    \ odd\n    local even\n    local even_index\n    local odd_index\n    local input_len\n\
    \    local i\n    local j\n    local k\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    while [ $i -lt ${#input} ]; do\n        if [ $((k%2))\
    \ -eq 0 ]; then\n            sum=$((sum+${input[i]}))\n        fi\n        i=$((i+1))\n\
    \        k=$((k+1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppzx331j3.sh: line 14: sum+5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local nums\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_odds_even\n    local\
    \ nums_odds_odd\n    local nums_evens_even\n    local nums_evens_odd\n    local\
    \ nums_odds_evens_even\n    local nums_odds_odds_even\n    local nums_evens_evens_odd\n\
    \    local nums_evens_odds_even\n    local nums_odds_evens_evens_odd\n    local\
    \ nums_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_even\n    local\
    \ nums_evens_odds_evens_odds_even\n    local nums_odds_evens_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_evens_odds_even\n\
    \    local nums_evens_odds_evens_odds_evens_odds_even\n    local nums_odds_evens_evens_odds_evens_odds_evens_odd\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odd\n    local nums_odds_evens_evens_odds_evens_odds_evens_odds_even\n\
    \    local nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n    local\
    \ nums_odds_evens_evens_odds_evens_odds_evens_odds_evens_odds_evens_odd\n    local\
    \ nums_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_odds_evens_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  for i in $input; do\n\
    \    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ odds\n    local evens\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_odds\n    local evens_odds\n \
    \   local odds_evens\n    local evens_evens\n    local odds_odds_sum\n    local\
    \ evens_odds_sum\n    local odds_evens_sum\n    local evens_evens_sum\n    local\
    \ odds_odds_odds\n    local evens_odds_odds\n    local odds_evens_odds\n    local\
    \ evens_evens_odds\n    local odds_odds_evens\n    local evens_odds_evens\n  \
    \  local odds_evens_evens\n    local evens_evens_evens\n    local odds_odds_odds_sum\n\
    \    local evens_odds_odds_sum\n    local odds_evens_odds_sum\n    local evens_evens_odds_sum\n\
    \    local odds_odds_evens_sum\n    local evens_odds_evens_sum\n    local odds_evens_evens_sum\n\
    \    local evens_evens_evens_sum\n    local odds_odds_odds_odds\n    local evens_odds_odds_odds\n\
    \    local odds_evens_odds_odds\n    local evens_evens_odds_odds\n    local odds_odds_evens_odds\n\
    \    local evens_odds_evens_odds\n    local odds_evens_evens_odds\n    local evens_evens_evens_odds\n\
    \    local odds_odds_odds_evens\n    local evens_odds_odds_evens\n    local odds_evens_odds_evens\n\
    \    local evens_evens_odds_evens\n    local odds_odds_evens_evens\n    local\
    \ evens_odds_evens_evens\n    local odds_evens_evens_evens\n    local evens_evens_evens_evens\n\
    \    local odds_odds_odds_odds_sum\n    local evens_odds_odds_odds_sum\n    local\
    \ odds_evens_odds_odds_sum\n    local evens_evens_odds_odds_sum\n    local odds_odds_evens_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in ${numbers[@]};\
    \ do\n    if [ $i -eq ${numbers[$(( $i - 1 ))]} ]; then\n      sum=$(( sum + $i\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3ppcxnpn.sh: line 10: [: 5: unary operator expected

    /tmp/tmp3ppcxnpn.sh: line 10: [: 8: unary operator expected

    /tmp/tmp3ppcxnpn.sh: line 10: [: 7: unary operator expected

    /tmp/tmp3ppcxnpn.sh: line 10: [: too many arguments

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local number_index\n    local number_odd\n\
    \    local number_even\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local \n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $i -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [[ ${input[$i]} -eq ${input[$(( $i + 1 ))]} ]];\
    \ then\n      sum=$(( $sum + ${input[$i]} ))\n    fi\n    i=$(( $i + 1 ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz8bnfgwn.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpz8bnfgwn.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    if [ \"$i\" -eq \"0\" ]; then\n      sum=$((sum+i))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local sum_index\n    local num_odd\n    local num_even\n\
    \    local num_sum\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    local num_even_index\n    local num_odd_index\n    local\
    \ num_sum_index\n    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$(($i+1))]}\
    \ ]]; then\n            sum=$((sum+${input[$i]}))\n        fi\n        i=$(($i+2))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxb1brswq.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpxb1brswq.sh: line 12: sum+: syntax error: operand expected (error token
    is "+")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if\
    \ (( ${numbers[i]} % 2 == 0 )); then\n            sum=$(( sum + ${numbers[i]}\
    \ ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd5ndgqi1.sh: line 13: ((: 5 8 7 1 % 2 == 0 : syntax error in expression
    (error token is "8 7 1 % 2 == 0 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  local i\n  for i in\
    \ \"${numbers[@]}\"; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum\
    \ + i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7i97dci7.sh: line 11: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n \
    \       i=$(( $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd6lk31lp.sh: line 11: [: too many arguments

    /tmp/tmpd6lk31lp.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    if [ \"$i\" -eq \"0\" ]; then\n      sum=$((sum + i))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $i -eq 0 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq\
    \ 1 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 2 ]\n    then\n     \
    \ sum=$((sum+i))\n    elif [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n    elif\
    \ [ $i -eq 4 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 5 ]\n    then\n\
    \      sum=$((sum+i))\n    elif [ $i -eq 6 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 7 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 8 ]\n\
    \    then\n      sum=$((sum+i))\n    elif [ $i -eq 9 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 10 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 11\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 12 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 13 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 14\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 15 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 16 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 17\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 18 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 19 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 20\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 21 ]\n    then\n      sum=$((sum+i))\n\
    \    elif [ $i -eq 22 ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 23\
    \ ]\n    then\n      sum=$((sum+i))\n    elif [ $i -eq 24 ]\n    then\n      \n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5u4uncrz.sh: line 86: syntax error near unexpected token `}''

    /tmp/tmp5u4uncrz.sh: line 86: `}''

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n \
    \       i=$(( $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd6lk31lp.sh: line 11: [: too many arguments

    /tmp/tmpd6lk31lp.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=$1\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt ${#list} ]; do\n        if [ $(( ${list[i]} % 2 )) -eq 0 ]; then\n\
    \            sum=$(( sum + ${list[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp771wav4w.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=\"$1\"\n  local sum=0\n  local i\n  for i\
    \ in $input; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i=0\n  while\
    \ [ $i -lt ${#list} ]; do\n    if [ \"${list[i]}\" = \"${list[i+1]}\" ]; then\n\
    \      (( sum+=list[i] ))\n      i=$(( i+2 ))\n    else\n      i=$(( i+1 ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ $(( ${input[$i]} % 2 )) -eq 0 ];\
    \ then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n        i=$((\
    \ $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmucz2dbd.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local number\n    local number_index\n    local number_odd\n\
    \    local number_even\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local number_odd_index\n    local number_even_index\n\
    \    local number_odd_index\n    local number_even_index\n    local number_odd_index\n\
    \    local number_even_index\n    local \n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  local i\n  for i in\
    \ $numbers\n  do\n    if [ $i -eq 0 ]\n    then\n      continue\n    fi\n    if\
    \ [ $i -eq 1 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 2 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 3 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 4 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 5 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 6 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 7 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 8 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 9 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 10 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 11 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 12 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 13 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 14 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 15 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 16 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 17 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 18 ]\n    then\n      sum=$((sum+i))\n      continue\n    fi\n    if\
    \ [ $i -eq 19 ]\n    then\n      sum=$((sum+i))\n      continue\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphpl0klrp.sh: line 110: syntax error near unexpected token `}''

    /tmp/tmphpl0klrp.sh: line 110: `}''

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   local j=0\n    local k=0\n    while [ $i -lt ${#numbers} ]; do\n        if\
    \ [ $(( ${numbers[i]} % 2 )) -eq 0 ]; then\n            sum=$(( ${sum} + ${numbers[i]}\
    \ ))\n            j=$(( ${j} + 1 ))\n        fi\n        i=$(( ${i} + 1 ))\n \
    \   done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1hmwr9dd.sh: line 13: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local num\n    local count\n\
    \    local odds\n    local evens\n    local odds_count\n    local evens_count\n\
    \    local odds_sum\n    local evens_sum\n    local odds_odds\n    local evens_odds\n\
    \    local odds_evens\n    local evens_evens\n    local odds_odds_sum\n    local\
    \ evens_odds_sum\n    local odds_evens_sum\n    local evens_evens_sum\n    local\
    \ odds_odds_odds\n    local evens_odds_odds\n    local odds_evens_odds\n    local\
    \ evens_evens_odds\n    local odds_odds_evens\n    local evens_odds_evens\n  \
    \  local odds_evens_evens\n    local evens_evens_evens\n    local odds_odds_odds_sum\n\
    \    local evens_odds_odds_sum\n    local odds_evens_odds_sum\n    local evens_evens_odds_sum\n\
    \    local odds_odds_evens_sum\n    local evens_odds_evens_sum\n    local odds_evens_evens_sum\n\
    \    local evens_evens_evens_sum\n    local odds_odds_odds_odds\n    local evens_odds_odds_odds\n\
    \    local odds_evens_odds_odds\n    local evens_evens_odds_odds\n    local odds_odds_evens_odds\n\
    \    local evens_odds_evens_odds\n    local odds_evens_evens_odds\n    local evens_evens_evens_odds\n\
    \    local odds_odds_odds_evens\n    local evens_odds_odds_evens\n    local odds_evens_odds_evens\n\
    \    local evens_evens_odds_evens\n    local odds_odds_evens_evens\n    local\
    \ evens_odds_evens_evens\n    local odds_evens_evens_evens\n    local evens_evens_evens_evens\n\
    \    local odds_odds_odds_odds_sum\n    local evens_odds_odds_odds_sum\n    local\
    \ odds_evens_odds_odds_sum\n    local evens_evens_odds_odds_sum\n    local odds_\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  local i\n  for i in\
    \ $numbers\n  do\n    if [ $i -eq $(( ${#numbers} / 2 )) ]\n    then\n      sum=$((\
    \ $sum + $i ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    for (( i=0; i<${#numbers[@]}; i++ )); do\n       \
    \ if [ $(( i+1 )) -eq ${#numbers[@]} ]; then\n            break\n        fi\n\
    \        if [ ${numbers[$i]} -eq ${numbers[$(( i+1 ))]} ]; then\n            ((\
    \ sum+=${numbers[$i]} ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [[ ${list[i]} -eq ${list[i+1]}\
    \ ]]; then\n            sum=$((sum+${list[i]}))\n            i=$((i+2))\n    \
    \    else\n            i=$((i+1))\n        fi\n    done\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj3f3l4ti.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpj3f3l4ti.sh: line 12: sum+: syntax error: operand expected (error token
    is "+")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n\
    \        i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeppflwru.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpeppflwru.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=\"$1\"\n  local sum=0\n  local i\n  for i\
    \ in $input; do\n    if [ \"$i\" -eq \"0\" ]; then\n      sum=$((sum+i))\n   \
    \ elif [ \"$i\" -eq \"1\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" -eq\
    \ \"2\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" -eq \"3\" ]; then\n \
    \     sum=$((sum+i))\n    elif [ \"$i\" -eq \"4\" ]; then\n      sum=$((sum+i))\n\
    \    elif [ \"$i\" -eq \"5\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\"\
    \ -eq \"6\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" -eq \"7\" ]; then\n\
    \      sum=$((sum+i))\n    elif [ \"$i\" -eq \"8\" ]; then\n      sum=$((sum+i))\n\
    \    elif [ \"$i\" -eq \"9\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\"\
    \ -eq \"10\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" -eq \"11\" ]; then\n\
    \      sum=$((sum+i))\n    elif [ \"$i\" -eq \"12\" ]; then\n      sum=$((sum+i))\n\
    \    elif [ \"$i\" -eq \"13\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\"\
    \ -eq \"14\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" -eq \"15\" ]; then\n\
    \      sum=$((sum+i))\n    elif [ \"$i\" -eq \"16\" ]; then\n      sum=$((sum+i))\n\
    \    elif [ \"$i\" -eq \"17\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\"\
    \ -eq \"18\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" -eq \"19\" ]; then\n\
    \      sum=$((sum+i))\n    elif [ \"$i\" -eq \"20\" ]; then\n      sum=$((sum+i))\n\
    \    elif [ \"$i\" -eq \"21\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\"\
    \ -eq \"22\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" -eq \"23\" ]; then\n\
    \      sum=$((sum+i))\n    elif [ \"$i\" -eq \"24\" ]; then\n      sum=$((sum+i))\n\
    \    elif [ \"$i\" -eq \"25\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\"\
    \ -eq \"26\" ]; then\n      sum=$((sum+i))\n    elif [ \"$i\" \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc2n5diti.sh: line 66: syntax error near unexpected token `}''

    /tmp/tmpc2n5diti.sh: line 66: `}''

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$(($i+1))]}\
    \ ]]; then\n            sum=$((sum+${input[$i]}))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpssosujzv.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpssosujzv.sh: line 12: sum+: syntax error: operand expected (error token
    is "+")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local number\n    local\
    \ number_index\n    local number_count\n    local number_count2\n    local number_count3\n\
    \    local number_count4\n    local number_count5\n    local number_count6\n \
    \   local number_count7\n    local number_count8\n    local number_count9\n  \
    \  local number_count10\n    local number_count11\n    local number_count12\n\
    \    local number_count13\n    local number_count14\n    local number_count15\n\
    \    local number_count16\n    local number_count17\n    local number_count18\n\
    \    local number_count19\n    local number_count20\n    local number_count21\n\
    \    local number_count22\n    local number_count23\n    local number_count24\n\
    \    local number_count25\n    local number_count26\n    local number_count27\n\
    \    local number_count28\n    local number_count29\n    local number_count30\n\
    \    local number_count31\n    local number_count32\n    local number_count33\n\
    \    local number_count34\n    local number_count35\n    local number_count36\n\
    \    local number_count37\n    local number_count38\n    local number_count39\n\
    \    local number_count40\n    local number_count41\n    local number_count42\n\
    \    local number_count43\n    local number_count44\n    local number_count45\n\
    \    local number_count46\n    local number_count47\n    local number_count48\n\
    \    local number_count49\n    local number_count50\n    local number_count51\n\
    \    local number_count52\n    local number_count53\n    local number_count54\n\
    \    local number_count55\n    local number_count56\n    local number_count57\n\
    \    local number_count58\n    local number_count59\n    local number_count60\n\
    \    local number_count61\n    local number_count62\n    local number_count63\n\
    \    local number_count64\n    local number_count65\n    local number_count66\n\
    \    local number_count67\n    local number_count68\n    local number_count69\n\
    \    local number_count70\n    local number_count71\n    local number_count72\n\
    \    local number_count73\n    local number_count74\n    local number_count75\n\
    \    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\")\
    \ = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i\n  \
    \  local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_value\n    local evens_value\n    local\
    \ odds_value_index\n    local evens_value_index\n    local odds_value_length\n\
    \    local evens_value_length\n    local odds_value_length_index\n    local evens_value_length_index\n\
    \    local odds_value_length_value\n    local evens_value_length_value\n    local\
    \ odds_value_length_value_index\n    local evens_value_length_value_index\n  \
    \  local odds_value_length_value_value\n    local evens_value_length_value_value\n\
    \    local odds_value_length_value_value_index\n    local evens_value_length_value_value_index\n\
    \    local odds_value_length_value_value_value\n    local evens_value_length_value_value_value\n\
    \    local odds_value_length_value_value_value_index\n    local evens_value_length_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value\n    local evens_value_length_value_value_value_value\n\
    \    local odds_value_length_value_value_value_value_index\n    local evens_value_length_value_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value_value\n    local evens_value_length_value_value_value_value_value\n\
    \    local odds_value_length_value_value_value_value_value_index\n    local evens_value_length_value_value_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value_value_value\n    local evens_value_length_value_value_value_value_value_value\n\
    \    local odds_value_length_value_value_value_value_value_value_index\n    local\
    \ evens_value_length_value_value_value_value_value_value_index\n    local odds_value_length_value_value_value_value_value_value_value\n\
    \    local evens_value_length_value_value_value_value_value_value_value\n    local\
    \ odds_value_length_value_value_value_value_value_value_value_index\n    local\
    \ evens_value_length_value_value_value_value_value_value_value_index\n    local\
    \ odds_value_length_value_value_value_value_value_value_value_value\n    local\
    \ evens_value_length_value_value_value_value_value_value_value_value\n    local\
    \ odds_value_length_value_value_value_value_value_value_value_value_index\n  \
    \  local evens_value_length_value_value_value_value_value_value_value_value_index\n\
    \    local odds_value_length_value\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [[ ${input[$i]} -eq ${input[$(($i-1))]} ]]; then\n\
    \      sum=$(( $sum + ${input[$i]} ))\n      i=$(($i+1))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660037298
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local odd=0\n    local even=0\n    local even2=0\n\
    \    local odd2=0\n    local even3=0\n    local odd3=0\n    local even4=0\n  \
    \  local odd4=0\n    local even5=0\n    local odd5=0\n    local even6=0\n    local\
    \ odd6=0\n    local even7=0\n    local odd7=0\n    local even8=0\n    local odd8=0\n\
    \    local even9=0\n    local odd9=0\n    local even10=0\n    local odd10=0\n\
    \    local even11=0\n    local odd11=0\n    local even12=0\n    local odd12=0\n\
    \    local even13=0\n    local odd13=0\n    local even14=0\n    local odd14=0\n\
    \    local even15=0\n    local odd15=0\n    local even16=0\n    local odd16=0\n\
    \    local even17=0\n    local odd17=0\n    local even18=0\n    local odd18=0\n\
    \    local even19=0\n    local odd19=0\n    local even20=0\n    local odd20=0\n\
    \    local even21=0\n    local odd21=0\n    local even22=0\n    local odd22=0\n\
    \    local even23=0\n    local odd23=0\n    local even24=0\n    local odd24=0\n\
    \    local even25=0\n    local odd25=0\n    local even26=0\n    local odd26=0\n\
    \    local even27=0\n    local odd27=0\n    local even28=0\n    local odd28=0\n\
    \    local even29=0\n    local odd29=0\n    local even30=0\n    local odd30=0\n\
    \    local even31=0\n    local odd31=0\n    local even32=0\n    local odd32=0\n\
    \    local even33=0\n    local odd33=0\n    local even34=0\n    local odd34=0\n\
    \    local even35=0\n    local odd35=0\n    local even36=0\n    local odd36=0\n\
    \    local even37=0\n    local odd37=0\n    local even38=0\n    local odd38=0\n\
    \    local even39=0\n    local odd39=0\n    local even40=0\n    local odd40=0\n\
    \    local even41=0\n    local odd\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$(($i+1))]}\
    \ ]]; then\n            sum=$((sum+${input[$i]}))\n        fi\n        i=$(($i+2))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxb1brswq.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpxb1brswq.sh: line 12: sum+: syntax error: operand expected (error token
    is "+")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ odds\n    local evens\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_evens_sum\n    local odds_evens_count\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_even\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_index\n    local evens_value_index\n    local odds_value_index\n\
    \    local evens_value_index\n    local odds_value_index\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ $(( ${input[$i]} % 2 )) -eq 0 ];\
    \ then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n        i=$((\
    \ $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmucz2dbd.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n\
    \        i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeppflwru.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpeppflwru.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [ $(( ${list[i]} % 2 )) -eq 0 ];\
    \ then\n            sum=$(( $sum + ${list[i]} ))\n        fi\n        i=$(( $i\
    \ + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpukb55_lw.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    while [ $i -lt ${#input} ]; do\n        if [ $((\
    \ ${input[i]} % 2 )) -eq 0 ]; then\n            sum=$(( ${sum} + ${input[i]} ))\n\
    \        fi\n        i=$(( ${i} + 1 ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1ztmozu0.sh: line 13: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odds\n    local evens\n \
    \   local i\n    local j\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local i\n    local j\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n \
    \   local odd\n    local even\n    local odds\n    local evens\n    local i\n\
    \    local j\n    local odd\n    local even\n    local odds\n    local evens\n\
    \    local i\n    local j\n    local odd\n    local even\n    local odds\n   \
    \ local evens\n    local i\n    local j\n    local odd\n    local even\n    local\
    \ odds\n    local evens\n    local i\n    local j\n    local odd\n    local even\n\
    \    local odds\n    local evens\n    local i\n    local j\n    local odd\n  \
    \  local even\n    local odds\n    local evens\n    local i\n    local j\n   \
    \ local odd\n    local even\n    local odds\n    local evens\n    local i\n  \
    \  local j\n    local odd\n    local even\n    local odds\n    local evens\n \
    \   local i\n    local j\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local i\n    local j\n    local odd\n    local even\n    local odds\n\
    \    local evens\n    local i\n    local j\n    local odd\n    local even\n  \
    \  local odds\n    local evens\n    local i\n    local j\n    local odd\n    local\
    \ even\n    local odds\n    local evens\n    local i\n    local j\n    local odd\n\
    \    local even\n    local odds\n    local evens\n    local i\n    local j\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $numbers\n\
    \  do\n    if [ $((i%2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( $sum + ${numbers[$i]} ))\n        fi\n      \
    \  i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxtff6a73.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ $(( ${input[$i]} % 2 )) -eq 0 ];\
    \ then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n        i=$((\
    \ $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmucz2dbd.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i=0\n  while\
    \ [ $i -lt ${#list} ]; do\n    if [ ${list[i]} -eq ${list[i+1]} ]; then\n    \
    \  (( sum += ${list[i]} ))\n      (( i += 2 ))\n    else\n      (( sum += ${list[i]}\
    \ ))\n      (( i++ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppqnfti7m.sh: line 11: [: too many arguments

    /tmp/tmppqnfti7m.sh: line 15: ((: sum += 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    /tmp/tmppqnfti7m.sh: line 12: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmppqnfti7m.sh: line 12: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmppqnfti7m.sh: line 12: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  local i\n  for (( i=0;\
    \ i<${#numbers[@]}; i++ )); do\n    if [[ ${numbers[$i]} -eq 0 ]]; then\n    \
    \  continue\n    fi\n    if [[ ${numbers[$i]} -eq 1 ]]; then\n      sum=$(( sum\
    \ + ${numbers[$i]} ))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq 2\
    \ ]]; then\n      sum=$(( sum + ${numbers[$i]} ))\n      continue\n    fi\n  \
    \  if [[ ${numbers[$i]} -eq 3 ]]; then\n      sum=$(( sum + ${numbers[$i]} ))\n\
    \      continue\n    fi\n    if [[ ${numbers[$i]} -eq 4 ]]; then\n      sum=$((\
    \ sum + ${numbers[$i]} ))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq\
    \ 5 ]]; then\n      sum=$(( sum + ${numbers[$i]} ))\n      continue\n    fi\n\
    \    if [[ ${numbers[$i]} -eq 6 ]]; then\n      sum=$(( sum + ${numbers[$i]} ))\n\
    \      continue\n    fi\n    if [[ ${numbers[$i]} -eq 7 ]]; then\n      sum=$((\
    \ sum + ${numbers[$i]} ))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq\
    \ 8 ]]; then\n      sum=$(( sum + ${numbers[$i]} ))\n      continue\n    fi\n\
    \    if [[ ${numbers[$i]} -eq 9 ]]; then\n      sum=$(( sum + ${numbers[$i]} ))\n\
    \      continue\n    fi\n    if [[ ${numbers[$i]} -eq 10 ]]; then\n      sum=$((\
    \ sum + ${numbers[$i]} ))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq\
    \ 11 ]]; then\n      sum=$(( sum + ${numbers[$i]} ))\n      continue\n    fi\n\
    \    if [[ ${numbers[$i]} -eq 12 ]]; then\n      sum=$(( sum + ${numbers[$i]}\
    \ ))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq 13 ]]; then\n     \
    \ sum=$(( sum + ${numbers[$i]} ))\n      continue\n    fi\n    if [[ ${numbers[\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjj4qnlv5.sh: line 67: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpjj4qnlv5.sh: line 67: syntax error near `}''

    /tmp/tmpjj4qnlv5.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_value\n \
    \   local evens_value\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_sum_index\n    local evens_sum_index\n\
    \    local odds_sum_value\n    local evens_sum_value\n    local odds_sum_count\n\
    \    local evens_sum_count\n    local odds_sum_sum\n    local evens_sum_sum\n\
    \    local odds_sum_sum_index\n    local evens_sum_sum_index\n    local odds_sum_sum_value\n\
    \    local evens_sum_sum_value\n    local odds_sum_sum_count\n    local evens_sum_sum_count\n\
    \    local odds_sum_sum_sum\n    local evens_sum_sum_sum\n    local odds_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_index\n    local odds_sum_sum_sum_value\n    local\
    \ evens_sum_sum_sum_value\n    local odds_sum_sum_sum_count\n    local evens_sum_sum_sum_count\n\
    \    local odds_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_sum_index\n    local odds_sum_sum_sum_sum_value\n\
    \    local evens_sum_sum_sum_sum_value\n    local odds_sum_sum_sum_sum_count\n\
    \    local evens_sum_sum_sum_sum_count\n    local odds_sum_sum_sum_sum_sum\n \
    \   local evens_sum_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_sum_sum_index\n    local odds_sum_sum_sum_sum_sum_value\n\
    \    local evens_sum_sum_sum_sum_sum_value\n    local odds_sum_sum_sum_sum_sum_count\n\
    \    local evens_sum_sum_sum_sum_sum_count\n    local odds_sum_sum_sum_sum_sum_sum\n\
    \    local evens_sum_sum_sum_sum_sum_sum\n    local odds_sum_sum_sum_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_sum_sum_sum_index\n    local odds_sum_sum_sum_sum_sum_sum_value\n\
    \    local evens_sum_sum_sum_sum_sum_sum_value\n    local odds_sum_sum_sum_sum_sum_sum_count\n\
    \    local evens_\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_count\n    local evens_count\n    local odds_sum\n   \
    \ local evens_sum\n    local odds_sum_index\n    local evens_sum_index\n    local\
    \ odds_sum_index2\n    local evens_sum_index2\n    local odds_sum_index3\n   \
    \ local evens_sum_index3\n    local odds_sum_index4\n    local evens_sum_index4\n\
    \    local odds_sum_index5\n    local evens_sum_index5\n    local odds_sum_index6\n\
    \    local evens_sum_index6\n    local odds_sum_index7\n    local evens_sum_index7\n\
    \    local odds_sum_index8\n    local evens_sum_index8\n    local odds_sum_index9\n\
    \    local evens_sum_index9\n    local odds_sum_index10\n    local evens_sum_index10\n\
    \    local odds_sum_index11\n    local evens_sum_index11\n    local odds_sum_index12\n\
    \    local evens_sum_index12\n    local odds_sum_index13\n    local evens_sum_index13\n\
    \    local odds_sum_index14\n    local evens_sum_index14\n    local odds_sum_index15\n\
    \    local evens_sum_index15\n    local odds_sum_index16\n    local evens_sum_index16\n\
    \    local odds_sum_index17\n    local evens_sum_index17\n    local odds_sum_index18\n\
    \    local evens_sum_index18\n    local odds_sum_index19\n    local evens_sum_index19\n\
    \    local odds_sum_index20\n    local evens_sum_index20\n    local odds_sum_index21\n\
    \    local evens_sum_index21\n    local odds_sum_index22\n    local evens_sum_index22\n\
    \    local odds_sum_index23\n    local evens_sum_index23\n    local odds_sum_index24\n\
    \    local evens_sum_index24\n    local odds_sum_index25\n    local evens_sum_index25\n\
    \    local odds_sum_index26\n    local evens_sum_index26\n    local odds_sum_index27\n\
    \    local evens_sum_index27\n    local odds_sum_index28\n    local evens_sum_index28\n\
    \    local \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    local odd\n    local even\n    local num\n    local num2\n\
    \    local num3\n    local num4\n    local num5\n    local num6\n    local num7\n\
    \    local num8\n    local num9\n    local num10\n    local num11\n    local num12\n\
    \    local num13\n    local num14\n    local num15\n    local num16\n    local\
    \ num17\n    local num18\n    local num19\n    local num20\n    local num21\n\
    \    local num22\n    local num23\n    local num24\n    local num25\n    local\
    \ num26\n    local num27\n    local num28\n    local num29\n    local num30\n\
    \    local num31\n    local num32\n    local num33\n    local num34\n    local\
    \ num35\n    local num36\n    local num37\n    local num38\n    local num39\n\
    \    local num40\n    local num41\n    local num42\n    local num43\n    local\
    \ num44\n    local num45\n    local num46\n    local num47\n    local num48\n\
    \    local num49\n    local num50\n    local num51\n    local num52\n    local\
    \ num53\n    local num54\n    local num55\n    local num56\n    local num57\n\
    \    local num58\n    local num59\n    local num60\n    local num61\n    local\
    \ num62\n    local num63\n    local num64\n    local num65\n    local num66\n\
    \    local num67\n    local num68\n    local num69\n    local num70\n    local\
    \ num71\n    local num72\n    local num73\n    local num74\n    local num75\n\
    \    local num76\n    local num77\n    local num78\n    local num79\n    local\
    \ num80\n    local num81\n    local num82\n    local num83\n    local num84\n\
    \    local num85\n    local num86\n    local num87\n    local num88\n    local\
    \ num89\n    local num90\n    local num91\n    local num92\n    local num93\n\
    \    local num94\n    local num95\n    local num96\n    local \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_sum\n    local evens_sum\n    local odds_value\n\
    \    local evens_value\n    local odds_value_index\n    local evens_value_index\n\
    \    local odds_value_length\n    local evens_value_length\n    local odds_value_sum\n\
    \    local evens_value_sum\n    local odds_value_length_index\n    local evens_value_length_index\n\
    \    local odds_value_length_value\n    local evens_value_length_value\n    local\
    \ odds_value_length_value_index\n    local evens_value_length_value_index\n  \
    \  local odds_value_length_value_value\n    local evens_value_length_value_value\n\
    \    local odds_value_length_value_value_index\n    local evens_value_length_value_value_index\n\
    \    local odds_value_length_value_value_value\n    local evens_value_length_value_value_value\n\
    \    local odds_value_length_value_value_index\n    local evens_value_length_value_value_index\n\
    \    local odds_value_length_value_value_value\n    local evens_value_length_value_value_value\n\
    \    local odds_value_length_value_value_value_index\n    local evens_value_length_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value\n    local evens_value_length_value_value_value_value\n\
    \    local odds_value_length_value_value_value_index\n    local evens_value_length_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value\n    local evens_value_length_value_value_value_value\n\
    \    local odds_value_length_value_value_value_index\n    local evens_value_length_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value\n    local evens_value_length_value_value_value_value\n\
    \    local odds_value_length_value_value_value_index\n    local evens_value_length_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value\n    local evens_value_length_value_value_value_value\n\
    \    local odds_value_length_value_value_value_index\n    local evens_value_length_value_value_value_index\n\
    \    local odds_value_length_value_value_value_value\n    local evens_value_length_value_value_value_value\n\
    \    local odds_value_length_value_value_value_index\n    local \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n\n   \
    \ for (( i=1; i<${#numbers[@]}; i++ )); do\n        odd=0\n        even=0\n  \
    \      for (( j=0; j<${#numbers[@]}; j++ )); do\n            if [ ${numbers[$j]}\
    \ -eq ${numbers[$((j+1))] } ]; then\n                ((odd++))\n            else\n\
    \                ((even++))\n            fi\n        done\n        if [ $odd -eq\
    \ 1 ]; then\n            ((sum+=${numbers[$i]}))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local odds_index\n    local evens_index\n    local odds_length\n\
    \    local evens_length\n    local odds_sum\n    local evens_sum\n    local odds_sum_index\n\
    \    local evens_sum_index\n    local odds_sum_length\n    local evens_sum_length\n\
    \    local odds_sum_sum\n    local evens_sum_sum\n    local odds_sum_sum_index\n\
    \    local evens_sum_sum_index\n    local odds_sum_sum_length\n    local evens_sum_sum_length\n\
    \    local odds_sum_sum_sum\n    local evens_sum_sum_sum\n    local odds_sum_sum_sum_index\n\
    \    local evens_sum_sum_sum_index\n    local odds_sum_sum_sum_length\n    local\
    \ evens_sum_sum_sum_length\n    local odds_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum\n   \
    \ local odds_sum_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_index\n    local evens_sum_sum_sum_sum_sum_sum_sum_index\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_length\n    local evens_sum_sum_sum_sum_sum_sum_sum_length\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_sum\n    local evens_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local odds_sum_sum_sum_sum_sum_sum_sum_sum_index\n    \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#input} ]; do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$(( $sum\
    \ + ${input[i]} ))\n    fi\n    i=$(( $i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpohunkns1.sh: line 12: 0 + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [ ${input[$i]} -eq ${input[$(( $i\
    \ + 1 ))]} ]; then\n            sum=$(( $sum + ${input[$i]} ))\n        fi\n \
    \       i=$(( $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd6lk31lp.sh: line 11: [: too many arguments

    /tmp/tmpd6lk31lp.sh: line 12: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i=0\n  while\
    \ [ \"$i\" -lt \"$#\" ]; do\n    if [ \"$i\" -eq \"0\" ]; then\n      sum=$((sum+$((${list[i]}%2))));\n\
    \      i=$((i+1));\n    else\n      sum=$((sum+$((${list[i]}%2))))\n      i=$((i+1));\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl27_hkkl.sh: line 12: 5 8 7 1%2: syntax error in expression (error
    token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#input} ]; do\n        if [[ ${input[$i]}%2 -eq 0 ]]; then\n\
    \            sum=$((sum+${input[$i]}))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwm41tyr8.sh: line 11: [[: 5 8 7 1%2: syntax error in expression
    (error token is "8 7 1%2")

    /tmp/tmpwm41tyr8.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpwm41tyr8.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpwm41tyr8.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpwm41tyr8.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpwm41tyr8.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    /tmp/tmpwm41tyr8.sh: line 11: [[: %2: syntax error: operand expected (error token
    is "%2")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   local j=0\n    local k=0\n    local odds=0\n    local evens=0\n    local even\n\
    \    local odd\n    while [ $i -lt ${#numbers} ]; do\n        even=${numbers[$i]}\n\
    \        odd=${numbers[$((i+1))]}\n        if [ $((i+2)) -eq ${#numbers} ]; then\n\
    \            odds=$((odds + odd))\n        else\n            odds=$((odds + odd))\n\
    \            evens=$((evens + even))\n        fi\n        i=$((i+2))\n    done\n\
    \    echo $((odds + evens))\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvfkjv2h_.sh: line 23: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if\
    \ [[ ${numbers[$i]} -eq 0 ]]; then\n            echo \"$numbers[$i]\"\n      \
    \      continue\n        fi\n        for ((j=0; j<${#numbers[@]}; j++)); do\n\
    \            if [[ ${numbers[$j]} -eq 0 ]]; then\n                echo \"$numbers[$j]\"\
    \n                continue\n            fi\n            if [[ ${numbers[$i]} -eq\
    \ ${numbers[$j]} ]]; then\n                echo \"$numbers[$i] + $numbers[$j]\"\
    \n                ((sum+=${numbers[$i]}))\n                ((sum+=${numbers[$j]}))\n\
    \                ((sum+=1))\n            fi\n        done\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4_ti3dc5.sh: line 13: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmp4_ti3dc5.sh: line 18: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    /tmp/tmp4_ti3dc5.sh: line 22: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  for i in $input; do\n\
    \    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt ${#numbers} ]; do\n        if [ $(( ${numbers[$i]} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( ${sum} + ${numbers[$i]} ))\n        fi\n    \
    \    i=$(( ${i} + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6gcvc1wz.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037292
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local numbers=$1\n  local sum=0\n  for i in $(seq 0 $((${#numbers}\
    \ - 1))); do\n    if [[ ${numbers[$i]} -eq 0 ]]; then\n      continue\n    fi\n\
    \    if [[ ${numbers[$i]} -eq 1 ]]; then\n      sum=$((sum + ${numbers[$i]}))\n\
    \      continue\n    fi\n    if [[ ${numbers[$i]} -eq 2 ]]; then\n      sum=$((sum\
    \ + ${numbers[$i]}))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq 3 ]];\
    \ then\n      sum=$((sum + ${numbers[$i]}))\n      continue\n    fi\n    if [[\
    \ ${numbers[$i]} -eq 4 ]]; then\n      sum=$((sum + ${numbers[$i]}))\n      continue\n\
    \    fi\n    if [[ ${numbers[$i]} -eq 5 ]]; then\n      sum=$((sum + ${numbers[$i]}))\n\
    \      continue\n    fi\n    if [[ ${numbers[$i]} -eq 6 ]]; then\n      sum=$((sum\
    \ + ${numbers[$i]}))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq 7 ]];\
    \ then\n      sum=$((sum + ${numbers[$i]}))\n      continue\n    fi\n    if [[\
    \ ${numbers[$i]} -eq 8 ]]; then\n      sum=$((sum + ${numbers[$i]}))\n      continue\n\
    \    fi\n    if [[ ${numbers[$i]} -eq 9 ]]; then\n      sum=$((sum + ${numbers[$i]}))\n\
    \      continue\n    fi\n    if [[ ${numbers[$i]} -eq 10 ]]; then\n      sum=$((sum\
    \ + ${numbers[$i]}))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq 11\
    \ ]]; then\n      sum=$((sum + ${numbers[$i]}))\n      continue\n    fi\n    if\
    \ [[ ${numbers[$i]} -eq 12 ]]; then\n      sum=$((sum + ${numbers[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${numbers[$i]} -eq 13 ]]; then\n      sum=$((sum\
    \ + ${numbers[$i]}))\n      continue\n    fi\n    if [[ ${numbers[$i]} -eq 14\
    \ ]]; then\n      sum=$((sum + ${numbers[$i]}))\n      continue\n    fi\n    if\
    \ [[ ${\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzr0c5qvj.sh: line 70: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpzr0c5qvj.sh: line 70: syntax error near `}''

    /tmp/tmpzr0c5qvj.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local even_index\n    local odd\n    local even\n  \
    \  local even_index\n    local odd\n    local even\n    local even_index\n   \
    \ local odd\n    local even\n    local even_index\n    local odd\n    local even\n\
    \    local even_index\n    local odd\n    local even\n    local even_index\n \
    \   local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even_index\n    local odd\n    local\
    \ even\n    local even_index\n    local odd\n    local even\n    local even_index\n\
    \    local odd\n    local even\n    local even\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local count\n    local\
    \ odds\n    local evens\n    local odds_count\n    local evens_count\n    local\
    \ odds_sum\n    local evens_sum\n    local odds_evens_sum\n    local odds_evens_count\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_evens_sum\n\
    \    local odds_evens_sum\n    local odds_evens_sum\n    local odds_even\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if\
    \ (( ${numbers[i]} % 2 == 0 )); then\n            (( sum += ${numbers[i]} ))\n\
    \        fi\n    done\n    return $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2gbaguqc.sh: line 13: ((: 5 8 7 1 % 2 == 0 : syntax error in expression
    (error token is "8 7 1 % 2 == 0 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ for (( i=0; i<${#numbers[@]}; i++ )); do\n        if (( ${numbers[$i]} % 2 ));\
    \ then\n            sum=$(( sum + ${numbers[$i]} ))\n        fi\n    done\n  \
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp27ehtgor.sh: line 11: ((: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    if [[ $i -eq 0 ]]; then\n      continue\n    fi\n    if [[ $i\
    \ -eq 1 ]]; then\n      sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq\
    \ 2 ]]; then\n      sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 3\
    \ ]]; then\n      sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 4 ]];\
    \ then\n      sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 5 ]]; then\n\
    \      sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 6 ]]; then\n \
    \     sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 7 ]]; then\n  \
    \    sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 8 ]]; then\n   \
    \   sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 9 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 10 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 11 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 12 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 13 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 14 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 15 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 16 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 17 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 18 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 19 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 20 ]]; then\n    \
    \  sum=$((sum+i))\n      continue\n    fi\n    if [[ $i -eq 21 ]]; then\n    \
    \  sum=$((sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3li9kpat.sh: line 95: unexpected EOF while looking for matching
    `)''

    /tmp/tmp3li9kpat.sh: line 114: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local input=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n  \
    \  local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local A=0\n    local B=0\n    local C=0\n    local D=0\n  \
    \  local E=0\n    local F=0\n    local G=0\n    local H=0\n    local I=0\n   \
    \ local J=0\n    local K=0\n    local L=0\n    local M=0\n    local N=0\n    local\
    \ O=0\n    local P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n\
    \    local U=0\n    local V=0\n    local W=0\n    local X=0\n    local Y=0\n \
    \   local Z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n  \
    \  local e\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [[ $i -eq 0 ]]; then\n      continue\n    fi\n    if [[ $i -eq 1\
    \ ]]; then\n      sum=$((sum+i))\n      continue\n    fi\n    if [[ $((i%2)) -eq\
    \ 0 ]]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=\"$1\"\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#list} ]; do\n        if [ $(( ${list[i]} % 2 )) -eq 0 ];\
    \ then\n            sum=$(( $sum + ${list[i]} ))\n        fi\n        i=$(( i\
    \ + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfs_6klyh.sh: line 11: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i\n  for i in $input;\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local list=$1\n    local sum=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n   \
    \ local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=1\n    local\
    \ j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n    local o=1\n\
    \    local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n \
    \   local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n  \
    \  local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n   \
    \ local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=2\n    local\
    \ j=2\n    local k=2\n    local l=2\n    local m=2\n    local n=2\n    local o=2\n\
    \    local p=2\n    local q=2\n    local r=2\n    local s=2\n    local t=2\n \
    \   local u=2\n    local v=2\n    local w=2\n    local x=2\n    local y=2\n  \
    \  local z=2\n    local a=2\n    local b=2\n    local c=2\n    local d=2\n   \
    \ local e=2\n    local f=2\n    local g=2\n    local h=2\n    local i=3\n    local\
    \ j=3\n    local k=3\n    local l=3\n    local m=3\n    local n=3\n    local o=3\n\
    \    local p=3\n    local q=3\n    local r=3\n    local s=3\n    local t=3\n \
    \   local u=3\n    local v=3\n    local w=3\n    local x=3\n    local y=3\n  \
    \  local z=3\n    local a=3\n    local b=3\n    local c=3\n    local \n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local odds\n    local\
    \ evens\n    local num\n    local nums\n    local nums_i\n    local nums_j\n \
    \   local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_odd\n  \
    \  local nums_even\n    local nums_odds\n    local nums_evens\n    local nums_i\n\
    \    local nums_j\n    local nums_k\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_i\n    local nums_j\n\
    \    local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_odd\n  \
    \  local nums_even\n    local nums_odds\n    local nums_evens\n    local nums_i\n\
    \    local nums_j\n    local nums_k\n    local nums_odd\n    local nums_even\n\
    \    local nums_odds\n    local nums_evens\n    local nums_i\n    local nums_j\n\
    \    local nums_k\n    local nums_odd\n    local nums_even\n    local nums_odds\n\
    \    local nums_evens\n    local nums_i\n    local nums_j\n    local nums_k\n\
    \    local nums_odd\n    local nums_even\n    local nums_odds\n    local nums_evens\n\
    \    local nums_i\n    local nums_j\n    local nums_k\n    local nums_\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  for i in $(seq 1 ${#input});\
    \ do\n    if [[ ${input[$i]} -eq ${input[$(($i-1))]} ]]; then\n      sum=$((sum\
    \ + ${input[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_f8bzvk5.sh: line 10: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmp_f8bzvk5.sh: line 11: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i=0\n  while\
    \ [ $i -lt ${#list} ]; do\n    if [[ ${list[i]} -eq ${list[i+1]} ]]; then\n  \
    \    sum=$((sum + ${list[i]}))\n      i=$((i + 2))\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm69smnqi.sh: line 11: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    /tmp/tmpm69smnqi.sh: line 12: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n    local numbers=$1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local odd\n    local even\n    local even_index\n\
    \    local odd_index\n    local num_odd\n    local num_even\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n    local num_odd_index\n    local num_even_index\n\
    \    local num_odd_index\n    local num_even_index\n    local num_odd_index\n\
    \    local num_even_index\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037293
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=\"$1\"\n  local sum=0\n  local i\n  for i in\
    \ $list; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n   \
    \ fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660037292
